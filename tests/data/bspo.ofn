Prefix(:=<http://purl.obolibrary.org/obo/bspo.owl#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(obo:=<http://purl.obolibrary.org/obo/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(bspo:=<http://purl.obolibrary.org/obo/bspo#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(skos:=<http://www.w3.org/2004/02/skos/core#>)
Prefix(swrl:=<http://www.w3.org/2003/11/swrl#>)
Prefix(swrla:=<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#>)
Prefix(swrlb:=<http://www.w3.org/2003/11/swrlb#>)
Prefix(terms:=<http://purl.org/dc/terms/>)
Prefix(subsets:=<http://purl.obolibrary.org/obo/ro/subsets#>)
Prefix(oboInOwl:=<http://www.geneontology.org/formats/oboInOwl#>)


Ontology(<http://purl.obolibrary.org/obo/bspo.owl>
<http://purl.obolibrary.org/obo/bspo/releases/2023-05-27/bspo.owl>
Annotation(obo:IAO_0000700 obo:CARO_0000000)
Annotation(dc:description "An ontology for respresenting spatial concepts, anatomical axes, gradients, regions, planes, sides and surfaces. These concepts can be used at multiple biological scales and in a diversity of taxa, including plants, animals and fungi. The BSPO is used to provide a source of anatomical location descriptors for logically defining anatomical entity classes in anatomy ontologies.")
Annotation(dc:title "Biological Spatial Ontology")
Annotation(terms:license <https://creativecommons.org/licenses/by/3.0/>)
Annotation(oboInOwl:NamespaceIdRule "* BSPO:$sequence(7,0,999999999)$")
Annotation(oboInOwl:default-namespace "spatial")
Annotation(rdfs:comment "based on FBql")
Annotation(owl:versionInfo "2023-05-27")

Declaration(Class(obo:BFO_0000002))
Declaration(Class(obo:BFO_0000003))
Declaration(Class(obo:BFO_0000004))
Declaration(Class(obo:BFO_0000015))
Declaration(Class(obo:BFO_0000016))
Declaration(Class(obo:BFO_0000017))
Declaration(Class(obo:BFO_0000019))
Declaration(Class(obo:BFO_0000020))
Declaration(Class(obo:BFO_0000023))
Declaration(Class(obo:BFO_0000031))
Declaration(Class(obo:BFO_0000034))
Declaration(Class(obo:BFO_0000040))
Declaration(Class(obo:BFO_0000141))
Declaration(Class(obo:BSPO_0000000))
Declaration(Class(obo:BSPO_0000001))
Declaration(Class(obo:BSPO_0000002))
Declaration(Class(obo:BSPO_00000021))
Declaration(Class(obo:BSPO_0000003))
Declaration(Class(obo:BSPO_0000004))
Declaration(Class(obo:BSPO_0000005))
Declaration(Class(obo:BSPO_0000006))
Declaration(Class(obo:BSPO_0000007))
Declaration(Class(obo:BSPO_0000008))
Declaration(Class(obo:BSPO_0000009))
Declaration(Class(obo:BSPO_0000010))
Declaration(Class(obo:BSPO_0000011))
Declaration(Class(obo:BSPO_0000012))
Declaration(Class(obo:BSPO_0000013))
Declaration(Class(obo:BSPO_0000014))
Declaration(Class(obo:BSPO_0000015))
Declaration(Class(obo:BSPO_0000016))
Declaration(Class(obo:BSPO_0000017))
Declaration(Class(obo:BSPO_0000018))
Declaration(Class(obo:BSPO_0000019))
Declaration(Class(obo:BSPO_0000020))
Declaration(Class(obo:BSPO_0000021))
Declaration(Class(obo:BSPO_0000022))
Declaration(Class(obo:BSPO_0000023))
Declaration(Class(obo:BSPO_0000024))
Declaration(Class(obo:BSPO_0000025))
Declaration(Class(obo:BSPO_0000026))
Declaration(Class(obo:BSPO_0000027))
Declaration(Class(obo:BSPO_0000028))
Declaration(Class(obo:BSPO_0000029))
Declaration(Class(obo:BSPO_0000030))
Declaration(Class(obo:BSPO_0000031))
Declaration(Class(obo:BSPO_0000032))
Declaration(Class(obo:BSPO_0000033))
Declaration(Class(obo:BSPO_0000034))
Declaration(Class(obo:BSPO_0000035))
Declaration(Class(obo:BSPO_0000036))
Declaration(Class(obo:BSPO_0000037))
Declaration(Class(obo:BSPO_0000038))
Declaration(Class(obo:BSPO_0000039))
Declaration(Class(obo:BSPO_0000040))
Declaration(Class(obo:BSPO_0000041))
Declaration(Class(obo:BSPO_0000042))
Declaration(Class(obo:BSPO_0000043))
Declaration(Class(obo:BSPO_0000044))
Declaration(Class(obo:BSPO_0000045))
Declaration(Class(obo:BSPO_0000046))
Declaration(Class(obo:BSPO_0000047))
Declaration(Class(obo:BSPO_0000048))
Declaration(Class(obo:BSPO_0000049))
Declaration(Class(obo:BSPO_0000050))
Declaration(Class(obo:BSPO_0000051))
Declaration(Class(obo:BSPO_0000052))
Declaration(Class(obo:BSPO_0000053))
Declaration(Class(obo:BSPO_0000054))
Declaration(Class(obo:BSPO_0000055))
Declaration(Class(obo:BSPO_0000056))
Declaration(Class(obo:BSPO_0000057))
Declaration(Class(obo:BSPO_0000058))
Declaration(Class(obo:BSPO_0000059))
Declaration(Class(obo:BSPO_0000060))
Declaration(Class(obo:BSPO_0000061))
Declaration(Class(obo:BSPO_0000062))
Declaration(Class(obo:BSPO_0000063))
Declaration(Class(obo:BSPO_0000064))
Declaration(Class(obo:BSPO_0000065))
Declaration(Class(obo:BSPO_0000066))
Declaration(Class(obo:BSPO_0000067))
Declaration(Class(obo:BSPO_0000068))
Declaration(Class(obo:BSPO_0000069))
Declaration(Class(obo:BSPO_0000070))
Declaration(Class(obo:BSPO_0000071))
Declaration(Class(obo:BSPO_0000072))
Declaration(Class(obo:BSPO_0000073))
Declaration(Class(obo:BSPO_0000074))
Declaration(Class(obo:BSPO_0000075))
Declaration(Class(obo:BSPO_0000076))
Declaration(Class(obo:BSPO_0000077))
Declaration(Class(obo:BSPO_0000078))
Declaration(Class(obo:BSPO_0000079))
Declaration(Class(obo:BSPO_0000080))
Declaration(Class(obo:BSPO_0000081))
Declaration(Class(obo:BSPO_0000082))
Declaration(Class(obo:BSPO_0000083))
Declaration(Class(obo:BSPO_0000084))
Declaration(Class(obo:BSPO_0000085))
Declaration(Class(obo:BSPO_0000086))
Declaration(Class(obo:BSPO_0000087))
Declaration(Class(obo:BSPO_0000088))
Declaration(Class(obo:BSPO_0000089))
Declaration(Class(obo:BSPO_0000090))
Declaration(Class(obo:BSPO_0000091))
Declaration(Class(obo:BSPO_0000092))
Declaration(Class(obo:BSPO_0000093))
Declaration(Class(obo:BSPO_0000094))
Declaration(Class(obo:BSPO_0000112))
Declaration(Class(obo:BSPO_0000127))
Declaration(Class(obo:BSPO_0000128))
Declaration(Class(obo:BSPO_0000129))
Declaration(Class(obo:BSPO_0000130))
Declaration(Class(obo:BSPO_0000195))
Declaration(Class(obo:BSPO_0000196))
Declaration(Class(obo:BSPO_0000197))
Declaration(Class(obo:BSPO_0000198))
Declaration(Class(obo:BSPO_0000199))
Declaration(Class(obo:BSPO_0000200))
Declaration(Class(obo:BSPO_0000201))
Declaration(Class(obo:BSPO_0000202))
Declaration(Class(obo:BSPO_0000371))
Declaration(Class(obo:BSPO_0000372))
Declaration(Class(obo:BSPO_0000373))
Declaration(Class(obo:BSPO_0000374))
Declaration(Class(obo:BSPO_0000376))
Declaration(Class(obo:BSPO_0000377))
Declaration(Class(obo:BSPO_0000378))
Declaration(Class(obo:BSPO_0000379))
Declaration(Class(obo:BSPO_0000381))
Declaration(Class(obo:BSPO_0000382))
Declaration(Class(obo:BSPO_0000383))
Declaration(Class(obo:BSPO_0000384))
Declaration(Class(obo:BSPO_0000400))
Declaration(Class(obo:BSPO_0000417))
Declaration(Class(obo:BSPO_0000671))
Declaration(Class(obo:BSPO_0000672))
Declaration(Class(obo:BSPO_0000673))
Declaration(Class(obo:BSPO_0000674))
Declaration(Class(obo:BSPO_0000677))
Declaration(Class(obo:BSPO_0000678))
Declaration(Class(obo:BSPO_0000679))
Declaration(Class(obo:BSPO_0000680))
Declaration(Class(obo:BSPO_0000682))
Declaration(Class(obo:BSPO_0000683))
Declaration(Class(obo:BSPO_0000684))
Declaration(Class(obo:BSPO_0000685))
Declaration(Class(obo:BSPO_0000686))
Declaration(Class(obo:BSPO_0000687))
Declaration(Class(obo:BSPO_0000688))
Declaration(Class(obo:BSPO_0000689))
Declaration(Class(obo:BSPO_0001001))
Declaration(Class(obo:CARO_0000000))
Declaration(Class(obo:CARO_0000003))
Declaration(Class(obo:CARO_0000006))
Declaration(Class(obo:CARO_0000007))
Declaration(Class(obo:CARO_0000008))
Declaration(Class(obo:CARO_0000010))
Declaration(Class(obo:GO_0003674))
Declaration(Class(obo:GO_0008150))
Declaration(Class(obo:GO_0016301))
Declaration(Class(obo:IAO_0000027))
Declaration(Class(obo:IAO_0000030))
Declaration(Class(obo:IAO_0000078))
Declaration(Class(obo:IAO_0000102))
Declaration(Class(obo:IAO_0000225))
Declaration(Class(obo:IAO_0000409))
Declaration(Class(obo:PATO_0000001))
Declaration(ObjectProperty(obo:BFO_0000050))
Declaration(ObjectProperty(obo:BFO_0000051))
Declaration(ObjectProperty(obo:BFO_0000062))
Declaration(ObjectProperty(obo:BFO_0000063))
Declaration(ObjectProperty(obo:BSPO_0000095))
Declaration(ObjectProperty(obo:BSPO_0000096))
Declaration(ObjectProperty(obo:BSPO_0000097))
Declaration(ObjectProperty(obo:BSPO_0000098))
Declaration(ObjectProperty(obo:BSPO_0000099))
Declaration(ObjectProperty(obo:BSPO_0000100))
Declaration(ObjectProperty(obo:BSPO_0000101))
Declaration(ObjectProperty(obo:BSPO_0000102))
Declaration(ObjectProperty(obo:BSPO_0000103))
Declaration(ObjectProperty(obo:BSPO_0000104))
Declaration(ObjectProperty(obo:BSPO_0000105))
Declaration(ObjectProperty(obo:BSPO_0000106))
Declaration(ObjectProperty(obo:BSPO_0000107))
Declaration(ObjectProperty(obo:BSPO_0000108))
Declaration(ObjectProperty(obo:BSPO_0000109))
Declaration(ObjectProperty(obo:BSPO_0000110))
Declaration(ObjectProperty(obo:BSPO_0000111))
Declaration(ObjectProperty(obo:BSPO_0000113))
Declaration(ObjectProperty(obo:BSPO_0000114))
Declaration(ObjectProperty(obo:BSPO_0000115))
Declaration(ObjectProperty(obo:BSPO_0000120))
Declaration(ObjectProperty(obo:BSPO_0000121))
Declaration(ObjectProperty(obo:BSPO_0000122))
Declaration(ObjectProperty(obo:BSPO_0000123))
Declaration(ObjectProperty(obo:BSPO_0000124))
Declaration(ObjectProperty(obo:BSPO_0000125))
Declaration(ObjectProperty(obo:BSPO_0000126))
Declaration(ObjectProperty(obo:BSPO_0001100))
Declaration(ObjectProperty(obo:BSPO_0001101))
Declaration(ObjectProperty(obo:BSPO_0001102))
Declaration(ObjectProperty(obo:BSPO_0001106))
Declaration(ObjectProperty(obo:BSPO_0001107))
Declaration(ObjectProperty(obo:BSPO_0001108))
Declaration(ObjectProperty(obo:BSPO_0001113))
Declaration(ObjectProperty(obo:BSPO_0001114))
Declaration(ObjectProperty(obo:BSPO_0001115))
Declaration(ObjectProperty(obo:BSPO_0005001))
Declaration(ObjectProperty(obo:BSPO_0015001))
Declaration(ObjectProperty(obo:BSPO_0015002))
Declaration(ObjectProperty(obo:BSPO_0015003))
Declaration(ObjectProperty(obo:BSPO_0015004))
Declaration(ObjectProperty(obo:BSPO_0015005))
Declaration(ObjectProperty(obo:BSPO_0015006))
Declaration(ObjectProperty(obo:BSPO_0015007))
Declaration(ObjectProperty(obo:BSPO_0015008))
Declaration(ObjectProperty(obo:BSPO_0015009))
Declaration(ObjectProperty(obo:BSPO_0015010))
Declaration(ObjectProperty(obo:BSPO_0015011))
Declaration(ObjectProperty(obo:BSPO_0015012))
Declaration(ObjectProperty(obo:BSPO_0015013))
Declaration(ObjectProperty(obo:BSPO_0015014))
Declaration(ObjectProperty(obo:BSPO_0015015))
Declaration(ObjectProperty(obo:BSPO_0015016))
Declaration(ObjectProperty(obo:BSPO_0015017))
Declaration(ObjectProperty(obo:BSPO_0015101))
Declaration(ObjectProperty(obo:BSPO_0015102))
Declaration(ObjectProperty(obo:BSPO_0015201))
Declaration(ObjectProperty(obo:BSPO_0015202))
Declaration(ObjectProperty(obo:BSPO_0020001))
Declaration(ObjectProperty(obo:BSPO_0020002))
Declaration(ObjectProperty(obo:BSPO_0030003))
Declaration(ObjectProperty(obo:BSPO_0030004))
Declaration(ObjectProperty(obo:BSPO_0030005))
Declaration(ObjectProperty(obo:BSPO_0030006))
Declaration(ObjectProperty(obo:BSPO_0030007))
Declaration(ObjectProperty(obo:BSPO_1000000))
Declaration(ObjectProperty(obo:RO_0000052))
Declaration(ObjectProperty(obo:RO_0000053))
Declaration(ObjectProperty(obo:RO_0000056))
Declaration(ObjectProperty(obo:RO_0000057))
Declaration(ObjectProperty(obo:RO_0000079))
Declaration(ObjectProperty(obo:RO_0000080))
Declaration(ObjectProperty(obo:RO_0000081))
Declaration(ObjectProperty(obo:RO_0000085))
Declaration(ObjectProperty(obo:RO_0000086))
Declaration(ObjectProperty(obo:RO_0000087))
Declaration(ObjectProperty(obo:RO_0000091))
Declaration(ObjectProperty(obo:RO_0000092))
Declaration(ObjectProperty(obo:RO_0002013))
Declaration(ObjectProperty(obo:RO_0002014))
Declaration(ObjectProperty(obo:RO_0002015))
Declaration(ObjectProperty(obo:RO_0002017))
Declaration(ObjectProperty(obo:RO_0002018))
Declaration(ObjectProperty(obo:RO_0002022))
Declaration(ObjectProperty(obo:RO_0002023))
Declaration(ObjectProperty(obo:RO_0002024))
Declaration(ObjectProperty(obo:RO_0002025))
Declaration(ObjectProperty(obo:RO_0002086))
Declaration(ObjectProperty(obo:RO_0002087))
Declaration(ObjectProperty(obo:RO_0002090))
Declaration(ObjectProperty(obo:RO_0002131))
Declaration(ObjectProperty(obo:RO_0002163))
Declaration(ObjectProperty(obo:RO_0002180))
Declaration(ObjectProperty(obo:RO_0002211))
Declaration(ObjectProperty(obo:RO_0002212))
Declaration(ObjectProperty(obo:RO_0002213))
Declaration(ObjectProperty(obo:RO_0002215))
Declaration(ObjectProperty(obo:RO_0002216))
Declaration(ObjectProperty(obo:RO_0002220))
Declaration(ObjectProperty(obo:RO_0002222))
Declaration(ObjectProperty(obo:RO_0002233))
Declaration(ObjectProperty(obo:RO_0002263))
Declaration(ObjectProperty(obo:RO_0002264))
Declaration(ObjectProperty(obo:RO_0002304))
Declaration(ObjectProperty(obo:RO_0002305))
Declaration(ObjectProperty(obo:RO_0002314))
Declaration(ObjectProperty(obo:RO_0002323))
Declaration(ObjectProperty(obo:RO_0002327))
Declaration(ObjectProperty(obo:RO_0002328))
Declaration(ObjectProperty(obo:RO_0002329))
Declaration(ObjectProperty(obo:RO_0002331))
Declaration(ObjectProperty(obo:RO_0002333))
Declaration(ObjectProperty(obo:RO_0002334))
Declaration(ObjectProperty(obo:RO_0002335))
Declaration(ObjectProperty(obo:RO_0002336))
Declaration(ObjectProperty(obo:RO_0002352))
Declaration(ObjectProperty(obo:RO_0002404))
Declaration(ObjectProperty(obo:RO_0002405))
Declaration(ObjectProperty(obo:RO_0002407))
Declaration(ObjectProperty(obo:RO_0002409))
Declaration(ObjectProperty(obo:RO_0002410))
Declaration(ObjectProperty(obo:RO_0002411))
Declaration(ObjectProperty(obo:RO_0002412))
Declaration(ObjectProperty(obo:RO_0002418))
Declaration(ObjectProperty(obo:RO_0002427))
Declaration(ObjectProperty(obo:RO_0002428))
Declaration(ObjectProperty(obo:RO_0002429))
Declaration(ObjectProperty(obo:RO_0002430))
Declaration(ObjectProperty(obo:RO_0002431))
Declaration(ObjectProperty(obo:RO_0002434))
Declaration(ObjectProperty(obo:RO_0002436))
Declaration(ObjectProperty(obo:RO_0002447))
Declaration(ObjectProperty(obo:RO_0002448))
Declaration(ObjectProperty(obo:RO_0002449))
Declaration(ObjectProperty(obo:RO_0002450))
Declaration(ObjectProperty(obo:RO_0002464))
Declaration(ObjectProperty(obo:RO_0002481))
Declaration(ObjectProperty(obo:RO_0002500))
Declaration(ObjectProperty(obo:RO_0002501))
Declaration(ObjectProperty(obo:RO_0002502))
Declaration(ObjectProperty(obo:RO_0002506))
Declaration(ObjectProperty(obo:RO_0002559))
Declaration(ObjectProperty(obo:RO_0002563))
Declaration(ObjectProperty(obo:RO_0002564))
Declaration(ObjectProperty(obo:RO_0002566))
Declaration(ObjectProperty(obo:RO_0002578))
Declaration(ObjectProperty(obo:RO_0002584))
Declaration(ObjectProperty(obo:RO_0002595))
Declaration(ObjectProperty(obo:RO_0002596))
Declaration(ObjectProperty(obo:RO_0002597))
Declaration(ObjectProperty(obo:RO_0002598))
Declaration(ObjectProperty(obo:RO_0002608))
Declaration(ObjectProperty(obo:RO_0002629))
Declaration(ObjectProperty(obo:RO_0002630))
Declaration(ObjectProperty(obo:RO_0004031))
Declaration(ObjectProperty(obo:RO_0004032))
Declaration(ObjectProperty(obo:RO_0004033))
Declaration(ObjectProperty(obo:RO_0004034))
Declaration(ObjectProperty(obo:RO_0004035))
Declaration(ObjectProperty(obo:RO_0004046))
Declaration(ObjectProperty(obo:RO_0004047))
Declaration(ObjectProperty(obo:RO_0011002))
Declaration(ObjectProperty(obo:RO_0012011))
Declaration(ObjectProperty(obo:RO_0012012))
Declaration(ObjectProperty(obo:RO_0017001))
Declaration(ObjectProperty(obo:RO_0019000))
Declaration(ObjectProperty(obo:RO_0019001))
Declaration(ObjectProperty(obo:RO_0019002))
Declaration(NamedIndividual(obo:IAO_0000002))
Declaration(NamedIndividual(obo:IAO_0000103))
Declaration(NamedIndividual(obo:IAO_0000120))
Declaration(NamedIndividual(obo:IAO_0000121))
Declaration(NamedIndividual(obo:IAO_0000122))
Declaration(NamedIndividual(obo:IAO_0000123))
Declaration(NamedIndividual(obo:IAO_0000124))
Declaration(NamedIndividual(obo:IAO_0000125))
Declaration(NamedIndividual(obo:IAO_0000226))
Declaration(NamedIndividual(obo:IAO_0000227))
Declaration(NamedIndividual(obo:IAO_0000228))
Declaration(NamedIndividual(obo:IAO_0000229))
Declaration(NamedIndividual(obo:IAO_0000410))
Declaration(NamedIndividual(obo:IAO_0000420))
Declaration(NamedIndividual(obo:IAO_0000421))
Declaration(NamedIndividual(obo:IAO_0000423))
Declaration(NamedIndividual(obo:IAO_0000428))
Declaration(NamedIndividual(obo:OMO_0001000))
Declaration(AnnotationProperty(obo:IAO_0000111))
Declaration(AnnotationProperty(obo:IAO_0000112))
Declaration(AnnotationProperty(obo:IAO_0000114))
Declaration(AnnotationProperty(obo:IAO_0000115))
Declaration(AnnotationProperty(obo:IAO_0000116))
Declaration(AnnotationProperty(obo:IAO_0000117))
Declaration(AnnotationProperty(obo:IAO_0000118))
Declaration(AnnotationProperty(obo:IAO_0000119))
Declaration(AnnotationProperty(obo:IAO_0000232))
Declaration(AnnotationProperty(obo:IAO_0000233))
Declaration(AnnotationProperty(obo:IAO_0000234))
Declaration(AnnotationProperty(obo:IAO_0000424))
Declaration(AnnotationProperty(obo:IAO_0000589))
Declaration(AnnotationProperty(obo:IAO_0000600))
Declaration(AnnotationProperty(obo:IAO_0000700))
Declaration(AnnotationProperty(obo:IAO_0100001))
Declaration(AnnotationProperty(obo:RO_0001900))
Declaration(AnnotationProperty(obo:RO_0002259))
Declaration(AnnotationProperty(obo:RO_0002575))
Declaration(AnnotationProperty(obo:RO_0002579))
Declaration(AnnotationProperty(obo:RO_0002581))
Declaration(AnnotationProperty(obo:RO_0002582))
Declaration(AnnotationProperty(obo:RO_0004049))
Declaration(AnnotationProperty(obo:RO_0004050))
Declaration(AnnotationProperty(obo:RO_0040042))
Declaration(AnnotationProperty(obo:valid_for_go_annotation_extension))
Declaration(AnnotationProperty(obo:valid_for_go_gp2term))
Declaration(AnnotationProperty(obo:valid_for_go_ontology))
Declaration(AnnotationProperty(obo:valid_for_gocam))
Declaration(AnnotationProperty(bspo:human))
Declaration(AnnotationProperty(bspo:vertebrate))
Declaration(AnnotationProperty(subsets:ro-eco))
Declaration(AnnotationProperty(dc:description))
Declaration(AnnotationProperty(dc:source))
Declaration(AnnotationProperty(dc:title))
Declaration(AnnotationProperty(terms:contributor))
Declaration(AnnotationProperty(terms:creator))
Declaration(AnnotationProperty(terms:license))
Declaration(AnnotationProperty(terms:source))
Declaration(AnnotationProperty(swrla:isRuleEnabled))
Declaration(AnnotationProperty(oboInOwl:NamespaceIdRule))
Declaration(AnnotationProperty(oboInOwl:SubsetProperty))
Declaration(AnnotationProperty(oboInOwl:SynonymTypeProperty))
Declaration(AnnotationProperty(oboInOwl:created_by))
Declaration(AnnotationProperty(oboInOwl:creation_date))
Declaration(AnnotationProperty(oboInOwl:default-namespace))
Declaration(AnnotationProperty(oboInOwl:hasBroadSynonym))
Declaration(AnnotationProperty(oboInOwl:hasDbXref))
Declaration(AnnotationProperty(oboInOwl:hasExactSynonym))
Declaration(AnnotationProperty(oboInOwl:hasNarrowSynonym))
Declaration(AnnotationProperty(oboInOwl:hasOBOFormatVersion))
Declaration(AnnotationProperty(oboInOwl:hasOBONamespace))
Declaration(AnnotationProperty(oboInOwl:hasRelatedSynonym))
Declaration(AnnotationProperty(oboInOwl:hasScope))
Declaration(AnnotationProperty(oboInOwl:hasSynonymType))
Declaration(AnnotationProperty(oboInOwl:id))
Declaration(AnnotationProperty(oboInOwl:inSubset))
Declaration(AnnotationProperty(oboInOwl:is_metadata_tag))
Declaration(AnnotationProperty(oboInOwl:shorthand))
Declaration(AnnotationProperty(rdfs:comment))
Declaration(AnnotationProperty(rdfs:label))
Declaration(AnnotationProperty(rdfs:seeAlso))
Declaration(AnnotationProperty(owl:deprecated))
Declaration(AnnotationProperty(skos:closeMatch))
############################
#   Annotation Properties
############################

# Annotation Property: obo:IAO_0000115 (definition)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000115 "definition"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000115 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000115 "The official definition, explaining the meaning of a class or property. Shall be Aristotelian, formalized and normalized. Can be augmented with colloquial definitions."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000115 "2012-04-05: 
Barry Smith

The official OBI definition, explaining the meaning of a class or property: 'Shall be Aristotelian, formalized and normalized. Can be augmented with colloquial definitions'  is terrible.

Can you fix to something like:

A statement of necessary and sufficient conditions explaining the meaning of an expression referring to a class or property.

Alan Ruttenberg

Your proposed definition is a reasonable candidate, except that it is very common that necessary and sufficient conditions are not given. Mostly they are necessary, occasionally they are necessary and sufficient or just sufficient. Often they use terms that are not themselves defined and so they effectively can't be evaluated by those criteria. 

On the specifics of the proposed definition:

We don't have definitions of 'meaning' or 'expression' or 'property'. For 'reference' in the intended sense I think we use the term 'denotation'. For 'expression', I think we you mean symbol, or identifier. For 'meaning' it differs for class and property. For class we want documentation that let's the intended reader determine whether an entity is instance of the class, or not. For property we want documentation that let's the intended reader determine, given a pair of potential relata, whether the assertion that the relation holds is true. The 'intended reader' part suggests that we also specify who, we expect, would be able to understand the definition, and also generalizes over human and computer reader to include textual and logical definition. 

Personally, I am more comfortable weakening definition to documentation, with instructions as to what is desirable. 

We also have the outstanding issue of how to aim different definitions to different audiences. A clinical audience reading chebi wants a different sort of definition documentation/definition from a chemistry trained audience, and similarly there is a need for a definition that is adequate for an ontologist to work with.  "@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000115 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000115 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition")
AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition"@en)

# Annotation Property: obo:IAO_0000116 (editor note)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000116 "editor note"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000116 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000116 "An administrative note intended for its editor. It may not be included in the publication version of the ontology, so it should contain nothing necessary for end users to understand the ontology."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000116 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000116 "GROUP:OBI:<http://purl.obofoundry.org/obo/obi>"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000116 "editor note"@en)

# Annotation Property: obo:IAO_0000700 (has ontology root term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000700 "has ontology root term"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000700 "Ontology annotation property. Relates an ontology to a term that is a designated root term of the ontology. Display tools like OLS can use terms annotated with this property as the starting point for rendering the ontology class hierarchy. There can be more than one root."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000700 "Nicolas Matentzoglu"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000700 "has ontology root term"@en)

# Annotation Property: obo:IAO_0100001 (term replaced by)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0100001 "term replaced by"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0100001 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0100001 "Use on obsolete terms, relating the term to another term that can be used as a substitute"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0100001 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0100001 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:comment obo:IAO_0100001 "Add as annotation triples in the granting ontology"@en)
AnnotationAssertion(rdfs:label obo:IAO_0100001 "term replaced by")
AnnotationAssertion(rdfs:label obo:IAO_0100001 "term replaced by"@en)

# Annotation Property: obo:RO_0002259 (obo:RO_0002259)

SubAnnotationPropertyOf(obo:RO_0002259 oboInOwl:SubsetProperty)

# Annotation Property: obo:RO_0002581 (is a defining property chain axiom)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002581 "If R <- P o Q is a defining property chain axiom, then it also holds that R -> P o Q. Note that this cannot be expressed directly in OWL")
AnnotationAssertion(rdfs:label obo:RO_0002581 "is a defining property chain axiom")

# Annotation Property: obo:RO_0002582 (is a defining property chain axiom where second argument is reflexive)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002582 "If R <- P o Q is a defining property chain axiom, then (1) R -> P o Q holds and (2) Q is either reflexive or locally reflexive. A corollary of this is that P SubPropertyOf R.")
AnnotationAssertion(rdfs:label obo:RO_0002582 "is a defining property chain axiom where second argument is reflexive")

# Annotation Property: obo:valid_for_go_annotation_extension (obo:valid_for_go_annotation_extension)

SubAnnotationPropertyOf(obo:valid_for_go_annotation_extension oboInOwl:SubsetProperty)

# Annotation Property: obo:valid_for_go_gp2term (obo:valid_for_go_gp2term)

SubAnnotationPropertyOf(obo:valid_for_go_gp2term oboInOwl:SubsetProperty)

# Annotation Property: obo:valid_for_go_ontology (obo:valid_for_go_ontology)

SubAnnotationPropertyOf(obo:valid_for_go_ontology oboInOwl:SubsetProperty)

# Annotation Property: obo:valid_for_gocam (obo:valid_for_gocam)

SubAnnotationPropertyOf(obo:valid_for_gocam oboInOwl:SubsetProperty)

# Annotation Property: bspo:human (synonym typically used in the context of human anatomy)

AnnotationAssertion(oboInOwl:hasScope bspo:human oboInOwl:hasNarrowSynonym)
AnnotationAssertion(rdfs:label bspo:human "synonym typically used in the context of human anatomy")
SubAnnotationPropertyOf(bspo:human oboInOwl:SynonymTypeProperty)

# Annotation Property: bspo:vertebrate (synonym typically used in the context of vertebrate anatomy)

AnnotationAssertion(oboInOwl:hasScope bspo:vertebrate oboInOwl:hasNarrowSynonym)
AnnotationAssertion(rdfs:label bspo:vertebrate "synonym typically used in the context of vertebrate anatomy")
SubAnnotationPropertyOf(bspo:vertebrate oboInOwl:SynonymTypeProperty)

# Annotation Property: subsets:ro-eco (subsets:ro-eco)

SubAnnotationPropertyOf(subsets:ro-eco oboInOwl:SubsetProperty)

# Annotation Property: oboInOwl:NamespaceIdRule (namespace-id-rule)

AnnotationAssertion(rdfs:label oboInOwl:NamespaceIdRule "namespace-id-rule")

# Annotation Property: oboInOwl:SynonymTypeProperty (synonym_type_property)

AnnotationAssertion(rdfs:label oboInOwl:SynonymTypeProperty "synonym_type_property")

# Annotation Property: oboInOwl:hasDbXref (database_cross_reference)

AnnotationAssertion(rdfs:label oboInOwl:hasDbXref "database_cross_reference")

# Annotation Property: oboInOwl:hasExactSynonym (has exact synonym)

AnnotationAssertion(obo:IAO_0000115 oboInOwl:hasExactSynonym "An alternative label for a class or property which has the exact same meaning than the preferred name/primary label.")
AnnotationAssertion(obo:IAO_0000117 oboInOwl:hasExactSynonym <http://orcid.org/0000-0001-5208-3432>)
AnnotationAssertion(obo:IAO_0000233 oboInOwl:hasExactSynonym "https://github.com/information-artifact-ontology/ontology-metadata/issues/20")
AnnotationAssertion(rdfs:label oboInOwl:hasExactSynonym "has exact synonym"@en)
AnnotationAssertion(rdfs:label oboInOwl:hasExactSynonym "has_exact_synonym")
AnnotationAssertion(rdfs:seeAlso oboInOwl:hasExactSynonym "https://github.com/information-artifact-ontology/ontology-metadata/issues/20")

# Annotation Property: oboInOwl:hasNarrowSynonym (has narrow synonym)

AnnotationAssertion(obo:IAO_0000115 oboInOwl:hasNarrowSynonym "An alternative label for a class or property which has a more specific meaning than the preferred name/primary label.")
AnnotationAssertion(obo:IAO_0000117 oboInOwl:hasNarrowSynonym <http://orcid.org/0000-0001-5208-3432>)
AnnotationAssertion(obo:IAO_0000233 oboInOwl:hasNarrowSynonym "https://github.com/information-artifact-ontology/ontology-metadata/issues/19")
AnnotationAssertion(rdfs:label oboInOwl:hasNarrowSynonym "has narrow synonym"@en)
AnnotationAssertion(rdfs:label oboInOwl:hasNarrowSynonym "has_narrow_synonym")
AnnotationAssertion(rdfs:seeAlso oboInOwl:hasNarrowSynonym "https://github.com/information-artifact-ontology/ontology-metadata/issues/19")

# Annotation Property: oboInOwl:hasOBOFormatVersion (has_obo_format_version)

AnnotationAssertion(rdfs:label oboInOwl:hasOBOFormatVersion "has_obo_format_version")

# Annotation Property: oboInOwl:hasOBONamespace (has_obo_namespace)

AnnotationAssertion(rdfs:label oboInOwl:hasOBONamespace "has_obo_namespace")

# Annotation Property: oboInOwl:hasRelatedSynonym (has_related_synonym)

AnnotationAssertion(obo:IAO_0000115 oboInOwl:hasRelatedSynonym "An alternative label for a class or property that has been used synonymously with the primary term name, but the usage is not strictly correct.")
AnnotationAssertion(obo:IAO_0000117 oboInOwl:hasRelatedSynonym <http://orcid.org/0000-0001-5208-3432>)
AnnotationAssertion(obo:IAO_0000233 oboInOwl:hasRelatedSynonym "https://github.com/information-artifact-ontology/ontology-metadata/issues/21")
AnnotationAssertion(rdfs:label oboInOwl:hasRelatedSynonym "has related synonym"@en)
AnnotationAssertion(rdfs:label oboInOwl:hasRelatedSynonym "has_related_synonym")
AnnotationAssertion(rdfs:seeAlso oboInOwl:hasRelatedSynonym "https://github.com/information-artifact-ontology/ontology-metadata/issues/21")

# Annotation Property: oboInOwl:hasScope (has_scope)

AnnotationAssertion(rdfs:label oboInOwl:hasScope "has_scope")

# Annotation Property: oboInOwl:hasSynonymType (has_synonym_type)

AnnotationAssertion(rdfs:label oboInOwl:hasSynonymType "has_synonym_type")

# Annotation Property: oboInOwl:shorthand (shorthand)

AnnotationAssertion(rdfs:label oboInOwl:shorthand "shorthand")

# Annotation Property: rdfs:seeAlso (see also)

AnnotationAssertion(oboInOwl:hasDbXref rdfs:seeAlso "http://www.w3.org/2000/01/rdf-schema#seeAlso")
AnnotationAssertion(oboInOwl:hasOBONamespace rdfs:seeAlso "spatial")
AnnotationAssertion(oboInOwl:id rdfs:seeAlso "seeAlso")
AnnotationAssertion(oboInOwl:is_metadata_tag rdfs:seeAlso "true"^^xsd:boolean)
AnnotationAssertion(oboInOwl:shorthand rdfs:seeAlso "seeAlso")
AnnotationAssertion(rdfs:label rdfs:seeAlso "see also")


############################
#   Object Properties
############################

# Object Property: obo:BFO_0000050 (part of)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000050 "is part of"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "my brain is part of my body (continuant parthood, two material entities)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "my stomach cavity is part of my stomach (continuant parthood, immaterial entity is part of material entity)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "this day is part of this year (occurrent parthood)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000050 "a core relation that holds between a part and its whole"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Everything is part of itself. Any part of any part of a thing is itself part of that thing. Two distinct things cannot be part of each other."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See http://purl.obolibrary.org/obo/ro/docs/temporal-semantics/"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Parthood requires the part and the whole to have compatible classes: only an occurrent can be part of an occurrent; only a process can be part of a process; only a continuant can be part of a continuant; only an independent continuant can be part of an independent continuant; only an immaterial entity can be part of an immaterial entity; only a specifically dependent continuant can be part of a specifically dependent continuant; only a generically dependent continuant can be part of a generically dependent continuant. (This list is not exhaustive.)

A continuant cannot be part of an occurrent: use 'participates in'. An occurrent cannot be part of a continuant: use 'has participant'. A material entity cannot be part of an immaterial entity: use 'has location'. A specifically dependent continuant cannot be part of an independent continuant: use 'inheres in'. An independent continuant cannot be part of a specifically dependent continuant: use 'bearer of'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000050 "part_of"@en)
AnnotationAssertion(obo:RO_0001900 obo:BFO_0000050 obo:RO_0001901)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000002)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000003)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000004)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000017)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000019)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000020)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000031)
AnnotationAssertion(oboInOwl:hasDbXref obo:BFO_0000050 "BFO:0000050")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BFO_0000050 "spatial")
AnnotationAssertion(oboInOwl:id obo:BFO_0000050 "part_of")
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000050 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000050 obo:valid_for_go_gp2term)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000050 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000050 obo:valid_for_gocam)
AnnotationAssertion(oboInOwl:shorthand obo:BFO_0000050 "part_of")
AnnotationAssertion(rdfs:label obo:BFO_0000050 "part of")
AnnotationAssertion(rdfs:label obo:BFO_0000050 "part of"@en)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000050 <http://ontologydesignpatterns.org/wiki/Community:Parts_and_Collections>)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000050 <http://ontologydesignpatterns.org/wiki/Submissions:PartOf>)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000050 "http://www.obofoundry.org/ro/#OBO_REL:part_of")
SubObjectPropertyOf(obo:BFO_0000050 obo:RO_0002131)
InverseObjectProperties(obo:BFO_0000050 obo:BFO_0000051)
TransitiveObjectProperty(obo:BFO_0000050)

# Object Property: obo:BFO_0000051 (has part)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000051 "has part"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "my body has part my brain (continuant parthood, two material entities)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "my stomach has part my stomach cavity (continuant parthood, material entity has part immaterial entity)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "this year has part this day (occurrent parthood)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000051 "a core relation that holds between a whole and its part"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Everything has itself as a part. Any part of any part of a thing is itself part of that thing. Two distinct things cannot have each other as a part."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See http://purl.obolibrary.org/obo/ro/docs/temporal-semantics/"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Parthood requires the part and the whole to have compatible classes: only an occurrent have an occurrent as part; only a process can have a process as part; only a continuant can have a continuant as part; only an independent continuant can have an independent continuant as part; only a specifically dependent continuant can have a specifically dependent continuant as part; only a generically dependent continuant can have a generically dependent continuant as part. (This list is not exhaustive.)

A continuant cannot have an occurrent as part: use 'participates in'. An occurrent cannot have a continuant as part: use 'has participant'. An immaterial entity cannot have a material entity as part: use 'location of'. An independent continuant cannot have a specifically dependent continuant as part: use 'bearer of'. A specifically dependent continuant cannot have an independent continuant as part: use 'inheres in'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000051 "has_part"@en)
AnnotationAssertion(obo:RO_0001900 obo:BFO_0000051 obo:RO_0001901)
AnnotationAssertion(oboInOwl:hasDbXref obo:BFO_0000051 "BFO:0000051")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BFO_0000051 "spatial")
AnnotationAssertion(oboInOwl:id obo:BFO_0000051 "has_part")
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000051 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000051 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000051 obo:valid_for_gocam)
AnnotationAssertion(oboInOwl:shorthand obo:BFO_0000051 "has_part")
AnnotationAssertion(rdfs:label obo:BFO_0000051 "has part")
AnnotationAssertion(rdfs:label obo:BFO_0000051 "has part"@en)
SubObjectPropertyOf(obo:BFO_0000051 obo:RO_0002131)
TransitiveObjectProperty(obo:BFO_0000051)

# Object Property: obo:BFO_0000062 (preceded by)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000062 "preceded by"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000062 "x is preceded by y if and only if the time point at which y ends is before or equivalent to the time point at which x starts. Formally: x preceded by y iff ω(y) <= α(x), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000062 "An example is: translation preceded_by transcription; aging preceded_by development (not however death preceded_by aging). Where derives_from links classes of continuants, preceded_by links classes of processes. Clearly, however, these two relations are not independent of each other. Thus if cells of type C1 derive_from cells of type C, then any cell division involving an instance of C1 in a given lineage is preceded_by cellular processes involving an instance of C.    The assertion P preceded_by P1 tells us something about Ps in general: that is, it tells us something about what happened earlier, given what we know about what happened later. Thus it does not provide information pointing in the opposite direction, concerning instances of P1 in general; that is, that each is such as to be succeeded by some instance of P. Note that an assertion to the effect that P preceded_by P1 is rather weak; it tells us little about the relations between the underlying instances in virtue of which the preceded_by relation obtains. Typically we will be interested in stronger relations, for example in the relation immediately_preceded_by, or in relations which combine preceded_by with a condition to the effect that the corresponding instances of P and P1 share participants, or that their participants are connected by relations of derivation, or (as a first step along the road to a treatment of causality) that the one process in some way affects (for example, initiates or regulates) the other."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000062 "is preceded by"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000062 "preceded_by"@en)
AnnotationAssertion(dc:source obo:BFO_0000062 "http://www.obofoundry.org/ro/#OBO_REL:preceded_by")
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000062 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:BFO_0000062 "preceded by"@en)
SubObjectPropertyOf(obo:BFO_0000062 obo:RO_0002086)
InverseObjectProperties(obo:BFO_0000062 obo:BFO_0000063)
TransitiveObjectProperty(obo:BFO_0000062)
ObjectPropertyDomain(obo:BFO_0000062 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000062 obo:BFO_0000003)

# Object Property: obo:BFO_0000063 (precedes)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000063 "precedes"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000063 "x precedes y if and only if the time point at which x ends is before or equivalent to the time point at which y starts. Formally: x precedes y iff ω(x) <= α(y), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point."@en)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000063 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:BFO_0000063 "precedes"@en)
SubObjectPropertyOf(obo:BFO_0000063 obo:RO_0002222)
TransitiveObjectProperty(obo:BFO_0000063)
ObjectPropertyDomain(obo:BFO_0000063 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000063 obo:BFO_0000003)

# Object Property: obo:BSPO_0000095 (anatomical relation)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000095 "BSPO:0000095")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000095 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000095 "anatomical_relation")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000095 "anatomical_relation")
AnnotationAssertion(rdfs:label obo:BSPO_0000095 "anatomical relation")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000095 obo:FBql_00005860)
AnnotationAssertion(owl:deprecated obo:BSPO_0000095 "true"^^xsd:boolean)

# Object Property: obo:BSPO_0000096 (anterior to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000096 "x anterior to y iff x is further along the antero-posterior axis than y, towards the head. An antero-posterior axis is an axis that extends through an organism from head end to opposite end of body or tail.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000096 "BSPO:0000096")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000096 "rostral_to")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000096 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000096 "anterior_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000096 "anterior_to")
AnnotationAssertion(rdfs:label obo:BSPO_0000096 "anterior to")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000096 obo:FBcv_0000039)
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000096 obo:FBql_00005863)
InverseObjectProperties(obo:BSPO_0000096 obo:BSPO_0000099)
TransitiveObjectProperty(obo:BSPO_0000096)

# Object Property: obo:BSPO_0000097 (distal to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000097 "x distal to y iff x is further along the proximo-distal axis than y, towards the appendage tip. A proximo-distal axis extends from tip of an appendage (distal) to where it joins the body (proximal).")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000097 "BSPO:0000097")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000097 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000097 "distal_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000097 "distal_to")
AnnotationAssertion(rdfs:label obo:BSPO_0000097 "distal to")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000097 obo:FBcv_0000040)
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000097 obo:FBql_00005867)
InverseObjectProperties(obo:BSPO_0000097 obo:BSPO_0000100)
TransitiveObjectProperty(obo:BSPO_0000097)

# Object Property: obo:BSPO_0000098 (dorsal to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000098 "x dorsal to y iff x is further along the dorso-ventral axis than y, towards the back. A dorso-ventral axis is an axis that extends through an organism from back (e.g. spinal column) to front (e.g. belly).")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000098 "BSPO:0000098")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000098 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000098 "dorsal_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000098 "dorsal_to")
AnnotationAssertion(rdfs:label obo:BSPO_0000098 "dorsal to")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000098 obo:FBcv_0000041)
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000098 obo:FBql_00005865)
InverseObjectProperties(obo:BSPO_0000098 obo:BSPO_0000102)
TransitiveObjectProperty(obo:BSPO_0000098)

# Object Property: obo:BSPO_0000099 (posterior to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000099 "x posterior to y iff x is further along the antero-posterior axis than y, towards the body/tail. An antero-posterior axis is an axis that extends through an organism from head end to opposite end of body or tail.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000099 "BSPO:0000099")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType bspo:vertebrate) oboInOwl:hasNarrowSynonym obo:BSPO_0000099 "caudal to")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000099 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000099 "posterior_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000099 "posterior_to")
AnnotationAssertion(rdfs:label obo:BSPO_0000099 "posterior to")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000099 obo:FBcv_0000045)
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000099 obo:FBql_00005864)
TransitiveObjectProperty(obo:BSPO_0000099)

# Object Property: obo:BSPO_0000100 (proximal to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000100 "x proximal to y iff x is closer to the point of attachment with the body than y.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000100 "BSPO:0000100")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000100 "NCIT:C25236")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000100 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000100 "proximal_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000100 "proximal_to")
AnnotationAssertion(rdfs:comment obo:BSPO_0000100 "The elbow is proximal to the hand, but distal to the shoulder.")
AnnotationAssertion(rdfs:label obo:BSPO_0000100 "proximal to")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000100 obo:FBcv_0000047)
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000100 obo:FBql_00005868)
TransitiveObjectProperty(obo:BSPO_0000100)

# Object Property: obo:BSPO_0000101 (obsolete surrounds)

AnnotationAssertion(obo:IAO_0100001 obo:BSPO_0000101 "RO:0002221")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000101 "BSPO:0000101")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000101 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000101 "obsolete_surrounds")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000101 "obsolete_surrounds")
AnnotationAssertion(rdfs:label obo:BSPO_0000101 "obsolete surrounds")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000101 obo:FBcv_0000048)
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000101 obo:FBql_00005861)
AnnotationAssertion(owl:deprecated obo:BSPO_0000101 "true"^^xsd:boolean)

# Object Property: obo:BSPO_0000102 (ventral to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000102 "x ventral to y iff x is further along the dorso-ventral axis than y, towards the front. A dorso-ventral axis is an axis that extends through an organism from back (e.g. spinal column) to front (e.g. belly).")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000102 "BSPO:0000102")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000102 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000102 "ventral_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000102 "ventral_to")
AnnotationAssertion(rdfs:label obo:BSPO_0000102 "ventral to")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000102 obo:FBcv_0000049)
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000102 obo:FBql_00005866)
TransitiveObjectProperty(obo:BSPO_0000102)

# Object Property: obo:BSPO_0000103 (vicinity of)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000103 "BSPO:0000103")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000103 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000103 "vicinity_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000103 "vicinity_of")
AnnotationAssertion(rdfs:label obo:BSPO_0000103 "vicinity of")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000103 obo:FBcv_0000050)
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000103 obo:FBql_00005862)

# Object Property: obo:BSPO_0000104 (approximately perpendicular to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000104 "Crosses at an angle that is 90 degrees, or close to 90 degrees. In any non-linear organism, the main axes are rarely perpendicular when taken through the organism as a whole.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000104 "BSPO:0000104")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000104 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000104 "approximately_perpendicular_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000104 "approximately_perpendicular_to")
AnnotationAssertion(rdfs:label obo:BSPO_0000104 "approximately perpendicular to")
ObjectPropertyDomain(obo:BSPO_0000104 obo:BSPO_0000010)
ObjectPropertyRange(obo:BSPO_0000104 obo:BSPO_0000010)

# Object Property: obo:BSPO_0000105 (ipsilateral to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000105 "On the same side as. For example, the left arm is ipsilateral to the left leg.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000105 "BSPO:0000105")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000105 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000105 "ipsilateral_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000105 "ipsilateral_to")
AnnotationAssertion(rdfs:label obo:BSPO_0000105 "ipsilateral to")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000105 obo:FBql_00005850)
SymmetricObjectProperty(obo:BSPO_0000105)
DisjointObjectProperties(obo:BSPO_0000105 obo:BSPO_0000106)

# Object Property: obo:BSPO_0000106 (contralateral to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000106 "On the opposite side from. For example, the left arm is contralateral to the right arm (and the right leg).")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000106 "BSPO:0000106")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000106 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000106 "contralateral_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000106 "contralateral_to")
AnnotationAssertion(rdfs:label obo:BSPO_0000106 "contralateral to")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000106 obo:FBql_00005851)
SubObjectPropertyOf(obo:BSPO_0000106 obo:BSPO_0000113)
SymmetricObjectProperty(obo:BSPO_0000106)

# Object Property: obo:BSPO_0000107 (deep to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000107 "Further away from the surface of the organism. Thus, the muscular layer is deep to the skin, but superficial to the intestines.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000107 "BSPO:0000107")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000107 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000107 "deep_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000107 "deep_to")
AnnotationAssertion(rdfs:label obo:BSPO_0000107 "deep to")
InverseObjectProperties(obo:BSPO_0000107 obo:BSPO_0000108)
TransitiveObjectProperty(obo:BSPO_0000107)

# Object Property: obo:BSPO_0000108 (superficial to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000108 "Near the outer surface of the organism. Thus, skin is superficial to the muscle layer.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000108 "BSPO:0000108")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000108 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000108 "superficial_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000108 "superficial_to")
AnnotationAssertion(rdfs:label obo:BSPO_0000108 "superficial to")
TransitiveObjectProperty(obo:BSPO_0000108)

# Object Property: obo:BSPO_0000109 (obsolete surrounded_by)

AnnotationAssertion(obo:IAO_0100001 obo:BSPO_0000109 "RO:0002219")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000109 "BSPO:0000109")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000109 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000109 "obsolete_surrounded_by")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000109 "obsolete_surrounded_by")
AnnotationAssertion(rdfs:label obo:BSPO_0000109 "obsolete surrounded_by")
AnnotationAssertion(owl:deprecated obo:BSPO_0000109 "true"^^xsd:boolean)

# Object Property: obo:BSPO_0000110 (left of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000110 "Closer to the left side of the organism. Example: The dorsal fin is right of the left pectoral fin, but is left of the right eye. On the type level: X left of Y <=> every instance x of X is left of some instance y of Y, and there exists some organism o such that x part of o and y part of o.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000110 "BSPO:0000110")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000110 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000110 "left_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000110 "left_of")
AnnotationAssertion(rdfs:label obo:BSPO_0000110 "left of")
InverseObjectProperties(obo:BSPO_0000110 obo:BSPO_0000111)
TransitiveObjectProperty(obo:BSPO_0000110)

# Object Property: obo:BSPO_0000111 (right of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000111 "Closer to the right side of the organism. Example: The dorsal fin is right of the left pectoral fin, but is left of the right eye. On the type level: X left of Y <=> every instance x of X is right of some instance y of Y, and there exists some organism o such that x part of o and y part of o.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000111 "BSPO:0000111")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000111 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000111 "right_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000111 "right_of")
AnnotationAssertion(rdfs:label obo:BSPO_0000111 "right of")
TransitiveObjectProperty(obo:BSPO_0000111)

# Object Property: obo:BSPO_0000113 (opposite to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000113 "Direcly opposite to. i.e. on the opposite side through the axis.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000113 "BSPO:0000113")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000113 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000113 "opposite_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000113 "opposite_to")
AnnotationAssertion(rdfs:label obo:BSPO_0000113 "opposite to")

# Object Property: obo:BSPO_0000114 (lateral to)

AnnotationAssertion(obo:IAO_0000115 obo:BSPO_0000114 "X lateral to y if x is further from the midsagittal plane than y."@en)
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000114 "Jennifer Girón"@en)
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000114 "2021-04-21T01:01:01Z")
AnnotationAssertion(rdfs:label obo:BSPO_0000114 "lateral to"@en)
InverseObjectProperties(obo:BSPO_0000114 obo:BSPO_0000115)
TransitiveObjectProperty(obo:BSPO_0000114)

# Object Property: obo:BSPO_0000115 (medial to)

AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000115 "Jennifer Girón")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000115 "2021-04-21T01:01:01Z")
AnnotationAssertion(rdfs:label obo:BSPO_0000115 "X medial to y if x is closer to the midsagittal plane than y."@en)
AnnotationAssertion(rdfs:label obo:BSPO_0000115 "medial to"@en)
TransitiveObjectProperty(obo:BSPO_0000115)

# Object Property: obo:BSPO_0000120 (in left side of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:PATO_mtg_2009") obo:IAO_0000115 obo:BSPO_0000120 "X in left side of Y <=> if Y is subdivided into two left and right portions, X is part of the left portion.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000120 "BSPO:0000120")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000120 "NCIT:C25229")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000120 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000120 "in_left_side_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000120 "in_left_side_of")
AnnotationAssertion(rdfs:label obo:BSPO_0000120 "in left side of")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000120 "https://github.com/obophenotype/uberon/wiki/Modeling-paired-structures-Design-Pattern"^^xsd:anyURI)
SubObjectPropertyOf(obo:BSPO_0000120 obo:BSPO_0000126)
DisjointObjectProperties(obo:BSPO_0000120 obo:BSPO_0000121)

# Object Property: obo:BSPO_0000121 (in right side of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:PATO_mtg_2009") obo:IAO_0000115 obo:BSPO_0000121 "X in right side of Y <=> if Y is subdivided into two left and right portions, X is part of the right portion.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000121 "BSPO:0000121")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000121 "NCIT:C25228")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000121 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000121 "in_right_side_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000121 "in_right_side_of")
AnnotationAssertion(rdfs:label obo:BSPO_0000121 "in right side of")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000121 "https://github.com/obophenotype/uberon/wiki/Modeling-paired-structures-Design-Pattern"^^xsd:anyURI)
SubObjectPropertyOf(obo:BSPO_0000121 obo:BSPO_0000126)

# Object Property: obo:BSPO_0000122 (in posterior side of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:PATO_mtg_2009") obo:IAO_0000115 obo:BSPO_0000122 "X posterior side of Y <=> if Y is subdivided into two anterior and posterior portions, X is part of the posterior portion.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000122 "BSPO:0000122")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000122 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000122 "in_posterior_side_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000122 "in_posterior_side_of")
AnnotationAssertion(rdfs:label obo:BSPO_0000122 "in posterior side of")
SubObjectPropertyOf(obo:BSPO_0000122 obo:BFO_0000050)

# Object Property: obo:BSPO_0000123 (in anterior side of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:PATO_mtg_2009") obo:IAO_0000115 obo:BSPO_0000123 "X anterior side of Y <=> if Y is subdivided into two anterior and posterior portions, X is part of the anterior portion.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000123 "BSPO:0000123")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000123 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000123 "in_anterior_side_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000123 "in_anterior_side_of")
AnnotationAssertion(rdfs:label obo:BSPO_0000123 "in anterior side of")
SubObjectPropertyOf(obo:BSPO_0000123 obo:BFO_0000050)

# Object Property: obo:BSPO_0000124 (in proximal side of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:PATO_mtg_2009") obo:IAO_0000115 obo:BSPO_0000124 "x in proximal side of y <=> if y is subdivided into two proximal and distal portions, y is part of the proximal portion.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000124 "BSPO:0000124")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000124 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000124 "in_proximal_side_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000124 "in_proximal_side_of")
AnnotationAssertion(rdfs:label obo:BSPO_0000124 "in proximal side of")
SubObjectPropertyOf(obo:BSPO_0000124 obo:BFO_0000050)

# Object Property: obo:BSPO_0000125 (in distal side of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:PATO_mtg_2009") obo:IAO_0000115 obo:BSPO_0000125 "x in distal side of y <=> if y is subdivided into two proximal and distal portions, y is part of the distal portion.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000125 "BSPO:0000125")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000125 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000125 "in_distal_side_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000125 "in_distal_side_of")
AnnotationAssertion(rdfs:label obo:BSPO_0000125 "in distal side of")
SubObjectPropertyOf(obo:BSPO_0000125 obo:BFO_0000050)

# Object Property: obo:BSPO_0000126 (in lateral side of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "UBERON:cjm") obo:IAO_0000115 obo:BSPO_0000126 "X in lateral side of Y <=> if X is in left side of Y or X is in right side of Y. X is often, but not always a paired structure")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000126 "BSPO:0000126")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000126 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000126 "in_lateral_side_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0000126 "in_lateral_side_of")
AnnotationAssertion(rdfs:label obo:BSPO_0000126 "in lateral side of")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000126 <https://github.com/obophenotype/uberon/issues/2453>)
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0000126 "https://github.com/obophenotype/uberon/wiki/Modeling-paired-structures-Design-Pattern"^^xsd:anyURI)
SubObjectPropertyOf(obo:BSPO_0000126 obo:BFO_0000050)
DisjointObjectProperties(obo:BSPO_0000126 obo:BSPO_0020001)

# Object Property: obo:BSPO_0001100 (in superficial part of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0001100 "X superficial part of Y <=> if Y is subdivided into two superficial and deep portions, X is part of the superficial portion.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0001100 "BSPO:0001100")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0001100 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0001100 "in_superficial_part_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0001100 "in_superficial_part_of")
AnnotationAssertion(rdfs:label obo:BSPO_0001100 "in superficial part of")
SubObjectPropertyOf(obo:BSPO_0001100 obo:BFO_0000050)

# Object Property: obo:BSPO_0001101 (in deep part of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0001101 "X superficial part of Y <=> if Y is subdivided into two superficial and deep portions, X is part of the deep portion.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0001101 "BSPO:0001101")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0001101 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0001101 "in_deep_part_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0001101 "in_deep_part_of")
AnnotationAssertion(rdfs:label obo:BSPO_0001101 "in deep part of")
SubObjectPropertyOf(obo:BSPO_0001101 obo:BFO_0000050)

# Object Property: obo:BSPO_0001102 (parallel to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0001102 "x is parallel t y iff x and y are lines or planes which when extended indefinitely do not cross.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0001102 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0001102 "parallel_to")
AnnotationAssertion(rdfs:label obo:BSPO_0001102 "parallel to")

# Object Property: obo:BSPO_0001106 (proximalmost part of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "https://orcid.org/0000-0002-6601-2165") obo:IAO_0000115 obo:BSPO_0001106 "X proximalmost part of Y <=> X is in proximal side of Y and X is adjacent to the proximal boundary of Y")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0001106 "BSPO:0001106")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0001106 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0001106 "proximalmost_part_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0001106 "proximalmost_part_of")
AnnotationAssertion(rdfs:label obo:BSPO_0001106 "proximalmost part of")
SubObjectPropertyOf(obo:BSPO_0001106 obo:BSPO_0000124)

# Object Property: obo:BSPO_0001107 (immediately deep to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0001107 "x immediately deep to y iff x deep_to y and x is contiguous with y.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0001107 "BSPO:0001107")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0001107 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0001107 "immediately_deep_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0001107 "immediately_deep_to")
AnnotationAssertion(rdfs:label obo:BSPO_0001107 "immediately deep to")
SubObjectPropertyOf(obo:BSPO_0001107 obo:BSPO_0000107)
InverseObjectProperties(obo:BSPO_0001107 obo:BSPO_0015014)

# Object Property: obo:BSPO_0001108 (distalmost part of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "https://orcid.org/0000-0002-6601-2165") obo:IAO_0000115 obo:BSPO_0001108 "X distalmost part of Y <=> X is in distal side of Y and X is adjacent to the distal boundary of Y")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0001108 "BSPO:0001108")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0001108 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0001108 "distalmost_part_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0001108 "distalmost_part_of")
AnnotationAssertion(rdfs:label obo:BSPO_0001108 "distalmost part of")
SubObjectPropertyOf(obo:BSPO_0001108 obo:BSPO_0000125)

# Object Property: obo:BSPO_0001113 (preaxialmost part of)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0001113 "BSPO:0001113")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0001113 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0001113 "preaxialmost_part_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0001113 "preaxialmost_part_of")
AnnotationAssertion(rdfs:label obo:BSPO_0001113 "preaxialmost part of")
SubObjectPropertyOf(obo:BSPO_0001113 obo:BFO_0000050)

# Object Property: obo:BSPO_0001114 (postaxial to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "http://medical-dictionary.thefreedictionary.com/postaxial") obo:IAO_0000115 obo:BSPO_0001114 "x preaxial to y iff x is further along the preaxial-postaxial axis than y, towards the postaxial side.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0001114 "BSPO:0001114")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0001114 "spatial")
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "MA:th") oboInOwl:hasRelatedSynonym obo:BSPO_0001114 "posterior to (developmentally)")
AnnotationAssertion(oboInOwl:id obo:BSPO_0001114 "postaxial_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0001114 "postaxial_to")
AnnotationAssertion(rdfs:label obo:BSPO_0001114 "postaxial to")
TransitiveObjectProperty(obo:BSPO_0001114)

# Object Property: obo:BSPO_0001115 (postaxialmost part of)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0001115 "BSPO:0001115")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0001115 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0001115 "postaxialmost_part_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0001115 "postaxialmost_part_of")
AnnotationAssertion(rdfs:label obo:BSPO_0001115 "postaxialmost part of")
SubObjectPropertyOf(obo:BSPO_0001115 obo:BFO_0000050)

# Object Property: obo:BSPO_0005001 (intersects midsagittal plane of)

AnnotationAssertion(obo:IAO_0000115 obo:BSPO_0005001 "X intersects median plane of iff X crosses the midine plane of Y.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0005001 "BSPO:0005001")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0005001 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0005001 "intersects_midsagittal_plane_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0005001 "intersects_midsagittal_plane_of")
AnnotationAssertion(rdfs:label obo:BSPO_0005001 "intersects midsagittal plane of")
SubObjectPropertyOf(obo:BSPO_0005001 obo:BFO_0000050)

# Object Property: obo:BSPO_0015001 (finishes axis)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015001 "BSPO:0015001")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015001 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015001 "finishes_axis")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015001 "finishes_axis")
AnnotationAssertion(rdfs:comment obo:BSPO_0015001 "A directional axis can be divided by a plane. Following Allen Interval Algebra terminology we say that the side on which the axis initiates starts the axis, with the other side finishing the axis. If s finishes axis x, and x has end point p, then x overlaps p")
AnnotationAssertion(rdfs:label obo:BSPO_0015001 "finishes axis")
ObjectPropertyDomain(obo:BSPO_0015001 obo:BSPO_0000054)
ObjectPropertyRange(obo:BSPO_0015001 obo:BSPO_0000010)

# Object Property: obo:BSPO_0015002 (follows axis)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015002 "BSPO:0015002")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015002 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015002 "follows_axis")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015002 "follows_axis")
AnnotationAssertion(rdfs:label obo:BSPO_0015002 "follows axis")
ObjectPropertyRange(obo:BSPO_0015002 obo:BSPO_0000010)

# Object Property: obo:BSPO_0015003 (has axis)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015003 "BSPO:0015003")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015003 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015003 "has_axis")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015003 "has_axis")
AnnotationAssertion(rdfs:label obo:BSPO_0015003 "has axis")

# Object Property: obo:BSPO_0015004 (has end point)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0015004 "A relation between an axis and a part of an organism, in which the part defines the initial point of the axis.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015004 "BSPO:0015004")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015004 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015004 "has_end_point")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015004 "has_end_point")
AnnotationAssertion(rdfs:comment obo:BSPO_0015004 "Axes can be defined in a given species by subtyping the relevant axis type and stating a end and end point")
AnnotationAssertion(rdfs:label obo:BSPO_0015004 "has end point")
ObjectPropertyDomain(obo:BSPO_0015004 obo:BSPO_0000010)
ObjectPropertyRange(obo:BSPO_0015004 obo:CARO_0000000)

# Object Property: obo:BSPO_0015005 (orthogonal to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0015005 "crossing at right angles")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015005 "BSPO:0015005")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015005 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015005 "orthogonal_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015005 "orthogonal_to")
AnnotationAssertion(rdfs:label obo:BSPO_0015005 "orthogonal to")
ObjectPropertyDomain(obo:BSPO_0015005 obo:BSPO_0000010)
ObjectPropertyRange(obo:BSPO_0015005 obo:BSPO_0000400)

# Object Property: obo:BSPO_0015006 (passes through)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0015006 "Intersects at two points.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015006 "BSPO:0015006")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015006 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015006 "passes_through")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015006 "passes_through")
AnnotationAssertion(rdfs:label obo:BSPO_0015006 "passes through")
ObjectPropertyDomain(obo:BSPO_0015006 obo:BSPO_0000010)

# Object Property: obo:BSPO_0015007 (starts axis)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015007 "BSPO:0015007")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015007 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015007 "starts_axis")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015007 "starts_axis")
AnnotationAssertion(rdfs:comment obo:BSPO_0015007 "A directional axis can be divided by a plane. Following Allen Interval Algebra terminology we say that the side on which the axis initiates starts the axis, with the other side finishing the axis. . If s starts axis x, and x has start point p, then x overlaps p")
AnnotationAssertion(rdfs:label obo:BSPO_0015007 "starts axis")
ObjectPropertyDomain(obo:BSPO_0015007 obo:BSPO_0000054)
ObjectPropertyRange(obo:BSPO_0015007 obo:BSPO_0000010)

# Object Property: obo:BSPO_0015008 (surface of)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015008 "BSPO:0015008")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015008 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015008 "surface_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015008 "surface_of")
AnnotationAssertion(rdfs:comment obo:BSPO_0015008 "placeholder. used for relation between anatomical surface and an anatomical side.")
AnnotationAssertion(rdfs:label obo:BSPO_0015008 "surface of")
ObjectPropertyDomain(obo:BSPO_0015008 obo:BSPO_0000005)

# Object Property: obo:BSPO_0015009 (immediately anterior to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0015009 "x immediately anterior to y iff x anterior to y and x is contiguous with y.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015009 "BSPO:0015009")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015009 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015009 "immediately_anterior_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015009 "immediately_anterior_to")
AnnotationAssertion(rdfs:label obo:BSPO_0015009 "immediately anterior to")
SubObjectPropertyOf(obo:BSPO_0015009 obo:BSPO_0000096)
InverseObjectProperties(obo:BSPO_0015009 obo:BSPO_0015012)

# Object Property: obo:BSPO_0015010 (immediately distal to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0015010 "x immediately distal to y iff x distal to y and x is contiguous with y.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015010 "BSPO:0015010")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015010 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015010 "immediately_distal_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015010 "immediately_distal_to")
AnnotationAssertion(rdfs:label obo:BSPO_0015010 "immediately distal to")
SubObjectPropertyOf(obo:BSPO_0015010 obo:BSPO_0000097)
InverseObjectProperties(obo:BSPO_0015010 obo:BSPO_0015013)

# Object Property: obo:BSPO_0015011 (immediately dorsal to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0015011 "x immediately dorsal to y iff x dorsal to y and x is contiguous with y.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015011 "BSPO:0015011")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015011 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015011 "immediately_dorsal_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015011 "immediately_dorsal_to")
AnnotationAssertion(rdfs:label obo:BSPO_0015011 "immediately dorsal to")
SubObjectPropertyOf(obo:BSPO_0015011 obo:BSPO_0000098)
InverseObjectProperties(obo:BSPO_0015011 obo:BSPO_0015015)

# Object Property: obo:BSPO_0015012 (immediately posterior to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0015012 "x immediately posterior to y iff x posterior_to y and x is contiguous with y.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015012 "BSPO:0015012")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015012 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015012 "immediately_posterior_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015012 "immediately_posterior_to")
AnnotationAssertion(rdfs:label obo:BSPO_0015012 "immediately posterior to")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0015012 <https://github.com/obophenotype/uberon/issues/2453>)
SubObjectPropertyOf(obo:BSPO_0015012 obo:BSPO_0000099)
SubObjectPropertyOf(obo:BSPO_0015012 obo:RO_0002220)

# Object Property: obo:BSPO_0015013 (immediately proximal to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0015013 "x immediately proximal to y iff x proximal to y and x is contiguous with y.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015013 "BSPO:0015013")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015013 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015013 "immediately_proximal_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015013 "immediately_proximal_to")
AnnotationAssertion(rdfs:label obo:BSPO_0015013 "immediately proximal to")
SubObjectPropertyOf(obo:BSPO_0015013 obo:BSPO_0000100)

# Object Property: obo:BSPO_0015014 (immediately superficial to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0015014 "x immediately superficial to y iff x superficial to y and x is contiguous with y.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015014 "BSPO:0015014")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015014 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015014 "immediately_superficial_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015014 "immediately_superficial_to")
AnnotationAssertion(rdfs:label obo:BSPO_0015014 "immediately superficial to")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0015014 <https://github.com/obophenotype/uberon/issues/2453>)
SubObjectPropertyOf(obo:BSPO_0015014 obo:BSPO_0000108)
SubObjectPropertyOf(obo:BSPO_0015014 obo:RO_0002220)

# Object Property: obo:BSPO_0015015 (immediately ventral to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0015015 "x immediately ventral to y iff x ventral to y and x is contiguous with y.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015015 "BSPO:0015015")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015015 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015015 "immediately_ventral_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015015 "immediately_ventral_to")
AnnotationAssertion(rdfs:label obo:BSPO_0015015 "immediately ventral to")
SubObjectPropertyOf(obo:BSPO_0015015 obo:BSPO_0000102)

# Object Property: obo:BSPO_0015016 (immediately left of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0015016 "x immediately left of y iff x left_of y and x is contiguous with y.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015016 "BSPO:0015016")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015016 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015016 "immediately_left_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015016 "immediately_left_of")
AnnotationAssertion(rdfs:label obo:BSPO_0015016 "immediately left of")
SubObjectPropertyOf(obo:BSPO_0015016 obo:BSPO_0000110)
InverseObjectProperties(obo:BSPO_0015016 obo:BSPO_0015017)

# Object Property: obo:BSPO_0015017 (immediately right of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0015017 "x immediately right of y iff x right of y and x is contiguous with y.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015017 "BSPO:0015017")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015017 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015017 "immediately_right_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015017 "immediately_right_of")
AnnotationAssertion(rdfs:label obo:BSPO_0015017 "immediately right of")
SubObjectPropertyOf(obo:BSPO_0015017 obo:BSPO_0000111)

# Object Property: obo:BSPO_0015101 (in dorsal side of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0015101 "X dorsal side of Y <=> if Y is subdivided into two dorsal and ventral portions, X is part of the dorsal portion.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015101 "BSPO:0015101")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015101 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015101 "in_dorsal_side_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015101 "in_dorsal_side_of")
AnnotationAssertion(rdfs:label obo:BSPO_0015101 "in dorsal side of")
SubObjectPropertyOf(obo:BSPO_0015101 obo:BFO_0000050)

# Object Property: obo:BSPO_0015102 (in ventral side of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0015102 "X ventral side of Y <=> if Y is subdivided into two dorsal and ventral portions, X is part of the ventral portion.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015102 "BSPO:0015102")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015102 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015102 "in_ventral_side_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015102 "in_ventral_side_of")
AnnotationAssertion(rdfs:label obo:BSPO_0015102 "in ventral side of")
SubObjectPropertyOf(obo:BSPO_0015102 obo:BFO_0000050)

# Object Property: obo:BSPO_0015201 (oral to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0015201 "nearer to the oral opening of the organism, on the oral-aboral axis.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015201 "BSPO:0015201")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015201 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015201 "oral_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015201 "oral_to")
AnnotationAssertion(rdfs:label obo:BSPO_0015201 "oral to")
TransitiveObjectProperty(obo:BSPO_0015201)

# Object Property: obo:BSPO_0015202 (aboral to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0015202 "nearer to the aboral opening of the organism, on the oral-aboral axis.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0015202 "BSPO:0015202")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0015202 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0015202 "aboral_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0015202 "aboral_to")
AnnotationAssertion(rdfs:label obo:BSPO_0015202 "aboral to")
TransitiveObjectProperty(obo:BSPO_0015202)

# Object Property: obo:BSPO_0020001 (in central side of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0020001 "X in_central_side Y <=> if Y is subdivided into left and right portions around some median divisor, all parts of X are closer to the median divisor than the outermost lateral sides.")
AnnotationAssertion(obo:IAO_0000116 obo:BSPO_0020001 "This was migrated from http://purl.obolibrary.org/obo/uberon/core#in_central_side_of in Uberon.")
AnnotationAssertion(terms:contributor obo:BSPO_0020001 <https://orcid.org/0000-0002-6523-4866>)
AnnotationAssertion(rdfs:label obo:BSPO_0020001 "in central side of")
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0020001 obo:BSPO_0000059)
AnnotationAssertion(rdfs:seeAlso obo:BSPO_0020001 <https://github.com/obophenotype/uberon/wiki/Modeling-paired-structures-Design-Pattern>)
SubObjectPropertyOf(obo:BSPO_0020001 obo:BFO_0000050)

# Object Property: obo:BSPO_0020002 (has start point)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0020002 "A relation between an axis and a part of an organism, in which the part defines the initial point of the axis.")
AnnotationAssertion(obo:IAO_0000116 obo:BSPO_0020002 "This relationship was originally called http://purl.obolibrary.org/obo/#_has_start_point, but was renamed because of the non-standard IRI syntax.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0020002 ":has_start_point")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0020002 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0020002 "has_start_point")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0020002 "has_start_point")
AnnotationAssertion(rdfs:comment obo:BSPO_0020002 "Axes can be defined in a given species by subtyping the relevant axis type and stating a start and end point.")
AnnotationAssertion(rdfs:label obo:BSPO_0020002 "has start point")
ObjectPropertyDomain(obo:BSPO_0020002 obo:BSPO_0000010)
ObjectPropertyRange(obo:BSPO_0020002 obo:CARO_0000000)

# Object Property: obo:BSPO_0030003 (dorsalmost part of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "https://orcid.org/0000-0003-2699-3066") obo:IAO_0000115 obo:BSPO_0030003 "x dorsalmost_part_of y iff x part_of y and there is no z which is part_of y and is more dorsal than x but not part_of x; x is adjacent to the dorsal boundary of y")
AnnotationAssertion(terms:contributor obo:BSPO_0030003 <https://orcid.org/0000-0003-2699-3066>)
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0030003 "BSPO:0030003")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0030003 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0030003 "dorsalmost_part_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0030003 "dorsalmost_part_of")
AnnotationAssertion(rdfs:label obo:BSPO_0030003 "dorsalmost part of"@en)
SubObjectPropertyOf(obo:BSPO_0030003 obo:BSPO_0015101)

# Object Property: obo:BSPO_0030004 (anteriormost part of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "https://orcid.org/0000-0003-2699-3066") obo:IAO_0000115 obo:BSPO_0030004 "x anteriormost_part_of y iff x part_of y and there is no z which is part_of y and is more anterior than x but not part_of x; x is adjacent to the anterior boundary of y")
AnnotationAssertion(terms:contributor obo:BSPO_0030004 <https://orcid.org/0000-0003-2699-3066>)
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0030004 "BSPO:0030004")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0030004 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0030004 "anteriormost_part_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0030004 "anteriormost_part_of")
AnnotationAssertion(rdfs:label obo:BSPO_0030004 "anteriormost part of"@en)
SubObjectPropertyOf(obo:BSPO_0030004 obo:BSPO_0000123)

# Object Property: obo:BSPO_0030005 (lateralmost part of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "https://orcid.org/0000-0003-2699-3066") obo:IAO_0000115 obo:BSPO_0030005 "x lateralmost_part_of y iff x part_of y and there is no z which is part_of y and is more lateral than x but not part_of x; x is adjacent to the lateral boundary of y")
AnnotationAssertion(terms:contributor obo:BSPO_0030005 <https://orcid.org/0000-0003-2699-3066>)
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0030005 "BSPO:0030005")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0030005 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0030005 "lateralmost_part_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0030005 "lateralmost_part_of")
AnnotationAssertion(rdfs:label obo:BSPO_0030005 "lateralmost part of"@en)
SubObjectPropertyOf(obo:BSPO_0030005 obo:BSPO_0000126)

# Object Property: obo:BSPO_0030006 (in medial side of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "https://orcid.org/0000-0003-2699-3066") obo:IAO_0000115 obo:BSPO_0030006 "X medial side of Y <=> if Y is subdivided into two medial and lateral portions, X is part of the medial portion.")
AnnotationAssertion(terms:contributor obo:BSPO_0030006 <https://orcid.org/0000-0003-2699-3066>)
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0030006 "BSPO:0030006")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0030006 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0030006 "in_medial_side_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0030006 "in_medial_side_of")
AnnotationAssertion(rdfs:label obo:BSPO_0030006 "in medial side of"@en)
SubObjectPropertyOf(obo:BSPO_0030006 obo:BFO_0000050)

# Object Property: obo:BSPO_0030007 (medialmost part of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "https://orcid.org/0000-0003-2699-3066") obo:IAO_0000115 obo:BSPO_0030007 "x medialmost_part_of y iff x part_of y and there is no z which is part_of y and is more medial than x but not part_of x; x is adjacent to the medial boundary of y")
AnnotationAssertion(terms:contributor obo:BSPO_0030007 <https://orcid.org/0000-0003-2699-3066>)
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0030007 "BSPO:0030007")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0030007 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0030007 "medialmost_part_of")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_0030007 "medialmost_part_of")
AnnotationAssertion(rdfs:label obo:BSPO_0030007 "medialmost part of"@en)
SubObjectPropertyOf(obo:BSPO_0030007 obo:BSPO_0030006)

# Object Property: obo:BSPO_1000000 (preaxial to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "http://medical-dictionary.thefreedictionary.com/preaxial") obo:IAO_0000115 obo:BSPO_1000000 "x preaxial to y iff x is further along the preaxial-postaxial axis than y, towards the front.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_1000000 "BSPO:1000000")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_1000000 "spatial")
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "MA:th") oboInOwl:hasRelatedSynonym obo:BSPO_1000000 "anterior to (developmentally)")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_1000000 "lateral (radial) to")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_1000000 "medial (tibial) to")
AnnotationAssertion(oboInOwl:id obo:BSPO_1000000 "preaxial_to")
AnnotationAssertion(oboInOwl:shorthand obo:BSPO_1000000 "preaxial_to")
AnnotationAssertion(rdfs:label obo:BSPO_1000000 "preaxial to")
TransitiveObjectProperty(obo:BSPO_1000000)

# Object Property: obo:RO_0000052 (characteristic of)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000052 "inheres in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000052 "this fragility is a characteristic of this vase"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000052 "this red color is a characteristic of this apple"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000052 "a relation between a specifically dependent continuant (the characteristic) and any other entity (the bearer), in which the characteristic depends on the bearer for its existence."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000052 "inheres_in"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000052 obo:RO_0001901)
AnnotationAssertion(rdfs:comment obo:RO_0000052 "Note that this relation was previously called \"inheres in\", but was changed to be called \"characteristic of\" because BFO2 uses \"inheres in\" in a more restricted fashion. This relation differs from BFO2:inheres_in in two respects: (1) it does not impose a range constraint, and thus it allows qualities of processes, as well as of information entities, whereas BFO2 restricts inheres_in to only apply to independent continuants (2) it is declared functional, i.e. something can only be a characteristic of one thing.")
AnnotationAssertion(rdfs:label obo:RO_0000052 "characteristic of"@en)
SubObjectPropertyOf(obo:RO_0000052 obo:RO_0002314)
InverseObjectProperties(obo:RO_0000052 obo:RO_0000053)
FunctionalObjectProperty(obo:RO_0000052)

# Object Property: obo:RO_0000053 (has characteristic)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000053 "bearer of"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000053 "this apple is bearer of this red color"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000053 "this vase is bearer of this fragility"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000053 "Inverse of characteristic_of"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000053 "A bearer can have many dependents, and its dependents can exist for different periods of time, but none of its dependents can exist when the bearer does not exist."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "bearer_of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "is bearer of"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000053 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0000053 "has characteristic"@en)
InverseFunctionalObjectProperty(obo:RO_0000053)
ObjectPropertyRange(obo:RO_0000053 obo:BFO_0000020)

# Object Property: obo:RO_0000056 (participates in)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000056 "participates in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this blood clot participates in this blood coagulation"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this input material (or this output material) participates in this process"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this investigator participates in this investigation"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000056 "a relation between a continuant and a process, in which the continuant is somehow involved in the process"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000056 "participates_in"@en)
AnnotationAssertion(rdfs:label obo:RO_0000056 "participates in"@en)
InverseObjectProperties(obo:RO_0000056 obo:RO_0000057)
ObjectPropertyDomain(obo:RO_0000056 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0000056 obo:BFO_0000003)

# Object Property: obo:RO_0000057 (has participant)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000057 "has participant"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this blood coagulation has participant this blood clot"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this investigation has participant this investigator"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this process has participant this input material (or this output material)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000057 "a relation between a process and a continuant, in which the continuant is somehow involved in the process"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000057 "Has_participant is a primitive instance-level relation between a process, a continuant, and a time at which the continuant participates in some way in the process. The relation obtains, for example, when this particular process of oxygen exchange across this particular alveolar membrane has_participant this particular sample of hemoglobin at this particular time."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000057 "has_participant"@en)
AnnotationAssertion(dc:source obo:RO_0000057 "http://www.obofoundry.org/ro/#OBO_REL:has_participant")
AnnotationAssertion(rdfs:label obo:RO_0000057 "has participant"@en)
ObjectPropertyDomain(obo:RO_0000057 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0000057 obo:BFO_0000002)

# Object Property: obo:RO_0000079 (function of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000079 "this catalysis function is a function of this enzyme"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000079 "a relation between a function and an independent continuant (the bearer), in which the function specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000079 "A function inheres in its bearer at all times for which the function exists, however the function need not be realized at all the times that the function exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000079 "function_of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000079 "is function of"@en)
AnnotationAssertion(rdfs:comment obo:RO_0000079 "This relation is modeled after the BFO relation of the same name which was in BFO2, but is used in a more restricted sense - specifically, we model this relation as functional (inherited from characteristic-of). Note that this relation is now removed from BFO2020.")
AnnotationAssertion(rdfs:label obo:RO_0000079 "function of"@en)
SubObjectPropertyOf(obo:RO_0000079 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000079 obo:RO_0000085)
ObjectPropertyDomain(obo:RO_0000079 obo:BFO_0000034)

# Object Property: obo:RO_0000080 (quality of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000080 "this red color is a quality of this apple"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000080 "a relation between a quality and an independent continuant (the bearer), in which the quality specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000080 "A quality inheres in its bearer at all times for which the quality exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000080 "is quality of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000080 "quality_of"@en)
AnnotationAssertion(rdfs:comment obo:RO_0000080 "This relation is modeled after the BFO relation of the same name which was in BFO2, but is used in a more restricted sense - specifically, we model this relation as functional (inherited from characteristic-of). Note that this relation is now removed from BFO2020.")
AnnotationAssertion(rdfs:label obo:RO_0000080 "quality of"@en)
SubObjectPropertyOf(obo:RO_0000080 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000080 obo:RO_0000086)

# Object Property: obo:RO_0000081 (role of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000081 "this investigator role is a role of this person"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000081 "a relation between a role and an independent continuant (the bearer), in which the role specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000081 "A role inheres in its bearer at all times for which the role exists, however the role need not be realized at all the times that the role exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000081 "is role of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000081 "role_of"@en)
AnnotationAssertion(rdfs:comment obo:RO_0000081 "This relation is modeled after the BFO relation of the same name which was in BFO2, but is used in a more restricted sense - specifically, we model this relation as functional (inherited from characteristic-of). Note that this relation is now removed from BFO2020.")
AnnotationAssertion(rdfs:label obo:RO_0000081 "role of"@en)
SubObjectPropertyOf(obo:RO_0000081 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000081 obo:RO_0000087)

# Object Property: obo:RO_0000085 (has function)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000085 "this enzyme has function this catalysis function (more colloquially: this enzyme has this catalysis function)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000085 "a relation between an independent continuant (the bearer) and a function, in which the function specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000085 "A bearer can have many functions, and its functions can exist for different periods of time, but none of its functions can exist when the bearer does not exist. A function need not be realized at all the times that the function exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000085 "has_function"@en)
AnnotationAssertion(rdfs:label obo:RO_0000085 "has function"@en)
SubObjectPropertyOf(obo:RO_0000085 obo:RO_0000053)
ObjectPropertyDomain(obo:RO_0000085 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000085 obo:BFO_0000034)

# Object Property: obo:RO_0000086 (has quality)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000086 "this apple has quality this red color"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000086 "a relation between an independent continuant (the bearer) and a quality, in which the quality specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000086 "A bearer can have many qualities, and its qualities can exist for different periods of time, but none of its qualities can exist when the bearer does not exist."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000086 "has_quality"@en)
AnnotationAssertion(rdfs:label obo:RO_0000086 "has quality"@en)
SubObjectPropertyOf(obo:RO_0000086 obo:RO_0000053)
ObjectPropertyRange(obo:RO_0000086 obo:BFO_0000019)

# Object Property: obo:RO_0000087 (has role)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000087 "this person has role this investigator role (more colloquially: this person has this role of investigator)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000087 "a relation between an independent continuant (the bearer) and a role, in which the role specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000087 "A bearer can have many roles, and its roles can exist for different periods of time, but none of its roles can exist when the bearer does not exist. A role need not be realized at all the times that the role exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000087 "has_role"@en)
AnnotationAssertion(rdfs:label obo:RO_0000087 "has role"@en)
SubObjectPropertyOf(obo:RO_0000087 obo:RO_0000053)
ObjectPropertyDomain(obo:RO_0000087 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000087 obo:BFO_0000023)

# Object Property: obo:RO_0000091 (has disposition)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0000091 "a relation between an independent continuant (the bearer) and a disposition, in which the disposition specifically depends on the bearer for its existence"@en)
AnnotationAssertion(rdfs:label obo:RO_0000091 "has disposition"@en)
SubObjectPropertyOf(obo:RO_0000091 obo:RO_0000053)
InverseObjectProperties(obo:RO_0000091 obo:RO_0000092)
ObjectPropertyDomain(obo:RO_0000091 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000091 obo:BFO_0000016)

# Object Property: obo:RO_0000092 (disposition of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0000092 "inverse of has disposition")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0000092 obo:RO_0002259)
AnnotationAssertion(rdfs:comment obo:RO_0000092 "This relation is modeled after the BFO relation of the same name which was in BFO2, but is used in a more restricted sense - specifically, we model this relation as functional (inherited from characteristic-of). Note that this relation is now removed from BFO2020.")
AnnotationAssertion(rdfs:label obo:RO_0000092 "disposition of"@en)
SubObjectPropertyOf(obo:RO_0000092 obo:RO_0000052)

# Object Property: obo:RO_0002013 (has regulatory component activity)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002013 "A 'has regulatory component activity' B if A and B are GO molecular functions (GO_0003674), A has_component B and A is regulated by B.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002013 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002013 "2017-05-24T09:30:46Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002013 "has regulatory component activity")
SubObjectPropertyOf(obo:RO_0002013 obo:RO_0002017)
SubObjectPropertyOf(obo:RO_0002013 obo:RO_0002334)

# Object Property: obo:RO_0002014 (has negative regulatory component activity)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002014 "A relationship that holds between a GO molecular function and a component of that molecular function that negatively regulates the activity of the whole.  More formally, A 'has regulatory component activity' B iff :A and B are GO molecular functions (GO_0003674), A has_component B and A is negatively regulated by B.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002014 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002014 "2017-05-24T09:31:01Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment obo:RO_0002014 "By convention GO molecular functions are classified by their effector function.  Internal regulatory functions are treated as components.  For example, NMDA glutmate receptor activity is a cation channel activity with positive regulatory component 'glutamate binding' and negative regulatory components including 'zinc binding' and 'magnesium binding'.")
AnnotationAssertion(rdfs:label obo:RO_0002014 "has negative regulatory component activity")
SubObjectPropertyOf(obo:RO_0002014 obo:RO_0002013)
SubObjectPropertyOf(obo:RO_0002014 obo:RO_0002335)

# Object Property: obo:RO_0002015 (has positive regulatory component activity)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002015 "A relationship that holds between a GO molecular function and a component of that molecular function that positively regulates the activity of the whole.  More formally, A 'has regulatory component activity' B iff :A and B are GO molecular functions (GO_0003674), A has_component B and A is positively regulated by B.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002015 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002015 "2017-05-24T09:31:17Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment obo:RO_0002015 "By convention GO molecular functions are classified by their effector function and internal regulatory functions are treated as components.  So, for example calmodulin has a protein binding activity that has positive regulatory component activity calcium binding activity. Receptor tyrosine kinase activity is a tyrosine kinase activity that has positive regulatory component 'ligand binding'.")
AnnotationAssertion(rdfs:label obo:RO_0002015 "has positive regulatory component activity")
SubObjectPropertyOf(obo:RO_0002015 obo:RO_0002013)
SubObjectPropertyOf(obo:RO_0002015 obo:RO_0002336)

# Object Property: obo:RO_0002017 (has component activity)

AnnotationAssertion(oboInOwl:created_by obo:RO_0002017 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002017 "2017-05-24T09:44:33Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment obo:RO_0002017 "A 'has component activity' B if A is A and B are molecular functions (GO_0003674) and A has_component B.")
AnnotationAssertion(rdfs:label obo:RO_0002017 "has component activity")
SubObjectPropertyOf(obo:RO_0002017 obo:RO_0002018)

# Object Property: obo:RO_0002018 (has component process)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002018 "w 'has process component' p if p and w are processes,  w 'has part' p and w is such that it can be directly disassembled into into n parts p, p2, p3, ..., pn, where these parts are of similar type.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002018 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002018 "2017-05-24T09:49:21Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002018 "has component process")
SubObjectPropertyOf(obo:RO_0002018 obo:RO_0002180)
ObjectPropertyDomain(obo:RO_0002018 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002018 obo:BFO_0000015)

# Object Property: obo:RO_0002022 (directly regulated by)

AnnotationAssertion(oboInOwl:created_by obo:RO_0002022 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002022 "2017-09-17T13:52:24Z"^^xsd:dateTime)
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") rdfs:comment obo:RO_0002022 "Process(P2) is directly regulated by process(P1) iff: P1 regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding  regulates the kinase activity (P2) of protein B then P1 directly regulates P2.")
AnnotationAssertion(rdfs:label obo:RO_0002022 "directly regulated by")
SubObjectPropertyOf(obo:RO_0002022 obo:RO_0002334)
InverseObjectProperties(obo:RO_0002022 obo:RO_0002578)

# Object Property: obo:RO_0002023 (directly negatively regulated by)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") obo:IAO_0000115 obo:RO_0002023 "Process(P2) is directly negatively regulated by process(P1) iff: P1 negatively regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding  negatively regulates the kinase activity (P2) of protein B then P2 directly negatively regulated by P1.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002023 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002023 "2017-09-17T13:52:38Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002023 "directly negatively regulated by")
SubObjectPropertyOf(obo:RO_0002023 obo:RO_0002022)
InverseObjectProperties(obo:RO_0002023 obo:RO_0002630)

# Object Property: obo:RO_0002024 (directly positively regulated by)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") obo:IAO_0000115 obo:RO_0002024 "Process(P2) is directly postively regulated by process(P1) iff: P1 positively regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding positively regulates the kinase activity (P2) of protein B then P2 is directly postively regulated by P1.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002024 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002024 "2017-09-17T13:52:47Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002024 "directly positively regulated by")
SubObjectPropertyOf(obo:RO_0002024 obo:RO_0002022)
InverseObjectProperties(obo:RO_0002024 obo:RO_0002629)

# Object Property: obo:RO_0002025 (has effector activity)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") obo:IAO_0000115 obo:RO_0002025 "A 'has effector activity' B if A and B are GO molecular functions (GO_0003674),  A 'has component activity' B and B is the effector (output function) of B.  Each compound function has only one effector activity.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002025 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002025 "2017-09-22T14:14:36Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment obo:RO_0002025 "This relation is designed for constructing compound molecular functions, typically in combination with one or more regulatory component activity relations.")
AnnotationAssertion(rdfs:label obo:RO_0002025 "has effector activity")
SubObjectPropertyOf(obo:RO_0002025 obo:RO_0002017)
FunctionalObjectProperty(obo:RO_0002025)

# Object Property: obo:RO_0002086 (ends after)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002086 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002086 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002086 "X ends_after Y iff: end(Y) before_or_simultaneous_with end(X)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002086 "ends after"@en)
SubObjectPropertyOf(obo:RO_0002086 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002086)

# Object Property: obo:RO_0002087 (immediately preceded by)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002087 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002087 "starts_at_end_of")
AnnotationAssertion(rdfs:comment obo:RO_0002087 "X immediately_preceded_by Y iff: end(X) simultaneous_with start(Y)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002087 "immediately preceded by"@en)
SubObjectPropertyOf(obo:RO_0002087 obo:BFO_0000062)
InverseObjectProperties(obo:RO_0002087 obo:RO_0002090)

# Object Property: obo:RO_0002090 (immediately precedes)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002090 <https://orcid.org/0000-0002-7073-9172>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002090 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002090 "ends_at_start_of")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002090 "meets")
AnnotationAssertion(obo:RO_0002575 obo:RO_0002090 obo:BFO_0000063)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002090 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002090 "X immediately_precedes_Y iff: end(X) simultaneous_with start(Y)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002090 "immediately precedes"@en)
SubObjectPropertyOf(obo:RO_0002090 obo:BFO_0000063)

# Object Property: obo:RO_0002131 (overlaps)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002131 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002131 "x overlaps y if and only if there exists some z such that x has part z and z part of y")
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:RO_0002131 "x overlaps y iff they have some part in common.")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002131 "http://purl.obolibrary.org/obo/BFO_0000051 some (http://purl.obolibrary.org/obo/BFO_0000050 some ?Y)")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002131 obo:RO_0001901)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_0002131 "RO:0002131")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:RO_0002131 "spatial")
AnnotationAssertion(oboInOwl:id obo:RO_0002131 "overlaps")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002131 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002131 obo:valid_for_gocam)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002131 subsets:ro-eco)
AnnotationAssertion(oboInOwl:shorthand obo:RO_0002131 "overlaps")
AnnotationAssertion(rdfs:comment obo:RO_0002131 "\"(forall (x y) (iff (overlaps x y) (exists (z) (and (part of z x) (part of z y)))))\" CLIF []")
AnnotationAssertion(rdfs:label obo:RO_0002131 "overlaps")
AnnotationAssertion(rdfs:label obo:RO_0002131 "overlaps"@en)
SubObjectPropertyOf(obo:RO_0002131 obo:RO_0002323)
SymmetricObjectProperty(obo:RO_0002131)

# Object Property: obo:RO_0002163 (spatially disjoint from)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002163 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002163 "A is spatially_disjoint_from B if and only if they have no parts in common")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002163 "There are two ways to encode this as a shortcut relation. The other possibility to use an annotation assertion between two classes, and expand this to a disjointness axiom. "@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002163 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002163 <http://www.ncbi.nlm.nih.gov/pubmed/22293552>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002163 "Note that it would be possible to use the relation to label the relationship between a near infinite number of structures - between the rings of saturn and my left earlobe. The intent is that this is used for parsiomoniously for disambiguation purposes - for example, between siblings in a jointly exhaustive pairwise disjointness hierarchy")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002163 "BFO_0000051 exactly 0 (BFO_0000050 some ?Y)")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002163 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002163 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002163 "spatially disjoint from")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002163 "https://github.com/obophenotype/uberon/wiki/Part-disjointness-Design-Pattern"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002163 obo:RO_0002323)

# Object Property: obo:RO_0002180 (has component)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002180 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002180 "w 'has component' p if w 'has part' p and w is such that it can be directly disassembled into into n parts p, p2, p3, ..., pn, where these parts are of similar type.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002180 "The definition of 'has component' is still under discussion. The challenge is in providing a definition that does not imply transitivity.")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002180 "For use in recording has_part with a cardinality constraint, because OWL does not permit cardinality constraints to be used in combination with transitive object properties. In situations where you would want to say something like 'has part exactly 5 digit, you would instead use has_component exactly 5 digit."@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002180 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002180 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002180 "has component"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002180 <http://ontologydesignpatterns.org/wiki/Submissions:Componency>)
SubObjectPropertyOf(obo:RO_0002180 obo:BFO_0000051)

# Object Property: obo:RO_0002211 (regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002211 "p regulates q iff p is causally upstream of q, the execution of p is not constant and varies according to specific conditions, and p influences the rate or magnitude of execution of q due to an effect either on some enabler of q or some enabler of a part of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002211 <https://orcid.org/0000-0001-7476-6306>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002211 <https://orcid.org/0000-0002-3837-8864>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002211 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002211 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002211 "GO")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002211 "Regulation precludes parthood; the regulatory process may not be within the regulated process.")
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002211 "regulates (processual)")
AnnotationAssertion(obo:IAO_0000600 obo:RO_0002211 "false"^^xsd:boolean)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002211 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002211 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002211 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002211 "regulates"@en)
SubObjectPropertyOf(obo:RO_0002211 obo:RO_0002411)
InverseObjectProperties(obo:RO_0002211 obo:RO_0002334)
TransitiveObjectProperty(obo:RO_0002211)
ObjectPropertyDomain(obo:RO_0002211 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002211 obo:BFO_0000015)

# Object Property: obo:RO_0002212 (negatively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002212 "p negatively regulates q iff p regulates q, and p decreases the rate or magnitude of execution of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002212 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002212 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002212 "negatively regulates (process to process)")
AnnotationAssertion(obo:RO_0004050 obo:RO_0002212 obo:RO_0002211)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002212 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002212 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002212 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002212 "negatively regulates"@en)
SubObjectPropertyOf(obo:RO_0002212 obo:RO_0002211)
SubObjectPropertyOf(obo:RO_0002212 obo:RO_0002305)
InverseObjectProperties(obo:RO_0002212 obo:RO_0002335)

# Object Property: obo:RO_0002213 (positively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002213 "p positively regulates q iff p regulates q, and p increases the rate or magnitude of execution of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002213 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002213 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002213 "positively regulates (process to process)")
AnnotationAssertion(obo:RO_0004049 obo:RO_0002213 obo:RO_0002211)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002213 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002213 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002213 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002213 "positively regulates"@en)
SubObjectPropertyOf(obo:RO_0002213 obo:RO_0002211)
SubObjectPropertyOf(obo:RO_0002213 obo:RO_0002304)
InverseObjectProperties(obo:RO_0002213 obo:RO_0002336)
TransitiveObjectProperty(obo:RO_0002213)

# Object Property: obo:RO_0002215 (capable of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002215 "mechanosensory neuron capable of detection of mechanical stimulus involved in sensory perception (GO:0050974)")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002215 "osteoclast SubClassOf 'capable of' some 'bone resorption'")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002215 "A relation between a material entity (such as a cell) and a process, in which the material entity has the ability to carry out the process. ")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002215 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002215 "has function realized in")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002215 <http://www.ncbi.nlm.nih.gov/pubmed/20123131>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002215 <http://www.ncbi.nlm.nih.gov/pubmed/21208450>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002215 "For compatibility with BFO, this relation has a shortcut definition in which the expression \"capable of some P\" expands to \"bearer_of (some realized_by only P)\".")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002215 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002215 "capable of"@en)
SubObjectPropertyOf(obo:RO_0002215 obo:RO_0002216)
ObjectPropertyDomain(obo:RO_0002215 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0002215 obo:BFO_0000015)

# Object Property: obo:RO_0002216 (capable of part of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002216 "c stands in this relationship to p if and only if there exists some p' such that c is capable_of p', and p' is part_of p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002216 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002216 "has function in")
AnnotationAssertion(rdfs:label obo:RO_0002216 "capable of part of"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002216 <http://purl.obolibrary.org/obo/ro/docs/reflexivity/>)
SubObjectPropertyOf(obo:RO_0002216 obo:RO_0002328)
SubObjectPropertyOf(obo:RO_0002216 obo:RO_0002500)

# Object Property: obo:RO_0002220 (adjacent to)

AnnotationAssertion(Annotation(rdfs:seeAlso <https://github.com/jhpoelen/eol-globi-data/issues/225#issuecomment-218584934>) obo:IAO_0000112 obo:RO_0002220 "A caterpillar walking on the surface of a leaf is adjacent_to the leaf, if one of the caterpillar appendages is touching the leaf. In contrast, a butterfly flying close to a flower is not considered adjacent, unless there are any touching parts.")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002220 "The epidermis layer of a vertebrate is adjacent to the dermis.")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002220 "The plasma membrane of a cell is adjacent to the cytoplasm, and also to the cell lumen which the cytoplasm occupies.")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002220 "The skin of the forelimb is adjacent to the skin of the torso if these are considered anatomical subdivisions with a defined border. Otherwise a relation such as continuous_with would be used.")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002220 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002220 "x adjacent to y if and only if x and y share a boundary.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002220 "This relation acts as a join point with BSPO")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002220 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002220 obo:RO_0001901)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_0002220 "RO:0002220")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:RO_0002220 "spatial")
AnnotationAssertion(oboInOwl:id obo:RO_0002220 "adjacent_to")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002220 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002220 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002220 obo:valid_for_gocam)
AnnotationAssertion(oboInOwl:shorthand obo:RO_0002220 "adjacent_to")
AnnotationAssertion(rdfs:label obo:RO_0002220 "adjacent to")
AnnotationAssertion(rdfs:label obo:RO_0002220 "adjacent to"@en)
SubObjectPropertyOf(obo:RO_0002220 obo:RO_0002163)
SymmetricObjectProperty(obo:RO_0002220)
ObjectPropertyDomain(obo:RO_0002220 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0002220 obo:BFO_0000004)

# Object Property: obo:RO_0002222 (temporally related to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002222 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002222 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002222 <https://en.wikipedia.org/wiki/Allen%27s_interval_algebra>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002222 "Do not use this relation directly. It is ended as a grouping for relations between occurrents involving the relative timing of their starts and ends.")
AnnotationAssertion(terms:source obo:RO_0002222 "https://docs.google.com/document/d/1kBv1ep_9g3sTR-SD3jqzFqhuwo9TPNF-l-9fUDbO6rM/edit?pli=1"^^xsd:anyURI)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002222 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002222 "A relation that holds between two occurrents. This is a grouping relation that collects together all the Allen relations.")
AnnotationAssertion(rdfs:label obo:RO_0002222 "temporally related to"@en)
ObjectPropertyDomain(obo:RO_0002222 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002222 obo:BFO_0000003)

# Object Property: obo:RO_0002233 (has input)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002233 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002233 "p has input c iff: p is a process, c is a material entity, c is a participant in p, c is present at the start of p, and the state of c is modified during p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002233 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002233 "consumes")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 obo:valid_for_gocam)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002233 "has input"@en)
SubObjectPropertyOf(obo:RO_0002233 obo:RO_0000057)
InverseObjectProperties(obo:RO_0002233 obo:RO_0002352)
ObjectPropertyDomain(obo:RO_0002233 obo:BFO_0000015)

# Object Property: obo:RO_0002263 (acts upstream of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002263 "A faulty traffic light (material entity) whose malfunctioning (a process) is causally upstream of a traffic collision (a process): the traffic light acts upstream of the collision.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002263 "c acts upstream of p if and only if c enables some f that is involved in p' and p' occurs chronologically before p, is not part of p, and affects the execution of p. c is a material entity and f, p, p' are processes.")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002263 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:label obo:RO_0002263 "acts upstream of")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002263 <http://wiki.geneontology.org/index.php/Acts_upstream_of>)
SubObjectPropertyOf(obo:RO_0002263 obo:RO_0002264)

# Object Property: obo:RO_0002264 (acts upstream of or within)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002264 "A gene product that has some activity, where that activity may be a part of a pathway or upstream of the pathway.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002264 "c acts upstream of or within p if c is enables f, and f is causally upstream of or within p. c is a material entity and p is an process.")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002264 "affects")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002264 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:label obo:RO_0002264 "acts upstream of or within")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002264 <http://wiki.geneontology.org/index.php/Acts_upstream_of_or_within>)
SubObjectPropertyOf(obo:RO_0002264 obo:RO_0002500)

# Object Property: obo:RO_0002304 (causally upstream of, positive effect)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002304 "p is causally upstream of, positive effect q iff p is casually upstream of q, and the execution of p is required for the execution of q.")
AnnotationAssertion(obo:RO_0004049 obo:RO_0002304 obo:RO_0002411)
AnnotationAssertion(terms:creator obo:RO_0002304 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002304 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002304 obo:valid_for_gocam)
AnnotationAssertion(rdfs:comment obo:RO_0002304 "holds between x and y if and only if x is causally upstream of y and the progression of x increases the frequency, rate or extent of y")
AnnotationAssertion(rdfs:label obo:RO_0002304 "causally upstream of, positive effect")
SubObjectPropertyOf(obo:RO_0002304 obo:RO_0002411)
SubObjectPropertyOf(obo:RO_0002304 obo:RO_0004047)

# Object Property: obo:RO_0002305 (causally upstream of, negative effect)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002305 "p is causally upstream of, negative effect q iff p is casually upstream of q, and the execution of p decreases the execution of q.")
AnnotationAssertion(obo:RO_0004050 obo:RO_0002305 obo:RO_0002411)
AnnotationAssertion(terms:creator obo:RO_0002305 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002305 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002305 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002305 "causally upstream of, negative effect")
SubObjectPropertyOf(obo:RO_0002305 obo:RO_0002411)
SubObjectPropertyOf(obo:RO_0002305 obo:RO_0004046)

# Object Property: obo:RO_0002314 (characteristic of part of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002314 "q characteristic of part of w if and only if there exists some p such that q inheres in p and p part of w.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002314 "Because part_of is transitive, inheres in is a sub-relation of characteristic of part of")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002314 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002314 "inheres in part of")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002314 <http://www.ncbi.nlm.nih.gov/pubmed/20064205>)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002314 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002314 "characteristic of part of"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002314 <http://purl.obolibrary.org/obo/ro/docs/reflexivity/>)
SubObjectPropertyOf(obo:RO_0002314 obo:RO_0002502)

# Object Property: obo:RO_0002323 (mereotopologically related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002323 "A mereological relationship or a topological relationship")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002323 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002323 "Do not use this relation directly. It is ended as a grouping for a diverse set of relations, all involving parthood or connectivity relationships")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002323 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002323 "mereotopologically related to"@en)

# Object Property: obo:RO_0002327 (enables)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002327 "a particular instances of akt-2 enables some instance of protein kinase activity")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002327 "c enables p iff c is capable of p and c acts to execute p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002327 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "catalyzes")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "executes")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "has")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "is catalyzing")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "is executing")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002327 "This relation differs from the parent relation 'capable of' in that the parent is weaker and only expresses a capability that may not be actually realized, whereas this relation is always realized.")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002327 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:label obo:RO_0002327 "enables"@en)
SubObjectPropertyOf(obo:RO_0002327 obo:RO_0002215)
InverseObjectProperties(obo:RO_0002327 obo:RO_0002333)

# Object Property: obo:RO_0002328 (functionally related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002328 "A grouping relationship for any relationship directly involving a function, or that holds because of a function of one of the related entities.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002328 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002328 "This is a grouping relation that collects relations used for the purpose of connecting structure and function")
AnnotationAssertion(rdfs:label obo:RO_0002328 "functionally related to"@en)

# Object Property: obo:RO_0002329 (part of structure that is capable of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002329 "this relation holds between c and p when c is part of some c', and c' is capable of p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002329 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002329 "false"^^xsd:boolean)
AnnotationAssertion(rdfs:label obo:RO_0002329 "part of structure that is capable of"@en)
SubObjectPropertyOf(obo:RO_0002329 obo:RO_0002328)

# Object Property: obo:RO_0002331 (involved in)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002331 "c involved_in p if and only if c enables some process p', and p' is part of p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002331 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002331 "actively involved in")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002331 "enables part of")
AnnotationAssertion(rdfs:label obo:RO_0002331 "involved in"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002331 <http://wiki.geneontology.org/index.php/Involved_in>)
SubObjectPropertyOf(obo:RO_0002331 obo:RO_0000056)
SubObjectPropertyOf(obo:RO_0002331 obo:RO_0002431)

# Object Property: obo:RO_0002333 (enabled by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002333 "inverse of enables")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002333 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002333 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002333 "enabled by"@en)
SubObjectPropertyOf(obo:RO_0002333 obo:RO_0000057)
SubObjectPropertyOf(obo:RO_0002333 obo:RO_0002328)

# Object Property: obo:RO_0002334 (regulated by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002334 "inverse of regulates")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002334 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002334 "regulated by (processual)")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002334 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002334 "regulated by"@en)
SubObjectPropertyOf(obo:RO_0002334 obo:RO_0002427)
TransitiveObjectProperty(obo:RO_0002334)
ObjectPropertyDomain(obo:RO_0002334 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002334 obo:BFO_0000015)

# Object Property: obo:RO_0002335 (negatively regulated by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002335 "inverse of negatively regulates")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002335 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002335 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002335 "negatively regulated by"@en)
SubObjectPropertyOf(obo:RO_0002335 obo:RO_0002334)

# Object Property: obo:RO_0002336 (positively regulated by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002336 "inverse of positively regulates")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002336 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002336 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002336 "positively regulated by"@en)
SubObjectPropertyOf(obo:RO_0002336 obo:RO_0002334)

# Object Property: obo:RO_0002352 (input of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002352 "inverse of has input")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002352 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002352 obo:RO_0002259)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002352 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002352 "input of"@en)
SubObjectPropertyOf(obo:RO_0002352 obo:RO_0000056)
SubObjectPropertyOf(obo:RO_0002352 obo:RO_0002328)

# Object Property: obo:RO_0002404 (causally downstream of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002404 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002404 "inverse of upstream of")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002404 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002404 "causally downstream of"@en)
SubObjectPropertyOf(obo:RO_0002404 obo:BFO_0000062)
SubObjectPropertyOf(obo:RO_0002404 obo:RO_0002427)
InverseObjectProperties(obo:RO_0002404 obo:RO_0002411)

# Object Property: obo:RO_0002405 (immediately causally downstream of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002405 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002405 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002405 "immediately causally downstream of"@en)
SubObjectPropertyOf(obo:RO_0002405 obo:RO_0002087)
SubObjectPropertyOf(obo:RO_0002405 obo:RO_0002404)
InverseObjectProperties(obo:RO_0002405 obo:RO_0002412)

# Object Property: obo:RO_0002407 (indirectly positively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002407 "p indirectly positively regulates q iff p is indirectly causally upstream of q and p positively regulates q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002407 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002407 "indirectly activates")
AnnotationAssertion(obo:RO_0002579 obo:RO_0002407 obo:RO_0002213)
AnnotationAssertion(rdfs:label obo:RO_0002407 "indirectly positively regulates"@en)
SubObjectPropertyOf(obo:RO_0002407 obo:RO_0002213)
SubObjectPropertyOf(obo:RO_0002407 obo:RO_0012012)
TransitiveObjectProperty(obo:RO_0002407)

# Object Property: obo:RO_0002409 (indirectly negatively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002409 "p indirectly negatively regulates q iff p is indirectly causally upstream of q and p negatively regulates q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002409 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002409 "indirectly inhibits")
AnnotationAssertion(obo:RO_0002579 obo:RO_0002409 obo:RO_0002212)
AnnotationAssertion(rdfs:label obo:RO_0002409 "indirectly negatively regulates"@en)
SubObjectPropertyOf(obo:RO_0002409 obo:RO_0002212)
SubObjectPropertyOf(obo:RO_0002409 obo:RO_0012012)
TransitiveObjectProperty(obo:RO_0002409)

# Object Property: obo:RO_0002410 (causally related to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "https://en.wikipedia.org/wiki/Causality") obo:IAO_0000115 obo:RO_0002410 "relation that links two events, processes, states, or objects such that one event, process, state, or object (a cause) contributes to the production of another event, process, state, or object (an effect) where the cause is partly or wholly responsible for the effect, and the effect is partly or wholly dependent on the cause.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002410 "This branch of the ontology deals with causal relations between entities. It is divided into two branches: causal relations between occurrents/processes, and causal relations between material entities. We take an 'activity flow-centric approach', with the former as primary, and define causal relations between material entities in terms of causal relations between occurrents.

To define causal relations in an activity-flow type network, we make use of 3 primitives:

 * Temporal: how do the intervals of the two occurrents relate? 
 * Is the causal relation regulatory?
 * Is the influence positive or negative?

The first of these can be formalized in terms of the Allen Interval Algebra. Informally, the 3 bins we care about are 'direct', 'indirect' or overlapping. Note that all causal relations should be classified under a RO temporal relation (see the branch under 'temporally related to'). Note that all causal relations are temporal, but not all temporal relations are causal. Two occurrents can be related in time without being causally connected. We take causal influence to be primitive, elucidated as being such that has the upstream changed, some qualities of the donwstream would necessarily be modified.

For the second, we consider a relationship to be regulatory if the system in which the activities occur is capable of altering the relationship to achieve some objective. This could include changing the rate of production of a molecule.

For the third, we consider the effect of the upstream process on the output(s) of the downstream process. If the level of output is increased, or the rate of production of the output is increased, then the direction is increased. Direction can be positive, negative or neutral or capable of either direction. Two positives in succession yield a positive, two negatives in succession yield a positive, otherwise the default assumption is that the net effect is canceled and the influence is neutral.

Each of these 3 primitives can be composed to yield a cross-product of different relation types.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002410 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002410 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(rdfs:label obo:RO_0002410 "causally related to"@en)

# Object Property: obo:RO_0002411 (causally upstream of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002411 "p is causally upstream of q iff p is causally related to q, the end of p precedes the end of q, and p is not an occurrent part of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002411 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002411 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002411 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002411 "causally upstream of"@en)
SubObjectPropertyOf(obo:RO_0002411 obo:BFO_0000063)
SubObjectPropertyOf(obo:RO_0002411 obo:RO_0002418)
TransitiveObjectProperty(obo:RO_0002411)

# Object Property: obo:RO_0002412 (immediately causally upstream of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002412 "p is immediately causally upstream of q iff p is causally upstream of q, and the end of p is coincident with the beginning of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002412 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:RO_0002575 obo:RO_0002412 obo:RO_0002411)
AnnotationAssertion(rdfs:label obo:RO_0002412 "immediately causally upstream of"@en)
SubObjectPropertyOf(obo:RO_0002412 obo:RO_0002090)
SubObjectPropertyOf(obo:RO_0002412 obo:RO_0002411)

# Object Property: obo:RO_0002418 (causally upstream of or within)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002418 "p is 'causally upstream or within' q iff p is causally related to q, and the end of p precedes, or is coincident with, the end of q.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002418 "We would like to make this disjoint with 'preceded by', but this is prohibited in OWL2")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002418 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002418 "influences (processual)")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002418 "affects")
AnnotationAssertion(rdfs:label obo:RO_0002418 "causally upstream of or within")
SubObjectPropertyOf(obo:RO_0002418 obo:RO_0002501)
InverseObjectProperties(obo:RO_0002418 obo:RO_0002427)
TransitiveObjectProperty(obo:RO_0002418)

# Object Property: obo:RO_0002427 (causally downstream of or within)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002427 "inverse of causally upstream of or within")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002427 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002427 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002427 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002427 "causally downstream of or within")
SubObjectPropertyOf(obo:RO_0002427 obo:RO_0002501)
TransitiveObjectProperty(obo:RO_0002427)

# Object Property: obo:RO_0002428 (involved in regulation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002428 "c involved in regulation of p if c is involved in some p' and p' regulates some p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002428 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002428 "involved in regulation of")
SubObjectPropertyOf(obo:RO_0002428 obo:RO_0002263)
SubObjectPropertyOf(obo:RO_0002428 obo:RO_0002431)

# Object Property: obo:RO_0002429 (involved in positive regulation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002429 "c involved in regulation of p if c is involved in some p' and p' positively regulates some p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002429 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:RO_0004049 obo:RO_0002429 obo:RO_0002428)
AnnotationAssertion(rdfs:label obo:RO_0002429 "involved in positive regulation of")
SubObjectPropertyOf(obo:RO_0002429 obo:RO_0002428)

# Object Property: obo:RO_0002430 (involved in negative regulation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002430 "c involved in regulation of p if c is involved in some p' and p' negatively regulates some p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002430 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:RO_0004050 obo:RO_0002430 obo:RO_0002428)
AnnotationAssertion(rdfs:label obo:RO_0002430 "involved in negative regulation of")
SubObjectPropertyOf(obo:RO_0002430 obo:RO_0002428)

# Object Property: obo:RO_0002431 (involved in or involved in regulation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002431 "c involved in or regulates p if and only if either (i) c is involved in p or (ii) c is involved in regulation of p")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002431 "OWL does not allow defining object properties via a Union")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002431 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002431 "involved in or reguates")
AnnotationAssertion(rdfs:label obo:RO_0002431 "involved in or involved in regulation of")
SubObjectPropertyOf(obo:RO_0002431 obo:RO_0002264)
SubObjectPropertyOf(obo:RO_0002431 obo:RO_0002328)
SubObjectPropertyOf(obo:RO_0002431 obo:RO_0002500)

# Object Property: obo:RO_0002434 (interacts with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002434 "A relationship that holds between two entities in which the processes executed by the two entities are causally connected.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002434 "This relation and all sub-relations can be applied to either (1) pairs of entities that are interacting at any moment of time (2) populations or species of entity whose members have the disposition to interact (3) classes whose members have the disposition to interact.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002434 "Considering relabeling as 'pairwise interacts with'"^^xsd:anyURI)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002434 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002434 "Note that this relationship type, and sub-relationship types may be redundant with process terms from other ontologies. For example, the symbiotic relationship hierarchy parallels GO. The relations are provided as a convenient shortcut. Consider using the more expressive processual form to capture your data. In the future, these relations will be linked to their cognate processes through rules.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002434 "in pairwise interaction with")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002434 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002434 "interacts with")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002434 "http://purl.obolibrary.org/obo/ro/docs/interaction-relations/"^^xsd:anyURI)
AnnotationAssertion(skos:closeMatch obo:RO_0002434 "http://purl.obolibrary.org/obo/MI_0914"^^xsd:anyURI)
SymmetricObjectProperty(obo:RO_0002434)
ObjectPropertyDomain(obo:RO_0002434 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002434 obo:BFO_0000040)

# Object Property: obo:RO_0002436 (molecularly interacts with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002436 "An interaction relationship in which the two partners are molecular entities that directly physically interact with each other for example via a stable binding interaction or a brief interaction during which one modifies the other.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002436 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002436 "binds")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002436 "molecularly binds with")
AnnotationAssertion(rdfs:label obo:RO_0002436 "molecularly interacts with")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002436 obo:ECO_0000353)
AnnotationAssertion(skos:closeMatch obo:RO_0002436 "http://purl.obolibrary.org/obo/MI_0915"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002436 obo:RO_0002434)
SymmetricObjectProperty(obo:RO_0002436)

# Object Property: obo:RO_0002447 (phosphorylates)

AnnotationAssertion(obo:IAO_0000116 obo:RO_0002447 "Axiomatization to GO to be added later")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002447 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002447 "An interaction relation between x and y in which x catalyzes a reaction in which a phosphate group is added to y.")
AnnotationAssertion(rdfs:label obo:RO_0002447 "phosphorylates")
SubObjectPropertyOf(obo:RO_0002447 obo:RO_0002436)

# Object Property: obo:RO_0002448 (directly regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002448 "The entity A, immediately upstream of the entity B, has an activity that regulates an activity performed by B. For example, A and B may be gene products and binding of B by A regulates the kinase activity of B.

A and B can be physically interacting but not necessarily. Immediately upstream means there are no intermediate entity between A and B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002448 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002448 <https://orcid.org/0000-0003-4639-4431>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002448 "molecularly controls")
AnnotationAssertion(rdfs:label obo:RO_0002448 "directly regulates activity of")
SubObjectPropertyOf(obo:RO_0002448 obo:RO_0002436)
SubObjectPropertyOf(obo:RO_0002448 obo:RO_0011002)
ObjectPropertyDomain(obo:RO_0002448 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002448 obo:BFO_0000040)

# Object Property: obo:RO_0002449 (directly negatively regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002449 "The entity A, immediately upstream of the entity B, has an activity that negatively regulates an activity performed by B. 
For example, A and B may be gene products and binding of B by A negatively regulates the kinase activity of B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002449 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002449 <https://orcid.org/0000-0003-4639-4431>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002449 "directly inhibits")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002449 "molecularly decreases activity of")
AnnotationAssertion(rdfs:label obo:RO_0002449 "directly negatively regulates activity of")
SubObjectPropertyOf(obo:RO_0002449 obo:RO_0002448)
ObjectPropertyDomain(obo:RO_0002449 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002449 obo:BFO_0000040)

# Object Property: obo:RO_0002450 (directly positively regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002450 "The entity A, immediately upstream of the entity B, has an activity that positively regulates an activity performed by B. 
For example, A and B may be gene products and binding of B by A positively regulates the kinase activity of B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002450 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002450 <https://orcid.org/0000-0003-4639-4431>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002450 "directly activates")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002450 "molecularly increases activity of")
AnnotationAssertion(rdfs:label obo:RO_0002450 "directly positively regulates activity of")
SubObjectPropertyOf(obo:RO_0002450 obo:RO_0002448)
ObjectPropertyDomain(obo:RO_0002450 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002450 obo:BFO_0000040)

# Object Property: obo:RO_0002464 (helper property (not for use in curation))

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002464 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002464 "This property or its subproperties is not to be used directly. These properties exist as helper properties that are used to support OWL reasoning.")
AnnotationAssertion(rdfs:label obo:RO_0002464 "helper property (not for use in curation)")

# Object Property: obo:RO_0002481 (is kinase activity)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002481 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002481 "is kinase activity")
SubObjectPropertyOf(obo:RO_0002481 obo:RO_0002564)

# Object Property: obo:RO_0002500 (causal agent in process)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002500 "A relationship between a material entity and a process where the material entity has some causal role that influences the process")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002500 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002500 "causal agent in process")
SubObjectPropertyOf(obo:RO_0002500 obo:RO_0002595)
InverseObjectProperties(obo:RO_0002500 obo:RO_0002608)

# Object Property: obo:RO_0002501 (causal relation between processes)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002501 "p is causally related to q if and only if p or any part of p and q or any part of q are linked by a chain of events where each event pair is one where the execution of p influences the execution of q. p may be upstream, downstream, part of, or a container of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002501 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002501 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002501 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(rdfs:label obo:RO_0002501 "causal relation between processes")
SubObjectPropertyOf(obo:RO_0002501 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0002501 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002501 obo:BFO_0000003)

# Object Property: obo:RO_0002502 (depends on)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002502 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002502 "depends on")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002502 obo:BFO_0000169)

# Object Property: obo:RO_0002506 (causal relation between entities)

AnnotationAssertion(obo:IAO_0000116 obo:RO_0002506 "The intent is that the process branch of the causal property hierarchy is primary (causal relations hold between occurrents/processes), and that the material branch is defined in terms of the process branch")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002506 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002506 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002506 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(rdfs:label obo:RO_0002506 "causal relation between entities")
SubObjectPropertyOf(obo:RO_0002506 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0002506 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0002506 obo:BFO_0000002)

# Object Property: obo:RO_0002559 (causally influenced by)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002559 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002559 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002559 "causally influenced by (entity-centric)")
AnnotationAssertion(rdfs:label obo:RO_0002559 "causally influenced by")
SubObjectPropertyOf(obo:RO_0002559 obo:RO_0002506)
InverseObjectProperties(obo:RO_0002559 obo:RO_0002566)

# Object Property: obo:RO_0002563 (interaction relation helper property)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002563 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002563 "interaction relation helper property")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002563 <http://ontologydesignpatterns.org/wiki/Submissions:N-Ary_Relation_Pattern_%28OWL_2%29>)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002563 "http://purl.obolibrary.org/obo/ro/docs/interaction-relations/"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002563 obo:RO_0002464)

# Object Property: obo:RO_0002564 (molecular interaction relation helper property)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002564 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002564 "molecular interaction relation helper property")
SubObjectPropertyOf(obo:RO_0002564 obo:RO_0002563)

# Object Property: obo:RO_0002566 (causally influences)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002566 "The entity or characteristic A is causally upstream of the entity or characteristic B, A having an effect on B. An entity corresponds to any biological type of entity as long as a mass is measurable. A characteristic corresponds to a particular specificity of an entity (e.g., phenotype, shape, size).")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002566 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002566 <https://orcid.org/0000-0003-4639-4431>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002566 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002566 "causally influences (entity-centric)")
AnnotationAssertion(rdfs:label obo:RO_0002566 "causally influences")
SubObjectPropertyOf(obo:RO_0002566 obo:RO_0002506)
ObjectPropertyDomain(obo:RO_0002566 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0002566 obo:BFO_0000002)

# Object Property: obo:RO_0002578 (directly regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002578 "p directly regulates q iff p is immediately causally upstream of q and p regulates q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002578 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002578 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002578 "directly regulates (processual)")
AnnotationAssertion(obo:RO_0002575 obo:RO_0002578 obo:RO_0002211)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002578 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002578 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002578 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002578 "directly regulates")
SubObjectPropertyOf(obo:RO_0002578 obo:RO_0002211)
SubObjectPropertyOf(obo:RO_0002578 obo:RO_0002412)

# Object Property: obo:RO_0002584 (has part structure that is capable of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002584 "gland SubClassOf 'has part structure that is capable of' some 'secretion by cell'")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002584 "s 'has part structure that is capable of' p if and only if there exists some part x such that s 'has part' x and x 'capable of' p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002584 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002584 "has part structure that is capable of")
SubObjectPropertyOf(obo:RO_0002584 obo:RO_0002328)
SubObjectPropertyOf(obo:RO_0002584 obo:RO_0002595)

# Object Property: obo:RO_0002595 (causal relation between material entity and a process)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002595 "A relationship that holds between a material entity and a process in which causality is involved, with either the material entity or some part of the material entity exerting some influence over the process, or the process influencing some aspect of the material entity.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002595 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002595 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002595 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002595 "causal relation between material entity and a process")
SubObjectPropertyOf(obo:RO_0002595 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0002595 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002595 obo:BFO_0000015)

# Object Property: obo:RO_0002596 (capable of regulating)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002596 "pyrethroid -> growth")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002596 "Holds between c and p if and only if c is capable of some activity a, and a regulates p.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002596 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002596 "capable of regulating")
SubObjectPropertyOf(obo:RO_0002596 obo:RO_0002500)

# Object Property: obo:RO_0002597 (capable of negatively regulating)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002597 "Holds between c and p if and only if c is capable of some activity a, and a negatively regulates p.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002597 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002597 "capable of negatively regulating")
SubObjectPropertyOf(obo:RO_0002597 obo:RO_0002596)

# Object Property: obo:RO_0002598 (capable of positively regulating)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002598 "renin -> arteriolar smooth muscle contraction")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002598 "Holds between c and p if and only if c is capable of some activity a, and a positively regulates p.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002598 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002598 "capable of positively regulating")
SubObjectPropertyOf(obo:RO_0002598 obo:RO_0002596)

# Object Property: obo:RO_0002608 (process has causal agent)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002608 "Inverse of 'causal agent in process'")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002608 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002608 "process has causal agent")
SubObjectPropertyOf(obo:RO_0002608 obo:RO_0002410)

# Object Property: obo:RO_0002629 (directly positively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002629 "p directly positively regulates q iff p is immediately causally upstream of q, and p positively regulates q.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002629 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002629 "directly positively regulates (process to process)")
AnnotationAssertion(obo:RO_0004049 obo:RO_0002629 obo:RO_0002578)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002629 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002629 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002629 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002629 "directly positively regulates")
SubObjectPropertyOf(obo:RO_0002629 obo:RO_0002213)
SubObjectPropertyOf(obo:RO_0002629 obo:RO_0002578)

# Object Property: obo:RO_0002630 (directly negatively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002630 "p directly negatively regulates q iff p is immediately causally upstream of q, and p negatively regulates q.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002630 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002630 "directly negatively regulates (process to process)")
AnnotationAssertion(obo:RO_0004050 obo:RO_0002630 obo:RO_0002578)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002630 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002630 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002630 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002630 "directly negatively regulates")
SubObjectPropertyOf(obo:RO_0002630 obo:RO_0002212)
SubObjectPropertyOf(obo:RO_0002630 obo:RO_0002578)

# Object Property: obo:RO_0004031 (enables subfunction)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0004031 "Holds between an entity and an process P where the entity enables some larger compound process, and that larger process has-part P.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0004031 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004031 "2018-01-25T23:20:13Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0004031 "enables subfunction")
SubObjectPropertyOf(obo:RO_0004031 obo:RO_0002328)

# Object Property: obo:RO_0004032 (acts upstream of or within, positive effect)

AnnotationAssertion(obo:RO_0004049 obo:RO_0004032 obo:RO_0002264)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004032 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004032 "2018-01-26T23:49:30Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0004032 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:label obo:RO_0004032 "acts upstream of or within, positive effect")
AnnotationAssertion(rdfs:seeAlso obo:RO_0004032 <http://wiki.geneontology.org/index.php/Acts_upstream_of_or_within,_positive_effect>)
SubObjectPropertyOf(obo:RO_0004032 obo:RO_0002264)

# Object Property: obo:RO_0004033 (acts upstream of or within, negative effect)

AnnotationAssertion(obo:RO_0004050 obo:RO_0004033 obo:RO_0002264)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004033 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004033 "2018-01-26T23:49:51Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0004033 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:label obo:RO_0004033 "acts upstream of or within, negative effect")
SubObjectPropertyOf(obo:RO_0004033 obo:RO_0002264)

# Object Property: obo:RO_0004034 (acts upstream of, positive effect)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0004034 "c 'acts upstream of, positive effect' p if c is enables f, and f is causally upstream of p, and the direction of f is positive")
AnnotationAssertion(obo:RO_0004049 obo:RO_0004034 obo:RO_0002263)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004034 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004034 "2018-01-26T23:53:14Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0004034 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:label obo:RO_0004034 "acts upstream of, positive effect")
AnnotationAssertion(rdfs:seeAlso obo:RO_0004034 <http://wiki.geneontology.org/index.php/Acts_upstream_of,_positive_effect>)
SubObjectPropertyOf(obo:RO_0004034 obo:RO_0002263)
SubObjectPropertyOf(obo:RO_0004034 obo:RO_0004032)

# Object Property: obo:RO_0004035 (acts upstream of, negative effect)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0004035 "c 'acts upstream of, negative effect' p if c is enables f, and f is causally upstream of p, and the direction of f is negative")
AnnotationAssertion(obo:RO_0004050 obo:RO_0004035 obo:RO_0002263)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004035 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004035 "2018-01-26T23:53:22Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0004035 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:label obo:RO_0004035 "acts upstream of, negative effect")
AnnotationAssertion(rdfs:seeAlso obo:RO_0004035 <http://wiki.geneontology.org/index.php/Acts_upstream_of,_negative_effect>)
SubObjectPropertyOf(obo:RO_0004035 obo:RO_0002263)
SubObjectPropertyOf(obo:RO_0004035 obo:RO_0004033)

# Object Property: obo:RO_0004046 (causally upstream of or within, negative effect)

AnnotationAssertion(obo:RO_0004050 obo:RO_0004046 obo:RO_0002418)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004046 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004046 "2018-03-13T23:55:05Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0004046 "causally upstream of or within, negative effect")
SubObjectPropertyOf(obo:RO_0004046 obo:RO_0002418)

# Object Property: obo:RO_0004047 (causally upstream of or within, positive effect)

AnnotationAssertion(obo:RO_0004049 obo:RO_0004047 obo:RO_0002418)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004047 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004047 "2018-03-13T23:55:19Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0004047 "causally upstream of or within, positive effect")
SubObjectPropertyOf(obo:RO_0004047 obo:RO_0002418)

# Object Property: obo:RO_0011002 (regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0011002 "The entity A has an activity that regulates an activity of the entity B. For example, A and B are gene products where the catalytic activity of A regulates the kinase activity of B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0011002 <https://orcid.org/0000-0003-4639-4431>)
AnnotationAssertion(rdfs:label obo:RO_0011002 "regulates activity of")
SubObjectPropertyOf(obo:RO_0011002 obo:RO_0002566)
ObjectPropertyDomain(obo:RO_0011002 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0011002 obo:BFO_0000040)

# Object Property: obo:RO_0012011 (indirectly causally upstream of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0012011 "p is indirectly causally upstream of q iff p is causally upstream of q and there exists some process r such that p is causally upstream of r and r is causally upstream of q.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0012011 "pg")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0012011 "2022-09-26T06:07:17Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0012011 "indirectly causally upstream of"@en)
SubObjectPropertyOf(obo:RO_0012011 obo:RO_0002411)

# Object Property: obo:RO_0012012 (indirectly regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0012012 "p indirectly regulates q iff p is indirectly causally upstream of q and p regulates q.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0012012 "pg")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0012012 "2022-09-26T06:08:01Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0012012 "indirectly regulates"@en)
SubObjectPropertyOf(obo:RO_0012012 obo:RO_0002211)
SubObjectPropertyOf(obo:RO_0012012 obo:RO_0012011)

# Object Property: obo:RO_0017001 (device utilizes material)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0017001 "A diagnostic testing device utilizes a specimen.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0017001 "X device utilizes material Y means X and Y are material entities, and X is capable of some process P that has input Y.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0017001 <https://orcid.org/0000-0001-9625-1899>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0017001 <https://orcid.org/0000-0003-2620-0345>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0017001 "A diagnostic testing device utilizes a specimen means that the diagnostic testing device is capable of an assay, and this assay a specimen as its input.")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0017001 "See github ticket https://github.com/oborel/obo-relations/issues/497")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0017001 "2021-11-08T12:00:00Z")
AnnotationAssertion(oboInOwl:hasBroadSynonym obo:RO_0017001 "utilizes")
AnnotationAssertion(rdfs:label obo:RO_0017001 "device utilizes material"@en)

# Object Property: obo:RO_0019000 (regulates characteristic)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0019000 "A relationship that holds between a process and a characteristic in which process (P) regulates characteristic (C) iff: P results in the existence of C OR affects the intensity or magnitude of C.")
AnnotationAssertion(terms:contributor obo:RO_0019000 <https://orcid.org/0000-0002-8688-6599>)
AnnotationAssertion(rdfs:label obo:RO_0019000 "regulates characteristic")
SubObjectPropertyOf(obo:RO_0019000 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0019000 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0019000 obo:PATO_0000001)

# Object Property: obo:RO_0019001 (positively regulates characteristic)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0019001 "A relationship that holds between a process and a characteristic in which process (P) positively regulates characteristic (C) iff: P results in an increase in the intensity or magnitude of C.")
AnnotationAssertion(terms:contributor obo:RO_0019001 <https://orcid.org/0000-0002-8688-6599>)
AnnotationAssertion(rdfs:label obo:RO_0019001 "positively regulates characteristic")
SubObjectPropertyOf(obo:RO_0019001 obo:RO_0019000)

# Object Property: obo:RO_0019002 (negatively regulates characteristic)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0019002 "A relationship that holds between a process and a characteristic in which process (P) negatively regulates characteristic (C) iff: P results in a decrease in the intensity or magnitude of C.")
AnnotationAssertion(terms:contributor obo:RO_0019002 <https://orcid.org/0000-0002-8688-6599>)
AnnotationAssertion(rdfs:label obo:RO_0019002 "negatively regulates characteristic")
SubObjectPropertyOf(obo:RO_0019002 obo:RO_0019000)



############################
#   Classes
############################

# Class: obo:BFO_0000002 (continuant)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000002 "An entity that exists in full at any time in which it exists at all, persists through time while maintaining its identity and has no temporal parts."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000002 "continuant"@en)
SubClassOf(obo:BFO_0000002 ObjectAllValuesFrom(obo:BFO_0000050 obo:BFO_0000002))
DisjointClasses(obo:BFO_0000002 obo:BFO_0000003)
DisjointClasses(obo:BFO_0000002 ObjectSomeValuesFrom(obo:BFO_0000050 obo:BFO_0000003))

# Class: obo:BFO_0000003 (occurrent)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000003 "An entity that has temporal parts and that happens, unfolds or develops through time."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000003 "occurrent"@en)
SubClassOf(obo:BFO_0000003 ObjectAllValuesFrom(obo:BFO_0000050 obo:BFO_0000003))
DisjointClasses(obo:BFO_0000003 ObjectSomeValuesFrom(obo:BFO_0000050 obo:BFO_0000002))

# Class: obo:BFO_0000004 (independent continuant)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000004 "A continuant that is a bearer of quality and realizable entity entities, in which other entities inhere and which itself cannot inhere in anything."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000004 "independent continuant"@en)
SubClassOf(obo:BFO_0000004 obo:BFO_0000002)
SubClassOf(obo:BFO_0000004 ObjectAllValuesFrom(obo:BFO_0000050 obo:BFO_0000004))
DisjointClasses(obo:BFO_0000004 obo:BFO_0000020)

# Class: obo:BFO_0000015 (process)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000015 "An occurrent that has temporal proper parts and for some time t, p s-depends_on some material entity at t."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000015 "process"@en)
SubClassOf(obo:BFO_0000015 obo:BFO_0000003)

# Class: obo:BFO_0000016 (disposition)

AnnotationAssertion(rdfs:label obo:BFO_0000016 "disposition"@en)
SubClassOf(obo:BFO_0000016 obo:BFO_0000017)
DisjointClasses(obo:BFO_0000016 obo:BFO_0000023)

# Class: obo:BFO_0000017 (realizable entity)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000017 "A specifically dependent continuant  that inheres in continuant  entities and are not exhibited in full at every time in which it inheres in an entity or group of entities. The exhibition or actualization of a realizable entity is a particular manifestation, functioning or process that occurs under certain circumstances."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000017 "realizable entity"@en)
SubClassOf(obo:BFO_0000017 obo:BFO_0000020)
SubClassOf(obo:BFO_0000017 ObjectAllValuesFrom(obo:BFO_0000050 obo:BFO_0000017))
DisjointClasses(obo:BFO_0000017 obo:BFO_0000019)

# Class: obo:BFO_0000019 (quality)

AnnotationAssertion(rdfs:label obo:BFO_0000019 "quality"@en)
SubClassOf(obo:BFO_0000019 obo:BFO_0000020)
SubClassOf(obo:BFO_0000019 ObjectAllValuesFrom(obo:BFO_0000050 obo:BFO_0000019))

# Class: obo:BFO_0000020 (specifically dependent continuant)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000020 "A continuant that inheres in or is borne by other entities. Every instance of A requires some specific instance of B which must always be the same."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000020 "specifically dependent continuant"@en)
SubClassOf(obo:BFO_0000020 obo:BFO_0000002)
SubClassOf(obo:BFO_0000020 ObjectAllValuesFrom(obo:BFO_0000050 obo:BFO_0000020))

# Class: obo:BFO_0000023 (role)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000023 "A realizable entity  the manifestation of which brings about some result or end that is not essential to a continuant  in virtue of the kind of thing that it is but that can be served or participated in by that kind of continuant  in some kinds of natural, social or institutional contexts."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000023 "role"@en)
SubClassOf(obo:BFO_0000023 obo:BFO_0000017)

# Class: obo:BFO_0000034 (function)

AnnotationAssertion(rdfs:label obo:BFO_0000034 "function"@en)
SubClassOf(obo:BFO_0000034 obo:BFO_0000016)

# Class: obo:BFO_0000040 (material entity)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000040 "An independent continuant that is spatially extended whose identity is independent of that of other entities and can be maintained through time."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000040 "material entity"@en)
SubClassOf(obo:BFO_0000040 obo:BFO_0000004)
DisjointClasses(obo:BFO_0000040 obo:BFO_0000141)
DisjointClasses(obo:BFO_0000040 ObjectSomeValuesFrom(obo:BFO_0000050 obo:BFO_0000141))

# Class: obo:BFO_0000141 (immaterial entity)

AnnotationAssertion(rdfs:label obo:BFO_0000141 "immaterial entity"@en)
SubClassOf(obo:BFO_0000141 obo:BFO_0000004)
DisjointClasses(obo:BFO_0000141 ObjectSomeValuesFrom(obo:BFO_0000051 obo:BFO_0000040))

# Class: obo:BSPO_0000000 (left side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000000 "The side of an organism that is left of the sagittal plane.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000000 "left")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000000 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000000 "BSPO:0000000")
AnnotationAssertion(rdfs:label obo:BSPO_0000000 "left side")
SubClassOf(obo:BSPO_0000000 obo:BSPO_0000054)
SubClassOf(obo:BSPO_0000000 ObjectSomeValuesFrom(obo:BSPO_0000110 obo:BSPO_0000007))
SubClassOf(obo:BSPO_0000000 ObjectSomeValuesFrom(obo:BSPO_0015007 obo:BSPO_0000017))

# Class: obo:BSPO_0000001 (upper side)

AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000001 "upper")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000001 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000001 "BSPO:0000001")
AnnotationAssertion(rdfs:comment obo:BSPO_0000001 "Consider merging with superior side.")
AnnotationAssertion(rdfs:label obo:BSPO_0000001 "upper side")
SubClassOf(obo:BSPO_0000001 obo:BSPO_0000054)
SubClassOf(obo:BSPO_0000001 ObjectSomeValuesFrom(obo:BSPO_0015007 obo:BSPO_0000011))

# Class: obo:BSPO_0000002 (lower side)

AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000002 "lower")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000002 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000002 "BSPO:0000002")
AnnotationAssertion(rdfs:comment obo:BSPO_0000002 "Consider merging with inferior side.")
AnnotationAssertion(rdfs:label obo:BSPO_0000002 "lower side")
SubClassOf(obo:BSPO_0000002 obo:BSPO_0000054)
SubClassOf(obo:BSPO_0000002 ObjectSomeValuesFrom(obo:BSPO_0015001 obo:BSPO_0000011))

# Class: obo:BSPO_00000021 (deep-superficial gradient (obsolete))

AnnotationAssertion(obo:IAO_0100001 obo:BSPO_00000021 "BSPO:0000021")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_00000021 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_00000021 "BSPO:00000021")
AnnotationAssertion(rdfs:comment obo:BSPO_00000021 "was made obsolete because the ID had too many digits")
AnnotationAssertion(rdfs:label obo:BSPO_00000021 "deep-superficial gradient (obsolete)")
AnnotationAssertion(owl:deprecated obo:BSPO_00000021 "true"^^xsd:boolean)

# Class: obo:BSPO_0000003 (deep side)

AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000003 "deep")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000003 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000003 "BSPO:0000003")
AnnotationAssertion(rdfs:label obo:BSPO_0000003 "deep side")
SubClassOf(obo:BSPO_0000003 obo:BSPO_0000054)
SubClassOf(obo:BSPO_0000003 ObjectSomeValuesFrom(obo:BSPO_0000107 obo:BSPO_0000004))
SubClassOf(obo:BSPO_0000003 ObjectSomeValuesFrom(obo:BSPO_0015007 obo:BSPO_0000012))

# Class: obo:BSPO_0000004 (superficial side)

AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000004 "superficial")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000004 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000004 "BSPO:0000004")
AnnotationAssertion(rdfs:label obo:BSPO_0000004 "superficial side")
SubClassOf(obo:BSPO_0000004 obo:BSPO_0000054)
SubClassOf(obo:BSPO_0000004 ObjectSomeValuesFrom(obo:BSPO_0015001 obo:BSPO_0000012))

# Class: obo:BSPO_0000005 (anatomical surface)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000005 "A 2D surface of an anatomical continuant.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000005 "FMA:24137")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000005 "surface")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000005 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000005 "BSPO:0000005")
AnnotationAssertion(rdfs:comment obo:BSPO_0000005 "to be merged into CARO")
AnnotationAssertion(rdfs:label obo:BSPO_0000005 "anatomical surface")
SubClassOf(obo:BSPO_0000005 obo:CARO_0000010)

# Class: obo:BSPO_0000006 (anatomical margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000006 "Fiat anatomical region extending a short distance from the boundary of an object inwards.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000006 "edge")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000006 "margin")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000006 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000006 "BSPO:0000006")
AnnotationAssertion(rdfs:label obo:BSPO_0000006 "anatomical margin")
SubClassOf(obo:BSPO_0000006 obo:BSPO_0000070)

# Class: obo:BSPO_0000007 (right side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000007 "The side of an organism that is right of the sagittal plane.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000007 "right")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000007 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000007 "BSPO:0000007")
AnnotationAssertion(rdfs:label obo:BSPO_0000007 "right side")
SubClassOf(obo:BSPO_0000007 obo:BSPO_0000054)
SubClassOf(obo:BSPO_0000007 ObjectSomeValuesFrom(obo:BSPO_0015001 obo:BSPO_0000017))

# Class: obo:BSPO_0000008 (parasagittal plane)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:mah") obo:IAO_0000115 obo:BSPO_0000008 "Sagittal plane that divides a bilateral body into unequal left and right parts.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000008 "parasagittal section")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000008 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000008 "BSPO:0000008")
AnnotationAssertion(rdfs:label obo:BSPO_0000008 "parasagittal plane")
SubClassOf(obo:BSPO_0000008 obo:BSPO_0000417)

# Class: obo:BSPO_0000009 (midsagittal plane)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:mah") obo:IAO_0000115 obo:BSPO_0000009 "Sagittal plane that divides bilateral body into equal left and right parts.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000009 "FMA:74563")
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "FMA:74563") oboInOwl:hasExactSynonym obo:BSPO_0000009 "median sagittal plane")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000009 "midline plane")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000009 "midsagittal section")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000009 "spatial")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_0000009 "median plane")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000009 "BSPO:0000009")
AnnotationAssertion(rdfs:comment obo:BSPO_0000009 "only in bilaterally symmetrical organisms")
AnnotationAssertion(rdfs:label obo:BSPO_0000009 "midsagittal plane")
SubClassOf(obo:BSPO_0000009 obo:BSPO_0000417)

# Class: obo:BSPO_0000010 (anatomical axis)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000010 "A straight line through space, intersecting an anatomical entity.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000010 "http://upload.wikimedia.org/wikipedia/commons/3/34/Anatomical_Directions_and_Axes.JPG")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000010 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000010 "BSPO:0000010")
AnnotationAssertion(rdfs:comment obo:BSPO_0000010 "Axis directions are defined in terms of axes.")
AnnotationAssertion(rdfs:label obo:BSPO_0000010 "anatomical axis")
SubClassOf(obo:BSPO_0000010 obo:CARO_0000008)
SubClassOf(obo:BSPO_0000010 ObjectSomeValuesFrom(obo:BSPO_0015006 obo:CARO_0000000))

# Class: obo:BSPO_0000011 (upper-lower axis)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000011 "An anatomical axis determined by gravity.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000011 "spatial")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_0000011 "superior-inferior axis")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000011 "BSPO:0000011")
AnnotationAssertion(rdfs:label obo:BSPO_0000011 "upper-lower axis")
SubClassOf(obo:BSPO_0000011 obo:BSPO_0000010)

# Class: obo:BSPO_0000012 (deep-superficial axis)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:PM") obo:IAO_0000115 obo:BSPO_0000012 "An axis that extends from an internal position to a more external position in the body or body part.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000012 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000012 "BSPO:0000012")
AnnotationAssertion(rdfs:comment obo:BSPO_0000012 "Muscles are frequently categorized as 'deep', 'intermediate', and 'superficial'.")
AnnotationAssertion(rdfs:label obo:BSPO_0000012 "deep-superficial axis")
SubClassOf(obo:BSPO_0000012 obo:BSPO_0000010)

# Class: obo:BSPO_0000013 (anterior-posterior axis)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000013 "An axis that extends through an organism from head end to opposite end of body or tail.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000013 "A-P axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000013 "AP axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000013 "anteroposterior axis")
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "http://en.wikipedia.org/wiki/Anatomical_terms_of_location") oboInOwl:hasNarrowSynonym obo:BSPO_0000013 "cephalocaudal axis")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType bspo:vertebrate) oboInOwl:hasNarrowSynonym obo:BSPO_0000013 "craniocaudal axis")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType bspo:vertebrate) oboInOwl:hasNarrowSynonym obo:BSPO_0000013 "rostral/caudal")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType bspo:vertebrate) oboInOwl:hasNarrowSynonym obo:BSPO_0000013 "rostrocaudal axis")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000013 "spatial")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_0000013 "longitudinal axis")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000013 "BSPO:0000013")
AnnotationAssertion(rdfs:comment obo:BSPO_0000013 "In sponges, AP is used to indicate the direction of movement [in larval stage] (as it is in other metazoans that move, e.g., the basal bilaterians). [PM]")
AnnotationAssertion(rdfs:label obo:BSPO_0000013 "anterior-posterior axis")
EquivalentClasses(obo:BSPO_0000013 ObjectIntersectionOf(obo:BSPO_0000010 ObjectSomeValuesFrom(obo:BSPO_0015005 obo:BSPO_0000018)))
SubClassOf(obo:BSPO_0000013 obo:BSPO_0000010)
SubClassOf(obo:BSPO_0000013 ObjectSomeValuesFrom(obo:BSPO_0000104 obo:BSPO_0000016))
SubClassOf(obo:BSPO_0000013 ObjectSomeValuesFrom(obo:BSPO_0015005 obo:BSPO_0000018))

# Class: obo:BSPO_0000014 (apical-basal axis relative to substrate)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:mah") obo:IAO_0000115 obo:BSPO_0000014 "An axis that extends through an organism or organism part from the part of the organism or organism part attached to a substrate (basal) to the furthest from the attachment (apical). Note that the apical-basal axis is often used for organismal parts where there is attachment via a basal lamina or other structure.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000014 "apical/basal")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000014 "spatial")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_0000014 "longitudinal axis")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000014 "BSPO:0000014")
AnnotationAssertion(rdfs:label obo:BSPO_0000014 "apical-basal axis relative to substrate")
SubClassOf(obo:BSPO_0000014 obo:BSPO_0000010)

# Class: obo:BSPO_0000015 (proximal-distal axis)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") Annotation(oboInOwl:hasDbXref "http://en.wikipedia.org/wiki/Anatomical_terms_of_location") obo:IAO_0000115 obo:BSPO_0000015 "An axis that extends from the point of attachment of a structure (proximal) to the  point furthest away from the plane of attachment (distal).")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000015 "proximal/distal")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000015 "proximodistal")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000015 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000015 "BSPO:0000015")
AnnotationAssertion(rdfs:comment obo:BSPO_0000015 "In some communities, proximal and distal are used when specifying the position of parts of elements that are contained within the body, such as gill arches or vertebral spines. In these cases, use of the classes medial-lateral axis or medial-external axis are more appropriate.")
AnnotationAssertion(rdfs:label obo:BSPO_0000015 "proximal-distal axis")
SubClassOf(obo:BSPO_0000015 obo:BSPO_0000010)

# Class: obo:BSPO_0000016 (dorsal-ventral axis)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0000016 "An axis that is approximately perpendicular to the anterior-posterior axis and that extends through the horizontal plane of the body.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000016 "D-V axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000016 "DV axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000016 "dorsoventral axis")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType bspo:human) oboInOwl:hasNarrowSynonym obo:BSPO_0000016 "anterior-posterior axis")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000016 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000016 "BSPO:0000016")
AnnotationAssertion(rdfs:label obo:BSPO_0000016 "dorsal-ventral axis")
EquivalentClasses(obo:BSPO_0000016 ObjectIntersectionOf(obo:BSPO_0000010 ObjectSomeValuesFrom(obo:BSPO_0015005 obo:BSPO_0000019)))
SubClassOf(obo:BSPO_0000016 obo:BSPO_0000010)
SubClassOf(obo:BSPO_0000016 ObjectSomeValuesFrom(obo:BSPO_0015005 obo:BSPO_0000019))

# Class: obo:BSPO_0000017 (left-right axis)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000017 "An axis that bisects an organism from left to right sides of body, through a sagittal plane.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000017 "L-R axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000017 "LR axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000017 "R-L axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000017 "RL axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000017 "dextro-sinister axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000017 "left to right axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000017 "right to left axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000017 "right-left axis")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000017 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000017 "BSPO:0000017")
AnnotationAssertion(rdfs:label obo:BSPO_0000017 "left-right axis")
EquivalentClasses(obo:BSPO_0000017 ObjectIntersectionOf(obo:BSPO_0000010 ObjectSomeValuesFrom(obo:BSPO_0015005 obo:BSPO_0000417)))
SubClassOf(obo:BSPO_0000017 obo:BSPO_0000010)
SubClassOf(obo:BSPO_0000017 ObjectSomeValuesFrom(obo:BSPO_0015005 obo:BSPO_0000417))

# Class: obo:BSPO_0000018 (transverse plane)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:mah") obo:IAO_0000115 obo:BSPO_0000018 "Anatomical plane that divides body into anterior and posterior parts.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000018 "FMA:12247")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000018 "axial plane")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000018 "axial section")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000018 "transverse section")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000018 "spatial")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_0000018 "cross-section")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000018 "BSPO:0000018")
AnnotationAssertion(rdfs:label obo:BSPO_0000018 "transverse plane")
SubClassOf(obo:BSPO_0000018 obo:BSPO_0000400)

# Class: obo:BSPO_0000019 (horizontal plane)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:mah") obo:IAO_0000115 obo:BSPO_0000019 "Anatomical plane that divides bilateral body into dorsal and ventral parts.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000019 "FMA:52810")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000019 "frontal plane")
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "FMA:52810") oboInOwl:hasExactSynonym obo:BSPO_0000019 "horizontal anatomical plane")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000019 "horizontal section")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000019 "spatial")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_0000019 "coronal section")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_0000019 "frontal section")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000019 "BSPO:0000019")
AnnotationAssertion(rdfs:label obo:BSPO_0000019 "horizontal plane")
SubClassOf(obo:BSPO_0000019 obo:BSPO_0000400)

# Class: obo:BSPO_0000020 (upper-lower gradient)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000020 "Anatomical gradient that is distributed along the upper-lower axis.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000020 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000020 "BSPO:0000020")
AnnotationAssertion(rdfs:label obo:BSPO_0000020 "upper-lower gradient")
EquivalentClasses(obo:BSPO_0000020 ObjectIntersectionOf(obo:BSPO_0000051 ObjectSomeValuesFrom(obo:BSPO_0015002 obo:BSPO_0000011)))
SubClassOf(obo:BSPO_0000020 obo:BSPO_0000051)
SubClassOf(obo:BSPO_0000020 ObjectSomeValuesFrom(obo:BSPO_0015002 obo:BSPO_0000011))

# Class: obo:BSPO_0000021 (deep-superficial gradient)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000021 "Anatomical gradient that is distributed along the deep-superficial axis.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000021 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000021 "BSPO:0000021")
AnnotationAssertion(rdfs:label obo:BSPO_0000021 "deep-superficial gradient")
EquivalentClasses(obo:BSPO_0000021 ObjectIntersectionOf(obo:BSPO_0000051 ObjectSomeValuesFrom(obo:BSPO_0015002 obo:BSPO_0000012)))
SubClassOf(obo:BSPO_0000021 obo:BSPO_0000051)
SubClassOf(obo:BSPO_0000021 ObjectSomeValuesFrom(obo:BSPO_0015002 obo:BSPO_0000012))

# Class: obo:BSPO_0000022 (superior side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0000022 "The side that is higher relative to the substrate.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000022 "superior")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000022 "spatial")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_0000022 "cranial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000022 "BSPO:0000022")
AnnotationAssertion(rdfs:label obo:BSPO_0000022 "superior side")
SubClassOf(obo:BSPO_0000022 obo:BSPO_0000054)

# Class: obo:BSPO_0000023 (apical-basal gradient)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000023 "Anatomical gradient that is distributed along the apical-basal axis.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000023 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000023 "BSPO:0000023")
AnnotationAssertion(rdfs:label obo:BSPO_0000023 "apical-basal gradient")
EquivalentClasses(obo:BSPO_0000023 ObjectIntersectionOf(obo:BSPO_0000051 ObjectSomeValuesFrom(obo:BSPO_0015002 obo:BSPO_0000014)))
SubClassOf(obo:BSPO_0000023 obo:BSPO_0000051)
SubClassOf(obo:BSPO_0000023 ObjectSomeValuesFrom(obo:BSPO_0015002 obo:BSPO_0000014))

# Class: obo:BSPO_0000024 (proximal-distal gradient)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000024 "Anatomical gradient that is distributed along the proximal-distal axis.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000024 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000024 "BSPO:0000024")
AnnotationAssertion(rdfs:label obo:BSPO_0000024 "proximal-distal gradient")
EquivalentClasses(obo:BSPO_0000024 ObjectIntersectionOf(obo:BSPO_0000051 ObjectSomeValuesFrom(obo:BSPO_0015002 obo:BSPO_0000015)))
SubClassOf(obo:BSPO_0000024 obo:BSPO_0000051)
SubClassOf(obo:BSPO_0000024 ObjectSomeValuesFrom(obo:BSPO_0015002 obo:BSPO_0000015))

# Class: obo:BSPO_0000025 (inferior side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0000025 "The side that is lower relative to the substrate.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000025 "inferior")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000025 "spatial")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_0000025 "caudal")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000025 "BSPO:0000025")
AnnotationAssertion(rdfs:label obo:BSPO_0000025 "inferior side")
SubClassOf(obo:BSPO_0000025 obo:BSPO_0000054)

# Class: obo:BSPO_0000026 (antero-dorsal region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000026 "Anatomical region that overlaps the anterior and dorsal regions of a body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000026 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000026 "2009-06-15T01:01:38Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000026 "anterodorsal region ")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000026 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000026 "BSPO:0000026")
AnnotationAssertion(rdfs:label obo:BSPO_0000026 "antero-dorsal region")
EquivalentClasses(obo:BSPO_0000026 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000055) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000063)))
SubClassOf(obo:BSPO_0000026 obo:BSPO_0000071)
SubClassOf(obo:BSPO_0000026 obo:BSPO_0000079)

# Class: obo:BSPO_0000027 (antero-ventral region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000027 "Anatomical region that overlaps the anterior and ventral regions of a body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000027 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000027 "2009-06-15T01:04:59Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000027 "anteroventral region ")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000027 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000027 "BSPO:0000027")
AnnotationAssertion(rdfs:label obo:BSPO_0000027 "antero-ventral region")
EquivalentClasses(obo:BSPO_0000027 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000055) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000068)))
SubClassOf(obo:BSPO_0000027 obo:BSPO_0000071)
SubClassOf(obo:BSPO_0000027 obo:BSPO_0000084)

# Class: obo:BSPO_0000028 (postero-lateral region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000028 "Anatomical region that overlaps the posterior and lateral regions of the body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000028 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000028 "2009-06-15T01:06:01Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000028 "posterolateral region")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000028 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000028 "BSPO:0000028")
AnnotationAssertion(rdfs:label obo:BSPO_0000028 "postero-lateral region")
EquivalentClasses(obo:BSPO_0000028 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000056) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000066)))
SubClassOf(obo:BSPO_0000028 obo:BSPO_0000072)
SubClassOf(obo:BSPO_0000028 obo:BSPO_0000082)

# Class: obo:BSPO_0000029 (antero-lateral region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000029 "Anatomical region that overlaps the anterior and lateral regions of a body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000029 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000029 "2009-06-15T01:07:18Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000029 "anterolateral region")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000029 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000029 "BSPO:0000029")
AnnotationAssertion(rdfs:label obo:BSPO_0000029 "antero-lateral region")
EquivalentClasses(obo:BSPO_0000029 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000055) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000066)))
SubClassOf(obo:BSPO_0000029 obo:BSPO_0000071)
SubClassOf(obo:BSPO_0000029 obo:BSPO_0000082)

# Class: obo:BSPO_0000030 (postero-dorsal region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000030 "Anatomical region that overlaps the posterior and dorsal regions of the body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000030 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000030 "2009-06-15T01:08:13Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000030 "posterodorsal region")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000030 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000030 "BSPO:0000030")
AnnotationAssertion(rdfs:label obo:BSPO_0000030 "postero-dorsal region")
EquivalentClasses(obo:BSPO_0000030 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000056) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000063)))
SubClassOf(obo:BSPO_0000030 obo:BSPO_0000072)
SubClassOf(obo:BSPO_0000030 obo:BSPO_0000079)

# Class: obo:BSPO_0000031 (upper region)

AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000031 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000031 "BSPO:0000031")
AnnotationAssertion(rdfs:label obo:BSPO_0000031 "upper region")
EquivalentClasses(obo:BSPO_0000031 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000001)))
SubClassOf(obo:BSPO_0000031 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000031 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000001))

# Class: obo:BSPO_0000032 (lower region)

AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000032 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000032 "BSPO:0000032")
AnnotationAssertion(rdfs:label obo:BSPO_0000032 "lower region")
EquivalentClasses(obo:BSPO_0000032 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000002)))
SubClassOf(obo:BSPO_0000032 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000032 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000002))

# Class: obo:BSPO_0000033 (deep region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000033 "Anatomical region located deep within an organism or structure.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000033 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000033 "BSPO:0000033")
AnnotationAssertion(rdfs:label obo:BSPO_0000033 "deep region")
EquivalentClasses(obo:BSPO_0000033 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000003)))
SubClassOf(obo:BSPO_0000033 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000033 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000003))

# Class: obo:BSPO_0000034 (superficial region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000034 "Anatomical region superficially located on the body or body part.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000034 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000034 "BSPO:0000034")
AnnotationAssertion(rdfs:label obo:BSPO_0000034 "superficial region")
EquivalentClasses(obo:BSPO_0000034 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000004)))
SubClassOf(obo:BSPO_0000034 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000034 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000004))

# Class: obo:BSPO_0000035 (postero-ventral region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000035 "Anatomical region that overlaps the posterior and ventral regions of a body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000035 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000035 "2009-06-15T01:08:38Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000035 "posteroventral region")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000035 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000035 "BSPO:0000035")
AnnotationAssertion(rdfs:label obo:BSPO_0000035 "postero-ventral region")
EquivalentClasses(obo:BSPO_0000035 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000056) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000068)))
SubClassOf(obo:BSPO_0000035 obo:BSPO_0000072)
SubClassOf(obo:BSPO_0000035 obo:BSPO_0000084)

# Class: obo:BSPO_0000036 (anterior-most region)

AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000036 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000036 "2009-06-16T08:49:03Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000036 "anterior-most")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000036 "anteriormost")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000036 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000036 "BSPO:0000036")
AnnotationAssertion(rdfs:label obo:BSPO_0000036 "anterior-most region")
SubClassOf(obo:BSPO_0000036 obo:BSPO_0000071)

# Class: obo:BSPO_0000037 (posterior-most region)

AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000037 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000037 "2009-06-16T08:49:50Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000037 "posterior-most")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000037 "posteriormost")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000037 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000037 "BSPO:0000037")
AnnotationAssertion(rdfs:label obo:BSPO_0000037 "posterior-most region")
SubClassOf(obo:BSPO_0000037 obo:BSPO_0000072)

# Class: obo:BSPO_0000038 (dorsal-most region)

AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000038 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000038 "2009-06-16T08:50:26Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000038 "dorsal-most")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000038 "dorsalmost")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000038 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000038 "BSPO:0000038")
AnnotationAssertion(rdfs:label obo:BSPO_0000038 "dorsal-most region")
SubClassOf(obo:BSPO_0000038 obo:BSPO_0000079)

# Class: obo:BSPO_0000039 (ventral-most region)

AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000039 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000039 "2009-06-16T08:51:07Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000039 "ventral-most")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000039 "ventralmost")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000039 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000039 "BSPO:0000039")
AnnotationAssertion(rdfs:label obo:BSPO_0000039 "ventral-most region")
SubClassOf(obo:BSPO_0000039 obo:BSPO_0000084)

# Class: obo:BSPO_0000040 (upper/lower compartment boundary)

AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000040 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000040 "BSPO:0000040")
AnnotationAssertion(rdfs:label obo:BSPO_0000040 "upper/lower compartment boundary")
EquivalentClasses(obo:BSPO_0000040 ObjectIntersectionOf(obo:BSPO_0000092 ObjectSomeValuesFrom(obo:BSPO_0015003 obo:BSPO_0000011)))
SubClassOf(obo:BSPO_0000040 obo:BSPO_0000092)
SubClassOf(obo:BSPO_0000040 ObjectSomeValuesFrom(obo:BSPO_0015003 obo:BSPO_0000011))

# Class: obo:BSPO_0000041 (deep/superficial compartment boundary)

AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000041 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000041 "BSPO:0000041")
AnnotationAssertion(rdfs:label obo:BSPO_0000041 "deep/superficial compartment boundary")
EquivalentClasses(obo:BSPO_0000041 ObjectIntersectionOf(obo:BSPO_0000092 ObjectSomeValuesFrom(obo:BSPO_0015003 obo:BSPO_0000012)))
SubClassOf(obo:BSPO_0000041 obo:BSPO_0000092)
SubClassOf(obo:BSPO_0000041 ObjectSomeValuesFrom(obo:BSPO_0015003 obo:BSPO_0000012))

# Class: obo:BSPO_0000042 (antero-medial margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000042 "Anatomical margin that is located on the antero-medial region of the body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000042 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000042 "2009-09-10T08:49:57Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000042 "anteromedial margin")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000042 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000042 "BSPO:0000042")
AnnotationAssertion(rdfs:label obo:BSPO_0000042 "antero-medial margin")
EquivalentClasses(obo:BSPO_0000042 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000055) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000067)))
SubClassOf(obo:BSPO_0000042 obo:BSPO_0000050)
SubClassOf(obo:BSPO_0000042 obo:BSPO_0000671)
SubClassOf(obo:BSPO_0000042 obo:BSPO_0000683)

# Class: obo:BSPO_0000043 (apical/basal compartment boundary)

AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000043 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000043 "BSPO:0000043")
AnnotationAssertion(rdfs:label obo:BSPO_0000043 "apical/basal compartment boundary")
EquivalentClasses(obo:BSPO_0000043 ObjectIntersectionOf(obo:BSPO_0000092 ObjectSomeValuesFrom(obo:BSPO_0015003 obo:BSPO_0000014)))
SubClassOf(obo:BSPO_0000043 obo:BSPO_0000092)
SubClassOf(obo:BSPO_0000043 ObjectSomeValuesFrom(obo:BSPO_0015003 obo:BSPO_0000014))

# Class: obo:BSPO_0000044 (proximal/distal compartment boundary)

AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000044 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000044 "BSPO:0000044")
AnnotationAssertion(rdfs:label obo:BSPO_0000044 "proximal/distal compartment boundary")
EquivalentClasses(obo:BSPO_0000044 ObjectIntersectionOf(obo:BSPO_0000092 ObjectSomeValuesFrom(obo:BSPO_0015003 obo:BSPO_0000015)))
SubClassOf(obo:BSPO_0000044 obo:BSPO_0000092)
SubClassOf(obo:BSPO_0000044 ObjectSomeValuesFrom(obo:BSPO_0015003 obo:BSPO_0000015))

# Class: obo:BSPO_0000045 (antero-lateral margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000045 "Anatomical margin that is located on the antero-lateral region of the body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000045 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000045 "2009-09-10T08:50:37Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000045 "anterolateral margin")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000045 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000045 "BSPO:0000045")
AnnotationAssertion(rdfs:label obo:BSPO_0000045 "antero-lateral margin")
EquivalentClasses(obo:BSPO_0000045 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000055) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000066)))
SubClassOf(obo:BSPO_0000045 obo:BSPO_0000029)
SubClassOf(obo:BSPO_0000045 obo:BSPO_0000671)
SubClassOf(obo:BSPO_0000045 obo:BSPO_0000682)

# Class: obo:BSPO_0000046 (postero-medial margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000046 "Anatomical margin that is located on the postero-medial region of the body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000046 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000046 "2009-09-10T08:51:07Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000046 "posteromedial margin")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000046 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000046 "BSPO:0000046")
AnnotationAssertion(rdfs:label obo:BSPO_0000046 "postero-medial margin")
EquivalentClasses(obo:BSPO_0000046 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000056) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000067)))
SubClassOf(obo:BSPO_0000046 obo:BSPO_0000064)
SubClassOf(obo:BSPO_0000046 obo:BSPO_0000672)
SubClassOf(obo:BSPO_0000046 obo:BSPO_0000683)

# Class: obo:BSPO_0000047 (postero-lateral margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000047 "Anatomical margin that is located on the postero-lateral region of the body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000047 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000047 "2009-09-10T08:51:42Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000047 "posterolateral margin")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000047 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000047 "BSPO:0000047")
AnnotationAssertion(rdfs:label obo:BSPO_0000047 "postero-lateral margin")
EquivalentClasses(obo:BSPO_0000047 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000056) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000066)))
SubClassOf(obo:BSPO_0000047 obo:BSPO_0000028)
SubClassOf(obo:BSPO_0000047 obo:BSPO_0000672)
SubClassOf(obo:BSPO_0000047 obo:BSPO_0000682)

# Class: obo:BSPO_0000048 (dorso-medial margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000048 "Anatomical margin that is located on the dorso-medial region of the body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000048 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000048 "2009-09-10T08:52:04Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000048 "dorso-medial margin")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000048 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000048 "BSPO:0000048")
AnnotationAssertion(rdfs:label obo:BSPO_0000048 "dorso-medial margin")
EquivalentClasses(obo:BSPO_0000048 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000063) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000067)))
SubClassOf(obo:BSPO_0000048 obo:BSPO_0000069)
SubClassOf(obo:BSPO_0000048 obo:BSPO_0000679)
SubClassOf(obo:BSPO_0000048 obo:BSPO_0000683)

# Class: obo:BSPO_0000049 (ventro-medial margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000049 "Anatomical margin that is located on the ventro-medial region of the body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000049 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000049 "2009-09-10T08:52:48Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000049 "ventromedial margin")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000049 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000049 "BSPO:0000049")
AnnotationAssertion(rdfs:label obo:BSPO_0000049 "ventro-medial margin")
EquivalentClasses(obo:BSPO_0000049 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000067) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000068)))
SubClassOf(obo:BSPO_0000049 obo:BSPO_0000112)
SubClassOf(obo:BSPO_0000049 obo:BSPO_0000683)
SubClassOf(obo:BSPO_0000049 obo:BSPO_0000684)

# Class: obo:BSPO_0000050 (antero-medial region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000050 "Anatomical region that overlaps the anterior and medial regions of the body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000050 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000050 "2009-09-10T08:55:32Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000050 "anteromedial region")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000050 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000050 "BSPO:0000050")
AnnotationAssertion(rdfs:label obo:BSPO_0000050 "antero-medial region")
EquivalentClasses(obo:BSPO_0000050 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000055) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000067)))
SubClassOf(obo:BSPO_0000050 obo:BSPO_0000071)
SubClassOf(obo:BSPO_0000050 obo:BSPO_0000083)

# Class: obo:BSPO_0000051 (anatomical gradient)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000051 "Material anatomical entity defined by change in the value of some quantity per unit of distance across some spatial axis.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000051 "FBql:00005254")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000051 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000051 "BSPO:0000051")
AnnotationAssertion(rdfs:label obo:BSPO_0000051 "anatomical gradient")
SubClassOf(obo:BSPO_0000051 obo:CARO_0000006)

# Class: obo:BSPO_0000052 (anterior-posterior gradient)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000052 "Anatomical gradient that is distributed along the anterior-posterior axis.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000052 "FBcv:0000142")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000052 "FBql:00005256")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000052 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000052 "BSPO:0000052")
AnnotationAssertion(rdfs:label obo:BSPO_0000052 "anterior-posterior gradient")
EquivalentClasses(obo:BSPO_0000052 ObjectIntersectionOf(obo:BSPO_0000051 ObjectSomeValuesFrom(obo:BSPO_0015003 obo:BSPO_0000013)))
SubClassOf(obo:BSPO_0000052 obo:BSPO_0000051)
SubClassOf(obo:BSPO_0000052 ObjectSomeValuesFrom(obo:BSPO_0015003 obo:BSPO_0000013))

# Class: obo:BSPO_0000053 (dorsal-ventral gradient)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000053 "Anatomical gradient that is distributed along the dorsal-ventral axis.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000053 "FBcv:0000143")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000053 "FBql:00005255")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000053 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000053 "BSPO:0000053")
AnnotationAssertion(rdfs:label obo:BSPO_0000053 "dorsal-ventral gradient")
EquivalentClasses(obo:BSPO_0000053 ObjectIntersectionOf(obo:BSPO_0000051 ObjectSomeValuesFrom(obo:BSPO_0015003 obo:BSPO_0000016)))
SubClassOf(obo:BSPO_0000053 obo:BSPO_0000051)
SubClassOf(obo:BSPO_0000053 ObjectSomeValuesFrom(obo:BSPO_0015003 obo:BSPO_0000016))

# Class: obo:BSPO_0000054 (anatomical side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000054 "An anatomical region bounded by a plane perpendicular to an axis through the middle.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000054 "FBql:00005841")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000054 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000054 "BSPO:0000054")
AnnotationAssertion(rdfs:label obo:BSPO_0000054 "anatomical side")
SubClassOf(obo:BSPO_0000054 obo:BSPO_0000070)

# Class: obo:BSPO_0000055 (anterior side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:RW") obo:IAO_0000115 obo:BSPO_0000055 "An anatomical region that is the entire part of an anatomical structure anterior to a transverse plane and bounded on one side by the same transverse plane.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000055 "FBcv:0000053")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000055 "FBql:00005848")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000055 "anterior")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000055 "rostral")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000055 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000055 "BSPO:0000055")
AnnotationAssertion(rdfs:label obo:BSPO_0000055 "anterior side")
SubClassOf(obo:BSPO_0000055 obo:BSPO_0000054)
SubClassOf(obo:BSPO_0000055 ObjectSomeValuesFrom(obo:BSPO_0000096 obo:BSPO_0000056))
SubClassOf(obo:BSPO_0000055 ObjectSomeValuesFrom(obo:BSPO_0000113 obo:BSPO_0000056))
SubClassOf(obo:BSPO_0000055 ObjectSomeValuesFrom(obo:BSPO_0015007 obo:BSPO_0000013))

# Class: obo:BSPO_0000056 (posterior side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:RW") Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000056 "An anatomical region that is the entire part of an anatomical structure posterior to a transverse plane and bounded on one side by the same transverse plane.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000056 "FBcv:0000065")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000056 "FBql:00005849")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000056 "posterior")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType bspo:vertebrate) oboInOwl:hasNarrowSynonym obo:BSPO_0000056 "caudal")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000056 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000056 "BSPO:0000056")
AnnotationAssertion(rdfs:label obo:BSPO_0000056 "posterior side")
SubClassOf(obo:BSPO_0000056 obo:BSPO_0000054)
SubClassOf(obo:BSPO_0000056 ObjectSomeValuesFrom(obo:BSPO_0000099 obo:BSPO_0000055))
SubClassOf(obo:BSPO_0000056 ObjectSomeValuesFrom(obo:BSPO_0015001 obo:BSPO_0000013))

# Class: obo:BSPO_0000057 (apical side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000057 "Anatomical side that is located on the apical end of an organism or structure.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000057 "FBcv:0000054")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000057 "FBql:00005854")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000057 "apical")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000057 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000057 "BSPO:0000057")
AnnotationAssertion(rdfs:label obo:BSPO_0000057 "apical side")
SubClassOf(obo:BSPO_0000057 obo:BSPO_0000054)
SubClassOf(obo:BSPO_0000057 ObjectSomeValuesFrom(obo:BSPO_0000113 obo:BSPO_0000058))
SubClassOf(obo:BSPO_0000057 ObjectSomeValuesFrom(obo:BSPO_0015007 obo:BSPO_0000014))

# Class: obo:BSPO_0000058 (basal side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000058 "Anatomical side that is located on the basal end of an organism or structure.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000058 "FBcv:0000055")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000058 "FBql:00005855")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000058 "basal")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000058 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000058 "BSPO:0000058")
AnnotationAssertion(rdfs:comment obo:BSPO_0000058 "The part of the organism attached to a substrate. Axis of symmetry.")
AnnotationAssertion(rdfs:label obo:BSPO_0000058 "basal side")
SubClassOf(obo:BSPO_0000058 obo:BSPO_0000054)
SubClassOf(obo:BSPO_0000058 ObjectSomeValuesFrom(obo:BSPO_0015001 obo:BSPO_0000014))

# Class: obo:BSPO_0000059 (central side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000059 "Anatomical side that is centrally located on an organism or structure.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000059 "FBcv:0000056")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000059 "FBql:00015851")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000059 "central")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000059 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000059 "BSPO:0000059")
AnnotationAssertion(rdfs:comment obo:BSPO_0000059 "central is not an axis direction")
AnnotationAssertion(rdfs:label obo:BSPO_0000059 "central side")
SubClassOf(obo:BSPO_0000059 obo:BSPO_0000054)

# Class: obo:BSPO_0000060 (contralateral side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000060 "On the opposite side.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000060 "FBcv:0000057")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000060 "FBql:00005851")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000060 "contralateral")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000060 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000060 "BSPO:0000060")
AnnotationAssertion(rdfs:comment obo:BSPO_0000060 "inherited from flybase cv. not clear how this would be used. Suggest we obsolete, and use the corresponding relation.")
AnnotationAssertion(rdfs:label obo:BSPO_0000060 "contralateral side")
SubClassOf(obo:BSPO_0000060 obo:BSPO_0000054)

# Class: obo:BSPO_0000061 (proximal side)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000061 "FBcv:0000066")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000061 "FBql:00005852")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000061 "proximal")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000061 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000061 "BSPO:0000061")
AnnotationAssertion(rdfs:label obo:BSPO_0000061 "proximal side")
SubClassOf(obo:BSPO_0000061 obo:BSPO_0000054)
SubClassOf(obo:BSPO_0000061 ObjectSomeValuesFrom(obo:BSPO_0000113 obo:BSPO_0000062))
SubClassOf(obo:BSPO_0000061 ObjectSomeValuesFrom(obo:BSPO_0015007 obo:BSPO_0000015))

# Class: obo:BSPO_0000062 (distal side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000062 "Anatomical side that is distally located on an organism or structure.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000062 "FBcv:0000058")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000062 "FBql:00005853")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000062 "distal")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000062 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000062 "BSPO:0000062")
AnnotationAssertion(rdfs:label obo:BSPO_0000062 "distal side")
SubClassOf(obo:BSPO_0000062 obo:BSPO_0000054)
SubClassOf(obo:BSPO_0000062 ObjectSomeValuesFrom(obo:BSPO_0000097 obo:BSPO_0000061))
SubClassOf(obo:BSPO_0000062 ObjectSomeValuesFrom(obo:BSPO_0015001 obo:BSPO_0000015))

# Class: obo:BSPO_0000063 (dorsal side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000063 "An anatomical region that is the entire part of an anatomical structure dorsal to a horizontal plane and bounded on one side by the same transverse plane.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000063 "FBcv:0000059")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000063 "FBql:00005842")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000063 "dorsal")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000063 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000063 "BSPO:0000063")
AnnotationAssertion(rdfs:label obo:BSPO_0000063 "dorsal side")
SubClassOf(obo:BSPO_0000063 obo:BSPO_0000054)
SubClassOf(obo:BSPO_0000063 ObjectSomeValuesFrom(obo:BSPO_0000098 obo:BSPO_0000066))
SubClassOf(obo:BSPO_0000063 ObjectSomeValuesFrom(obo:BSPO_0000113 obo:BSPO_0000068))
SubClassOf(obo:BSPO_0000063 ObjectSomeValuesFrom(obo:BSPO_0015007 obo:BSPO_0000016))

# Class: obo:BSPO_0000064 (postero-medial region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000064 "Anatomical region that overlaps the posterior and medial regions of the body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000064 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000064 "2009-09-10T08:56:39Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000064 "posteromedial region")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000064 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000064 "BSPO:0000064")
AnnotationAssertion(rdfs:label obo:BSPO_0000064 "postero-medial region")
EquivalentClasses(obo:BSPO_0000064 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000056) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000067)))
SubClassOf(obo:BSPO_0000064 obo:BSPO_0000072)
SubClassOf(obo:BSPO_0000064 obo:BSPO_0000083)

# Class: obo:BSPO_0000065 (ipsilateral side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000065 "On the same side")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000065 "FBcv:0000062")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000065 "FBql:00005850")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000065 "ipsilateral")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000065 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000065 "BSPO:0000065")
AnnotationAssertion(rdfs:comment obo:BSPO_0000065 "inherited from flybase cv. not clear how this would be used. Suggest we obsolete, and use the corresponding relation.")
AnnotationAssertion(rdfs:label obo:BSPO_0000065 "ipsilateral side")
SubClassOf(obo:BSPO_0000065 obo:BSPO_0000054)

# Class: obo:BSPO_0000066 (lateral side)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000066 "FBcv:0000063")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000066 "FBql:00005844")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000066 "lateral")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000066 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000066 "BSPO:0000066")
AnnotationAssertion(rdfs:label obo:BSPO_0000066 "lateral side")
SubClassOf(obo:BSPO_0000066 obo:BSPO_0000054)

# Class: obo:BSPO_0000067 (medial side)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000067 "FBcv:0000064")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000067 "FBql:00005847")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000067 "medial")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000067 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000067 "BSPO:0000067")
AnnotationAssertion(rdfs:comment obo:BSPO_0000067 "a point in the centre of the organism (where the left-right axis intersects the midsagittal plane)")
AnnotationAssertion(rdfs:label obo:BSPO_0000067 "medial side")
SubClassOf(obo:BSPO_0000067 obo:BSPO_0000054)

# Class: obo:BSPO_0000068 (ventral side)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:RW") Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000068 "An anatomical region that is the entire part of an anatomical structure ventral to a horizontal plane and bounded on one side by the same horizontal plane.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000068 "FBcv:0000070")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000068 "FBql:00005843")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000068 "ventral")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000068 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000068 "BSPO:0000068")
AnnotationAssertion(rdfs:label obo:BSPO_0000068 "ventral side")
SubClassOf(obo:BSPO_0000068 obo:BSPO_0000054)
SubClassOf(obo:BSPO_0000068 ObjectSomeValuesFrom(obo:BSPO_0015001 obo:BSPO_0000016))

# Class: obo:BSPO_0000069 (dorso-medial region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000069 "Anatomical region that overlaps the dorsal and medial regions of the body or body part.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000069 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000069 "2009-09-10T08:57:22Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000069 "dorsomedial region")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000069 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000069 "BSPO:0000069")
AnnotationAssertion(rdfs:label obo:BSPO_0000069 "dorso-medial region")
EquivalentClasses(obo:BSPO_0000069 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000063) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000067)))
SubClassOf(obo:BSPO_0000069 obo:BSPO_0000079)
SubClassOf(obo:BSPO_0000069 obo:BSPO_0000083)

# Class: obo:BSPO_0000070 (anatomical region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000070 "A 3D region in space without well-defined compartmental boundaries; for example, the dorsal region of an ectoderm.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000070 "FBql:00005841")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000070 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000070 "BSPO:0000070")
AnnotationAssertion(rdfs:comment obo:BSPO_0000070 "to be merged into CARO")
AnnotationAssertion(rdfs:label obo:BSPO_0000070 "anatomical region")
SubClassOf(obo:BSPO_0000070 obo:CARO_0000003)

# Class: obo:BSPO_0000071 (anterior region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000071 "Anatomical region anteriorly located on the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000071 "FBql:00005848")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000071 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000071 "BSPO:0000071")
AnnotationAssertion(rdfs:label obo:BSPO_0000071 "anterior region")
EquivalentClasses(obo:BSPO_0000071 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000055)))
SubClassOf(obo:BSPO_0000071 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000071 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000055))

# Class: obo:BSPO_0000072 (posterior region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000072 "Anatomical region posteriorly located on the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000072 "FBql:00005849")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000072 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000072 "BSPO:0000072")
AnnotationAssertion(rdfs:label obo:BSPO_0000072 "posterior region")
EquivalentClasses(obo:BSPO_0000072 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000056)))
SubClassOf(obo:BSPO_0000072 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000072 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000056))

# Class: obo:BSPO_0000073 (apical region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000073 "Anatomical region located on the apical end on the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000073 "FBql:00005854")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000073 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000073 "BSPO:0000073")
AnnotationAssertion(rdfs:label obo:BSPO_0000073 "apical region")
EquivalentClasses(obo:BSPO_0000073 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000057)))
SubClassOf(obo:BSPO_0000073 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000073 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000057))

# Class: obo:BSPO_0000074 (basal region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000074 "Anatomical region located basally on the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000074 "FBql:00005855")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000074 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000074 "BSPO:0000074")
AnnotationAssertion(rdfs:label obo:BSPO_0000074 "basal region")
EquivalentClasses(obo:BSPO_0000074 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000058)))
SubClassOf(obo:BSPO_0000074 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000074 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000058))

# Class: obo:BSPO_0000075 (central region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000075 "Anatomical region centrally located on the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000075 "FBql:00015851")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000075 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000075 "BSPO:0000075")
AnnotationAssertion(rdfs:label obo:BSPO_0000075 "central region")
EquivalentClasses(obo:BSPO_0000075 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000059)))
SubClassOf(obo:BSPO_0000075 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000075 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000059))

# Class: obo:BSPO_0000076 (contralateral region)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000076 "FBql:00005851")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000076 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000076 "BSPO:0000076")
AnnotationAssertion(rdfs:comment obo:BSPO_0000076 "inherited from flybase cv. not clear how this would be used")
AnnotationAssertion(rdfs:label obo:BSPO_0000076 "contralateral region")
EquivalentClasses(obo:BSPO_0000076 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000060)))
SubClassOf(obo:BSPO_0000076 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000076 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000060))

# Class: obo:BSPO_0000077 (proximal region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000077 "Anatomical region proximally located on the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000077 "FBql:00005852")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000077 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000077 "BSPO:0000077")
AnnotationAssertion(rdfs:label obo:BSPO_0000077 "proximal region")
EquivalentClasses(obo:BSPO_0000077 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000061)))
SubClassOf(obo:BSPO_0000077 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000077 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000061))

# Class: obo:BSPO_0000078 (distal region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000078 "Anatomical region distally located on the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000078 "FBql:00005853")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000078 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000078 "BSPO:0000078")
AnnotationAssertion(rdfs:label obo:BSPO_0000078 "distal region")
EquivalentClasses(obo:BSPO_0000078 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000062)))
SubClassOf(obo:BSPO_0000078 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000078 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000062))

# Class: obo:BSPO_0000079 (dorsal region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000079 "Anatomical region dorsally located on the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000079 "FBql:00005842")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000079 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000079 "BSPO:0000079")
AnnotationAssertion(rdfs:label obo:BSPO_0000079 "dorsal region")
EquivalentClasses(obo:BSPO_0000079 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000063)))
SubClassOf(obo:BSPO_0000079 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000079 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000063))

# Class: obo:BSPO_0000080 (dorso-lateral region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000080 "Anatomical region that overlaps the dorsal and lateral regions of a body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000080 "FBql:00005845")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000080 "dorsolateral region")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000080 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000080 "BSPO:0000080")
AnnotationAssertion(rdfs:label obo:BSPO_0000080 "dorso-lateral region")
EquivalentClasses(obo:BSPO_0000080 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000063) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000066)))
SubClassOf(obo:BSPO_0000080 obo:BSPO_0000079)
SubClassOf(obo:BSPO_0000080 obo:BSPO_0000082)

# Class: obo:BSPO_0000081 (ipsilateral region)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000081 "FBql:00005850")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000081 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000081 "BSPO:0000081")
AnnotationAssertion(rdfs:label obo:BSPO_0000081 "ipsilateral region")
EquivalentClasses(obo:BSPO_0000081 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000065)))
SubClassOf(obo:BSPO_0000081 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000081 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000065))

# Class: obo:BSPO_0000082 (lateral region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000082 "Anatomical region laterally located on the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000082 "FBql:00005844")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000082 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000082 "BSPO:0000082")
AnnotationAssertion(rdfs:label obo:BSPO_0000082 "lateral region")
EquivalentClasses(obo:BSPO_0000082 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000066)))
SubClassOf(obo:BSPO_0000082 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000082 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000066))

# Class: obo:BSPO_0000083 (medial region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000083 "Anatomical region medially located on the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000083 "FBql:00005847")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000083 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000083 "BSPO:0000083")
AnnotationAssertion(rdfs:label obo:BSPO_0000083 "medial region")
EquivalentClasses(obo:BSPO_0000083 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000067)))
SubClassOf(obo:BSPO_0000083 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000083 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000067))

# Class: obo:BSPO_0000084 (ventral region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000084 "Anatomical region ventrally located on the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000084 "FBql:00005843")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000084 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000084 "BSPO:0000084")
AnnotationAssertion(rdfs:label obo:BSPO_0000084 "ventral region")
EquivalentClasses(obo:BSPO_0000084 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000068)))
SubClassOf(obo:BSPO_0000084 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000084 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000068))

# Class: obo:BSPO_0000085 (ventro-lateral region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000085 "Anatomical region that overlaps the ventral and lateral regions of a body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000085 "FBql:00005846")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000085 "ventrolateral region")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000085 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000085 "BSPO:0000085")
AnnotationAssertion(rdfs:comment obo:BSPO_0000085 "This is an example of a composition of two axis positions.")
AnnotationAssertion(rdfs:label obo:BSPO_0000085 "ventro-lateral region")
EquivalentClasses(obo:BSPO_0000085 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000066) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000068)))
SubClassOf(obo:BSPO_0000085 obo:BSPO_0000082)
SubClassOf(obo:BSPO_0000085 obo:BSPO_0000084)

# Class: obo:BSPO_0000086 (anatomical compartment)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000086 "FBql:00005873")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000086 "FMA:9647")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000086 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000086 "BSPO:0000086")
AnnotationAssertion(rdfs:comment obo:BSPO_0000086 "to be merged into CARO")
AnnotationAssertion(rdfs:label obo:BSPO_0000086 "anatomical compartment")
SubClassOf(obo:BSPO_0000086 obo:CARO_0000003)

# Class: obo:BSPO_0000087 (anterior compartment)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000087 "FBcv:0000031")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000087 "FBql:00005874")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000087 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000087 "BSPO:0000087")
AnnotationAssertion(rdfs:label obo:BSPO_0000087 "anterior compartment")
SubClassOf(obo:BSPO_0000087 obo:BSPO_0000086)

# Class: obo:BSPO_0000088 (compartment boundary)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000088 "FBcv:0000032")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000088 "FBql:00005878")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000088 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000088 "BSPO:0000088")
AnnotationAssertion(rdfs:label obo:BSPO_0000088 "compartment boundary")
SubClassOf(obo:BSPO_0000088 obo:BSPO_0000086)

# Class: obo:BSPO_0000089 (dorsal compartment)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000089 "FBcv:0000035")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000089 "FBql:00005876")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000089 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000089 "BSPO:0000089")
AnnotationAssertion(rdfs:label obo:BSPO_0000089 "dorsal compartment")
SubClassOf(obo:BSPO_0000089 obo:BSPO_0000086)

# Class: obo:BSPO_0000090 (posterior compartment)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000090 "FBcv:0000036")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000090 "FBql:00005875")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000090 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000090 "BSPO:0000090")
AnnotationAssertion(rdfs:label obo:BSPO_0000090 "posterior compartment")
SubClassOf(obo:BSPO_0000090 obo:BSPO_0000086)

# Class: obo:BSPO_0000091 (ventral compartment)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000091 "FBcv:0000037")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000091 "FBql:00005877")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000091 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000091 "BSPO:0000091")
AnnotationAssertion(rdfs:label obo:BSPO_0000091 "ventral compartment")
SubClassOf(obo:BSPO_0000091 obo:BSPO_0000086)

# Class: obo:BSPO_0000092 (anatomical compartment boundary)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000092 "FBql:00005881")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000092 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000092 "BSPO:0000092")
AnnotationAssertion(rdfs:comment obo:BSPO_0000092 "to be merged into CARO")
AnnotationAssertion(rdfs:label obo:BSPO_0000092 "anatomical compartment boundary")
SubClassOf(obo:BSPO_0000092 obo:CARO_0000010)

# Class: obo:BSPO_0000093 (anterior/posterior compartment boundary)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000093 "FBcv:0000033")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000093 "FBql:00005880")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000093 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000093 "BSPO:0000093")
AnnotationAssertion(rdfs:label obo:BSPO_0000093 "anterior/posterior compartment boundary")
SubClassOf(obo:BSPO_0000093 obo:BSPO_0000092)

# Class: obo:BSPO_0000094 (dorsal/ventral compartment boundary)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000094 "FBcv:0000034")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000094 "FBql:00005879")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000094 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000094 "BSPO:0000094")
AnnotationAssertion(rdfs:label obo:BSPO_0000094 "dorsal/ventral compartment boundary")
SubClassOf(obo:BSPO_0000094 obo:BSPO_0000092)

# Class: obo:BSPO_0000112 (ventro-medial region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000112 "The region corresponding to the ventral region of the entity, towards the midline.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000112 "Melissa  Haendel")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000112 "2009-09-10T08:57:54Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000112 "medioventral region")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000112 "ventromedial region")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000112 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000112 "BSPO:0000112")
AnnotationAssertion(rdfs:label obo:BSPO_0000112 "ventro-medial region")
EquivalentClasses(obo:BSPO_0000112 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000067) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000068)))
SubClassOf(obo:BSPO_0000112 obo:BSPO_0000083)
SubClassOf(obo:BSPO_0000112 obo:BSPO_0000084)

# Class: obo:BSPO_0000127 (peripheral region)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000127 "Anatomical region peripherally located on the body or body part.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000127 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000127 "BSPO:0000127")
AnnotationAssertion(rdfs:label obo:BSPO_0000127 "peripheral region")
EquivalentClasses(obo:BSPO_0000127 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000129)))
SubClassOf(obo:BSPO_0000127 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000127 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000129))

# Class: obo:BSPO_0000128 (axial region)

AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000128 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000128 "BSPO:0000128")
AnnotationAssertion(rdfs:label obo:BSPO_0000128 "axial region")
EquivalentClasses(obo:BSPO_0000128 ObjectIntersectionOf(obo:BSPO_0000070 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000130)))
SubClassOf(obo:BSPO_0000128 obo:BSPO_0000070)
SubClassOf(obo:BSPO_0000128 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000130))

# Class: obo:BSPO_0000129 (peripheral side)

AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000129 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000129 "BSPO:0000129")
AnnotationAssertion(rdfs:label obo:BSPO_0000129 "peripheral side")
SubClassOf(obo:BSPO_0000129 obo:BSPO_0000054)

# Class: obo:BSPO_0000130 (axial side)

AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000130 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000130 "BSPO:0000130")
AnnotationAssertion(rdfs:label obo:BSPO_0000130 "axial side")
SubClassOf(obo:BSPO_0000130 obo:BSPO_0000054)

# Class: obo:BSPO_0000195 (adaxial-abaxial axis)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:RW") obo:IAO_0000115 obo:BSPO_0000195 "An anatomical axis that extends from the side of the anatomical entity that is closer to an axis (adaxial) to the side that is further from the same axis (abaxial).")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000195 "wasila.dahdul")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000195 "2013-07-02T11:20:29Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000195 "AA axis")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000195 "spatial")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_0000195 "dorsal-ventral axis")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000195 "BSPO:0000195")
AnnotationAssertion(rdfs:label obo:BSPO_0000195 "adaxial-abaxial axis")
SubClassOf(obo:BSPO_0000195 obo:BSPO_0000010)

# Class: obo:BSPO_0000196 (medial-external axis)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0000196 "An anatomical axis that extends from the center of the body outwards or externally.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000196 "wasila.dahdul")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000196 "2013-07-02T11:21:42Z")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000196 "spatial")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_0000196 "proximal-distal axis")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000196 "BSPO:0000196")
AnnotationAssertion(rdfs:comment obo:BSPO_0000196 "The medial-external axis could apply to a sphere-shaped body.")
AnnotationAssertion(rdfs:label obo:BSPO_0000196 "medial-external axis")
SubClassOf(obo:BSPO_0000196 obo:BSPO_0000010)

# Class: obo:BSPO_0000197 (medial-radial axis)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:curators") obo:IAO_0000115 obo:BSPO_0000197 "An anatomical axis that is perpendicular to an apical/basal axis or proximal/distal axis and extends from the center of an axis (shoot axis or root in the case of plants) to any point on the exterior of the axis.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000197 "wasila.dahdul")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000197 "2013-07-02T11:23:31Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000197 "M-R axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000197 "MR axis")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000197 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000197 "BSPO:0000197")
AnnotationAssertion(rdfs:comment obo:BSPO_0000197 "In plants, lateral growth (http://purl.obolibrary.org/obo/GO_0080190) run is along the medial/radial axis (from medial to radial) [RW].  Also applies to radially symmetrical animals such as sea urchins, cnidarians [PM] or applies to more-or-less cylindrical body parts in animals, like limbs.")
AnnotationAssertion(rdfs:label obo:BSPO_0000197 "medial-radial axis")
SubClassOf(obo:BSPO_0000197 obo:BSPO_0000196)

# Class: obo:BSPO_0000198 (oral-aboral axis)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:PM") obo:IAO_0000115 obo:BSPO_0000198 "An axis that extends from the oral opening to the furthest point in an organism that is directly opposite.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000198 "wasila.dahdul")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000198 "2013-07-02T11:29:33Z")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000198 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000198 "BSPO:0000198")
AnnotationAssertion(rdfs:label obo:BSPO_0000198 "oral-aboral axis")
SubClassOf(obo:BSPO_0000198 obo:BSPO_0000010)

# Class: obo:BSPO_0000199 (animal-vegetal axis)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:PM") obo:IAO_0000115 obo:BSPO_0000199 "An axis that extends from the animal end of an egg or early embryo to the opposite, vegetal end. In animals with yolk-bearing eggs, the vegetal end is the yolk bearing pole. (pertains to animals only - both vertebrate and invertebrate embryos).")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000199 "wasila.dahdul")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000199 "2013-07-02T11:30:13Z")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000199 "A-V axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000199 "AV axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000199 "animal/vegetal axis")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000199 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000199 "BSPO:0000199")
AnnotationAssertion(rdfs:label obo:BSPO_0000199 "animal-vegetal axis")
SubClassOf(obo:BSPO_0000199 obo:BSPO_0000010)

# Class: obo:BSPO_0000200 (apical-basal axis relative to direction of growth)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:RW") obo:IAO_0000115 obo:BSPO_0000200 "An axis of a plant structure that is determined by the direction of apical growth, either by an apical meristem or an apical cell. Apical is toward the direction of apical growth: toward the tip of a growing shoot axis, root, thallus, or non-vascular leaf. Basal is away from the direction of apical growth: toward the root-shoot junction in the case of the primary root or stem, toward the primary root or stem for higher order roots or branches, toward the point of attachment for non-vascular leaves, and toward the original point of growth (as determined in the embryo) for thalli.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000200 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000200 "BSPO:0000200")
AnnotationAssertion(rdfs:comment obo:BSPO_0000200 "Plant structures that do not grow from an apical meristem, such as vascular leaves or petals, should be described using the proximal-distal axis. The proximal-distal axis may also be used for branches or lateral roots, and, in those cases, is concordant with the apical-basal axis.")
AnnotationAssertion(rdfs:label obo:BSPO_0000200 "apical-basal axis relative to direction of growth")
SubClassOf(obo:BSPO_0000200 obo:BSPO_0000010)

# Class: obo:BSPO_0000201 (tangential plane)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000201 "Anatomical plane that is perpendicular to a radial plane.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000201 "wasila.dahdul")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000201 "2014-01-22T15:34:31Z")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000201 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000201 "BSPO:0000201")
AnnotationAssertion(rdfs:comment obo:BSPO_0000201 "Need to add logical definitions.")
AnnotationAssertion(rdfs:label obo:BSPO_0000201 "tangential plane")
SubClassOf(obo:BSPO_0000201 obo:BSPO_0000400)

# Class: obo:BSPO_0000202 (radial plane)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000202 "Anatomical plane that follows the two dimensions specified by an apical-basal axis relative to direction of growth and a medial-lateral axis.")
AnnotationAssertion(oboInOwl:created_by obo:BSPO_0000202 "wasila.dahdul")
AnnotationAssertion(oboInOwl:creation_date obo:BSPO_0000202 "2014-01-22T15:34:02Z")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000202 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000202 "BSPO:0000202")
AnnotationAssertion(rdfs:comment obo:BSPO_0000202 "Need to add logical definitions.")
AnnotationAssertion(rdfs:label obo:BSPO_0000202 "radial plane")
SubClassOf(obo:BSPO_0000202 obo:BSPO_0000400)

# Class: obo:BSPO_0000371 (anterior surface)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000371 "Anatomical surface that is located on the anterior side of the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000371 "FBql:00005848")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000371 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000371 "BSPO:0000371")
AnnotationAssertion(rdfs:label obo:BSPO_0000371 "anterior surface")
EquivalentClasses(obo:BSPO_0000371 ObjectIntersectionOf(obo:BSPO_0000005 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000055)))
SubClassOf(obo:BSPO_0000371 obo:BSPO_0000005)
SubClassOf(obo:BSPO_0000371 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000055))

# Class: obo:BSPO_0000372 (posterior surface)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000372 "Anatomical surface that is located on the posterior side of the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000372 "FBql:00005849")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000372 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000372 "BSPO:0000372")
AnnotationAssertion(rdfs:label obo:BSPO_0000372 "posterior surface")
EquivalentClasses(obo:BSPO_0000372 ObjectIntersectionOf(obo:BSPO_0000005 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000056)))
SubClassOf(obo:BSPO_0000372 obo:BSPO_0000005)
SubClassOf(obo:BSPO_0000372 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000056))

# Class: obo:BSPO_0000373 (apical surface)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000373 "Anatomical surface that is located on the apical side of the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000373 "FBql:00005854")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000373 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000373 "BSPO:0000373")
AnnotationAssertion(rdfs:label obo:BSPO_0000373 "apical surface")
EquivalentClasses(obo:BSPO_0000373 ObjectIntersectionOf(obo:BSPO_0000005 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000057)))
SubClassOf(obo:BSPO_0000373 obo:BSPO_0000005)
SubClassOf(obo:BSPO_0000373 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000057))

# Class: obo:BSPO_0000374 (basal surface)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000374 "Anatomical surface that is located on the basal side of the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000374 "FBql:00005855")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000374 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000374 "BSPO:0000374")
AnnotationAssertion(rdfs:label obo:BSPO_0000374 "basal surface")
EquivalentClasses(obo:BSPO_0000374 ObjectIntersectionOf(obo:BSPO_0000005 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000058)))
SubClassOf(obo:BSPO_0000374 obo:BSPO_0000005)
SubClassOf(obo:BSPO_0000374 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000058))

# Class: obo:BSPO_0000376 (contralateral surface)

AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000376 "FBql:00005851")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000376 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000376 "BSPO:0000376")
AnnotationAssertion(rdfs:label obo:BSPO_0000376 "contralateral surface")
EquivalentClasses(obo:BSPO_0000376 ObjectIntersectionOf(obo:BSPO_0000005 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000060)))
SubClassOf(obo:BSPO_0000376 obo:BSPO_0000005)
SubClassOf(obo:BSPO_0000376 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000060))

# Class: obo:BSPO_0000377 (proximal surface)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000377 "Anatomical surface that is located on the proximal side of the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000377 "FBql:00005852")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000377 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000377 "BSPO:0000377")
AnnotationAssertion(rdfs:label obo:BSPO_0000377 "proximal surface")
EquivalentClasses(obo:BSPO_0000377 ObjectIntersectionOf(obo:BSPO_0000005 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000061)))
SubClassOf(obo:BSPO_0000377 obo:BSPO_0000005)
SubClassOf(obo:BSPO_0000377 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000061))

# Class: obo:BSPO_0000378 (distal surface)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000378 "Anatomical surface that is located on the distal side of the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000378 "FBql:00005853")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000378 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000378 "BSPO:0000378")
AnnotationAssertion(rdfs:label obo:BSPO_0000378 "distal surface")
EquivalentClasses(obo:BSPO_0000378 ObjectIntersectionOf(obo:BSPO_0000005 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000062)))
SubClassOf(obo:BSPO_0000378 obo:BSPO_0000005)
SubClassOf(obo:BSPO_0000378 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000062))

# Class: obo:BSPO_0000379 (dorsal surface)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000379 "Anatomical surface that located on the dorsal side of the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000379 "FBql:00005842")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000379 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000379 "BSPO:0000379")
AnnotationAssertion(rdfs:label obo:BSPO_0000379 "dorsal surface")
EquivalentClasses(obo:BSPO_0000379 ObjectIntersectionOf(obo:BSPO_0000005 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000063)))
SubClassOf(obo:BSPO_0000379 obo:BSPO_0000005)
SubClassOf(obo:BSPO_0000379 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000063))

# Class: obo:BSPO_0000381 (ipsilateral surface)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000381 "Anatomical surface that is located on the same side of an organism or structure.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000381 "FBql:00005850")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000381 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000381 "BSPO:0000381")
AnnotationAssertion(rdfs:label obo:BSPO_0000381 "ipsilateral surface")
EquivalentClasses(obo:BSPO_0000381 ObjectIntersectionOf(obo:BSPO_0000005 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000065)))
SubClassOf(obo:BSPO_0000381 obo:BSPO_0000005)
SubClassOf(obo:BSPO_0000381 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000065))

# Class: obo:BSPO_0000382 (lateral surface)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000382 "Anatomical surface that located on the lateral side of the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000382 "FBql:00005844")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000382 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000382 "BSPO:0000382")
AnnotationAssertion(rdfs:label obo:BSPO_0000382 "lateral surface")
EquivalentClasses(obo:BSPO_0000382 ObjectIntersectionOf(obo:BSPO_0000005 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000066)))
SubClassOf(obo:BSPO_0000382 obo:BSPO_0000005)
SubClassOf(obo:BSPO_0000382 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000066))

# Class: obo:BSPO_0000383 (medial surface)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000383 "Anatomical surface that located on the medial side of the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000383 "FBql:00005847")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000383 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000383 "BSPO:0000383")
AnnotationAssertion(rdfs:label obo:BSPO_0000383 "medial surface")
EquivalentClasses(obo:BSPO_0000383 ObjectIntersectionOf(obo:BSPO_0000005 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000067)))
SubClassOf(obo:BSPO_0000383 obo:BSPO_0000005)
SubClassOf(obo:BSPO_0000383 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000067))

# Class: obo:BSPO_0000384 (ventral surface)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000384 "Anatomical surface that is located on the ventral side of the body or body part.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000384 "FBql:00005843")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000384 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000384 "BSPO:0000384")
AnnotationAssertion(rdfs:label obo:BSPO_0000384 "ventral surface")
EquivalentClasses(obo:BSPO_0000384 ObjectIntersectionOf(obo:BSPO_0000005 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000068)))
SubClassOf(obo:BSPO_0000384 obo:BSPO_0000005)
SubClassOf(obo:BSPO_0000384 ObjectSomeValuesFrom(obo:BSPO_0015008 obo:BSPO_0000068))

# Class: obo:BSPO_0000400 (anatomical plane)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0000400 "A flat 2D plane intersecting an anatomical continuant, dividing it into two adjacent portions.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000400 "FMA:242982")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000400 "anatomical cross-section")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000400 "anatomical section")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000400 "plane")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000400 "section")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000400 "spatial")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_0000400 "cross-section")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000400 "BSPO:0000400")
AnnotationAssertion(rdfs:comment obo:BSPO_0000400 "These anatomical sections are applicable to most bilaterally symmetrical animals, but bipedal animals such as humans have more complex usage of these terms. For example, in post-embryonic humans a coronal plane is vertical and a transverse plane is horizontal, but for embryos and quadrupeds a coronal plane is horizontal and a transverse plane is vertical.")
AnnotationAssertion(rdfs:label obo:BSPO_0000400 "anatomical plane")
SubClassOf(obo:BSPO_0000400 obo:CARO_0000010)

# Class: obo:BSPO_0000417 (sagittal plane)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:DOS") Annotation(oboInOwl:hasDbXref "BSPO:cjm") Annotation(oboInOwl:hasDbXref "BSPO:mah") obo:IAO_0000115 obo:BSPO_0000417 "Anatomical plane that divides a bilateral body into left and right parts, not necessarily of even size.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0000417 "FMA:11361")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000417 "left/right plane")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000417 "median plane")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000417 "sagittal section")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000417 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000417 "BSPO:0000417")
AnnotationAssertion(rdfs:label obo:BSPO_0000417 "sagittal plane")
EquivalentClasses(obo:BSPO_0000417 ObjectIntersectionOf(obo:BSPO_0000400 ObjectSomeValuesFrom(obo:BSPO_0001102 obo:BSPO_0000013) ObjectSomeValuesFrom(obo:BSPO_0001102 obo:BSPO_0000016) ObjectSomeValuesFrom(obo:BSPO_0015005 obo:BSPO_0000017)))
SubClassOf(obo:BSPO_0000417 obo:BSPO_0000010)
SubClassOf(obo:BSPO_0000417 obo:BSPO_0000400)
SubClassOf(obo:BSPO_0000417 ObjectSomeValuesFrom(obo:BSPO_0001102 obo:BSPO_0000013))
SubClassOf(obo:BSPO_0000417 ObjectSomeValuesFrom(obo:BSPO_0001102 obo:BSPO_0000016))
SubClassOf(obo:BSPO_0000417 ObjectSomeValuesFrom(obo:BSPO_0015005 obo:BSPO_0000017))

# Class: obo:BSPO_0000671 (anterior margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000671 "Anatomical margin that is located on the anterior side of a body or body part.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000671 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000671 "BSPO:0000671")
AnnotationAssertion(rdfs:label obo:BSPO_0000671 "anterior margin")
EquivalentClasses(obo:BSPO_0000671 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000055)))
SubClassOf(obo:BSPO_0000671 obo:BSPO_0000006)
SubClassOf(obo:BSPO_0000671 obo:BSPO_0000071)

# Class: obo:BSPO_0000672 (posterior margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000672 "Anatomical margin that is located on the posterior side of the body or body part.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000672 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000672 "BSPO:0000672")
AnnotationAssertion(rdfs:label obo:BSPO_0000672 "posterior margin")
EquivalentClasses(obo:BSPO_0000672 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000056)))
SubClassOf(obo:BSPO_0000672 obo:BSPO_0000006)
SubClassOf(obo:BSPO_0000672 obo:BSPO_0000072)

# Class: obo:BSPO_0000673 (apical margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000673 "Anatomical margin that is located on the apical side of the body or body part.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000673 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000673 "BSPO:0000673")
AnnotationAssertion(rdfs:label obo:BSPO_0000673 "apical margin")
EquivalentClasses(obo:BSPO_0000673 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000057)))
SubClassOf(obo:BSPO_0000673 obo:BSPO_0000006)
SubClassOf(obo:BSPO_0000673 obo:BSPO_0000073)

# Class: obo:BSPO_0000674 (basal margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000674 "Anatomical margin that is located on the basal side of the body or body part.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000674 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000674 "BSPO:0000674")
AnnotationAssertion(rdfs:label obo:BSPO_0000674 "basal margin")
EquivalentClasses(obo:BSPO_0000674 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000058)))
SubClassOf(obo:BSPO_0000674 obo:BSPO_0000006)
SubClassOf(obo:BSPO_0000674 obo:BSPO_0000074)

# Class: obo:BSPO_0000677 (proximal margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000677 "Anatomical margin that is located on the proximal region of the body or body part.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000677 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000677 "BSPO:0000677")
AnnotationAssertion(rdfs:label obo:BSPO_0000677 "proximal margin")
EquivalentClasses(obo:BSPO_0000677 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000061)))
SubClassOf(obo:BSPO_0000677 obo:BSPO_0000006)
SubClassOf(obo:BSPO_0000677 obo:BSPO_0000077)

# Class: obo:BSPO_0000678 (distal margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000678 "Anatomical margin that is located on the distal side of the body or body part.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000678 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000678 "BSPO:0000678")
AnnotationAssertion(rdfs:label obo:BSPO_0000678 "distal margin")
EquivalentClasses(obo:BSPO_0000678 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000062)))
SubClassOf(obo:BSPO_0000678 obo:BSPO_0000006)
SubClassOf(obo:BSPO_0000678 obo:BSPO_0000078)

# Class: obo:BSPO_0000679 (dorsal margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000679 "Anatomical margin that is located on the dorsal side of body or body part.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000679 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000679 "BSPO:0000679")
AnnotationAssertion(rdfs:label obo:BSPO_0000679 "dorsal margin")
EquivalentClasses(obo:BSPO_0000679 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000063)))
SubClassOf(obo:BSPO_0000679 obo:BSPO_0000006)
SubClassOf(obo:BSPO_0000679 obo:BSPO_0000079)

# Class: obo:BSPO_0000680 (dorso-lateral margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000680 "Anatomical margin that is located on the dorso-lateral region of the body or body part.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000680 "dorsolateral margin")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000680 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000680 "BSPO:0000680")
AnnotationAssertion(rdfs:label obo:BSPO_0000680 "dorso-lateral margin")
EquivalentClasses(obo:BSPO_0000680 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000063) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000066)))
SubClassOf(obo:BSPO_0000680 obo:BSPO_0000080)
SubClassOf(obo:BSPO_0000680 obo:BSPO_0000679)
SubClassOf(obo:BSPO_0000680 obo:BSPO_0000682)

# Class: obo:BSPO_0000682 (lateral margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000682 "Anatomical margin that is located on the lateral side of the body or body part.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000682 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000682 "BSPO:0000682")
AnnotationAssertion(rdfs:label obo:BSPO_0000682 "lateral margin")
EquivalentClasses(obo:BSPO_0000682 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000066)))
SubClassOf(obo:BSPO_0000682 obo:BSPO_0000006)
SubClassOf(obo:BSPO_0000682 obo:BSPO_0000082)

# Class: obo:BSPO_0000683 (medial margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000683 "Anatomical margin that is located on the medial side of the body or body part.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000683 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000683 "BSPO:0000683")
AnnotationAssertion(rdfs:label obo:BSPO_0000683 "medial margin")
EquivalentClasses(obo:BSPO_0000683 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000067)))
SubClassOf(obo:BSPO_0000683 obo:BSPO_0000006)
SubClassOf(obo:BSPO_0000683 obo:BSPO_0000083)

# Class: obo:BSPO_0000684 (ventral margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000684 "Anatomical margin that is located on the ventral side of the body or body part.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000684 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000684 "BSPO:0000684")
AnnotationAssertion(rdfs:label obo:BSPO_0000684 "ventral margin")
EquivalentClasses(obo:BSPO_0000684 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000068)))
SubClassOf(obo:BSPO_0000684 obo:BSPO_0000006)
SubClassOf(obo:BSPO_0000684 obo:BSPO_0000084)

# Class: obo:BSPO_0000685 (ventro-lateral margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000685 "Anatomical margin that is located on the ventro-lateral region of the body or body part.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000685 "ventrolateral margin")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000685 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000685 "BSPO:0000685")
AnnotationAssertion(rdfs:comment obo:BSPO_0000685 "This is an example of a composition of two axis positions")
AnnotationAssertion(rdfs:label obo:BSPO_0000685 "ventro-lateral margin")
EquivalentClasses(obo:BSPO_0000685 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000066) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000068)))
SubClassOf(obo:BSPO_0000685 obo:BSPO_0000085)
SubClassOf(obo:BSPO_0000685 obo:BSPO_0000682)
SubClassOf(obo:BSPO_0000685 obo:BSPO_0000684)

# Class: obo:BSPO_0000686 (antero-dorsal margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000686 "Anatomical margin that is located on the antero-dorso region of the body or body part.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000686 "anterodorsal margin")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000686 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000686 "BSPO:0000686")
AnnotationAssertion(rdfs:label obo:BSPO_0000686 "antero-dorsal margin")
EquivalentClasses(obo:BSPO_0000686 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000055) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000063)))
SubClassOf(obo:BSPO_0000686 obo:BSPO_0000026)
SubClassOf(obo:BSPO_0000686 obo:BSPO_0000671)
SubClassOf(obo:BSPO_0000686 obo:BSPO_0000679)

# Class: obo:BSPO_0000687 (postero-dorsal margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000687 "Anatomical margin that is located on the postero-dorsal region of the body or body part.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000687 "posterodorsal margin")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000687 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000687 "BSPO:0000687")
AnnotationAssertion(rdfs:label obo:BSPO_0000687 "postero-dorsal margin")
EquivalentClasses(obo:BSPO_0000687 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000056) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000063)))
SubClassOf(obo:BSPO_0000687 obo:BSPO_0000030)
SubClassOf(obo:BSPO_0000687 obo:BSPO_0000672)
SubClassOf(obo:BSPO_0000687 obo:BSPO_0000679)

# Class: obo:BSPO_0000688 (antero-ventral margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000688 "Anatomical margin that is located on the antero-ventral region of the body or body part.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000688 "anteroventral margin")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000688 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000688 "BSPO:0000688")
AnnotationAssertion(rdfs:label obo:BSPO_0000688 "antero-ventral margin")
EquivalentClasses(obo:BSPO_0000688 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000055) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000068)))
SubClassOf(obo:BSPO_0000688 obo:BSPO_0000027)
SubClassOf(obo:BSPO_0000688 obo:BSPO_0000671)
SubClassOf(obo:BSPO_0000688 obo:BSPO_0000684)

# Class: obo:BSPO_0000689 (postero-ventral margin)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:wd") obo:IAO_0000115 obo:BSPO_0000689 "Anatomical margin that is located on the postero-ventral region of the body or body part.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0000689 "posteroventral margin")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0000689 "spatial")
AnnotationAssertion(oboInOwl:id obo:BSPO_0000689 "BSPO:0000689")
AnnotationAssertion(rdfs:label obo:BSPO_0000689 "postero-ventral margin")
EquivalentClasses(obo:BSPO_0000689 ObjectIntersectionOf(obo:BSPO_0000006 ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000056) ObjectSomeValuesFrom(obo:RO_0002131 obo:BSPO_0000068)))
SubClassOf(obo:BSPO_0000689 obo:BSPO_0000035)
SubClassOf(obo:BSPO_0000689 obo:BSPO_0000672)
SubClassOf(obo:BSPO_0000689 obo:BSPO_0000684)

# Class: obo:BSPO_0001001 (medial-lateral axis)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "BSPO:cjm") obo:IAO_0000115 obo:BSPO_0001001 "An axis that extends from the center of organism to one or other side.")
AnnotationAssertion(oboInOwl:hasDbXref obo:BSPO_0001001 "http://upload.wikimedia.org/wikipedia/commons/3/34/Anatomical_Directions_and_Axes.JPG")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0001001 "M-L axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0001001 "ML axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0001001 "medio-lateral axis")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:BSPO_0001001 "mediolateral axis")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BSPO_0001001 "spatial")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:BSPO_0001001 "proximal-distal axis ")
AnnotationAssertion(oboInOwl:id obo:BSPO_0001001 "BSPO:0001001")
AnnotationAssertion(rdfs:comment obo:BSPO_0001001 "Properly, the ML axis is a half axis; practically, its usage is less clumsy and less linguistically biased than \"left-right\". The terms may still be used relatively to describe locations along the LR axis. The gills are medial to the operculum, but lateral to the heart.")
AnnotationAssertion(rdfs:label obo:BSPO_0001001 "medial-lateral axis")
SubClassOf(obo:BSPO_0001001 obo:BSPO_0000196)

# Class: obo:CARO_0000000 (anatomical entity)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "CAROC:Brownsville2014") obo:IAO_0000115 obo:CARO_0000000 "A part of a cellular organism that is either an immaterial entity or a material entity with granularity above the level of a protein complex.  Or, a substance produced by a cellular organism with granularity above the level of a protein complex.")
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "CARO:MAH") obo:IAO_0000115 obo:CARO_0000000 "Biological entity that is either an individual member of a biological species or constitutes the structural organization of an individual member of a biological species.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:CARO_0000000 "spatial")
AnnotationAssertion(oboInOwl:id obo:CARO_0000000 "CARO:0000000")
AnnotationAssertion(rdfs:comment obo:CARO_0000000 "Following BFO, material anatomical entities may have immaterial parts (the lumen of your stomach is part of your stomach).  The granularity limit follows the limits set by the Gene Ontology on the granularity limit for GO:cellular_component. Note that substances produced by an organism (sweat, feaces, urine) do not need to be part of an organism to qualify as an anatomical structure.")
AnnotationAssertion(rdfs:label obo:CARO_0000000 "anatomical entity")
SubClassOf(obo:CARO_0000000 obo:BFO_0000004)

# Class: obo:CARO_0000003 (connected anatomical structure)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "CC:DOS") obo:IAO_0000115 obo:CARO_0000003 "Material anatomical entity that is a single connected structure with inherent 3D shape generated by coordinated expression of the organism's own genome.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:CARO_0000003 "spatial")
AnnotationAssertion(oboInOwl:id obo:CARO_0000003 "CARO:0000003")
AnnotationAssertion(rdfs:comment obo:CARO_0000003 "Note that the definition does not say 'generated exclusively by the co-ordinated expression of the organism's own genome', so this is still valid for cases where normal morphogenesis requires the actions of a facultative symbiont, or some looser dependency such as the a requirement for the presence of gut flora for normal gut development.")
AnnotationAssertion(rdfs:label obo:CARO_0000003 "anatomical structure")
AnnotationAssertion(rdfs:label obo:CARO_0000003 "connected anatomical structure")
SubClassOf(obo:CARO_0000003 obo:CARO_0000006)

# Class: obo:CARO_0000006 (material anatomical entity)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "CC:DOS") obo:IAO_0000115 obo:CARO_0000006 "An anatomical entity that has mass.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:CARO_0000006 "spatial")
AnnotationAssertion(oboInOwl:id obo:CARO_0000006 "CARO:0000006")
AnnotationAssertion(rdfs:label obo:CARO_0000006 "material anatomical entity")
SubClassOf(obo:CARO_0000006 obo:CARO_0000000)
DisjointClasses(obo:CARO_0000006 obo:CARO_0000007)
DisjointClasses(obo:CARO_0000006 ObjectSomeValuesFrom(obo:BFO_0000050 obo:CARO_0000007))

# Class: obo:CARO_0000007 (immaterial anatomical entity)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "CC:DOS") obo:IAO_0000115 obo:CARO_0000007 "An anatomical entity that has no mass.")
AnnotationAssertion(obo:IAO_0000115 obo:CARO_0000007 "Anatomical entity that has no mass.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:CARO_0000007 "spatial")
AnnotationAssertion(oboInOwl:id obo:CARO_0000007 "CARO:0000007")
AnnotationAssertion(rdfs:label obo:CARO_0000007 "immaterial anatomical entity")
SubClassOf(obo:CARO_0000007 obo:BFO_0000141)
SubClassOf(obo:CARO_0000007 obo:CARO_0000000)
DisjointClasses(obo:CARO_0000007 ObjectSomeValuesFrom(obo:BFO_0000051 obo:CARO_0000006))

# Class: obo:CARO_0000008 (anatomical line)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "CC:DOS") obo:IAO_0000115 obo:CARO_0000008 "A one dimensional, immaterial anatomical entity.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:CARO_0000008 "spatial")
AnnotationAssertion(oboInOwl:id obo:CARO_0000008 "CARO:0000008")
AnnotationAssertion(rdfs:label obo:CARO_0000008 "anatomical line")
SubClassOf(obo:CARO_0000008 obo:CARO_0000007)

# Class: obo:CARO_0000010 (anatomical boundary)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "CC:DOS") obo:IAO_0000115 obo:CARO_0000010 "A non-material anatomical entity of two dimensions. Anatomical boundaries are contiguous structures.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:CARO_0000010 "spatial")
AnnotationAssertion(oboInOwl:id obo:CARO_0000010 "CARO:0000010")
AnnotationAssertion(rdfs:label obo:CARO_0000010 "anatomical boundary")
SubClassOf(obo:CARO_0000010 obo:CARO_0000007)

# Class: obo:GO_0003674 (molecular_function)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:pdt") obo:IAO_0000115 obo:GO_0003674 "A molecular process that can be carried out by the action of a single macromolecular machine, usually via direct physical interactions with other molecular entities. Function in this sense denotes an action, or activity, that a gene product (or a complex) performs. These actions are described from two distinct but related perspectives: (1) biochemical activity, and (2) role as a component in a larger system/process.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0003674 "molecular function")
AnnotationAssertion(oboInOwl:id obo:GO_0003674 "GO:0003674")
AnnotationAssertion(rdfs:comment obo:GO_0003674 "Note that, in addition to forming the root of the molecular function ontology, this term is recommended for use for the annotation of gene products whose molecular function is unknown. When this term is used for annotation, it indicates that no information was available about the molecular function of the gene product annotated as of the date the annotation was made; the evidence code 'no data' (ND), is used to indicate this. Despite its name, this is not a type of 'function' in the sense typically defined by upper ontologies such as Basic Formal Ontology (BFO). It is instead a BFO:process carried out by a single gene product or complex.")
AnnotationAssertion(rdfs:label obo:GO_0003674 "molecular_function")

# Class: obo:GO_0008150 (biological_process)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:pdt") obo:IAO_0000115 obo:GO_0008150 "A biological process represents a specific objective that the organism is genetically programmed to achieve. Biological processes are often described by their outcome or ending state, e.g., the biological process of cell division results in the creation of two daughter cells (a divided cell) from a single parent cell. A biological process is accomplished by a particular set of molecular functions carried out by specific gene products (or macromolecular complexes), often in a highly regulated manner and in a particular temporal sequence.")
AnnotationAssertion(oboInOwl:created_by obo:GO_0008150 "jl")
AnnotationAssertion(oboInOwl:creation_date obo:GO_0008150 "2012-09-19T15:05:24Z")
AnnotationAssertion(oboInOwl:hasDbXref obo:GO_0008150 "Wikipedia:Biological_process")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0008150 "biological process")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0008150 "physiological process")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:GO_0008150 "single organism process")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:GO_0008150 "single-organism process")
AnnotationAssertion(oboInOwl:id obo:GO_0008150 "GO:0008150")
AnnotationAssertion(rdfs:comment obo:GO_0008150 "Note that, in addition to forming the root of the biological process ontology, this term is recommended for use for the annotation of gene products whose biological process is unknown. When this term is used for annotation, it indicates that no information was available about the biological process of the gene product annotated as of the date the annotation was made; the evidence code 'no data' (ND), is used to indicate this.")
AnnotationAssertion(rdfs:label obo:GO_0008150 "biological_process")

# Class: obo:GO_0016301 (kinase activity)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "ISBN:0198506732") obo:IAO_0000115 obo:GO_0016301 "Catalysis of the transfer of a phosphate group, usually from ATP, to a substrate molecule.")
AnnotationAssertion(Annotation(rdfs:label "FN3KRP phosphorylates PsiAm, RibAm") oboInOwl:hasDbXref obo:GO_0016301 "Reactome:R-HSA-6788855")
AnnotationAssertion(Annotation(rdfs:label "FN3K phosphorylates ketosamines") oboInOwl:hasDbXref obo:GO_0016301 "Reactome:R-HSA-6788867")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0016301 "phosphokinase activity")
AnnotationAssertion(oboInOwl:id obo:GO_0016301 "GO:0016301")
AnnotationAssertion(rdfs:comment obo:GO_0016301 "Note that this term encompasses all activities that transfer a single phosphate group; although ATP is by far the most common phosphate donor, reactions using other phosphate donors are included in this term.")
AnnotationAssertion(rdfs:label obo:GO_0016301 "kinase activity")
SubClassOf(obo:GO_0016301 obo:GO_0003674)
SubClassOf(obo:GO_0016301 ObjectHasSelf(obo:RO_0002481))

# Class: obo:IAO_0000027 (data item)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000027 "data item"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000027 "data item"@en)
SubClassOf(obo:IAO_0000027 obo:IAO_0000030)

# Class: obo:IAO_0000030 (information content entity)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000030 "information content entity"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000030 "information content entity"@en)
SubClassOf(obo:IAO_0000030 obo:BFO_0000031)

# Class: obo:IAO_0000078 (curation status specification)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000078 "curation status specification"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000078 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000078 "The curation status of the term. The allowed values come from an enumerated list of predefined terms. See the specification of these instances for more detailed definitions of each enumerated value."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000078 "Better to represent curation as a process with parts and then relate labels to that process (in IAO meeting)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000078 "PERSON:Bill Bug"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000078 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000078 "OBI_0000266"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000078 "curation status specification"@en)
EquivalentClasses(obo:IAO_0000078 ObjectOneOf(obo:IAO_0000002 obo:IAO_0000120 obo:IAO_0000121 obo:IAO_0000122 obo:IAO_0000123 obo:IAO_0000124 obo:IAO_0000125 obo:IAO_0000423 obo:IAO_0000428))
SubClassOf(obo:IAO_0000078 obo:IAO_0000102)

# Class: obo:IAO_0000102 (data about an ontology part)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000102 "data about an ontology part"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000102 "Data about an ontology part is a data item about a part of an ontology, for example a term"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000102 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000102 "data about an ontology part"@en)
SubClassOf(obo:IAO_0000102 obo:IAO_0000027)

# Class: obo:IAO_0000225 (obsolescence reason specification)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000225 "obsolescence reason specification"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000225 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000225 "The reason for which a term has been deprecated. The allowed values come from an enumerated list of predefined terms. See the specification of these instances for more detailed definitions of each enumerated value."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000225 "The creation of this class has been inspired in part by Werner Ceusters' paper, Applying evolutionary terminology auditing to the Gene Ontology."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000225 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000225 "PERSON: Melanie Courtot"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000225 "obsolescence reason specification"@en)
EquivalentClasses(obo:IAO_0000225 ObjectOneOf(obo:IAO_0000103 obo:IAO_0000226 obo:IAO_0000227 obo:IAO_0000228 obo:IAO_0000229 obo:OMO_0001000))
SubClassOf(obo:IAO_0000225 obo:IAO_0000102)

# Class: obo:IAO_0000409 (denotator type)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000409 "denotator type"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000409 "The Basic Formal Ontology ontology makes a distinction between Universals and defined classes, where the formal are \"natural kinds\" and the latter arbitrary collections of entities."@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000409 "A denotator type indicates how a term should be interpreted from an ontological perspective."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000409 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000409 "Barry Smith, Werner Ceusters"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000409 "denotator type"@en)
EquivalentClasses(obo:IAO_0000409 ObjectOneOf(obo:IAO_0000410 obo:IAO_0000420 obo:IAO_0000421))
SubClassOf(obo:IAO_0000409 obo:IAO_0000102)

# Class: obo:PATO_0000001 (quality)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0000001 "A dependent entity that inheres in a bearer by virtue of how the bearer is related to other entities")
AnnotationAssertion(oboInOwl:id obo:PATO_0000001 "PATO:0000001")
AnnotationAssertion(rdfs:label obo:PATO_0000001 "quality")
SubClassOf(obo:PATO_0000001 obo:BFO_0000020)


############################
#   Named Individuals
############################

# Individual: obo:IAO_0000002 (example to be eventually removed)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000002 "example to be eventually removed"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000002 "example to be eventually removed"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000002)

# Individual: obo:IAO_0000103 (failed exploratory term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000103 "failed exploratory term"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000103 "The term was used in an attempt to structure part of the ontology but in retrospect failed to do a good job"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000103 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000103 "failed exploratory term"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000103)

# Individual: obo:IAO_0000120 (metadata complete)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000120 "metadata complete"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000120 "Class has all its metadata, but is either not guaranteed to be in its final location in the asserted IS_A hierarchy or refers to another class that is not complete."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000120 "metadata complete"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000120)

# Individual: obo:IAO_0000121 (organizational term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000121 "organizational term"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000121 "Term created to ease viewing/sort terms for development purpose, and will not be included in a release"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000121 "organizational term"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000121)

# Individual: obo:IAO_0000122 (ready for release)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000122 "ready for release"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000122 "Class has undergone final review, is ready for use, and will be included in the next release. Any class lacking \"ready_for_release\" should be considered likely to change place in hierarchy, have its definition refined, or be obsoleted in the next release.  Those classes deemed \"ready_for_release\" will also derived from a chain of ancestor classes that are also \"ready_for_release.\""@en)
AnnotationAssertion(rdfs:label obo:IAO_0000122 "ready for release"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000122)

# Individual: obo:IAO_0000123 (metadata incomplete)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000123 "metadata incomplete"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000123 "Class is being worked on; however, the metadata (including definition) are not complete or sufficiently clear to the branch editors."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000123 "metadata incomplete"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000123)

# Individual: obo:IAO_0000124 (uncurated)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000124 "uncurated"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000124 "Nothing done yet beyond assigning a unique class ID and proposing a preferred term."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000124 "uncurated"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000124)

# Individual: obo:IAO_0000125 (pending final vetting)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000125 "pending final vetting"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000125 "All definitions, placement in the asserted IS_A hierarchy and required minimal metadata are complete. The class is awaiting a final review by someone other than the term editor."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000125 "pending final vetting"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000125)

# Individual: obo:IAO_0000226 (placeholder removed)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000226 "placeholder removed"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000226 "placeholder removed"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000226)

# Individual: obo:IAO_0000227 (terms merged)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000227 "terms merged"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000227 "An editor note should explain what were the merged terms and the reason for the merge."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000227 "terms merged"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000227)

# Individual: obo:IAO_0000228 (term imported)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000228 "term imported"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000228 "This is to be used when the original term has been replaced by a term imported from an other ontology. An editor note should indicate what is the URI of the new term to use."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000228 "term imported"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000228)

# Individual: obo:IAO_0000229 (term split)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000229 "term split"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000229 "This is to be used when a term has been split in two or more new terms. An editor note should indicate the reason for the split and indicate the URIs of the new terms created."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000229 "term split"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000229)

# Individual: obo:IAO_0000410 (universal)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000410 "universal"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000410 "Hard to give a definition for. Intuitively a \"natural kind\" rather than a collection of any old things, which a class is able to be, formally. At the meta level, universals are defined as positives, are disjoint with their siblings, have single asserted parents."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000410 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000410 "A Formal Theory of Substances, Qualities, and Universals, http://ontology.buffalo.edu/bfo/SQU.pdf"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000410 "universal"@en)
ClassAssertion(obo:IAO_0000409 obo:IAO_0000410)

# Individual: obo:IAO_0000420 (defined class)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000420 "defined class"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000420 "A defined class is a class that is defined by a set of logically necessary and sufficient conditions but is not a universal"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000420 "\"definitions\", in some readings, always are given by necessary and sufficient conditions. So one must be careful (and this is difficult sometimes) to distinguish between defined classes and universal."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000420 "Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000420 "defined class"@en)
ClassAssertion(obo:IAO_0000409 obo:IAO_0000420)

# Individual: obo:IAO_0000421 (named class expression)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000421 "named class expression"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000421 "A named class expression is a logical expression that is given a name. The name can be used in place of the expression."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000421 "named class expressions are used in order to have more concise logical definition but their extensions may not be interesting classes on their own. In languages such as OWL, with no provisions for macros, these show up as actuall classes. Tools may with to not show them as such, and to replace uses of the macros with their expansions"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000421 "Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000421 "named class expression"@en)
ClassAssertion(obo:IAO_0000409 obo:IAO_0000421)

# Individual: obo:IAO_0000423 (to be replaced with external ontology term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000423 "to be replaced with external ontology term"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000423 "Terms with this status should eventually replaced with a term from another ontology."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000423 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000423 "group:OBI"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000423 "to be replaced with external ontology term"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000423)

# Individual: obo:IAO_0000428 (requires discussion)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000428 "requires discussion"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000428 "A term that is metadata complete, has been reviewed, and problems have been identified that require discussion before release. Such a term requires editor note(s) to identify the outstanding issues."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000428 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000428 "group:OBI"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000428 "requires discussion"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000428)

# Individual: obo:OMO_0001000 (out of scope)

AnnotationAssertion(obo:IAO_0000115 obo:OMO_0001000 "The term was added to the ontology on the assumption it was in scope, but it turned out later that it was not."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OMO_0001000 "This obsolesence reason should be used conservatively. Typical valid examples are: un-necessary grouping classes in disease ontologies, a phenotype term added on the assumption it was a disease."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMO_0001000 <http://orcid.org/0000-0001-5208-3432>)
AnnotationAssertion(obo:IAO_0000233 obo:OMO_0001000 "https://github.com/information-artifact-ontology/ontology-metadata/issues/77")
AnnotationAssertion(obo:IAO_0000234 obo:OMO_0001000 "https://orcid.org/0000-0001-5208-3432")
AnnotationAssertion(rdfs:label obo:OMO_0001000 "out of scope")
ClassAssertion(obo:IAO_0000225 obo:OMO_0001000)


SubClassOf(ObjectSomeValuesFrom(obo:RO_0002566 obo:BFO_0000040) ObjectUnionOf(ObjectSomeValuesFrom(obo:RO_0000056 ObjectSomeValuesFrom(obo:RO_0002418 obo:BFO_0000015)) ObjectSomeValuesFrom(obo:RO_0002215 ObjectSomeValuesFrom(obo:RO_0000056 ObjectSomeValuesFrom(obo:RO_0002418 obo:BFO_0000015)))))
DifferentIndividuals(obo:IAO_0000120 obo:IAO_0000121 obo:IAO_0000122 obo:IAO_0000123 obo:IAO_0000124 obo:IAO_0000125 obo:IAO_0000423 obo:IAO_0000428)
DifferentIndividuals(obo:IAO_0000226 obo:IAO_0000227 obo:IAO_0000228 obo:IAO_0000229)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000050) obo:RO_0002131)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000062) obo:BFO_0000062)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000063) obo:BFO_0000063)
SubObjectPropertyOf(Annotation(obo:RO_0002581 "true"^^xsd:boolean) ObjectPropertyChain(obo:BFO_0000050 obo:RO_0002215) obo:RO_0002329)
SubObjectPropertyOf(Annotation(obo:RO_0002582 "true"^^xsd:boolean) ObjectPropertyChain(obo:BFO_0000051 obo:BFO_0000050) obo:RO_0002131)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:RO_0000057) obo:RO_0000057)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:RO_0002131) obo:RO_0002131)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:RO_0002215) obo:RO_0002584)
SubObjectPropertyOf(Annotation(obo:RO_0002582 "true"^^xsd:boolean) ObjectPropertyChain(obo:RO_0000052 obo:BFO_0000050) obo:RO_0002314)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002131 obo:BFO_0000050) obo:RO_0002131)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002211 obo:RO_0002025) obo:RO_0002211)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002211 obo:RO_0019000) obo:RO_0019000)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002212 obo:RO_0002212) obo:RO_0002213)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002212 obo:RO_0019001) obo:RO_0019002)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002213 obo:RO_0019001) obo:RO_0019001)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002213 obo:RO_0019002) obo:RO_0019002)
SubObjectPropertyOf(Annotation(obo:RO_0002582 "true"^^xsd:boolean) ObjectPropertyChain(obo:RO_0002215 obo:BFO_0000050) obo:RO_0002216)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002211) obo:RO_0002596)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002212) obo:RO_0002597)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002213) obo:RO_0002598)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002233) obo:RO_0017001)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002314 obo:BFO_0000050) obo:RO_0002314)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:BFO_0000050) obo:RO_0002331)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:BFO_0000051) obo:RO_0002327)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:BFO_0000051) obo:RO_0004031)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002017) obo:RO_0002327)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002211) obo:RO_0002428)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002211 obo:RO_0002333) obo:RO_0002448)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002212) obo:RO_0002430)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002213) obo:RO_0002429)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002304) obo:RO_0004034)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002305) obo:RO_0004035)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002411) obo:RO_0002263)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002411 obo:RO_0002233) obo:RO_0002566)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002411 obo:RO_0002333) obo:RO_0002566)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002418) obo:RO_0002264)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002629 obo:RO_0002333) obo:RO_0002450)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002630 obo:RO_0002333) obo:RO_0002449)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0004046) obo:RO_0004033)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0004047) obo:RO_0004032)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:BFO_0000050) obo:RO_0002331)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:RO_0002211) obo:RO_0002428)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:RO_0002212) obo:RO_0002430)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:RO_0002213) obo:RO_0002429)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002407 obo:RO_0002629) obo:RO_0002407)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002409 obo:RO_0002409) obo:RO_0002407)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002409 obo:RO_0002630) obo:RO_0002409)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002578 obo:RO_0002578) obo:RO_0002211)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002629 obo:RO_0002407) obo:RO_0002407)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002629 obo:RO_0002629) obo:RO_0002407)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002630 obo:RO_0002409) obo:RO_0002409)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002630 obo:RO_0002630) obo:RO_0002409)
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002180 Variable(<urn:swrl#w>) Variable(<urn:swrl#p>)) ClassAtom(obo:BFO_0000015 Variable(<urn:swrl#w>)) ClassAtom(obo:BFO_0000015 Variable(<urn:swrl#p>)))Head(ObjectPropertyAtom(obo:RO_0002018 Variable(<urn:swrl#w>) Variable(<urn:swrl#p>))))
DLSafeRule(Body(ClassAtom(obo:BFO_0000016 Variable(<urn:swrl#d>)) ObjectPropertyAtom(obo:RO_0000053 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>)))Head(ObjectPropertyAtom(obo:RO_0000091 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>))))
DLSafeRule(Body(ClassAtom(obo:BFO_0000019 Variable(<urn:swrl#d>)) ObjectPropertyAtom(obo:RO_0000053 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>)))Head(ObjectPropertyAtom(obo:RO_0000086 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>))))
DLSafeRule(Body(ClassAtom(obo:BFO_0000023 Variable(<urn:swrl#d>)) ObjectPropertyAtom(obo:RO_0000053 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>)))Head(ObjectPropertyAtom(obo:RO_0000087 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>))))
DLSafeRule(Body(ClassAtom(obo:BFO_0000034 Variable(<urn:swrl#d>)) ObjectPropertyAtom(obo:RO_0000053 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>)))Head(ObjectPropertyAtom(obo:RO_0000085 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>))))
DLSafeRule(Annotation(swrla:isRuleEnabled "true"^^xsd:boolean) Annotation(rdfs:comment "MF(X)-directly_regulates->MF(Y)-enabled_by->GP(Z) => MF(Y)-has_input->GP(Y) e.g. if 'protein kinase activity'(X) directly_regulates 'protein binding activity (Y)and this is enabled by GP(Z) then X has_input Z") Annotation(rdfs:label "infer input from direct reg") Body(ObjectPropertyAtom(obo:RO_0002327 Variable(<http://purl.obolibrary.org/obo/ro.owl#z>) Variable(<http://purl.obolibrary.org/obo/ro.owl#y>)) ObjectPropertyAtom(obo:RO_0002578 Variable(<http://purl.obolibrary.org/obo/ro.owl#x>) Variable(<http://purl.obolibrary.org/obo/ro.owl#y>)) ClassAtom(obo:GO_0003674 Variable(<http://purl.obolibrary.org/obo/ro.owl#x>)) ClassAtom(obo:GO_0003674 Variable(<http://purl.obolibrary.org/obo/ro.owl#y>)))Head(ObjectPropertyAtom(obo:RO_0002233 Variable(<http://purl.obolibrary.org/obo/ro.owl#x>) Variable(<http://purl.obolibrary.org/obo/ro.owl#z>))))
DLSafeRule(Annotation(rdfs:comment "GP(X)-enables->MF(Y)-has_part->MF(Z) => GP(X) enables MF(Z),
e.g.  if GP X enables ATPase coupled transporter activity' and 'ATPase coupled transporter activity' has_part 'ATPase activity' then GP(X) enables 'ATPase activity'") Annotation(rdfs:label "enabling an MF enables its parts") Body(ClassAtom(obo:GO_0003674 Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:RO_0002327 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:BFO_0000051 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)))Head(ObjectPropertyAtom(obo:RO_0002327 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
DLSafeRule(Annotation(swrla:isRuleEnabled "true"^^xsd:boolean) Annotation(rdfs:comment "GP(X)-enables->MF(Y)-part_of->BP(Z) => GP(X) involved_in BP(Z) e.g. if X enables 'protein kinase activity' and Y 'part of' 'signal tranduction' then X involved in 'signal transduction'") Annotation(rdfs:label "involved in BP") Body(ClassAtom(obo:GO_0008150 Variable(<urn:swrl#z>)) ObjectPropertyAtom(obo:BFO_0000050 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)) ObjectPropertyAtom(obo:RO_0002327 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ObjectPropertyAtom(obo:RO_0002331 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002578 Variable(<urn:swrl#a1>) Variable(<urn:swrl#a2>)) ClassAtom(obo:GO_0016301 Variable(<urn:swrl#a1>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#a1>) Variable(<urn:swrl#g1>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#a2>) Variable(<urn:swrl#g2>)))Head(ObjectPropertyAtom(obo:RO_0002447 Variable(<urn:swrl#g1>) Variable(<urn:swrl#g2>))))
DLSafeRule(Annotation(rdfs:comment "This can't be added as a property chain because it causes a circularity violation for 'part of'.") Body(ObjectPropertyAtom(obo:BFO_0000050 Variable(<urn:swrl:var#x>) Variable(<urn:swrl:var#y>)) ObjectPropertyAtom(obo:BSPO_0000120 Variable(<urn:swrl:var#y>) Variable(<urn:swrl:var#z>)))Head(ObjectPropertyAtom(obo:BSPO_0000120 Variable(<urn:swrl:var#x>) Variable(<urn:swrl:var#z>))))
DLSafeRule(Annotation(rdfs:comment "This can't be added as a property chain because it causes a circularity violation for 'part of'.") Body(ObjectPropertyAtom(obo:BFO_0000050 Variable(<urn:swrl:var#x>) Variable(<urn:swrl:var#y>)) ObjectPropertyAtom(obo:BSPO_0000121 Variable(<urn:swrl:var#y>) Variable(<urn:swrl:var#z>)))Head(ObjectPropertyAtom(obo:BSPO_0000121 Variable(<urn:swrl:var#x>) Variable(<urn:swrl:var#z>))))
DLSafeRule(Annotation(rdfs:comment "This can't be added as a property chain because it causes a circularity violation for 'part of'.") Body(ObjectPropertyAtom(obo:BFO_0000050 Variable(<urn:swrl:var#x>) Variable(<urn:swrl:var#y>)) ObjectPropertyAtom(obo:BSPO_0000126 Variable(<urn:swrl:var#y>) Variable(<urn:swrl:var#z>)))Head(ObjectPropertyAtom(obo:BSPO_0000126 Variable(<urn:swrl:var#x>) Variable(<urn:swrl:var#z>))))
DLSafeRule(Annotation(rdfs:comment "If a molecular function (X) has a regulatory subfunction, then any gene product which is an input to that subfunction has an activity that directly_regulates X.  Note:  this is intended for cases where the regaultory subfunction is protein binding, so it could be tightened with an additional clause to specify this.") Annotation(rdfs:label "inferring direct reg edge from input to regulatory subfunction") Body(ObjectPropertyAtom(obo:RO_0002352 Variable(<urn:swrl#B>) Variable(<urn:swrl#C>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#A>) Variable(<urn:swrl#B>)) ObjectPropertyAtom(obo:RO_0002013 Variable(<urn:swrl#D>) Variable(<urn:swrl#C>)))Head(ObjectPropertyAtom(obo:RO_0002578 Variable(<urn:swrl#A>) Variable(<urn:swrl#D>))))
DLSafeRule(Annotation(rdfs:label "inferring direct neg reg edge from input to regulatory subfunction") Body(ObjectPropertyAtom(obo:RO_0002352 Variable(<urn:swrl#B>) Variable(<urn:swrl#C>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#A>) Variable(<urn:swrl#B>)) ObjectPropertyAtom(obo:RO_0002014 Variable(<urn:swrl#D>) Variable(<urn:swrl#C>)))Head(ObjectPropertyAtom(obo:RO_0002630 Variable(<urn:swrl#A>) Variable(<urn:swrl#D>))))
DLSafeRule(Annotation(rdfs:label "inferring direct positive reg edge from input to regulatory subfunction") Body(ObjectPropertyAtom(obo:RO_0002352 Variable(<urn:swrl#B>) Variable(<urn:swrl#C>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#A>) Variable(<urn:swrl#B>)) ObjectPropertyAtom(obo:RO_0002015 Variable(<urn:swrl#D>) Variable(<urn:swrl#C>)))Head(ObjectPropertyAtom(obo:RO_0002629 Variable(<urn:swrl#A>) Variable(<urn:swrl#D>))))
DLSafeRule(Annotation(rdfs:label "effector input is compound function input") Body(ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)) ObjectPropertyAtom(obo:RO_0002233 Variable(<urn:swrl#eff>) Variable(<urn:swrl#in>)))Head(ObjectPropertyAtom(obo:RO_0002233 Variable(<urn:swrl#mf>) Variable(<urn:swrl#in>))))
DLSafeRule(Annotation(rdfs:label "Input of effector is input of its parent MF") Body(ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)) ObjectPropertyAtom(obo:RO_0002233 Variable(<urn:swrl#mf>) Variable(<urn:swrl#in>)))Head(ObjectPropertyAtom(obo:RO_0002233 Variable(<urn:swrl#eff>) Variable(<urn:swrl#in>))))
DLSafeRule(Annotation(rdfs:comment "if effector directly regulates X,  its parent MF directly regulates X") Body(ObjectPropertyAtom(obo:RO_0002578 Variable(<urn:swrl#mf>) Variable(<urn:swrl#mf2>)) ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)))Head(ObjectPropertyAtom(obo:RO_0002578 Variable(<urn:swrl#eff>) Variable(<urn:swrl#mf2>))))
DLSafeRule(Annotation(rdfs:comment "if effector directly positively regulates X,  its parent MF directly positively regulates X") Body(ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)) ObjectPropertyAtom(obo:RO_0002629 Variable(<urn:swrl#mf>) Variable(<urn:swrl#mf2>)))Head(ObjectPropertyAtom(obo:RO_0002629 Variable(<urn:swrl#eff>) Variable(<urn:swrl#mf2>))))
DLSafeRule(Annotation(rdfs:label "if effector directly negatively regulates X,  its parent MF directly negatively regulates X") Body(ObjectPropertyAtom(obo:RO_0002630 Variable(<urn:swrl#mf>) Variable(<urn:swrl#mf2>)) ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)))Head(ObjectPropertyAtom(obo:RO_0002630 Variable(<urn:swrl#eff>) Variable(<urn:swrl#mf2>))))
DLSafeRule(Annotation(rdfs:label "'causally downstream of' and 'overlaps' should be disjoint properties (a SWRL rule is required because these are non-simple properties).") Body(ObjectPropertyAtom(obo:RO_0002131 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:RO_0002404 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ClassAtom(owl:Nothing Variable(<urn:swrl#y>)) ClassAtom(owl:Nothing Variable(<urn:swrl#x>))))
DLSafeRule(Annotation(rdfs:label "'causally upstream of' and 'overlaps' should be disjoint properties (a SWRL rule is required because these are non-simple properties).") Body(ObjectPropertyAtom(obo:RO_0002131 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:RO_0002411 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ClassAtom(owl:Nothing Variable(<urn:swrl#y>)) ClassAtom(owl:Nothing Variable(<urn:swrl#x>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002211 Variable(<urn:swrl:var#p>) Variable(<urn:swrl:var#q>)) ObjectPropertyAtom(obo:RO_0012011 Variable(<urn:swrl:var#p>) Variable(<urn:swrl:var#q>)))Head(ObjectPropertyAtom(obo:RO_0012012 Variable(<urn:swrl:var#p>) Variable(<urn:swrl:var#q>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:RO_0002213 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)))Head(ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)) ObjectPropertyAtom(obo:RO_0002213 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl:var#x>) Variable(<urn:swrl:var#y>)) ObjectPropertyAtom(obo:RO_0019002 Variable(<urn:swrl:var#y>) Variable(<urn:swrl:var#z>)))Head(ObjectPropertyAtom(obo:RO_0019001 Variable(<urn:swrl:var#x>) Variable(<urn:swrl:var#z>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002411 Variable(<urn:swrl:var#y>) Variable(<urn:swrl:var#z>)) ObjectPropertyAtom(obo:RO_0002264 Variable(<urn:swrl:var#x>) Variable(<urn:swrl:var#y>)))Head(ObjectPropertyAtom(obo:RO_0002263 Variable(<urn:swrl:var#x>) Variable(<urn:swrl:var#z>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002411 Variable(<urn:swrl:var#p>) Variable(<urn:swrl:var#q>)) ObjectPropertyAtom(obo:RO_0002411 Variable(<urn:swrl:var#q>) Variable(<urn:swrl:var#u>)))Head(ObjectPropertyAtom(obo:RO_0012011 Variable(<urn:swrl:var#p>) Variable(<urn:swrl:var#u>))))
)