Prefix(:=<http://www.biomodels.net/kisao/KISAO#>)
Prefix(dc:=<http://purl.org/dc/terms/>)
Prefix(obo:=<http://purl.obolibrary.org/obo/>)
Prefix(ont:=<http://www.co-ode.org/ontologies/ont.owl#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(skos:=<http://www.w3.org/2004/02/skos/core#>)
Prefix(kisao:=<http://www.biomodels.net/kisao/KISAO#>)
Prefix(protege:=<http://protege.stanford.edu/plugins/owl/protege#>)


Ontology(<http://www.biomodels.net/kisao/KISAO#>
Annotation(protege:defaultLanguage "en")
Annotation(dc:rights "Artistic License 2.0")
Annotation(rdfs:comment "This is a core version which contains all but deprecated classes."@en)
Annotation(rdfs:label "Kinetic Simulation Algorithm Ontology (KiSAO)"@en)
Annotation(rdfs:seeAlso "http://co.mbine.org/standards/kisao"^^xsd:anyURI)
Annotation(rdfs:seeAlso "http://identifiers.org/pubmed/22027554"^^xsd:anyURI)
Annotation(owl:versionInfo "2.30"^^xsd:decimal)
Annotation(skos:definition "The Kinetic Simulation Algorithm Ontology (KiSAO) classifies algorithms available for the simulation and analysis of models in biology, and their characteristics and the parameters required for their use."@en)

Declaration(Class(kisao:KISAO_0000000))
Declaration(Class(kisao:KISAO_0000003))
Declaration(Class(kisao:KISAO_0000015))
Declaration(Class(kisao:KISAO_0000017))
Declaration(Class(kisao:KISAO_0000019))
Declaration(Class(kisao:KISAO_0000020))
Declaration(Class(kisao:KISAO_0000021))
Declaration(Class(kisao:KISAO_0000022))
Declaration(Class(kisao:KISAO_0000027))
Declaration(Class(kisao:KISAO_0000028))
Declaration(Class(kisao:KISAO_0000029))
Declaration(Class(kisao:KISAO_0000030))
Declaration(Class(kisao:KISAO_0000031))
Declaration(Class(kisao:KISAO_0000032))
Declaration(Class(kisao:KISAO_0000033))
Declaration(Class(kisao:KISAO_0000038))
Declaration(Class(kisao:KISAO_0000039))
Declaration(Class(kisao:KISAO_0000040))
Declaration(Class(kisao:KISAO_0000045))
Declaration(Class(kisao:KISAO_0000046))
Declaration(Class(kisao:KISAO_0000048))
Declaration(Class(kisao:KISAO_0000051))
Declaration(Class(kisao:KISAO_0000056))
Declaration(Class(kisao:KISAO_0000057))
Declaration(Class(kisao:KISAO_0000058))
Declaration(Class(kisao:KISAO_0000064))
Declaration(Class(kisao:KISAO_0000068))
Declaration(Class(kisao:KISAO_0000071))
Declaration(Class(kisao:KISAO_0000074))
Declaration(Class(kisao:KISAO_0000075))
Declaration(Class(kisao:KISAO_0000076))
Declaration(Class(kisao:KISAO_0000081))
Declaration(Class(kisao:KISAO_0000082))
Declaration(Class(kisao:KISAO_0000084))
Declaration(Class(kisao:KISAO_0000086))
Declaration(Class(kisao:KISAO_0000087))
Declaration(Class(kisao:KISAO_0000088))
Declaration(Class(kisao:KISAO_0000089))
Declaration(Class(kisao:KISAO_0000090))
Declaration(Class(kisao:KISAO_0000091))
Declaration(Class(kisao:KISAO_0000093))
Declaration(Class(kisao:KISAO_0000094))
Declaration(Class(kisao:KISAO_0000095))
Declaration(Class(kisao:KISAO_0000097))
Declaration(Class(kisao:KISAO_0000098))
Declaration(Class(kisao:KISAO_0000099))
Declaration(Class(kisao:KISAO_0000100))
Declaration(Class(kisao:KISAO_0000102))
Declaration(Class(kisao:KISAO_0000103))
Declaration(Class(kisao:KISAO_0000104))
Declaration(Class(kisao:KISAO_0000105))
Declaration(Class(kisao:KISAO_0000106))
Declaration(Class(kisao:KISAO_0000107))
Declaration(Class(kisao:KISAO_0000108))
Declaration(Class(kisao:KISAO_0000201))
Declaration(Class(kisao:KISAO_0000203))
Declaration(Class(kisao:KISAO_0000204))
Declaration(Class(kisao:KISAO_0000205))
Declaration(Class(kisao:KISAO_0000209))
Declaration(Class(kisao:KISAO_0000211))
Declaration(Class(kisao:KISAO_0000216))
Declaration(Class(kisao:KISAO_0000219))
Declaration(Class(kisao:KISAO_0000220))
Declaration(Class(kisao:KISAO_0000223))
Declaration(Class(kisao:KISAO_0000228))
Declaration(Class(kisao:KISAO_0000230))
Declaration(Class(kisao:KISAO_0000231))
Declaration(Class(kisao:KISAO_0000232))
Declaration(Class(kisao:KISAO_0000233))
Declaration(Class(kisao:KISAO_0000234))
Declaration(Class(kisao:KISAO_0000235))
Declaration(Class(kisao:KISAO_0000236))
Declaration(Class(kisao:KISAO_0000237))
Declaration(Class(kisao:KISAO_0000238))
Declaration(Class(kisao:KISAO_0000239))
Declaration(Class(kisao:KISAO_0000240))
Declaration(Class(kisao:KISAO_0000241))
Declaration(Class(kisao:KISAO_0000242))
Declaration(Class(kisao:KISAO_0000243))
Declaration(Class(kisao:KISAO_0000244))
Declaration(Class(kisao:KISAO_0000248))
Declaration(Class(kisao:KISAO_0000249))
Declaration(Class(kisao:KISAO_0000252))
Declaration(Class(kisao:KISAO_0000253))
Declaration(Class(kisao:KISAO_0000254))
Declaration(Class(kisao:KISAO_0000255))
Declaration(Class(kisao:KISAO_0000256))
Declaration(Class(kisao:KISAO_0000257))
Declaration(Class(kisao:KISAO_0000258))
Declaration(Class(kisao:KISAO_0000260))
Declaration(Class(kisao:KISAO_0000261))
Declaration(Class(kisao:KISAO_0000263))
Declaration(Class(kisao:KISAO_0000264))
Declaration(Class(kisao:KISAO_0000273))
Declaration(Class(kisao:KISAO_0000274))
Declaration(Class(kisao:KISAO_0000276))
Declaration(Class(kisao:KISAO_0000278))
Declaration(Class(kisao:KISAO_0000279))
Declaration(Class(kisao:KISAO_0000280))
Declaration(Class(kisao:KISAO_0000281))
Declaration(Class(kisao:KISAO_0000282))
Declaration(Class(kisao:KISAO_0000283))
Declaration(Class(kisao:KISAO_0000285))
Declaration(Class(kisao:KISAO_0000286))
Declaration(Class(kisao:KISAO_0000287))
Declaration(Class(kisao:KISAO_0000288))
Declaration(Class(kisao:KISAO_0000289))
Declaration(Class(kisao:KISAO_0000290))
Declaration(Class(kisao:KISAO_0000296))
Declaration(Class(kisao:KISAO_0000297))
Declaration(Class(kisao:KISAO_0000299))
Declaration(Class(kisao:KISAO_0000301))
Declaration(Class(kisao:KISAO_0000302))
Declaration(Class(kisao:KISAO_0000303))
Declaration(Class(kisao:KISAO_0000304))
Declaration(Class(kisao:KISAO_0000305))
Declaration(Class(kisao:KISAO_0000306))
Declaration(Class(kisao:KISAO_0000307))
Declaration(Class(kisao:KISAO_0000308))
Declaration(Class(kisao:KISAO_0000309))
Declaration(Class(kisao:KISAO_0000310))
Declaration(Class(kisao:KISAO_0000311))
Declaration(Class(kisao:KISAO_0000314))
Declaration(Class(kisao:KISAO_0000315))
Declaration(Class(kisao:KISAO_0000316))
Declaration(Class(kisao:KISAO_0000317))
Declaration(Class(kisao:KISAO_0000318))
Declaration(Class(kisao:KISAO_0000319))
Declaration(Class(kisao:KISAO_0000320))
Declaration(Class(kisao:KISAO_0000321))
Declaration(Class(kisao:KISAO_0000322))
Declaration(Class(kisao:KISAO_0000323))
Declaration(Class(kisao:KISAO_0000324))
Declaration(Class(kisao:KISAO_0000325))
Declaration(Class(kisao:KISAO_0000326))
Declaration(Class(kisao:KISAO_0000327))
Declaration(Class(kisao:KISAO_0000328))
Declaration(Class(kisao:KISAO_0000329))
Declaration(Class(kisao:KISAO_0000330))
Declaration(Class(kisao:KISAO_0000331))
Declaration(Class(kisao:KISAO_0000332))
Declaration(Class(kisao:KISAO_0000333))
Declaration(Class(kisao:KISAO_0000334))
Declaration(Class(kisao:KISAO_0000335))
Declaration(Class(kisao:KISAO_0000336))
Declaration(Class(kisao:KISAO_0000337))
Declaration(Class(kisao:KISAO_0000338))
Declaration(Class(kisao:KISAO_0000339))
Declaration(Class(kisao:KISAO_0000340))
Declaration(Class(kisao:KISAO_0000341))
Declaration(Class(kisao:KISAO_0000342))
Declaration(Class(kisao:KISAO_0000343))
Declaration(Class(kisao:KISAO_0000345))
Declaration(Class(kisao:KISAO_0000346))
Declaration(Class(kisao:KISAO_0000347))
Declaration(Class(kisao:KISAO_0000348))
Declaration(Class(kisao:KISAO_0000349))
Declaration(Class(kisao:KISAO_0000350))
Declaration(Class(kisao:KISAO_0000351))
Declaration(Class(kisao:KISAO_0000352))
Declaration(Class(kisao:KISAO_0000353))
Declaration(Class(kisao:KISAO_0000354))
Declaration(Class(kisao:KISAO_0000355))
Declaration(Class(kisao:KISAO_0000356))
Declaration(Class(kisao:KISAO_0000357))
Declaration(Class(kisao:KISAO_0000358))
Declaration(Class(kisao:KISAO_0000362))
Declaration(Class(kisao:KISAO_0000363))
Declaration(Class(kisao:KISAO_0000364))
Declaration(Class(kisao:KISAO_0000365))
Declaration(Class(kisao:KISAO_0000366))
Declaration(Class(kisao:KISAO_0000367))
Declaration(Class(kisao:KISAO_0000369))
Declaration(Class(kisao:KISAO_0000370))
Declaration(Class(kisao:KISAO_0000371))
Declaration(Class(kisao:KISAO_0000372))
Declaration(Class(kisao:KISAO_0000373))
Declaration(Class(kisao:KISAO_0000374))
Declaration(Class(kisao:KISAO_0000375))
Declaration(Class(kisao:KISAO_0000376))
Declaration(Class(kisao:KISAO_0000377))
Declaration(Class(kisao:KISAO_0000378))
Declaration(Class(kisao:KISAO_0000379))
Declaration(Class(kisao:KISAO_0000380))
Declaration(Class(kisao:KISAO_0000381))
Declaration(Class(kisao:KISAO_0000382))
Declaration(Class(kisao:KISAO_0000383))
Declaration(Class(kisao:KISAO_0000384))
Declaration(Class(kisao:KISAO_0000386))
Declaration(Class(kisao:KISAO_0000388))
Declaration(Class(kisao:KISAO_0000389))
Declaration(Class(kisao:KISAO_0000392))
Declaration(Class(kisao:KISAO_0000393))
Declaration(Class(kisao:KISAO_0000394))
Declaration(Class(kisao:KISAO_0000395))
Declaration(Class(kisao:KISAO_0000396))
Declaration(Class(kisao:KISAO_0000397))
Declaration(Class(kisao:KISAO_0000398))
Declaration(Class(kisao:KISAO_0000403))
Declaration(Class(kisao:KISAO_0000404))
Declaration(Class(kisao:KISAO_0000405))
Declaration(Class(kisao:KISAO_0000407))
Declaration(Class(kisao:KISAO_0000408))
Declaration(Class(kisao:KISAO_0000409))
Declaration(Class(kisao:KISAO_0000410))
Declaration(Class(kisao:KISAO_0000411))
Declaration(Class(kisao:KISAO_0000412))
Declaration(Class(kisao:KISAO_0000413))
Declaration(Class(kisao:KISAO_0000415))
Declaration(Class(kisao:KISAO_0000416))
Declaration(Class(kisao:KISAO_0000417))
Declaration(Class(kisao:KISAO_0000418))
Declaration(Class(kisao:KISAO_0000419))
Declaration(Class(kisao:KISAO_0000420))
Declaration(Class(kisao:KISAO_0000421))
Declaration(Class(kisao:KISAO_0000422))
Declaration(Class(kisao:KISAO_0000423))
Declaration(Class(kisao:KISAO_0000424))
Declaration(Class(kisao:KISAO_0000425))
Declaration(Class(kisao:KISAO_0000427))
Declaration(Class(kisao:KISAO_0000428))
Declaration(Class(kisao:KISAO_0000429))
Declaration(Class(kisao:KISAO_0000430))
Declaration(Class(kisao:KISAO_0000432))
Declaration(Class(kisao:KISAO_0000433))
Declaration(Class(kisao:KISAO_0000434))
Declaration(Class(kisao:KISAO_0000435))
Declaration(Class(kisao:KISAO_0000436))
Declaration(Class(kisao:KISAO_0000437))
Declaration(Class(kisao:KISAO_0000447))
Declaration(Class(kisao:KISAO_0000448))
Declaration(Class(kisao:KISAO_0000449))
Declaration(Class(kisao:KISAO_0000450))
Declaration(Class(kisao:KISAO_0000451))
Declaration(Class(kisao:KISAO_0000452))
Declaration(Class(kisao:KISAO_0000453))
Declaration(Class(kisao:KISAO_0000454))
Declaration(Class(kisao:KISAO_0000455))
Declaration(Class(kisao:KISAO_0000467))
Declaration(Class(kisao:KISAO_0000468))
Declaration(Class(kisao:KISAO_0000469))
Declaration(Class(kisao:KISAO_0000470))
Declaration(Class(kisao:KISAO_0000471))
Declaration(Class(kisao:KISAO_0000472))
Declaration(Class(kisao:KISAO_0000473))
Declaration(Class(kisao:KISAO_0000475))
Declaration(Class(kisao:KISAO_0000476))
Declaration(Class(kisao:KISAO_0000477))
Declaration(Class(kisao:KISAO_0000478))
Declaration(Class(kisao:KISAO_0000479))
Declaration(Class(kisao:KISAO_0000480))
Declaration(Class(kisao:KISAO_0000481))
Declaration(Class(kisao:KISAO_0000482))
Declaration(Class(kisao:KISAO_0000483))
Declaration(Class(kisao:KISAO_0000484))
Declaration(Class(kisao:KISAO_0000485))
Declaration(Class(kisao:KISAO_0000486))
Declaration(Class(kisao:KISAO_0000487))
Declaration(Class(kisao:KISAO_0000488))
Declaration(Class(kisao:KISAO_0000491))
Declaration(Class(kisao:KISAO_0000492))
Declaration(Class(kisao:KISAO_0000493))
Declaration(Class(kisao:KISAO_0000494))
Declaration(Class(kisao:KISAO_0000495))
Declaration(Class(kisao:KISAO_0000496))
Declaration(Class(kisao:KISAO_0000497))
Declaration(Class(kisao:KISAO_0000498))
Declaration(Class(kisao:KISAO_0000499))
Declaration(Class(kisao:KISAO_0000500))
Declaration(Class(kisao:KISAO_0000501))
Declaration(Class(kisao:KISAO_0000502))
Declaration(Class(kisao:KISAO_0000503))
Declaration(Class(kisao:KISAO_0000504))
Declaration(Class(kisao:KISAO_0000505))
Declaration(Class(kisao:KISAO_0000506))
Declaration(Class(kisao:KISAO_0000507))
Declaration(Class(kisao:KISAO_0000508))
Declaration(Class(kisao:KISAO_0000509))
Declaration(Class(kisao:KISAO_0000510))
Declaration(Class(kisao:KISAO_0000511))
Declaration(Class(kisao:KISAO_0000512))
Declaration(Class(kisao:KISAO_0000513))
Declaration(Class(kisao:KISAO_0000514))
Declaration(Class(kisao:KISAO_0000515))
Declaration(Class(kisao:KISAO_0000516))
Declaration(Class(kisao:KISAO_0000517))
Declaration(Class(kisao:KISAO_0000518))
Declaration(Class(kisao:KISAO_0000519))
Declaration(Class(kisao:KISAO_0000520))
Declaration(Class(kisao:KISAO_0000521))
Declaration(Class(kisao:KISAO_0000522))
Declaration(Class(kisao:KISAO_0000523))
Declaration(Class(kisao:KISAO_0000524))
Declaration(Class(kisao:KISAO_0000525))
Declaration(Class(kisao:KISAO_0000526))
Declaration(Class(kisao:KISAO_0000527))
Declaration(Class(kisao:KISAO_0000528))
Declaration(Class(kisao:KISAO_0000529))
Declaration(Class(kisao:KISAO_0000531))
Declaration(Class(kisao:KISAO_0000532))
Declaration(Class(kisao:KISAO_0000533))
Declaration(Class(kisao:KISAO_0000534))
Declaration(Class(kisao:KISAO_0000535))
Declaration(Class(kisao:KISAO_0000536))
Declaration(Class(kisao:KISAO_0000537))
Declaration(Class(kisao:KISAO_0000538))
Declaration(Class(kisao:KISAO_0000539))
Declaration(Class(kisao:KISAO_0000540))
Declaration(Class(kisao:KISAO_0000541))
Declaration(Class(kisao:KISAO_0000542))
Declaration(Class(kisao:KISAO_0000543))
Declaration(Class(kisao:KISAO_0000544))
Declaration(Class(kisao:KISAO_0000545))
Declaration(Class(kisao:KISAO_0000546))
Declaration(Class(kisao:KISAO_0000547))
Declaration(Class(kisao:KISAO_0000548))
Declaration(Class(kisao:KISAO_0000549))
Declaration(Class(kisao:KISAO_0000550))
Declaration(Class(kisao:KISAO_0000551))
Declaration(Class(kisao:KISAO_0000552))
Declaration(Class(kisao:KISAO_0000553))
Declaration(Class(kisao:KISAO_0000554))
Declaration(Class(kisao:KISAO_0000555))
Declaration(Class(kisao:KISAO_0000556))
Declaration(Class(kisao:KISAO_0000557))
Declaration(Class(kisao:KISAO_0000558))
Declaration(Class(kisao:KISAO_0000559))
Declaration(Class(kisao:KISAO_0000560))
Declaration(Class(kisao:KISAO_0000561))
Declaration(Class(kisao:KISAO_0000562))
Declaration(Class(kisao:KISAO_0000563))
Declaration(Class(kisao:KISAO_0000564))
Declaration(Class(kisao:KISAO_0000565))
Declaration(Class(kisao:KISAO_0000566))
Declaration(Class(kisao:KISAO_0000567))
Declaration(Class(kisao:KISAO_0000568))
Declaration(Class(kisao:KISAO_0000569))
Declaration(Class(kisao:KISAO_0000570))
Declaration(Class(kisao:KISAO_0000571))
Declaration(Class(kisao:KISAO_0000572))
Declaration(Class(kisao:KISAO_0000573))
Declaration(Class(kisao:KISAO_0000574))
Declaration(Class(kisao:KISAO_0000575))
Declaration(Class(kisao:KISAO_0000576))
Declaration(Class(kisao:KISAO_0000577))
Declaration(Class(kisao:KISAO_0000578))
Declaration(Class(kisao:KISAO_0000579))
Declaration(Class(kisao:KISAO_0000580))
Declaration(Class(kisao:KISAO_0000581))
Declaration(Class(kisao:KISAO_0000582))
Declaration(Class(kisao:KISAO_0000583))
Declaration(Class(kisao:KISAO_0000584))
Declaration(Class(kisao:KISAO_0000585))
Declaration(Class(kisao:KISAO_0000586))
Declaration(Class(kisao:KISAO_0000587))
Declaration(Class(kisao:KISAO_0000588))
Declaration(Class(kisao:KISAO_0000589))
Declaration(Class(kisao:KISAO_0000590))
Declaration(Class(kisao:KISAO_0000591))
Declaration(Class(kisao:KISAO_0000592))
Declaration(Class(kisao:KISAO_0000593))
Declaration(Class(kisao:KISAO_0000594))
Declaration(Class(kisao:KISAO_0000595))
Declaration(Class(kisao:KISAO_0000596))
Declaration(Class(kisao:KISAO_0000597))
Declaration(Class(kisao:KISAO_0000598))
Declaration(Class(kisao:KISAO_0000599))
Declaration(Class(kisao:KISAO_0000600))
Declaration(Class(kisao:KISAO_0000601))
Declaration(Class(kisao:KISAO_0000602))
Declaration(Class(kisao:KISAO_0000603))
Declaration(Class(kisao:KISAO_0000604))
Declaration(Class(kisao:KISAO_0000605))
Declaration(Class(kisao:KISAO_0000606))
Declaration(Class(kisao:KISAO_0000607))
Declaration(Class(kisao:KISAO_0000608))
Declaration(Class(kisao:KISAO_0000609))
Declaration(Class(kisao:KISAO_0000610))
Declaration(Class(kisao:KISAO_0000611))
Declaration(Class(kisao:KISAO_0000612))
Declaration(Class(kisao:KISAO_0000613))
Declaration(Class(kisao:KISAO_0000614))
Declaration(Class(kisao:KISAO_0000615))
Declaration(Class(kisao:KISAO_0000616))
Declaration(Class(kisao:KISAO_0000617))
Declaration(Class(kisao:KISAO_0000618))
Declaration(Class(kisao:KISAO_0000619))
Declaration(Class(kisao:KISAO_0000620))
Declaration(Class(kisao:KISAO_0000621))
Declaration(Class(kisao:KISAO_0000622))
Declaration(Class(kisao:KISAO_0000623))
Declaration(Class(kisao:KISAO_0000624))
Declaration(Class(kisao:KISAO_0000625))
Declaration(Class(kisao:KISAO_0000626))
Declaration(Class(kisao:KISAO_0000627))
Declaration(Class(kisao:KISAO_0000628))
Declaration(Class(kisao:KISAO_0000629))
Declaration(Class(kisao:KISAO_0000630))
Declaration(Class(kisao:KISAO_0000631))
Declaration(Class(kisao:KISAO_0000632))
Declaration(Class(kisao:KISAO_0000633))
Declaration(Class(kisao:KISAO_0000634))
Declaration(Class(kisao:KISAO_0000635))
Declaration(Class(kisao:KISAO_0000636))
Declaration(Class(kisao:KISAO_0000637))
Declaration(Class(kisao:KISAO_0000638))
Declaration(Class(kisao:KISAO_0000639))
Declaration(Class(kisao:KISAO_0000640))
Declaration(Class(kisao:KISAO_0000641))
Declaration(Class(kisao:KISAO_0000642))
Declaration(Class(kisao:KISAO_0000643))
Declaration(Class(kisao:KISAO_0000644))
Declaration(Class(kisao:KISAO_0000645))
Declaration(Class(kisao:KISAO_0000646))
Declaration(Class(kisao:KISAO_0000647))
Declaration(Class(kisao:KISAO_0000648))
Declaration(Class(kisao:KISAO_0000649))
Declaration(Class(kisao:KISAO_0000650))
Declaration(Class(kisao:KISAO_0000651))
Declaration(Class(kisao:KISAO_0000652))
Declaration(Class(kisao:KISAO_0000653))
Declaration(Class(kisao:KISAO_0000654))
Declaration(Class(kisao:KISAO_0000655))
Declaration(Class(kisao:KISAO_0000656))
Declaration(Class(kisao:KISAO_0000657))
Declaration(Class(kisao:KISAO_0000658))
Declaration(Class(kisao:KISAO_0000659))
Declaration(Class(kisao:KISAO_0000660))
Declaration(Class(kisao:KISAO_0000661))
Declaration(Class(kisao:KISAO_0000662))
Declaration(Class(kisao:KISAO_0000663))
Declaration(Class(kisao:KISAO_0000664))
Declaration(Class(kisao:KISAO_0000665))
Declaration(Class(kisao:KISAO_0000666))
Declaration(Class(kisao:KISAO_0000667))
Declaration(Class(kisao:KISAO_0000668))
Declaration(Class(kisao:KISAO_0000669))
Declaration(Class(kisao:KISAO_0000670))
Declaration(Class(kisao:KISAO_0000671))
Declaration(Class(kisao:KISAO_0000672))
Declaration(Class(kisao:KISAO_0000673))
Declaration(Class(kisao:KISAO_0000674))
Declaration(Class(kisao:KISAO_0000675))
Declaration(Class(kisao:KISAO_0000676))
Declaration(Class(kisao:KISAO_0000677))
Declaration(Class(kisao:KISAO_0000678))
Declaration(Class(kisao:KISAO_0000679))
Declaration(Class(kisao:KISAO_0000680))
Declaration(Class(kisao:KISAO_0000681))
Declaration(Class(kisao:KISAO_0000682))
Declaration(Class(kisao:KISAO_0000683))
Declaration(Class(kisao:KISAO_0000684))
Declaration(Class(kisao:KISAO_0000800))
Declaration(Class(kisao:KISAO_0000801))
Declaration(Class(kisao:KISAO_0000802))
Declaration(Class(kisao:KISAO_0000803))
Declaration(Class(kisao:KISAO_0000804))
Declaration(Class(kisao:KISAO_0000805))
Declaration(Class(kisao:KISAO_0000806))
Declaration(Class(kisao:KISAO_0000807))
Declaration(Class(kisao:KISAO_0000808))
Declaration(Class(kisao:KISAO_0000809))
Declaration(Class(kisao:KISAO_0000810))
Declaration(Class(kisao:KISAO_0000811))
Declaration(Class(kisao:KISAO_0000812))
Declaration(Class(kisao:KISAO_0000813))
Declaration(Class(kisao:KISAO_0000814))
Declaration(Class(kisao:KISAO_0000815))
Declaration(Class(kisao:KISAO_0000816))
Declaration(Class(kisao:KISAO_0000817))
Declaration(Class(kisao:KISAO_0000818))
Declaration(Class(kisao:KISAO_0000819))
Declaration(Class(kisao:KISAO_0000820))
Declaration(Class(kisao:KISAO_0000821))
Declaration(Class(kisao:KISAO_0000822))
Declaration(Class(kisao:KISAO_0000824))
Declaration(Class(kisao:KISAO_0000825))
Declaration(Class(kisao:KISAO_0000826))
Declaration(Class(kisao:KISAO_0000827))
Declaration(Class(kisao:KISAO_0000828))
Declaration(Class(kisao:KISAO_0000829))
Declaration(Class(kisao:KISAO_0000830))
Declaration(Class(kisao:KISAO_0000831))
Declaration(Class(kisao:KISAO_0000832))
Declaration(Class(kisao:KISAO_0000834))
Declaration(Class(kisao:KISAO_0000835))
Declaration(Class(kisao:KISAO_0000836))
Declaration(Class(kisao:KISAO_0000837))
Declaration(Class(kisao:KISAO_0000838))
Declaration(Class(kisao:KISAO_0000839))
Declaration(Class(kisao:KISAO_0000840))
Declaration(Class(kisao:KISAO_0000841))
Declaration(Class(kisao:KISAO_0000842))
Declaration(Class(kisao:KISAO_0000843))
Declaration(Class(kisao:KISAO_0000844))
Declaration(Class(kisao:KISAO_0000845))
Declaration(Class(kisao:KISAO_0000846))
Declaration(Class(kisao:KISAO_0000847))
Declaration(Class(kisao:KISAO_0000848))
Declaration(Class(kisao:KISAO_0000849))
Declaration(Class(kisao:KISAO_0000850))
Declaration(Class(kisao:KISAO_0000851))
Declaration(Class(kisao:KISAO_0000852))
Declaration(Class(kisao:KISAO_0000853))
Declaration(Class(kisao:KISAO_0000854))
Declaration(Class(kisao:KISAO_0000855))
Declaration(Class(kisao:KISAO_0000856))
Declaration(Class(kisao:KISAO_0000857))
Declaration(Class(kisao:KISAO_0000858))
Declaration(Class(kisao:KISAO_0000859))
Declaration(ObjectProperty(kisao:KISAO_0000245))
Declaration(ObjectProperty(kisao:KISAO_0000246))
Declaration(ObjectProperty(kisao:KISAO_0000250))
Declaration(ObjectProperty(kisao:KISAO_0000259))
Declaration(ObjectProperty(kisao:KISAO_0000268))
Declaration(ObjectProperty(kisao:KISAO_0000359))
Declaration(ObjectProperty(kisao:KISAO_0000360))
Declaration(ObjectProperty(kisao:KISAO_0000361))
Declaration(ObjectProperty(kisao:KISAO_0000399))
Declaration(DataProperty(kisao:KISAO_0000251))
Declaration(DataProperty(kisao:KISAO_0000275))
Declaration(AnnotationProperty(protege:defaultLanguage))
Declaration(AnnotationProperty(dc:created))
Declaration(AnnotationProperty(dc:creator))
Declaration(AnnotationProperty(dc:rights))
Declaration(AnnotationProperty(kisao:isImplementedIn))
Declaration(AnnotationProperty(kisao:isOrganizational))
Declaration(AnnotationProperty(skos:altLabel))
Declaration(AnnotationProperty(skos:definition))
Declaration(Datatype(xsd:date))

############################
#   Object Properties
############################

# Object Property: kisao:KISAO_0000245 (has characteristic)

AnnotationAssertion(rdfs:label kisao:KISAO_0000245 "has characteristic"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000245 "'has characteristic' links algorithms to the characteristics, they possess."@en)
InverseObjectProperties(kisao:KISAO_0000245 kisao:KISAO_0000268)
ObjectPropertyDomain(kisao:KISAO_0000245 kisao:KISAO_0000000)
ObjectPropertyDomain(kisao:KISAO_0000245 kisao:KISAO_0000831)
ObjectPropertyRange(kisao:KISAO_0000245 kisao:KISAO_0000097)
ObjectPropertyRange(kisao:KISAO_0000245 kisao:KISAO_0000820)
DisjointObjectProperties(kisao:KISAO_0000245 kisao:KISAO_0000250 kisao:KISAO_0000259 kisao:KISAO_0000268 kisao:KISAO_0000359 kisao:KISAO_0000360)

# Object Property: kisao:KISAO_0000246 (is hybrid of)

AnnotationAssertion(rdfs:label kisao:KISAO_0000246 "is hybrid of"@en)
AnnotationAssertion(Annotation(rdfs:comment "Biochemical simulations: stochastic, approximate stochastic and hybrid approaches. Pahle J. Brief Bioinform. 2009 Jan;10(1):53-64. Epub 2009 Jan 16."@en) rdfs:seeAlso kisao:KISAO_0000246 "http://identifiers.org/doi/10.1093/bib/bbn050"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000246 "The basic idea of hybrid simulation methods is to combine the advantages of complementary simulation approaches: the whole system is subdivided into appropriate parts and different simulation methods operate on these parts at the same time.
'is hybrid of' is a relation between the complex simulation method and algorithms it applies to the different parts of the system."@en)
SubObjectPropertyOf(kisao:KISAO_0000246 kisao:KISAO_0000360)
ObjectPropertyDomain(kisao:KISAO_0000246 ObjectIntersectionOf(kisao:KISAO_0000000 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000322)))
ObjectPropertyRange(kisao:KISAO_0000246 kisao:KISAO_0000000)

# Object Property: kisao:KISAO_0000250 (is parameter of)

AnnotationAssertion(rdfs:label kisao:KISAO_0000250 "is parameter of"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000250 "'is parameter of' is an inverse of 'has parameter' and links parameters to the algorithms which use them."@en)
InverseObjectProperties(kisao:KISAO_0000250 kisao:KISAO_0000259)
ObjectPropertyDomain(kisao:KISAO_0000250 kisao:KISAO_0000201)
ObjectPropertyRange(kisao:KISAO_0000250 kisao:KISAO_0000000)

# Object Property: kisao:KISAO_0000259 (has parameter)

AnnotationAssertion(rdfs:label kisao:KISAO_0000259 "has parameter"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000259 "'has parameter' links algorithms to the parameters they use."@en)
ObjectPropertyDomain(kisao:KISAO_0000259 kisao:KISAO_0000000)
ObjectPropertyRange(kisao:KISAO_0000259 kisao:KISAO_0000201)

# Object Property: kisao:KISAO_0000268 (is characteristic of)

AnnotationAssertion(rdfs:label kisao:KISAO_0000268 "is characteristic of"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000268 "'is characteristic of' is an inverse of 'has characteristic' and links characteristics to the algorithms which possess them."@en)
ObjectPropertyDomain(kisao:KISAO_0000268 kisao:KISAO_0000097)
ObjectPropertyRange(kisao:KISAO_0000268 kisao:KISAO_0000000)

# Object Property: kisao:KISAO_0000359 (is similar to)

AnnotationAssertion(dc:created kisao:KISAO_0000359 "2011-06-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000359 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000359 "is similar to"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000359 "A relationship indicating that two entities are similar to each other."@en)
SymmetricObjectProperty(kisao:KISAO_0000359)
ReflexiveObjectProperty(kisao:KISAO_0000359)

# Object Property: kisao:KISAO_0000360 (uses)

AnnotationAssertion(dc:created kisao:KISAO_0000360 "2011-06-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000360 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000360 "uses"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000360 "A relation between algorithms indicating that one algorithm uses another one (for example, if the algorithm switches between several algorithms)."@en)
InverseObjectProperties(kisao:KISAO_0000360 kisao:KISAO_0000399)
ObjectPropertyDomain(kisao:KISAO_0000360 kisao:KISAO_0000000)
ObjectPropertyRange(kisao:KISAO_0000360 kisao:KISAO_0000000)

# Object Property: kisao:KISAO_0000361 (is generalization of)

AnnotationAssertion(dc:created kisao:KISAO_0000361 "2011-06-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000361 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000361 "is generalization of"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000361 "A relation between kinetic simulation algorithms, indicating that one is a generalization of another (e.g.if one extends another to suit systems with more general characteristics )."@en)
SubObjectPropertyOf(kisao:KISAO_0000361 kisao:KISAO_0000359)
ObjectPropertyDomain(kisao:KISAO_0000361 kisao:KISAO_0000000)
ObjectPropertyRange(kisao:KISAO_0000361 kisao:KISAO_0000000)

# Object Property: kisao:KISAO_0000399 (is used by)

AnnotationAssertion(dc:created kisao:KISAO_0000399 "2011-07-19"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000399 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000399 "is used by"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000399 "A relation between algorithms indicating that one algorithm is used by another one (for example, if the algorithm switches between several algorithms). 'is used by' is inverse of 'uses'."@en)


############################
#   Data Properties
############################

# Data Property: kisao:KISAO_0000251 (has type)

AnnotationAssertion(rdfs:label kisao:KISAO_0000251 "has type"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000251 "Indicates the type of algorithm parameter value, such as, for example, xsd:double for 'absolute tolerance'."@en)
FunctionalDataProperty(kisao:KISAO_0000251)
DataPropertyDomain(kisao:KISAO_0000251 kisao:KISAO_0000201)

# Data Property: kisao:KISAO_0000275 (has Runge-Kutta method order)

AnnotationAssertion(rdfs:label kisao:KISAO_0000275 "has Runge-Kutta method order"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000275 "Indicates the order of a 'Runge-Kutta based method' [urn.miriam.biomodels.kisao:KISAO_0000064]. A 'Runge-Kutta based method' has order p if for sufficiently smooth initial value problems (y'=f(x,y), y(x0)=y0),  ||y(x0 + h)-y1||<=Kh^(p+h)."@en)
DataPropertyDomain(kisao:KISAO_0000275 kisao:KISAO_0000064)
DataPropertyRange(kisao:KISAO_0000275 xsd:int)



############################
#   Classes
############################

# Class: kisao:KISAO_0000000 (modelling and simulation algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000000 "2008-05-26"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000000 "dk"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000000 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000000 "modelling and simulation algorithm"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000000 "modeling and simulation algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000000 "Algorithm used to instantiate a simulation from a mathematical model."@en)

# Class: kisao:KISAO_0000003 (weighted stochastic simulation algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000003 "24JAN2009"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000003 "NLN"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000003 "weighted stochastic simulation algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Kuwahara H, Mura I. (2008) An efficient and exact stochastic simulation method to analyse rare events in biochemical systems. J Chem Phys. 129(16):165101."@en) rdfs:seeAlso kisao:KISAO_0000003 "http://identifiers.org/pubmed/19045316"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000003 "weighted SSA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000003 "The weighted stochastic simulation algorithm manipulates the probabilities measure of biochemical systems by sampling, in order to increase the fraction of simulation runs exhibiting rare events."@en)
SubClassOf(kisao:KISAO_0000003 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000003 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000003 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))

# Class: kisao:KISAO_0000015 (Gillespie first reaction algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000015 "2007-11-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000015 "NLN"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000015 "Cain"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000015 "Gillespie first reaction algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. A General Method for Numerically Simulating the Stochastic Time Evolution of Coupled Chemical Reactions. Journal of Computational Physics, Volume 2 , pages 403-434 (1976)."@en) rdfs:seeAlso kisao:KISAO_0000015 "http://identifiers.org/doi/10.1016/0021-9991(76)90041-3"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. Exact stochastic simulation of coupled chemical reactions. Journal of Physical Chemistry, Vol. 81, No. 25. (1977), pp. 2340-2361."@en) rdfs:seeAlso kisao:KISAO_0000015 "http://identifiers.org/doi/10.1021/j100540a008"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000015 "Gillespie's first reaction method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000015 "Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm calculates a tentative reaction time for each reaction and then select the smallest."@en)
SubClassOf(kisao:KISAO_0000015 kisao:KISAO_0000241)
SubClassOf(kisao:KISAO_0000015 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000015 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))

# Class: kisao:KISAO_0000017 (multi-state agent-based simulation method)

AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000017 "StochSim"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000017 "multi-state agent-based simulation method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Morton-Firth, C.J, Bray, D. Predicting temporal fluctuations in an intracellular signalling pathway. Journal of Theoretical Biology, volume 192, pages 117-128 (1998)."@en) rdfs:seeAlso kisao:KISAO_0000017 "http://identifiers.org/pubmed/9628844"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000017 "Morton-Firth"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000017 "The agent-based simulation method instantiates each molecule as an individual software object. The interactions between those objects are determined by interaction probabilities according to experimental data. The probability is depended on the state the molecule is in at that specific time (molecules have multiple-state). Additionally, ''pseudo-molecules'' are introduced to the system in order to simulate unimolecular reactions. For simulation, continuous time is broken down into discrete, independent ''slices''. During each time slice one molecule is selected randomly, a second molecule or pseudo-molecule is selected afterwards (leading to either a unimolecular or a bimolecular reaction). The reaction will only take place if a produced random number exceeds the reaction probability calculated beforehand. In that case, the system is updated after that reaction."@en)
SubClassOf(kisao:KISAO_0000017 kisao:KISAO_0000363)
SubClassOf(kisao:KISAO_0000017 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000017 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000017 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))

# Class: kisao:KISAO_0000019 (CVODE)

AnnotationAssertion(dc:created kisao:KISAO_0000019 "2007-11-30"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000019 "dk"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000019 "SBML-SAT"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000019 "SUNDIALS"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000019 "libRoadRunner"@en)
AnnotationAssertion(Annotation(rdfs:comment "BioNetGen"@end) kisao:isImplementedIn kisao:KISAO_0000019 "http://identifiers.org/biosimulators/bionetgen"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "JSim"@end) kisao:isImplementedIn kisao:KISAO_0000019 "http://identifiers.org/biosimulators/jsim"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "OpenCOR"@end) kisao:isImplementedIn kisao:KISAO_0000019 "http://identifiers.org/biosimulators/opencor"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "PySCeS"@end) kisao:isImplementedIn kisao:KISAO_0000019 "http://identifiers.org/biosimulators/pysces"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@end) kisao:isImplementedIn kisao:KISAO_0000019 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "VCell"@end) kisao:isImplementedIn kisao:KISAO_0000019 "http://identifiers.org/biosimulators/vcell"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000019 "CVODE"@en)
AnnotationAssertion(Annotation(rdfs:comment "Cohen S, Hindmarsh C. Cvode, A Stiff/nonstiff Ode Solver In C. Computers in Physics, Vol. 10 (2), pages 138-143 (1996)."@en) rdfs:seeAlso kisao:KISAO_0000019 "citeulike:1832863"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh, A. C., et al., SUNDIALS: Suite of Nonlinear and Differential/Algebraic Equation Solvers, ACM Trans. Math. Softw., 31:363-396, 2005."@en) rdfs:seeAlso kisao:KISAO_0000019 "http://identifiers.org/doi/10.1145/1089014.1089020"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "RELATED"@en) skos:altLabel kisao:KISAO_0000019 "VODE"@en)
AnnotationAssertion(Annotation(rdfs:comment "RELATED"@en) skos:altLabel kisao:KISAO_0000019 "VODEPK"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000019 "code value ordinary differential equation solver"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000019 "The CVODE is a package written in C that solves ODE initial value problems, in real N-space, written as y'=f(t,y),  y(t0)=y0. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] method and the backward differentiation formula [http://identifiers.org/biomodels.kisao/KISAO_0000288]."@en)
SubClassOf(kisao:KISAO_0000019 kisao:KISAO_0000433)
SubClassOf(kisao:KISAO_0000019 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000020))
SubClassOf(kisao:KISAO_0000019 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000209))
SubClassOf(kisao:KISAO_0000019 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000211))
SubClassOf(kisao:KISAO_0000019 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000415))
SubClassOf(kisao:KISAO_0000019 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000475))
SubClassOf(kisao:KISAO_0000019 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000476))
SubClassOf(kisao:KISAO_0000019 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000477))
SubClassOf(kisao:KISAO_0000019 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000478))
SubClassOf(kisao:KISAO_0000019 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000479))
SubClassOf(kisao:KISAO_0000019 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000480))
SubClassOf(kisao:KISAO_0000019 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000481))
SubClassOf(kisao:KISAO_0000019 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000543))
SubClassOf(kisao:KISAO_0000019 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000570))
SubClassOf(kisao:KISAO_0000019 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000571))
DisjointClasses(kisao:KISAO_0000019 kisao:KISAO_0000355)

# Class: kisao:KISAO_0000020 (PVODE)

AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000020 "SUNDIALS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000020 "PVODE"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh, A. C., et al., SUNDIALS: Suite of Nonlinear and Differential/Algebraic Equation Solvers, ACM Trans. Math. Softw., 31:363-396, 2005."@en) rdfs:seeAlso kisao:KISAO_0000020 "http://identifiers.org/doi/10.1145/1089014.1089020"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Byrne GD, Hindmarsh AC. PVODE, an ODE Solver for Parallel Computers. International Journal of High Performance Computing Applications, Vol. 13 (4), pages 354-365 (1999)."@en) rdfs:seeAlso kisao:KISAO_0000020 "http://identifiers.org/doi/10.1177/109434209901300405"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000020 "parallel code value ordinary differential equation solver"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000020 "PVODE is a general-purpose solver for ordinary differential equation (ODE) systems that implements methods for both stiff and nonstiff systems. [...] In the stiff case, PVODE uses a backward differentiation formula method [http://identifiers.org/biomodels.kisao/KISAO_0000288] combined with preconditioned GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000253] iteration. Parallelism is achieved by distributing the ODE solution vector into user-specified segments and parallelizing a set of vector kernels accordingly. For PDE-based ODE systems, we provide a module that generates a band block-diagonal preconditioner for use with the GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000253] iteration. PVODE is based on CVODE [http://identifiers.org/biomodels.kisao/KISAO_0000019]."@en)
SubClassOf(kisao:KISAO_0000020 kisao:KISAO_0000433)
SubClassOf(kisao:KISAO_0000020 ObjectUnionOf(ObjectIntersectionOf(ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000288) ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000353)) ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000280)))
SubClassOf(kisao:KISAO_0000020 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000019))
DisjointClasses(kisao:KISAO_0000020 kisao:KISAO_0000283)
DisjointClasses(kisao:KISAO_0000020 kisao:KISAO_0000356)

# Class: kisao:KISAO_0000021 (StochSim nearest-neighbour algorithm)

AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000021 "Stochsim 1.2 and more recent versions"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000021 "StochSim nearest-neighbour algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Le Novere N, Shimizu TS. STOCHSIM: modelling of stochastic biomolecular processes. Bioinformatics, volume 17 (6), pages 575-576 (2001)."@en) rdfs:seeAlso kisao:KISAO_0000021 "http://identifiers.org/pubmed/11395441"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000021 "The nearest-neighbour algorithm allows for the representation of spatial information, by adding a two-dimensional lattice in the form of a probabilistic cellular automata. That way, nearest neighbour interactions do additionally influence reactions taking place in the systems. Reactions between entities are calculated using the agent-based simulation algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000017]."@en)
SubClassOf(kisao:KISAO_0000021 kisao:KISAO_0000363)
SubClassOf(kisao:KISAO_0000021 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000021 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000021 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000264))
SubClassOf(kisao:KISAO_0000021 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000017))

# Class: kisao:KISAO_0000022 (Elf and Ehrenberg method)

AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000022 "MesoRD"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000022 "SmartCell"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000022 "Elf and Ehrenberg method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Elf J, Ehrenberg M. Spontaneous separation of bi-stable biochemical systems into spatial domains of opposite phases. Systems Biology, IEE Proceedings, volume 1 (2), pages 230-236 (2004)."@en) rdfs:seeAlso kisao:KISAO_0000022 "http://identifiers.org/doi/10.1049/sb:20045021"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000022 "Elf algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000022 "NSM"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000022 "next-subvolume method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000022 "Sub-volume stochastic reaction-diffusion method that is a combination of the Direct Method [http://identifiers.org/biomodels.kisao/KISAO_0000029] for sampling the time for a next reaction or diffusion event in each subvolume, with Gibson and Bruck's Next Reaction Method [http://identifiers.org/biomodels.kisao/KISAO_0000027], which is used to keep track of in which subvolume an event occurs next. The subvolumes are kept sorted in a queue, implemented as a binary tree, according to increasing time of the next event. When an event has occurred in the subvolume at the top of the queue, new event times need to be sampled only for one (the event is a chemical reaction) or two (the event is a diffusion jump) subvolume(s)."@en)
SubClassOf(kisao:KISAO_0000022 kisao:KISAO_0000095)
SubClassOf(kisao:KISAO_0000022 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000027))
SubClassOf(kisao:KISAO_0000022 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000029))
DisjointClasses(kisao:KISAO_0000022 kisao:KISAO_0000076)

# Class: kisao:KISAO_0000027 (Gibson-Bruck next reaction algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000027 "2007-11-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000027 "dk"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000027 "Cain"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000027 "SmartCell"@en)
AnnotationAssertion(Annotation(rdfs:comment "E-Cell"@end) kisao:isImplementedIn kisao:KISAO_0000027 "http://identifiers.org/biosimulators/ecell4"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "VCell"@end) kisao:isImplementedIn kisao:KISAO_0000027 "http://identifiers.org/biosimulators/vcell"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000027 "Gibson-Bruck next reaction algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gibson MA, Bruck J. Efficient Exact Stochastic Simulation of Chemical Systems with Many Species and Many Channels. Journal of Physical Chemistry A, Vol. 104, pages 1876-1889 (2000)."@en) rdfs:seeAlso kisao:KISAO_0000027 "http://identifiers.org/doi/10.1021/jp993732q"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000027 "Gibson and Bruck algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000027 "Gibson-Bruck's next reaction algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000027 "Gillespie-Gibson stochastic simulation algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000027 "SSA-GB"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000027 "next reaction method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000027 "As with the first reaction method [http://identifiers.org/biomodels.kisao/KISAO_0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized."@en)
SubClassOf(kisao:KISAO_0000027 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000027 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000027 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
SubClassOf(kisao:KISAO_0000027 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000015))

# Class: kisao:KISAO_0000028 (slow-scale stochastic simulation algorithm)

AnnotationAssertion(rdfs:label kisao:KISAO_0000028 "slow-scale stochastic simulation algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Cao Y, Gillespie DT, Petzold LR. The slow-scale stochastic simulation algorithm. Journal of Chemical Physics, Vol. 122, No. 1. (1 January 2005)."@en) rdfs:seeAlso kisao:KISAO_0000028 "http://identifiers.org/pubmed/15638651"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000028 "slow-scale stochastic SSA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000028 "ssSSA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000028 "Attempt to overcome the problem of stiff systems by developing an ''approximate theory that allows one to stochastically advance the system in time by simulating the firings of only the slow reaction events''."@en)
SubClassOf(kisao:KISAO_0000028 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000028 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000028 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))

# Class: kisao:KISAO_0000029 (Gillespie direct algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000029 "2007-11-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000029 "dk"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000029 "BetaWB"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000029 "ByoDyn"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000029 "Cain"@en)
AnnotationAssertion(Annotation(rdfs:comment "BioNetGen"@end) kisao:isImplementedIn kisao:KISAO_0000029 "http://identifiers.org/biosimulators/bionetgen"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@end) kisao:isImplementedIn kisao:KISAO_0000029 "http://identifiers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000029 "Gillespie direct algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. A General Method for Numerically Simulating the Stochastic Time Evolution of Coupled Chemical Reactions. Journal of Computational Physics, Volume 2 , pages 403-434 (1976)."@en) rdfs:seeAlso kisao:KISAO_0000029 "http://identifiers.org/doi/10.1016/0021-9991(76)90041-3"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. Exact stochastic simulation of coupled chemical reactions. Journal of Physical Chemistry, Vol. 81, No. 25. (1977), pp. 2340-2361."@en) rdfs:seeAlso kisao:KISAO_0000029 "http://identifiers.org/doi/10.1021/j100540a008"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000029 "DM"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000029 "Doob-Gillespie method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000029 "Gillespie's algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000029 "Gillespie's direct method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000029 "SSA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000029 "stochastic simulation algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000029 "Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculates the identity of the reaction and the time it will fire."@en)
SubClassOf(kisao:KISAO_0000029 kisao:KISAO_0000241)
SubClassOf(kisao:KISAO_0000029 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000029 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
SubClassOf(kisao:KISAO_0000029 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000051))

# Class: kisao:KISAO_0000030 (Euler forward method)

AnnotationAssertion(dc:created kisao:KISAO_0000030 "2007-11-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000030 "dk"@en)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@end) kisao:isImplementedIn kisao:KISAO_0000030 "http://identifiers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "VCell"@end) kisao:isImplementedIn kisao:KISAO_0000030 "http://identifiers.org/biosimulators/vcell"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000030 "Euler forward method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Press WH, Teukolsky SA, Vetterling WT, Flannery BP. Numerical Recipes. Cambridge University Press, New York, 2nd edition (1992)."@en) rdfs:seeAlso kisao:KISAO_0000030 "http://identifiers.org/isbn/052143064X"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000030 "explicit Euler method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000030 "explicit Gaussian first order Runge-Kutta"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000030 "The Euler method is an explicit one-step method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t."@en)
SubClassOf(kisao:KISAO_0000030 kisao:KISAO_0000261)
SubClassOf(kisao:KISAO_0000030 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
DisjointClasses(kisao:KISAO_0000030 kisao:KISAO_0000031)

# Class: kisao:KISAO_0000031 (Euler backward method)

AnnotationAssertion(dc:created kisao:KISAO_0000031 "2007-11-02"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000031 "dk"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000031 "GSL"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000031 "Euler backward method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Press WH, Teukolsky SA, Vetterling WT, Flannery BP. Numerical Recipes in Fortran 77. Cambridge University Press (2001)."@en) rdfs:seeAlso kisao:KISAO_0000031 "http://identifiers.org/isbn/052143064X"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000031 "implicit Euler method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000031 "implicit Gaussian first order Runge-Kutta"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000031 "The Euler backward method is an implicit one-step method for the numerical integration of ODES with a given initial value. The next state of a system is calculated by solving an equation that considers both, the current state of the system and the later one."@en)
SubClassOf(kisao:KISAO_0000031 kisao:KISAO_0000261)
SubClassOf(kisao:KISAO_0000031 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))

# Class: kisao:KISAO_0000032 (explicit fourth-order Runge-Kutta method)

AnnotationAssertion(dc:created kisao:KISAO_0000032 "2007-11-12"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000032 "dk"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000032 "GSL"@en)
AnnotationAssertion(Annotation(rdfs:comment "JSim"@end) kisao:isImplementedIn kisao:KISAO_0000032 "http://identifiers.org/biosimulators/jsim"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "VCell"@end) kisao:isImplementedIn kisao:KISAO_0000032 "http://identifiers.org/biosimulators/vcell"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000032 "explicit fourth-order Runge-Kutta method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Butcher JC. The Numerical Analysis of Ordinary Differential Equations: Runge-Kutta and General Linear Methods (1987). "@en) rdfs:seeAlso kisao:KISAO_0000032 "http://identifiers.org/isbn/0-471-91046-5 "^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000032 "ERK4"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000032 "RK4"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000032 "Runge-Kutta method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000032 "The Runge-Kutta method is a method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t, plus the product of the size of the interval and an estimated slope. The slope is a weighted average of 4 single slope points (beginning of interval-midpoint-midpoint-end of interval)."@en)
SubClassOf(kisao:KISAO_0000032 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000032 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000032 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000032 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000032 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000032 DataHasValue(kisao:KISAO_0000275 "4"^^xsd:integer))

# Class: kisao:KISAO_0000033 (Rosenbrock method)

AnnotationAssertion(dc:created kisao:KISAO_0000033 "2007-11-12"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000033 "dk"@en)
AnnotationAssertion(Annotation(rdfs:comment "E-Cell"@end) kisao:isImplementedIn kisao:KISAO_0000033 "http://identifiers.org/biosimulators/ecell4"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000033 "Rosenbrock method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Rosenbrock HH. Some general implicit processes for the numerical solution of differential equations. The Computer Journal, pages 329-330 (1963)."@en) rdfs:seeAlso kisao:KISAO_0000033 "http://identifiers.org/doi/10.1093/comjnl/5.4.329"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Press WH, Teukolsky SA, Vetterling WT, Flannery BP. Numerical Recipes. Cambridge University Press, New York, 2nd edition, pages 742-746 (1992)."@en) rdfs:seeAlso kisao:KISAO_0000033 "http://identifiers.org/isbn/052143064X"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000033 "Kaps-Rentrop method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000033 "generalized fourth order Runge-Kutta method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000033 "Some general implicit processes are given for the solution of simultaneous first-order differential equations. These processes, which use successive substitution, are implicit analogues of the (explicit) Runge-Kutta processes. They require the solution in each time step of one or more set of simultaneous linear equations, usually of a special and simple form. Processes of any required order can be devised, and they can be made to have a wide margin of stability when applied to a linear problem."@en)
SubClassOf(kisao:KISAO_0000033 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000033 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000033 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000033 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000033 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))

# Class: kisao:KISAO_0000038 (sorting stochastic simulation algorithm)

AnnotationAssertion(rdfs:label kisao:KISAO_0000038 "sorting stochastic simulation algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "McCollum J M, Peterson G D, Cox C D, Simpson M L, Samatova N F. The sorting direct method for stochastic simulation of biochemical systems with varying reaction execution behaviour. Computational Biology and Chemistry, Volume 30 (1), pages 39-49 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000038 "http://identifiers.org/doi/10.1016/j.compbiolchem.2005.10.007"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000038 "sorting SSA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000038 "sorting direct method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000038 "In order to overcome the problem of high complexity of the stochastic simulation algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000029] when simulating large systems, the sorting direct method maintains a loosely sorted order of the reactions as the simulation executes."@en)
SubClassOf(kisao:KISAO_0000038 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000038 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000038 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))

# Class: kisao:KISAO_0000039 (tau-leaping method)

AnnotationAssertion(dc:created kisao:KISAO_0000039 "2008-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000039 "NLN"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000039 "ByoDyn"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000039 "Cain"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000039 "SmartCell"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000039 "tau-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. Approximate accelerated stochastic simulation of chemically reacting systems. The Journal of Chemical Physics, Vol. 115 (4), pages 1716-1733 (2001). Section V."@en) rdfs:seeAlso kisao:KISAO_0000039 "http://identifiers.org/doi/10.1063/1.1378322"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000039 "tauL"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000039 "Approximate acceleration procedure of the stochastic simulation algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000029] that divides the time into subintervals and ''leaps'' from one to another, firing all the reaction events in each subinterval."@en)
SubClassOf(kisao:KISAO_0000039 kisao:KISAO_0000621)
SubClassOf(kisao:KISAO_0000039 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000039 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000228))

# Class: kisao:KISAO_0000040 (Poisson tau-leaping method)

AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000040 "ByoDyn"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000040 "Poisson tau-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. Approximate accelerated stochastic simulation of chemically reacting systems. The Journal of Chemical Physics, Vol. 115 (4), pages 1716-1733 (2001). Section V."@en) rdfs:seeAlso kisao:KISAO_0000040 "http://identifiers.org/doi/10.1063/1.1378322"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000040 "explicit tau-leaping"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000040 "explicit tau-leaping method with basic pre-leap check"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000040 "explicit tau-leaping method with basic preleap check"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000040 "poisson tau-leaping"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000040 "Explicit tau-leaping method with basic pre leap check."@en)
SubClassOf(kisao:KISAO_0000040 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000040 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))

# Class: kisao:KISAO_0000045 (implicit tau-leaping method)

AnnotationAssertion(dc:created kisao:KISAO_0000045 "2007-10-12"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000045 "dk"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000045 "implicit tau-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Rathinam M, Petzold L R, Cao Y, Gillespie D T. Stiffness in stochastic chemically reacting systems: The implicit tau-leaping method. The Journal of Chemical Physics, Volume 119 (24), pages 12784-12794 (2003)."@en) rdfs:seeAlso kisao:KISAO_0000045 "http://identifiers.org/doi/10.1063/1.1627296"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000045 "Contrary to the explicit tau-leaping [http://identifiers.org/biomodels.kisao/KISAO_0000039 and http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000239] , the implicit tau-leaping allows for much larger time-steps when simulating stiff systems."@en)
SubClassOf(kisao:KISAO_0000045 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000045 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000045 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000045 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000248))

# Class: kisao:KISAO_0000046 (trapezoidal tau-leaping method)

AnnotationAssertion(dc:created kisao:KISAO_0000046 "2007-10-16"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000046 "dk"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000046 "trapezoidal tau-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Cao Y, Petzold L. Trapezoidal tau-leaping formula for the stochastic simulation of biochemical systems. Foundations of Systems Biology in Engineering (FOSBE), pages 149-152 (2005)."@en) rdfs:seeAlso kisao:KISAO_0000046 "citeulike:1755561"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000046 "trapezoidal implicit tau-leaping method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000046 "Formula for accelerated discrete efficient stochastic simulation of chemically reacting system [which] has better accuracy and stiff stability properties than the explicit and implicit [http://identifiers.org/biomodels.kisao/KISAO_0000045] tau-leaping formulas for discrete stochastic systems, and it limits to the trapezoidal rule in the deterministic regime."@en)
SubClassOf(kisao:KISAO_0000046 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000046 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000046 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))

# Class: kisao:KISAO_0000048 (adaptive explicit-implicit tau-leaping method)

AnnotationAssertion(rdfs:label kisao:KISAO_0000048 "adaptive explicit-implicit tau-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Cao Y, Gillespie DT, Petzold LR. Adaptive explicit-implicit tau-leaping method with automatic tau selection. The Journal of Chemical Physics, Vol. 126 (22) (2007)."@en) rdfs:seeAlso kisao:KISAO_0000048 "http://identifiers.org/doi/10.1063/1.2745299"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000048 "Modification of the original tau-selection strategy [http://identifiers.org/biomodels.kisao/KISAO_0000040], designed for explicit tau-leaping, is modified to apply to implicit tau-leaping, allowing for longer steps when the system is stiff. Further, an adaptive strategy is proposed that identifies stiffness and automatically chooses between the explicit and the (new) implicit tau-selection methods to achieve better efficiency."@en)
SubClassOf(kisao:KISAO_0000048 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000048 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000048 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000048 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))

# Class: kisao:KISAO_0000051 (Bortz-Kalos-Lebowitz algorithm)

AnnotationAssertion(rdfs:label kisao:KISAO_0000051 "Bortz-Kalos-Lebowitz algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Bortz AB, Kalos MH, Lebowitz JL. A new algorithm for Monte Carlo simulation of Ising spin systems. Journal of Computational Physics, Vol. 17 (1), pages 10-18 (1975)."@en) rdfs:seeAlso kisao:KISAO_0000051 "http://identifiers.org/doi/10.1016/0021-9991(75)90060-1"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "BKL"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "DMC"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "KMC"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "dynamic Monte Carlo"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "dynamic Monte Carlo method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "kinetic Monte Carlo"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "kinetic Monte Carlo method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000051 "n-fold way"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000051 "The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers."@en)
SubClassOf(kisao:KISAO_0000051 kisao:KISAO_0000335)
SubClassOf(kisao:KISAO_0000051 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000051 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000029))

# Class: kisao:KISAO_0000056 (Smoluchowski equation based method)

AnnotationAssertion(dc:created kisao:KISAO_0000056 "2007-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000056 "dk"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000056 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000056 "Smoluchowski equation based method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Smoluchowski M. Mathematical theory of the kinetics of the coagulation of colloidal solutions. Z. Phys. Chem, Vol. 92, No. 129. (1917)."@en) rdfs:seeAlso kisao:KISAO_0000056 "urn:issn:0942-9352"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000056 "Method based on the Smoluchowski equation."@en)
SubClassOf(kisao:KISAO_0000056 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000056 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))

# Class: kisao:KISAO_0000057 (Brownian diffusion Smoluchowski method)

AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000057 "Smoldyn"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000057 "Brownian diffusion Smoluchowski method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Andrews SS, Bray D. Stochastic simulation of chemical reactions with spatial resolution and single molecule detail. Phys Biol, volume 1 (3-4), pages 137-151 (December 2004)."@en) rdfs:seeAlso kisao:KISAO_0000057 "http://identifiers.org/pubmed/16204833"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000057 "In the Brownian diffusion Smoluchowski method, ''each molecule is treated as a point-like particle that diffuses freely in three-dimensional space. When a pair of reactive molecules collide, such as an enzyme and its substrate, a reaction occurs and the simulated reactants are replaced by products. [..] Analytic solutions are presented for some simulation parameters while others are calculated using look-up tables''. Supported chemical processes include molecular diffusion, treatment of surfaces, zeroth-order-, unimolecular-, and bimolecular reactions."@en)
SubClassOf(kisao:KISAO_0000057 kisao:KISAO_0000056)
SubClassOf(kisao:KISAO_0000057 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000057 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000105))
SubClassOf(kisao:KISAO_0000057 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000057 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000254))
SubClassOf(kisao:KISAO_0000057 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000257))
SubClassOf(kisao:KISAO_0000057 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000258))
SubClassOf(kisao:KISAO_0000057 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000260))
DisjointClasses(kisao:KISAO_0000057 kisao:KISAO_0000058)

# Class: kisao:KISAO_0000058 (Greens function reaction dynamics)

AnnotationAssertion(rdfs:label kisao:KISAO_0000058 "Greens function reaction dynamics"@en)
AnnotationAssertion(Annotation(rdfs:comment "Van Zon JS, Ten Wolde PR. Green's-function reaction dynamics: A particle-based approach for simulating biochemical networks in time and space. Journal of Chemical Physics, Volume 123 (23) (2005)."@en) rdfs:seeAlso kisao:KISAO_0000058 "http://identifiers.org/doi/10.1063/1.2137716"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000058 "GFRD"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000058 "Green's function reaction dynamics"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000058 "Method that simulates biochemical networks on particle level. It considers both changes in time and space by ''exploiting both the exact solution of the Smoluchowski Equation to set up an event-driven algorithm'' which allows for large jumps in time when the considered particles are far away from each other [in space] and thus cannot react. GFRD combines the propagation of particles in space with the reactions taking place between them in one simulation step."@en)
SubClassOf(kisao:KISAO_0000058 kisao:KISAO_0000056)
SubClassOf(kisao:KISAO_0000058 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000058 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000105))
SubClassOf(kisao:KISAO_0000058 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000058 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))

# Class: kisao:KISAO_0000064 (Runge-Kutta based method)

AnnotationAssertion(dc:created kisao:KISAO_0000064 "2007-11-12"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000064 "dk"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000064 "ByoDyn"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000064 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000064 "Runge-Kutta based method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Butcher JC. The Numerical Analysis of Ordinary Differential Equations: Runge-Kutta and General Linear Methods (1987)."@en) rdfs:seeAlso kisao:KISAO_0000064 "http://identifiers.org/isbn/0-471-91046-5"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "RELATED"@en) skos:altLabel kisao:KISAO_0000064 "modified Euler method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000064 "A method of numerically integrating ordinary differential equations, which uses a sampling of slopes through an interval and takes a weighted average to determine the right end point. This averaging gives a very accurate approximation."@en)
SubClassOf(kisao:KISAO_0000064 kisao:KISAO_0000377)
SubClassOf(kisao:KISAO_0000064 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000064 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000261))
SubClassOf(kisao:KISAO_0000064 DataSomeValuesFrom(kisao:KISAO_0000275 xsd:integer))

# Class: kisao:KISAO_0000068 (deterministic cellular automata update algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000068 "2007-11-30"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000068 "dk"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000068 "deterministic cellular automata update algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Burks, Arthur W (Editor). Essays on Cellular Automata. University of Illinois Press (1970)."@en) rdfs:seeAlso kisao:KISAO_0000068 "http://identifiers.org/isbn/978-0252000232"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000068 "A cellular automaton is a discrete model of a regular grid of cells with a finite number of dimensions. Each cell has a finite number of defined states. The automaton changes its state in a discrete manner, meaning that the state of a cell at time t is determined by a function of the states of its neighbours at time t - 1. These neighbours are a selection of cells relative to the specified cell. Famous examples for deterministic cellular automata are Conway's game of life or Wolfram's elementary cellular automata."@en)
SubClassOf(kisao:KISAO_0000068 kisao:KISAO_0000264)
SubClassOf(kisao:KISAO_0000068 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))

# Class: kisao:KISAO_0000071 (LSODE)

AnnotationAssertion(dc:created kisao:KISAO_0000071 "2007-11-16"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000071 "dk"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000071 "LSODE"@en)
AnnotationAssertion(Annotation(rdfs:comment "Radhakrishnan K, Hindmarsh AC. Description and Use of LSODE, the Livermore Solver for Ordinary Differential Equations. Lawrence Livermore National Laboratory Report, Vol. UCRL-ID-113855 (1993)."@en) rdfs:seeAlso kisao:KISAO_0000071 "citeulike:1774586"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh AC. LSODE and LSODI, two new initial value ordinary differential equation solvers. SIGNUM Newsletter, Volume 15 (4), pages 10-11 (1980)."@en) rdfs:seeAlso kisao:KISAO_0000071 "http://identifiers.org/doi/10.1145/1218052.1218054"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000071 "Livermore solver for ordinary differential equations"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000071 "LSODE solves stiff and nonstiff systems of the form dy/dt = f. In the stiff case, it treats the Jacobian matrix sf/dy as either a dense (full) or a banded matrix, and as either user-supplied or internally approximated by difference quotients. It uses Adams methods (predictor-corrector) [http://identifiers.org/biomodels.kisao/KISAO_0000364] in the nonstiff case, and Backward Differentiation Formula (BDF) methods (the Gear methods) [http://identifiers.org/biomodels.kisao/KISAO_0000288] in the stiff case."@en)
SubClassOf(kisao:KISAO_0000071 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000071 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000071 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000288))
SubClassOf(kisao:KISAO_0000071 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000364))

# Class: kisao:KISAO_0000074 (binomial tau-leaping method)

AnnotationAssertion(dc:created kisao:KISAO_0000074 "2007-10-16"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000074 "dk"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000074 "binomial tau-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Marquez-Lago T., Burrage K. Binomial tau-leap spatial stochastic simulation algorithm for applications in chemical kinetics. The Journal of Chemical Physics, Vol. 127 (10) (2007)."@en) rdfs:seeAlso kisao:KISAO_0000074 "http://identifiers.org/doi/10.1063/1.2771548"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000074 "BtauL"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000074 "binomial tau-leap spatial stochastic simulation algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000074 "Coarse grained modified version of the next subvolume method [http://identifiers.org/biomodels.kisao/KISAO_0000022] that allows the user to consider both diffusion and reaction events in relatively long simulation time spans as compared with the original method and other commonly used fully stochastic computational methods."@en)
SubClassOf(kisao:KISAO_0000074 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000074 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000095))
SubClassOf(kisao:KISAO_0000074 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000253))

# Class: kisao:KISAO_0000075 (Gillespie multi-particle method)

AnnotationAssertion(rdfs:label kisao:KISAO_0000075 "Gillespie multi-particle method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Rodriguez VJ, Kaandorp JA, Dobrzynski M, Blom JG. Spatial stochastic modelling of the phosphoenolpyruvate-dependent phosphotransferase (PTS) pathway in Escherichia coli. Bioinformatics, Vol. 22 (15), pages 1895-1901 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000075 "http://identifiers.org/pubmed/16731694"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000075 "GMP"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000075 "Gillespie's multi-particle method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000075 "particle-based spatial stochastic method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000075 "Combination of the multiparticle method for diffusion [http://identifiers.org/biomodels.kisao/KISAO_0000334] and the SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029]."@en)
SubClassOf(kisao:KISAO_0000075 kisao:KISAO_0000335)
SubClassOf(kisao:KISAO_0000075 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000075 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000029))
SubClassOf(kisao:KISAO_0000075 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000334))

# Class: kisao:KISAO_0000076 (Stundzia and Lumsden method)

AnnotationAssertion(rdfs:label kisao:KISAO_0000076 "Stundzia and Lumsden method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Stundzia AB, Lumsden CJ. Stochastic simulation of coupled reaction-diffusion processes. J Comput Phys, Vol. 127 (1), pages 196-207 (1996)."@en) rdfs:seeAlso kisao:KISAO_0000076 "http://identifiers.org/doi/10.1006/jcph.1996.0168"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000076 "RD SSA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000076 "reaction-diffusion stochastic simulation algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000076 "Sub-volume stochastic reaction-diffusion method that using Green's function to link the bulk diffusion coefficient D in Fick's differential law to the corresponding transition rate probability for diffusion of a particle between finite volume elements. This generalized stochastic algorithm enables to numerically calculate the time evolution of a spatially inhomogeneous mixture of reaction-diffusion species in a finite volume. The time step is stochastic and is generated by a probability distribution determined by the intrinsic reaction kinetics and diffusion dynamics."@en)
SubClassOf(kisao:KISAO_0000076 kisao:KISAO_0000095)

# Class: kisao:KISAO_0000081 (estimated midpoint tau-leaping method)

AnnotationAssertion(rdfs:label kisao:KISAO_0000081 "estimated midpoint tau-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. Approximate accelerated stochastic simulation of chemically reacting systems. The Journal of Chemical Physics, Vol. 115 (4), pages 1716-1733 (2001). Section VI."@en) rdfs:seeAlso kisao:KISAO_0000081 "http://identifiers.org/doi/10.1063/1.1378322"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000081 "explicit tau-leaping method with estimated-mid point technique"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000081 "Estimated-Midpoint tau-Leap Method: For the selected leaping time tau which satisfies the Leap Condition, compute the expected state change lambda' = tau sumj( aj(x)vj ) during [t, t + tau). Then, with x' =x + [lambda'/2], generate for each j = 1,...,M a sample value kj of the Poisson random variable P(aj(x'), tau). Compute the actual state change, lambda = sumj( kjvj ), and effect the leap by replacing t by t + tau and x by x + lambda."@en)
SubClassOf(kisao:KISAO_0000081 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000081 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))

# Class: kisao:KISAO_0000082 (k-alpha leaping method)

AnnotationAssertion(rdfs:label kisao:KISAO_0000082 "k-alpha leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. Approximate accelerated stochastic simulation of chemically reacting systems. The Journal of Chemical Physics, Vol. 115 (4), pages 1716-1733 (2001). Section VIII."@en) rdfs:seeAlso kisao:KISAO_0000082 "http://identifiers.org/doi/10.1063/1.1378322"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000082 "Alternative to the tau-leaping [http://identifiers.org/biomodels.kisao/KISAO_0000039], where one leaps a fixed number of reaction-events."@en)
SubClassOf(kisao:KISAO_0000082 kisao:KISAO_0000621)
SubClassOf(kisao:KISAO_0000082 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000082 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000039))

# Class: kisao:KISAO_0000084 (nonnegative Poisson tau-leaping method)

AnnotationAssertion(rdfs:label kisao:KISAO_0000084 "nonnegative Poisson tau-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Cao Y, Gillespie DT, Petzold LR. Avoiding negative populations in explicit Poisson tau-leaping. Journal of Chemical Physics, Vol. 123, 4104 (2005)."@en) rdfs:seeAlso kisao:KISAO_0000084 "http://identifiers.org/doi/10.1063/1.1992473"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000084 "modified poisson tau-leaping"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000084 "The explicit tau-leaping procedure attempts to speed up the stochastic simulation of a chemically reacting system by approximating the number of firings of each reaction channel during a chosen time increment Tau as a Poisson random variable. Since the Poisson random variable can have arbitrarily large sample values, there is always the possibility that this procedure will cause one or more reaction channels to fire so many times during Tau that the population of some reactant species will be driven negative. Two recent papers have shown how that unacceptable occurrence can be avoided by replacing the Poisson random variables with binomial random variables, whose values are naturally bounded. This paper describes a modified Poisson tau-leaping procedure that also avoids negative populations, but is easier to implement than the binomial procedure. The new Poisson procedure also introduces a second control parameter, whose value essentially dials the procedure from the original Poisson tau-leaping at one extreme to the exact stochastic simulation algorithm at the other; therefore, the modified Poisson procedure will generally be more accurate than the original Poisson procedure [http://identifiers.org/biomodels.kisao/KISAO_0000040]."@en)
SubClassOf(kisao:KISAO_0000084 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000084 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000084 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000040))
SubClassOf(kisao:KISAO_0000084 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000249))

# Class: kisao:KISAO_0000086 (Fehlberg method)

AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000086 "GSL"@en)
AnnotationAssertion(Annotation(rdfs:comment "E-Cell"@end) kisao:isImplementedIn kisao:KISAO_0000086 "http://identifiers.org/biosimulators/ecell4"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@end) kisao:isImplementedIn kisao:KISAO_0000086 "http://identifiers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "JSim"@end) kisao:isImplementedIn kisao:KISAO_0000086 "http://identifiers.org/biosimulators/jsim"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "VCell"@end) kisao:isImplementedIn kisao:KISAO_0000086 "http://identifiers.org/biosimulators/vcell"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000086 "Fehlberg method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Erwin Fehlberg (1970). Klassische Runge-Kutta-Formeln vierter und niedrigerer Ordnung mit Schrittweiten-Kontrolle und ihre Anwendung auf Wärmeleitungsprobleme, Computing (Arch. Elektron. Rechnen), vol. 6, pp. 61-71."@de) rdfs:seeAlso kisao:KISAO_0000086 "http://identifiers.org/doi/10.1007/BF02241732"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Takahashi K, Kaizu K, Hu B, Tomita M. A multi-algorithm, multi-timescale method for cell simulation. Bioinformatics volume 20(4), pages 538-46 (2004)."@en) rdfs:seeAlso kisao:KISAO_0000086 "http://identifiers.org/pubmed/14990450"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000086 "RKF45"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000086 "Runge-Kutta-Fehlberg method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000086 "The method was developed by the German mathematician Erwin Fehlberg and is based on the class of Runge-Kutta methods. The Runge-Kutta-Fehlberg method uses an O(h4) method together with an O(h5) method that uses all of the points of the O(h4) method, and hence is often referred to as an RKF45 method. Similar schemes with different orders have since been developed. By performing one extra calculation that would be required for an RK5 method, the error in the solution can be estimated and controlled and an appropriate step size can be determined automatically, making this method efficient for ordinary problems of automated numerical integration of ordinary differential equations."@en)
SubClassOf(kisao:KISAO_0000086 kisao:KISAO_0000435)

# Class: kisao:KISAO_0000087 (Dormand-Prince method)

AnnotationAssertion(dc:created kisao:KISAO_0000087 "2007-11-12"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000087 "dk"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000087 "ECell3"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000087 "GSL"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000087 "Matlab"@en)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@end) kisao:isImplementedIn kisao:KISAO_0000087 "http://identifiers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "JSim"@end) kisao:isImplementedIn kisao:KISAO_0000087 "http://identifiers.org/biosimulators/jsim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000087 "Dormand-Prince method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Dormand J, Prince P. A family of embedded Runge-Kutta formulae. Journal of Computational and Applied Mathematics, Volume 6, pages 19-26 (1980)."@en) rdfs:seeAlso kisao:KISAO_0000087 "http://identifiers.org/doi/10.1016/0771-050X(80)90013-3"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Takahashi K, Kaizu K, Hu B, Tomita M. A multi-algorithm, multi-timescale method for cell simulation. Bioinformatics volume 20(4), pages 538-46 (2004)."@en) rdfs:seeAlso kisao:KISAO_0000087 "http://identifiers.org/pubmed/14990450"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000087 "DOPRI"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000087 "Prince-Dormand method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000087 "Dormand-Prince is an explicit method for the numerical integration of ODES with a given initial value.
It is an 'embedded Runge-Kutta method' [http://identifiers.org/biomodels.kisao/KISAO_0000302] RK5 (4) which (a) has a 'small' principal truncation term in the Fifth order and (b) has an extended region of absolute stability."@en)
SubClassOf(kisao:KISAO_0000087 kisao:KISAO_0000435)
SubClassOf(kisao:KISAO_0000087 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000538))
SubClassOf(kisao:KISAO_0000087 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000539))
SubClassOf(kisao:KISAO_0000087 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000540))
SubClassOf(kisao:KISAO_0000087 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000541))
SubClassOf(kisao:KISAO_0000087 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000559))

# Class: kisao:KISAO_0000088 (LSODA)

AnnotationAssertion(dc:created kisao:KISAO_0000088 "2007-11-30"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000088 "dk"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000088 "LSODA"@en)
AnnotationAssertion(Annotation(rdfs:comment "Petzold LR. Automatic Selection of Methods for Solving Stiff and Nonstiff Systems of Ordinary Differential Equations. SIAM Journal on Scientific and Statistical Computing, Vol. 4 (1), pages 136-148 (1983)."@en) rdfs:seeAlso kisao:KISAO_0000088 "http://identifiers.org/doi/10.1137/0904010"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000088 "http://identifiers.org/isbn/978-0444866073"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Petzold LR, Hindmarsh, AC. LSODAR: Livermore solver of ordinary differential equations with automatic method switching and root finding, Computing and Mathematics Research Division, 1-316 Lawerence Livermore National Laboratory (1987)."@en) rdfs:seeAlso kisao:KISAO_0000088 "http://www.nea.fr/abs/html/uscd1227.html"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000088 "Livermore solver for ordinary differential equations with automatic method switching"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000088 "LSODA solves systems dy/dt = f with a dense or banded Jacobian when the problem is stiff, but it automatically selects between non-stiff (Adams [http://identifiers.org/biomodels.kisao/KISAO_0000289]) and stiff (BDF [http://identifiers.org/biomodels.kisao/KISAO_0000288]) methods. It uses the non-stiff method initially, and dynamically monitors data in order to decide which method to use."@en)
SubClassOf(kisao:KISAO_0000088 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000088 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000071))
SubClassOf(kisao:KISAO_0000088 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000288))
SubClassOf(kisao:KISAO_0000088 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000289))
SubClassOf(kisao:KISAO_0000088 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000209))
SubClassOf(kisao:KISAO_0000088 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000211))
SubClassOf(kisao:KISAO_0000088 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000219))
SubClassOf(kisao:KISAO_0000088 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000220))
SubClassOf(kisao:KISAO_0000088 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000559))

# Class: kisao:KISAO_0000089 (LSODAR)

AnnotationAssertion(dc:created kisao:KISAO_0000089 "2007-10-27"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000089 "dk"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000089 "LSODAR"@en)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000089 "http://identifiers.org/isbn/978-0444866073"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Petzold LR, Hindmarsh, AC. LSODAR: Livermore solver of ordinary differential equations with automatic method switching and root finding, Computing and Mathematics Research Division, 1-316 Lawerence Livermore National Laboratory (1987)."@en) rdfs:seeAlso kisao:KISAO_0000089 "http://www.nea.fr/abs/html/uscd1228.html"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000089 "Livermore solver for ordinary differential equations with automatic method switching and root finding"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000089 "ordinary differential equation solver for stiff or non-stiff systems with root finding"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000089 "LSODAR is a variant of LSODA [http://identifiers.org/biomodels.kisao/KISAO_0000088] with a root finding capability added. Thus it solves problems dy/dt = f with dense or banded Jacobian and automatic method selection, and at the same time, it finds the roots of any of a set of given functions of the form g(t,y). This is often useful for finding stop conditions, or for finding points at which a switch is to be made in the function f."@en)
SubClassOf(kisao:KISAO_0000089 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000089 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000088))

# Class: kisao:KISAO_0000090 (LSODI)

AnnotationAssertion(rdfs:label kisao:KISAO_0000090 "LSODI"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh AC. LSODE and LSODI, two new initial value ordinary differential equation solvers. SIGNUM Newsletter, Volume 15 (4), pages 10-11 (1980)."@en) rdfs:seeAlso kisao:KISAO_0000090 "http://identifiers.org/doi/10.1145/1218052.1218054"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000090 "http://identifiers.org/isbn/978-0444866073"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000090 "Livermore solver for ordinary differential equations, implicit version"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000090 "LSODI solves systems given in linearly implicit form, including differential-algebraic systems."@en)
SubClassOf(kisao:KISAO_0000090 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000090 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000090 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000071))

# Class: kisao:KISAO_0000091 (LSODIS)

AnnotationAssertion(dc:created kisao:KISAO_0000091 "2007-11-30"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000091 "dk"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000091 "LSODIS"@en)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000091 "http://identifiers.org/isbn/978-0444866073"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Seager M, Balsdon S. LSODIS - A sparse implicit ODE solver. 10th World Congress on System Simulation and Scientific Computation, pages 437-439 (1983)."@en) rdfs:seeAlso kisao:KISAO_0000091 "http://www.nea.fr/abs/html/uscd1225.html"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000091 "Livermore solver for ordinary differential equations, implicit sparse version"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000091 "LSODIS is a set of general-purpose FORTRAN routines solver for the initial value problem for ordinary differential equation systems. It is suitable for both stiff and nonstiff systems. LSODIS treat systems in the linearly implicit form A(t,y) dy/dt = g(t,y), A = a square matrix, i.e. with the derivative dy/dt implicit, but linearly so."@en)
SubClassOf(kisao:KISAO_0000091 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000091 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000091 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000071))

# Class: kisao:KISAO_0000093 (LSODPK)

AnnotationAssertion(dc:created kisao:KISAO_0000093 "2008-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000093 "NLN"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000093 "LSODPK"@en)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000093 "http://identifiers.org/isbn/978-0444866073"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000093 "Livermore solver for ordinary differential equations for stiff and nonstiff systems with krylov corrector iteration"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000093 "LSODPK is a set of FORTRAN subroutines for solving the initial value problem for stiff and nonstiff systems of ordinary differential equations. In solving stiff systems, LSODPK uses a corrector iteration composed of Newton iteration and one of four preconditioned Krylov subspace iteration methods [http://identifiers.org/biomodels.kisao/KISAO_0000354]. The user must select the desired Krylov method and supply a pair of routine to evaluate, preprocess, and solve the (left and/or right) preconditioner matrices. Aside from preconditioning, the implementation is matrix-free, meaning that explicit storage of the Jacobian (or related) matrix is not required. The method is experimental because the scope of problems for which it is effective is not well-known, and users are forewarned that LSODPK may or may not be competitive with traditional methods on a given problem. LSODPK also includes an option for a user-supplied linear system solver to be used without Krylov iteration."@en)
SubClassOf(kisao:KISAO_0000093 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000093 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000071))
SubClassOf(kisao:KISAO_0000093 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000354))

# Class: kisao:KISAO_0000094 (Livermore solver)

AnnotationAssertion(dc:created kisao:KISAO_0000094 "2008-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000094 "NLN"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000094 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000094 "Livermore solver"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000094 "Method to solve ordinary differential equations developed at the Lawrence Livermore National Laboratory."@en)
SubClassOf(kisao:KISAO_0000094 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000094 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000094 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000094 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000094 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000094 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))

# Class: kisao:KISAO_0000095 (sub-volume stochastic reaction-diffusion algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000095 "2008-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000095 "NLN"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000095 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000095 "sub-volume stochastic reaction-diffusion algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000095 "Stochastic method using a combination of discretisation of compartment volumes into voxels and Gillespie-like algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000241] to simulate the evolution of the system."@en)
SubClassOf(kisao:KISAO_0000095 kisao:KISAO_0000335)
SubClassOf(kisao:KISAO_0000095 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
DisjointClasses(kisao:KISAO_0000095 kisao:KISAO_0000336)

# Class: kisao:KISAO_0000097 (modelling and simulation algorithm characteristic)

AnnotationAssertion(dc:creator kisao:KISAO_0000097 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000097 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000097 "modelling and simulation algorithm characteristic"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000097 "modeling and simulation algorithm characteristic"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000097 "Simulation algorithm property, which can, for example, describe the model, such as the type of variables (discrete or continuous), and information on the treatment of spatial descriptions, or can be a numerical characteristic, such as the system's behaviour (deterministic or stochastic) as well as the progression mechanism (fixed or adaptive time steps)."@en)

# Class: kisao:KISAO_0000098 (type of variable)

AnnotationAssertion(dc:creator kisao:KISAO_0000098 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000098 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000098 "type of variable"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000098 "Type of variables used for the simulation."@en)
SubClassOf(kisao:KISAO_0000098 kisao:KISAO_0000097)

# Class: kisao:KISAO_0000099 (type of system behaviour)

AnnotationAssertion(dc:creator kisao:KISAO_0000099 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000099 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000099 "type of system behaviour"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000099 "A characteristic describing the rules the algorithm uses to simulate the temporal evolution of a system, specifically whether or not the final state is uniquely determined from a precise initial state."@en)
SubClassOf(kisao:KISAO_0000099 kisao:KISAO_0000097)

# Class: kisao:KISAO_0000100 (type of progression time step)

AnnotationAssertion(dc:creator kisao:KISAO_0000100 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000100 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000100 "type of progression time step"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000100 "Type of time steps used by the algorithm."@en)
SubClassOf(kisao:KISAO_0000100 kisao:KISAO_0000097)

# Class: kisao:KISAO_0000102 (spatial description)

AnnotationAssertion(dc:created kisao:KISAO_0000102 "2008-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000102 "NLN"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000102 "spatial description"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000102 "Algorithm, possessing this characteristic, takes into account the location of the reacting components."@en)
SubClassOf(kisao:KISAO_0000102 kisao:KISAO_0000097)

# Class: kisao:KISAO_0000103 (deterministic system behaviour)

AnnotationAssertion(dc:created kisao:KISAO_0000103 "2008-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000103 "NLN"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000103 "deterministic system behaviour"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000103 "Algorithm, possessing this characteristic, simulates the temporal evolution of a system deterministically, so that from a precise initial state the algorithm will always end up in the same final state."@en)
SubClassOf(kisao:KISAO_0000103 kisao:KISAO_0000099)
DisjointClasses(kisao:KISAO_0000103 kisao:KISAO_0000104)

# Class: kisao:KISAO_0000104 (stochastic system behaviour)

AnnotationAssertion(dc:created kisao:KISAO_0000104 "2008-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000104 "NLN"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000104 "stochastic system behaviour"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000104 "Algorithm, possessing this characteristic, simulates the temporal evolution of a system using probabilistic rules, so that between two simulations, the same precise initial state may result in a different final state."@en)
SubClassOf(kisao:KISAO_0000104 kisao:KISAO_0000099)

# Class: kisao:KISAO_0000105 (discrete variable)

AnnotationAssertion(dc:created kisao:KISAO_0000105 "2008-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000105 "NLN"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000105 "discrete variable"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000105 "Algorithm, possessing this characteristic, allows values of system's variables to change by discrete (integral) amounts."@en)
SubClassOf(kisao:KISAO_0000105 kisao:KISAO_0000098)
DisjointClasses(kisao:KISAO_0000105 kisao:KISAO_0000106)

# Class: kisao:KISAO_0000106 (continuous variable)

AnnotationAssertion(dc:created kisao:KISAO_0000106 "2008-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000106 "NLN"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000106 "continuous variable"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000106 "Algorithm, possessing this characteristic, allows the values of a system's variables to change by continuous (non-integral) amounts."@en)
SubClassOf(kisao:KISAO_0000106 kisao:KISAO_0000098)

# Class: kisao:KISAO_0000107 (progression with adaptive time step)

AnnotationAssertion(dc:created kisao:KISAO_0000107 "2008-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000107 "NLN"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000107 "progression with adaptive time step"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000107 "Algorithm, possessing this characteristic, does not use fixed time steps to update the state of a system during the whole simulation, but on the contrary adapts the length of the time steps to the local situation."@en)
SubClassOf(kisao:KISAO_0000107 kisao:KISAO_0000100)
DisjointClasses(kisao:KISAO_0000107 kisao:KISAO_0000108)

# Class: kisao:KISAO_0000108 (progression with fixed time step)

AnnotationAssertion(dc:created kisao:KISAO_0000108 "2008-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000108 "NLN"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000108 "progression with fixed time step"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000108 "Algorithm, possessing this characteristic, uses time steps of constant length to update the state of a system during the whole simulation."@en)
SubClassOf(kisao:KISAO_0000108 kisao:KISAO_0000100)

# Class: kisao:KISAO_0000201 (modelling and simulation algorithm parameter)

AnnotationAssertion(dc:creator kisao:KISAO_0000201 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000201 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000201 "modelling and simulation algorithm parameter"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000201 "modeling and simulation algorithm parameter"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000201 "Parameter that can be used in the simulation experiment settings."@en)
SubClassOf(kisao:KISAO_0000201 ObjectSomeValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000000))

# Class: kisao:KISAO_0000203 (particle number lower limit)

AnnotationAssertion(rdfs:label kisao:KISAO_0000203 "particle number lower limit"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000203 "This parameter of 'Pahle hybrid method' [http://identifiers.org/biomodels.kisao/KISAO_0000231] is a double value specifying the lower limit for particle numbers. Species with a particle number below this value are considered as having a low particle number. The 'particle number lower limit' cannot be higher than the 'particle number upper limit' [http://identifiers.org/biomodels.kisao/KISAO_0000204]."@en)
SubClassOf(kisao:KISAO_0000203 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000203 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000231))
SubClassOf(kisao:KISAO_0000203 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000204 (particle number upper limit)

AnnotationAssertion(rdfs:label kisao:KISAO_0000204 "particle number upper limit"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000204 "This parameter of 'Pahle hybrid method' [http://identifiers.org/biomodels.kisao/KISAO_0000231] is a double value specifying the upper limit for particle numbers. Species with a particle number above this value are considered as having a high particle number. The 'particle number upper limit' cannot be lower than the 'particle number lower limit' [http://identifiers.org/biomodels.kisao/KISAO_0000203]."@en)
SubClassOf(kisao:KISAO_0000204 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000204 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000231))
SubClassOf(kisao:KISAO_0000204 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000205 (partitioning interval)

AnnotationAssertion(rdfs:label kisao:KISAO_0000205 "partitioning interval"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000205 "This positive integer value specifies after how many steps the internal partitioning of the system should be recalculated."@en)
SubClassOf(kisao:KISAO_0000205 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000205 ObjectAllValuesFrom(kisao:KISAO_0000250 ObjectIntersectionOf(kisao:KISAO_0000000 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000322))))
SubClassOf(kisao:KISAO_0000205 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000209 (relative tolerance)

AnnotationAssertion(rdfs:label kisao:KISAO_0000209 "relative tolerance"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000209 "RTOL"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000209 "This parameter is a numeric value specifying the desired relative tolerance the user wants to achieve. A smaller value means that the trajectory is calculated more accurately."@en)
SubClassOf(kisao:KISAO_0000209 kisao:KISAO_0000597)
SubClassOf(kisao:KISAO_0000209 ObjectAllValuesFrom(kisao:KISAO_0000250 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237)))
SubClassOf(kisao:KISAO_0000209 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000211 (absolute tolerance)

AnnotationAssertion(rdfs:label kisao:KISAO_0000211 "absolute tolerance"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000211 "ATOL"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000211 "This parameter is a positive numeric value specifying the desired absolute tolerance the user wants to achieve."@en)
SubClassOf(kisao:KISAO_0000211 kisao:KISAO_0000597)
SubClassOf(kisao:KISAO_0000211 ObjectAllValuesFrom(kisao:KISAO_0000250 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237)))
SubClassOf(kisao:KISAO_0000211 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000216 (use reduced model)

AnnotationAssertion(rdfs:label kisao:KISAO_0000216 "use reduced model"@en)
AnnotationAssertion(Annotation(rdfs:comment "Jacek Puchałka, Andrzej M Kierzek. Bridging the gap between stochastic and deterministic regimes in the kinetic simulations of the biochemical reaction networks. Biophys J. 2004, 86(3):1357-1372."@en) rdfs:seeAlso kisao:KISAO_0000216 "http://identifiers.org/pubmed/14990466"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000216 "integrate reduced model"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000216 "Boolean value which indicates whether the simulation/analysis should be performed using the complete model or an equivalent reduced model.

Reduced models can be determined in many ways such as using mass conservation laws."@en)
SubClassOf(kisao:KISAO_0000216 kisao:KISAO_0000243)
SubClassOf(kisao:KISAO_0000216 ObjectSomeValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000088))
SubClassOf(kisao:KISAO_0000216 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:boolean))

# Class: kisao:KISAO_0000219 (maximum Adams order)

AnnotationAssertion(rdfs:label kisao:KISAO_0000219 "maximum Adams order"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000219 "Adams max order"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000219 "maximum non-stiff order"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000219 "This parameter is a positive integer value specifying the maximal order the non-stiff Adams integration method [http://identifiers.org/biomodels.kisao/KISAO_0000289] shall attempt before switching to the stiff BDF method [http://identifiers.org/biomodels.kisao/KISAO_0000288]."@en)
SubClassOf(kisao:KISAO_0000219 kisao:KISAO_0000484)
SubClassOf(kisao:KISAO_0000219 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
DisjointClasses(kisao:KISAO_0000219 kisao:KISAO_0000220)

# Class: kisao:KISAO_0000220 (maximum BDF order)

AnnotationAssertion(rdfs:label kisao:KISAO_0000220 "maximum BDF order"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000220 "BDF max order"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000220 "maximum stiff order"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000220 "This parameter is a positive integer value specifying the maximal order the stiff BDF integration method [http://identifiers.org/biomodels.kisao/KISAO_0000288] shall attempt before switching to smaller internal step sizes."@en)
SubClassOf(kisao:KISAO_0000220 kisao:KISAO_0000484)
SubClassOf(kisao:KISAO_0000220 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000223 (number of history bins)

AnnotationAssertion(rdfs:label kisao:KISAO_0000223 "number of history bins"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000223 "The 'number of history bins' is only enabled for models that contain delayed or multistep reactions for specifying the granularity with which the delayed reaction solver should retain the history of species values, for species that participate in delayed reactions."@en)
SubClassOf(kisao:KISAO_0000223 kisao:KISAO_0000244)
SubClassOf(kisao:KISAO_0000223 ObjectSomeValuesFrom(kisao:KISAO_0000250 ObjectIntersectionOf(kisao:KISAO_0000000 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000375))))
SubClassOf(kisao:KISAO_0000223 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000228 (tau-leaping epsilon)

AnnotationAssertion(rdfs:label kisao:KISAO_0000228 "tau-leaping epsilon"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gillespie DT. Approximate accelerated stochastic simulation of chemically reacting systems. The Journal of Chemical Physics, Vol. 115 (4), pages 1716-1733 (2001). Section V."@en) rdfs:seeAlso kisao:KISAO_0000228 "http://identifiers.org/doi/10.1063/1.1378322"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000228 "epsilon"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000228 "tolerance"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000228 "The leap condition is chosen such that the expected change in the propensity function aj(x) is bounded by Epsilon * a0 where Epsilon is an error control parameter between 0 and 1. This parameter is the basic error control mechanism for the Tau-Leaping algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000039]. As Epsilon decreases the leaps become shorter and the simulation is more accurate."@en)
SubClassOf(kisao:KISAO_0000228 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000228 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000039))
SubClassOf(kisao:KISAO_0000228 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000230 (minimum reactions per leap)

AnnotationAssertion(rdfs:label kisao:KISAO_0000230 "minimum reactions per leap"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000230 "threshold"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000230 "'minimum reactions per leap' parameter is used in hybrid methods, which adaptively switch between the tau-leaping algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000039] to the SSA Direct Method [http://identifiers.org/biomodels.kisao/KISAO_0000029] when the number of reactions in a single tau-leaping leap step is less than the threshold."@en)
SubClassOf(kisao:KISAO_0000230 kisao:KISAO_0000243)
SubClassOf(kisao:KISAO_0000230 ObjectAllValuesFrom(kisao:KISAO_0000250 ObjectIntersectionOf(ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000029) ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000039))))
SubClassOf(kisao:KISAO_0000230 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000231 (Pahle hybrid method)

AnnotationAssertion(dc:creator kisao:KISAO_0000231 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000231 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000231 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000231 "Pahle hybrid method"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI--a COmplex PAthway SImulator. Hoops S, Sahle S, Gauges R, Lee C, Pahle J, Simus N, Singhal M, Xu L, Mendes P, Kummer U. Bioinformatics. 2006 Dec 15;22(24):3067-74. Epub 2006 Oct 10."@en) rdfs:seeAlso kisao:KISAO_0000231 "http://identifiers.org/doi/10.1093/bioinformatics/btl485"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000231 "The hybrid method combines the stochastic 'Gibson-Bruck's next reaction method' [http://identifiers.org/biomodels.kisao/KISAO_0000027] with different algorithms for the numerical integration of ODEs [http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000374]. The biochemical network is dynamically partitioned into a deterministic and a stochastic subnet depending on the current particle numbers in the system. The user can define limits for when a particle number should be considered low or high. The stochastic subnet contains reactions involving low numbered species as substrate or product. All the other reactions form the deterministic subnet. The two subnets are then simulated in parallel using the stochastic and deterministic solver, respectively. The reaction probabilities in the stochastic subnet are approximated as constant between two stochastic reaction events."@en)
SubClassOf(kisao:KISAO_0000231 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000231 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000231 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000231 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000027))
SubClassOf(kisao:KISAO_0000231 ObjectSomeValuesFrom(kisao:KISAO_0000246 ObjectIntersectionOf(kisao:KISAO_0000027 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))))
SubClassOf(kisao:KISAO_0000231 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000203))
SubClassOf(kisao:KISAO_0000231 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000204))

# Class: kisao:KISAO_0000232 (LSOIBT)

AnnotationAssertion(rdfs:label kisao:KISAO_0000232 "LSOIBT"@en)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000232 "http://identifiers.org/isbn/978-0444866073"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000232 "Livermore solver for ordinary differential equations given in implicit form, with block-tridiagonal Jacobian treatment"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000232 "LSOIBT solves linearly implicit systems in which the matrices involved are all assumed to be block-tridiagonal. Linear systems are solved by the LU method."@en)
SubClassOf(kisao:KISAO_0000232 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000232 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000232 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000071))

# Class: kisao:KISAO_0000233 (LSODES)

AnnotationAssertion(rdfs:label kisao:KISAO_0000233 "LSODES"@en)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000233 "http://identifiers.org/isbn/978-0444866073"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000233 "Livermore solver for ordinary differential equations with general sparse Jacobian matrix"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000233 "LSODES solves systems dy/dt = f and in the stiff case treats the Jacobian matrix in general sparse form. It determines the sparsity structure on its own, or optionally accepts this information from the user. It then uses parts of the Yale Sparse Matrix Package (YSMP) to solve the linear systems that arise, by a sparse (direct) LU factorization/backsolve method."@en)
SubClassOf(kisao:KISAO_0000233 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000233 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000071))

# Class: kisao:KISAO_0000234 (LSODKR)

AnnotationAssertion(rdfs:label kisao:KISAO_0000234 "LSODKR"@en)
AnnotationAssertion(Annotation(rdfs:comment "A. C. Hindmarsh, ODEPACK, A Systematized Collection of ODE Solvers, in Scientific Computing, R. S. Stepleman et al. (eds.), North-Holland, Amsterdam, 1983 (vol. 1 of IMACS Transactions on Scientific Computation), pp. 55-64."@en) rdfs:seeAlso kisao:KISAO_0000234 "http://identifiers.org/isbn/978-0444866073"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000234 "Livermore solver for ordinary differential equations, with preconditioned Krylov iteration methods for the Newton correction linear systems, and with root finding."@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000234 "LSODKR is an initial value ODE solver for stiff and nonstiff systems. It is a variant of the LSODPK [http://identifiers.org/biomodels.kisao/KISAO_0000093] and LSODE [http://identifiers.org/biomodels.kisao/KISAO_0000071] solvers, intended mainly for large stiff systems. The main differences between LSODKR and LSODE [http://identifiers.org/biomodels.kisao/KISAO_0000071] are the following: a) for stiff systems, LSODKR uses a corrector iteration composed of Newton iteration and one of four preconditioned Krylov subspace iteration methods. The user must supply routines for the preconditioning operations, b) within the corrector iteration, LSODKR does automatic switching between functional (fixpoint) iteration and modified Newton iteration, c) LSODKR includes the ability to find roots of given functions of the solution during the integration."@en)
SubClassOf(kisao:KISAO_0000234 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000234 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000071))
SubClassOf(kisao:KISAO_0000234 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000093))
SubClassOf(kisao:KISAO_0000234 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000354))

# Class: kisao:KISAO_0000235 (type of solution)

AnnotationAssertion(dc:creator kisao:KISAO_0000235 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000235 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000235 "type of solution"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000235 "A characteristic describing the type of the solution produced by the method, specifically whether it is exact or approximate."@en)
SubClassOf(kisao:KISAO_0000235 kisao:KISAO_0000097)

# Class: kisao:KISAO_0000236 (exact solution)

AnnotationAssertion(rdfs:label kisao:KISAO_0000236 "exact solution"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000236 "Algorithm, possessing this characteristic, provides an exact solution to the initial problem."@en)
SubClassOf(kisao:KISAO_0000236 kisao:KISAO_0000235)
DisjointClasses(kisao:KISAO_0000236 kisao:KISAO_0000237)

# Class: kisao:KISAO_0000237 (approximate solution)

AnnotationAssertion(rdfs:label kisao:KISAO_0000237 "approximate solution"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000237 "Approximation algorithms are algorithms used to find approximate solutions to optimization problems. Approximation algorithms are often associated with NP-hard problems; since it is unlikely that there can ever be efficient polynomial time exact algorithms solving NP-hard problems, one settles for polynomial time sub-optimal solutions. Unlike heuristics, which usually only find reasonably good solutions reasonably fast, one wants provable solution quality and provable run time bounds. Ideally, the approximation is optimal up to a small constant factor (for instance within 5% of the optimal solution). Approximation algorithms are increasingly being used for problems where exact polynomial-time algorithms are known but are too expensive due to the input size."@en)
SubClassOf(kisao:KISAO_0000237 kisao:KISAO_0000235)

# Class: kisao:KISAO_0000238 (type of method)

AnnotationAssertion(dc:creator kisao:KISAO_0000238 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000238 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000238 "type of method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000238 "A characteristic describing the way the method finds a solution, specifically whether it solves an equation involving only the current state of the system (explicit) or both the current and the later one (implicit). "@en)
SubClassOf(kisao:KISAO_0000238 kisao:KISAO_0000097)

# Class: kisao:KISAO_0000239 (explicit method type)

AnnotationAssertion(dc:creator kisao:KISAO_0000239 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000239 "explicit method type"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000239 "Explicit methods calculate the state of a system at a later time from the state of the system at the current time. Mathematically, if Y(t) is the current system state and Y((t+delta t) is the state at the later time (delta t is a small time step), then, for an explicit method Y(t+delta t) = F(Y(t)), to find Y(t+delta t)."@en)
SubClassOf(kisao:KISAO_0000239 kisao:KISAO_0000238)
DisjointClasses(kisao:KISAO_0000239 kisao:KISAO_0000240)

# Class: kisao:KISAO_0000240 (implicit method type)

AnnotationAssertion(dc:creator kisao:KISAO_0000240 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000240 "implicit method type"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000240 "Implicit methods find a solution by solving an equation involving both the current state of the system and the later one. Mathematically, if Y(t) is the current system state and Y((t+delta t) is the state at the later time (delta t is a small time step), then, for an implicit method one solves an equation G(Y(t), Y(t+delta t))=0, to find Y(t+delta t)."@en)
SubClassOf(kisao:KISAO_0000240 kisao:KISAO_0000238)

# Class: kisao:KISAO_0000241 (Gillespie-like method)

AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000241 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000241 "Gillespie-like method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000241 "Stochastic simulation algorithm using an approach alike the one described in Gillespie's papers of 1976 and 1977."@en)
SubClassOf(kisao:KISAO_0000241 kisao:KISAO_0000319)
SubClassOf(kisao:KISAO_0000241 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000105))
SubClassOf(kisao:KISAO_0000241 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))

# Class: kisao:KISAO_0000242 (error control parameter)

AnnotationAssertion(dc:creator kisao:KISAO_0000242 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000242 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000242 "error control parameter"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000242 "Parameter controlling method accuracy."@en)
SubClassOf(kisao:KISAO_0000242 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000243 (method switching control parameter)

AnnotationAssertion(dc:creator kisao:KISAO_0000243 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000243 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000243 "method switching control parameter"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000243 "Parameters describing threshold conditions for algorithms that switch between different methods."@en)
SubClassOf(kisao:KISAO_0000243 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000243 ObjectAllValuesFrom(kisao:KISAO_0000250 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000000)))

# Class: kisao:KISAO_0000244 (granularity control parameter)

AnnotationAssertion(dc:creator kisao:KISAO_0000244 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000244 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000244 "granularity control parameter"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000244 "Parameter controlling granularity."@en)
SubClassOf(kisao:KISAO_0000244 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000248 (tau-leaping delta)

AnnotationAssertion(rdfs:label kisao:KISAO_0000248 "tau-leaping delta"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000248 "Tau-leaping delta specifies how close two symmetric transition rates must be before we classify them as in partial-equilibrium. Only applies to the implicit tau routine [http://identifiers.org/biomodels.kisao/KISAO_0000045]."@en)
SubClassOf(kisao:KISAO_0000248 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000248 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000045))
SubClassOf(kisao:KISAO_0000248 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000249 (critical firing threshold)

AnnotationAssertion(rdfs:label kisao:KISAO_0000249 "critical firing threshold"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000249 "nonnegative tau-leaping second control parameter"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000249 "The 'nonnegative Poisson tau-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000084] is based on the fact that negative populations typically arise from multiple firings of reactions that are only a few firings away from consuming all the molecules of one of their reactants. To focus on those reaction channels, the modified tau-leaping algorithm introduces a second control parameter nc, a positive integer that is usually set somewhere between 5 and 20. Any reaction channel with a positive propensity function that is currently within nc firings of exhausting one of its reactants is then classified as a critical reaction. The modified algorithm chooses tau in such a way that no more than one firing of all the critical reactions can occur during the leap."@en)
SubClassOf(kisao:KISAO_0000249 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000249 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000084))
SubClassOf(kisao:KISAO_0000249 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000252 (partitioning control parameter)

AnnotationAssertion(dc:creator kisao:KISAO_0000252 "Parameter describing partitioning of the system."@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000252 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000252 "partitioning control parameter"@en)
SubClassOf(kisao:KISAO_0000252 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000253 (coarse-graining factor)

AnnotationAssertion(rdfs:label kisao:KISAO_0000253 "coarse-graining factor"@en)
AnnotationAssertion(Annotation(rdfs:comment "Chatterjee A, Vlachos DG, Katsoulakis MA. Binomial distribution based tau-leap accelerated stochastic simulation. J Chem Phys. 2005;122(2):024112."@en) rdfs:seeAlso kisao:KISAO_0000253 "http://identifiers.org/pubmed/15638577"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000253 "The time in each Monte-Carlo iteration of 'binomial tau-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000074] is updated with the time increments tau=f/(a1+a2+...+aM). Here 1/(a1+a2+...+aM) is the averaged microscopic increment of the SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] and f is a coarse-graining factor, controlling the speed-up."@en)
SubClassOf(kisao:KISAO_0000253 kisao:KISAO_0000244)
SubClassOf(kisao:KISAO_0000253 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000074))
SubClassOf(kisao:KISAO_0000253 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000254 (Brownian diffusion accuracy)

AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000254 "Smoldyn"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000254 "Brownian diffusion accuracy"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000254 "Accuracy code of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057], which sets which neighbouring boxes are checked for potential bi-molecular reactions. Consider the reaction A + B -> C and suppose that A and B are within a binding radius of each other. This reaction will always be performed if A and B are in the same virtual box. If accuracy is set to at least 3, then it will also occur if A and B are in nearest-neighbour virtual boxes. If it is at least 7, then the reaction will happen if they are in nearest-neighbour boxes that are separated by periodic boundary conditions. And if it is 9 or 10, then all edge and corner boxes are checked for reactions, which means that no potential reactions are overlooked."@en)
SubClassOf(kisao:KISAO_0000254 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000254 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000057))
SubClassOf(kisao:KISAO_0000254 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000255 (molecules per virtual box)

AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000255 "Smoldyn"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000255 "molecules per virtual box"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000255 "Target molecules per virtual box is a parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057], which sets the box sizes so that the average number of molecules per box, at simulation initiation, is close to the requested number."@en)
SubClassOf(kisao:KISAO_0000255 kisao:KISAO_0000260)
SubClassOf(kisao:KISAO_0000255 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
DisjointClasses(kisao:KISAO_0000255 kisao:KISAO_0000256)

# Class: kisao:KISAO_0000256 (virtual box side length)

AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000256 "Smoldyn"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000256 "virtual box side length"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000256 "The 'virtual box side length' is a parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. It requests the length of one side of a box."@en)
SubClassOf(kisao:KISAO_0000256 kisao:KISAO_0000260)
SubClassOf(kisao:KISAO_0000256 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000257 (surface-bound epsilon)

AnnotationAssertion(rdfs:label kisao:KISAO_0000257 "surface-bound epsilon"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000257 "A parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. Molecules that are bound to a surface are given locations that are extremely close to that surface. However, this position does not need to be exactly at the surface, and in fact it usually cannot be exactly at the surface due to round-off error. The tolerance for how  far a surface-bound molecule is allowed to be away from the surface can be set with the epsilon statement."@en)
SubClassOf(kisao:KISAO_0000257 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000257 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000057))
SubClassOf(kisao:KISAO_0000257 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000258 (neighbour distance)

AnnotationAssertion(rdfs:label kisao:KISAO_0000258 "neighbour distance"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000258 "A parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. When a surface-bound molecule diffuses off of one surface panel, it can sometimes diffuse onto the neighbouring surface tile. It does so only if the neighbouring panel is declared to be a neighbour and also the neighbour is within a distance that is set with the neighbour distance statement."@en)
SubClassOf(kisao:KISAO_0000258 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000258 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000057))
SubClassOf(kisao:KISAO_0000258 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000260 (virtual box size)

AnnotationAssertion(rdfs:label kisao:KISAO_0000260 "virtual box size"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000260 "Target size of virtual boxes for 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]."@en)
SubClassOf(kisao:KISAO_0000260 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000260 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000057))

# Class: kisao:KISAO_0000261 (Euler method)

AnnotationAssertion(dc:creator kisao:KISAO_0000261 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000261 "ByoDyn"@en)
AnnotationAssertion(Annotation(rdfs:comment "JSim"@end) kisao:isImplementedIn kisao:KISAO_0000261 "http://identifiers.org/biosimulators/jsim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000261 "Euler method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Press WH, Teukolsky SA, Vetterling WT, Flannery BP. Numerical Recipes in Fortran 77. Cambridge University Press (2001)."@en) rdfs:seeAlso kisao:KISAO_0000261 "http://identifiers.org/isbn/052143064X"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000261 "The Euler method, named after Leonhard Euler, is a first-order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value."@en)
SubClassOf(kisao:KISAO_0000261 kisao:KISAO_0000377)
SubClassOf(kisao:KISAO_0000261 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000261 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000261 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000261 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000261 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376))
SubClassOf(kisao:KISAO_0000261 ObjectSomeValuesFrom(kisao:KISAO_0000359 ObjectIntersectionOf(kisao:KISAO_0000064 DataHasValue(kisao:KISAO_0000275 "1"^^xsd:integer))))

# Class: kisao:KISAO_0000263 (NFSim agent-based simulation method)

AnnotationAssertion(dc:created kisao:KISAO_0000263 "2011-04-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000263 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "NFSim"@end) kisao:isImplementedIn kisao:KISAO_0000263 "http://identifiers.org/biosimulators/bionetgen"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000263 "NFSim agent-based simulation method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Sneddon MW, Faeder JR and Emonet T. Efficient modelling, simulation and coarse-graining of biological complexity with NFsim. Nature Methods (2011) 8(2):177-83."@en) rdfs:seeAlso kisao:KISAO_0000263 "http://identifiers.org/doi/10.1038/nmeth.1546"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000263 "A generalization a rule-based version of 'Gillespie's direct method' (SSA) [http://identifiers.org/biomodels.kisao/KISAO_0000029]. The method is guaranteed to produce the same results as the exact SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] by cycling over three primary steps. First, NFsim calculates the probability or propensity for each rule to take effect given the current molecular states. Second, it samples the time to the next reaction event and selects the corresponding reaction rule. Finally, NFsim executes the selected reaction by applying the rule and updating the molecular agents accordingly."@en)
SubClassOf(kisao:KISAO_0000263 kisao:KISAO_0000017)
SubClassOf(kisao:KISAO_0000263 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
SubClassOf(kisao:KISAO_0000263 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000029))
DisjointClasses(kisao:KISAO_0000263 kisao:KISAO_0000362)

# Class: kisao:KISAO_0000264 (cellular automata update method)

AnnotationAssertion(dc:created kisao:KISAO_0000264 "2011-04-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000264 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000264 "cellular automata update method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Wolfram, Stephen (1983) Statistical mechanics of cellular automata. Reviews of Modern Physics 55 (3): 601-644."@en) rdfs:seeAlso kisao:KISAO_0000264 "http://identifiers.org/doi/10.1103/RevModPhys.55.601"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "CA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "cellular automata"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "cellular spaces"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "cellular structures"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "homogeneous structures"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "iterative arrays"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "tessellation automata"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000264 "tessellation structures"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000264 "Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''."@en)
SubClassOf(kisao:KISAO_0000264 kisao:KISAO_0000363)
SubClassOf(kisao:KISAO_0000264 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000264 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))

# Class: kisao:KISAO_0000273 (hard-particle molecular dynamics)

AnnotationAssertion(dc:created kisao:KISAO_0000273 "2011-05-05"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000273 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000273 "hard-particle molecular dynamics"@en)
AnnotationAssertion(Annotation(rdfs:comment "Aleksandar Donev, Salvatore Torquato, Frank H. Stillinger, Neighbor list collision-driven molecular dynamics simulation for nonspherical hard particles. I. Algorithmic details, Journal of Computational Physics, v.202 n.2, p.737-764, 20 January 2005"@en) rdfs:seeAlso kisao:KISAO_0000273 "http://identifiers.org/doi/10.1016/j.jcp.2004.08.014"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000273 "A collision-driven molecular dynamics algorithm for a system of non-spherical particles."@en)
SubClassOf(kisao:KISAO_0000273 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000273 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000273 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))

# Class: kisao:KISAO_0000274 (first-passage Monte Carlo algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000274 "2011-05-05"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000274 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000274 "first-passage Monte Carlo algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "T. Oppelstrup, V. V. Bulatov, G. H. Gilmer, M. H. Kalos, and B. Sadigh. First-passage Monte- Carlo algorithm: Diffusion without all the hops. Physical Review Letters, 97(23):230602, 2006."@en) rdfs:seeAlso kisao:KISAO_0000274 "http://identifiers.org/doi/10.1103/PhysRevLett.97.230602"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000274 "AED DKMC"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000274 "AED diffusion kinetic Monte Carlo method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000274 "asynchronous event-driven diffusion Monte Carlo"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000274 "We present a novel Monte Carlo algorithm for N diffusing finite particles that react on collisions. Using the theory of first-passage processes and time dependent Green's functions, we break the difficult N-body problem into independent single- and two-body propagations circumventing numerous diffusion hops used in standard Monte Carlo simulations. The new algorithm is exact, extremely efficient, and applicable to many important physical situations in arbitrary integer dimensions."@en)
SubClassOf(kisao:KISAO_0000274 kisao:KISAO_0000319)
SubClassOf(kisao:KISAO_0000274 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000274 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000274 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))

# Class: kisao:KISAO_0000276 (Gill method)

AnnotationAssertion(dc:created kisao:KISAO_0000276 "2011-05-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000276 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000276 "Gill method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Gill, S. 1951. A process for the step-by-step integration of differential equations in an automatic digital computing machine. Proc. Cambridge Philos. Soc., 47, pp 96-108."@en) rdfs:seeAlso kisao:KISAO_0000276 "http://identifiers.org/doi/10.1017/S0305004100026414"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000276 "Gill's method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000276 "Runge-Kutta-Gill method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000276 "Gill's fourth order method is a Runge-Kutta method for approximating the solution of the initial value problem y'(x) = f(x,y);  y(x0) = y0 which evaluates the integrand,f(x,y), four times per step. This method is a fourth order procedure for which Richardson extrapolation can be used."@en)
SubClassOf(kisao:KISAO_0000276 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000276 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000276 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000276 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000276 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000276 DataHasValue(kisao:KISAO_0000275 "4"^^xsd:integer))

# Class: kisao:KISAO_0000278 (Metropolis Monte Carlo algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000278 "2011-05-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000278 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000278 "CompuCell3D"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000278 "Metropolis Monte Carlo algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Metropolis, N.; Rosenbluth, A.W.; Rosenbluth, M.N.; Teller, A.H.; Teller, E. (1953). Equations of State Calculations by Fast Computing Machines. Journal of Chemical Physics 21 (6): 1087-1092."@en) rdfs:seeAlso kisao:KISAO_0000278 "http://identifiers.org/doi/10.1063/1.1699114"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000278 "Metropolis algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000278 "Metropolis-Hastings algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000278 "A general method, suitable for fast computing machines, for investigating such properties as equations of state for substances consisting of interacting individual molecules is described. The method consists of a modified Monte Carlo integration [http://identifiers.org/biomodels.kisao/KISAO_0000051] over configuration space."@en)
SubClassOf(kisao:KISAO_0000278 kisao:KISAO_0000319)
SubClassOf(kisao:KISAO_0000278 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000278 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000278 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))

# Class: kisao:KISAO_0000279 (Adams-Bashforth method)

AnnotationAssertion(dc:created kisao:KISAO_0000279 "2011-05-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000279 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000279 "Adams-Bashforth method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000279 "http://identifiers.org/isbn/978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000279 "explicit Adams method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000279 "Given an initial value problem: y' = f(x,y),  y(x0) = y0 together with additional starting values y1 = y(x0 + h), . . . , yk-1 = y(x0 + (k-1) h) the k-step Adams-Bashforth method is an explicit linear multistep method that approximates the solution, y(x) at x = x0+kh, of the initial value problem by yk = yk - 1 + h * ( a0 f(xk - 1,yk - 1) + a1 f(xk - 2,yk - 2) + . . . + ak - 1 f(x0,y0) ), where a0, a1, . . . , ak - 1 are constants."@en)
SubClassOf(kisao:KISAO_0000279 kisao:KISAO_0000289)
SubClassOf(kisao:KISAO_0000279 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))

# Class: kisao:KISAO_0000280 (Adams-Moulton method)

AnnotationAssertion(dc:created kisao:KISAO_0000280 "2011-05-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000280 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "VCell"@end) kisao:isImplementedIn kisao:KISAO_0000280 "http://identifiers.org/biosimulators/vcell"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000280 "Adams-Moulton method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000280 "http://identifiers.org/isbn/978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000280 "implicit Adams method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000280 "The (k-1)-step Adams-Moulton method is an implicit linear multistep method that iteratively approximates the solution, y(x) at x = x0+kh, of the initial value problem by yk = yk - 1 + h * ( b0 f(xk,yk) + b1 f(xk - 1,yk - 1) + . . . + bk - 1 f(x1,y1) ), where b1, . . . , bk - 1 are constants."@en)
SubClassOf(kisao:KISAO_0000280 kisao:KISAO_0000289)
SubClassOf(kisao:KISAO_0000280 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))

# Class: kisao:KISAO_0000281 (multistep method)

AnnotationAssertion(dc:created kisao:KISAO_0000281 "2011-05-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000281 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000281 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000281 "multistep method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000281 "http://identifiers.org/isbn/978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000281 "multi-value method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000281 "A numerical method for differential equations which is based on several values of the solution."@en)
SubClassOf(kisao:KISAO_0000281 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000281 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000281 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000281 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000281 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))

# Class: kisao:KISAO_0000282 (KINSOL)

AnnotationAssertion(dc:created kisao:KISAO_0000282 "2011-05-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000282 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000282 "SUNDIALS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000282 "KINSOL"@en)
AnnotationAssertion(Annotation(rdfs:comment "BROWN, P. N. AND SAAD, Y. 1990. Hybrid Krylov methods for nonlinear systems of equations. SIAM  J. Sci. Stat. Comput. 11, 450-481."@en) rdfs:seeAlso kisao:KISAO_0000282 "http://identifiers.org/doi/10.1137/0911026"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh, A. C., et al., SUNDIALS: Suite of Nonlinear and Differential/Algebraic Equation Solvers, ACM Trans. Math. Softw., 31:363-396, 2005."@en) rdfs:seeAlso kisao:KISAO_0000282 "http://identifiers.org/doi/10.1145/1089014.1089020"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Alan C. Hindmarsh and Radu Serban (2007) Sundails equation solvers, Scholarpedia, 2(3):2860."@en) rdfs:seeAlso kisao:KISAO_0000282 "http://identifiers.org/doi/10.4249/scholarpedia.2860"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "RELATED"@en) skos:altLabel kisao:KISAO_0000282 "FKINSOL"@en)
AnnotationAssertion(Annotation(rdfs:comment "RELATED"@en) skos:altLabel kisao:KISAO_0000282 "NKSOL"@en)
AnnotationAssertion(Annotation(rdfs:comment "RELATED"@en) skos:altLabel kisao:KISAO_0000282 "Newton-Krylov solver for nonlinear algebraic systems"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000282 "KINSOL solves algebraic systems in real N-space, written as F(u)=0,  F:RN->RN, given an initial guess u0. The basic method is either a modified or an inexact Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408]. The linear systems that arise are solved with either a direct (dense or banded) solver (serial version only), or one of the Krylov iterative solvers [http://identifiers.org/biomodels.kisao/KISAO_0000354]. In the Krylov case, the user can (optionally) supply a right preconditioner."@en)
SubClassOf(kisao:KISAO_0000282 kisao:KISAO_0000408)
SubClassOf(kisao:KISAO_0000282 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376)))
SubClassOf(kisao:KISAO_0000282 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000373))
SubClassOf(kisao:KISAO_0000282 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000354))

# Class: kisao:KISAO_0000283 (IDA)

AnnotationAssertion(dc:created kisao:KISAO_0000283 "2011-05-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000283 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000283 "SUNDIALS"@en)
AnnotationAssertion(Annotation(rdfs:comment "OpenCOR"@end) kisao:isImplementedIn kisao:KISAO_0000283 "http://identifiers.org/biosimulators/opencor"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "VCell"@end) kisao:isImplementedIn kisao:KISAO_0000283 "http://identifiers.org/biosimulators/vcell"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Alan C. Hindmarsh and Radu Serban (2007) Sundails equation solvers, Scholarpedia, 2(3):2860."@en) rdfs:label kisao:KISAO_0000283 "IDA"@en)
AnnotationAssertion(Annotation(rdfs:comment "BROWN, P. N., HINDMARSH, A. C., AND PETZOLD, L. R. 1994. Using Krylov methods in the solution of large-scale differential-algebraic systems. SIAM J. Sci. Comput. 15, 1467-1488."@en) rdfs:seeAlso kisao:KISAO_0000283 "http://identifiers.org/doi/10.1137/0915088"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh, A. C., et al., SUNDIALS: Suite of Nonlinear and Differential/Algebraic Equation Solvers, ACM Trans. Math. Softw., 31:363-396, 2005."@en) rdfs:seeAlso kisao:KISAO_0000283 "http://identifiers.org/doi/10.1145/1089014.1089020"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Alan C. Hindmarsh and Radu Serban (2007) Sundails equation solvers, Scholarpedia, 2(3):2860."@en) rdfs:seeAlso kisao:KISAO_0000283 "http://identifiers.org/doi/10.4249/scholarpedia.2860"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000283 "implicit differential-algebraic solver"@en)
AnnotationAssertion(Annotation(rdfs:comment "RELATED"@en) skos:altLabel kisao:KISAO_0000283 "solver for differential-algebraic equation systems"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000283 "IDA solves real differential-algebraic systems in N-space, in the general form F(t,y,y')=0,  y(t0)=y0,  y'(t0)=y'0. At each step, a Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408] leads to linear systems Jx=b, which are solved by one of five methods - two direct (dense or band; serial version only) and three Krylov [http://identifiers.org/biomodels.kisao/KISAO_0000354] (GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000353], BiCGStab [http://identifiers.org/biomodels.kisao/KISAO_0000392], or TFQMR [http://identifiers.org/biomodels.kisao/KISAO_0000396]).
IDA is written in C, but derived from the package DASPK [http://identifiers.org/biomodels.kisao/KISAO_0000355] which is written in Fortran."@en)
SubClassOf(kisao:KISAO_0000283 kisao:KISAO_0000432)
SubClassOf(kisao:KISAO_0000283 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376)))
SubClassOf(kisao:KISAO_0000283 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000373))
SubClassOf(kisao:KISAO_0000283 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000355))
SubClassOf(kisao:KISAO_0000283 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000288))
SubClassOf(kisao:KISAO_0000283 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000354))
SubClassOf(kisao:KISAO_0000283 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000386))
SubClassOf(kisao:KISAO_0000283 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000477))
SubClassOf(kisao:KISAO_0000283 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000479))
SubClassOf(kisao:KISAO_0000283 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000480))
SubClassOf(kisao:KISAO_0000283 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000481))

# Class: kisao:KISAO_0000285 (finite volume method)

AnnotationAssertion(dc:created kisao:KISAO_0000285 "2011-05-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000285 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "VCell"@end) kisao:isImplementedIn kisao:KISAO_0000285 "http://identifiers.org/biosimulators/vcell"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000285 "finite volume method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Y. Saad. 2003. Iterative Methods for Sparse Linear Systems (2nd ed.). Soc. for Industrial and Applied Math., Philadelphia, PA, USA."@en) rdfs:seeAlso kisao:KISAO_0000285 "http://identifiers.org/isbn/0898715342"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000285 "FVM"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000285 "The finite volume method is a method for representing and evaluating partial differential equations in the form of algebraic equations, which attempts to emulate continuous conservation laws of physics."@en)
SubClassOf(kisao:KISAO_0000285 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000285 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000346))

# Class: kisao:KISAO_0000286 (Euler-Maruyama method)

AnnotationAssertion(dc:created kisao:KISAO_0000286 "2011-05-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000286 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000286 "Euler-Maruyama method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Burrage, K., Burrage, P.M. and Tian, T. (2004) Numerical methods for strong solutions of stochastic differential equations: an overview. Proceedings of the Royal Society of London Series A: Mathematical, Physical and Engineering Sciences, 460 (2041). pp. 373-402."@en) rdfs:seeAlso kisao:KISAO_0000286 "http://identifiers.org/doi/10.1098/rspa.2003.1247"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000286 "stochastic Euler scheme"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000286 "The Euler-Maruyama method is a method for the approximate numerical solution of a stochastic differential equation, which truncates the Ito and Stratonovich Taylor series of the exact solution after the first order stochastic terms. This converges to the Ito solution with strong global order accuracy 1/2 or weak global order accuracy 1. It is a simple generalization of the Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261] for ordinary differential equations to stochastic differential equations."@en)
SubClassOf(kisao:KISAO_0000286 kisao:KISAO_0000377)
SubClassOf(kisao:KISAO_0000286 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000286 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000286 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000286 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000286 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000371))
SubClassOf(kisao:KISAO_0000286 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000261))

# Class: kisao:KISAO_0000287 (Milstein method)

AnnotationAssertion(dc:created kisao:KISAO_0000287 "2011-05-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000287 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000287 "Milstein method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Milstein M. G. Numerical Integration of Stochastic Differential Equations (Mathematics and Its Applications) Springer, 2004."@en) rdfs:seeAlso kisao:KISAO_0000287 "http://identifiers.org/isbn/079233213X"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000287 "The Milstein method is a technique for the approximate numerical solution of a stochastic differential equation."@en)
SubClassOf(kisao:KISAO_0000287 kisao:KISAO_0000281)
SubClassOf(kisao:KISAO_0000287 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000287 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000287 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000371))

# Class: kisao:KISAO_0000288 (backward differentiation formula)

AnnotationAssertion(dc:created kisao:KISAO_0000288 "2011-05-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000288 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000288 "ByoDyn"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000288 "GSL"@en)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@end) kisao:isImplementedIn kisao:KISAO_0000288 "http://identifiers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000288 "backward differentiation formula"@en)
AnnotationAssertion(Annotation(rdfs:comment "C. William Gear. 1971. Numerical Initial Value Problems in Ordinary Differential Equations. Prentice Hall PTR, Upper Saddle River, NJ, USA."@en) rdfs:seeAlso kisao:KISAO_0000288 "http://identifiers.org/isbn/0136266061"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000288 "BDF"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000288 "Gear method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000288 "Gear's method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000288 "The backward differentiation formulas (BDF) are implicit multistep methods based on the numerical differentiation of a given function and are wildly used for integration of stiff differential equations."@en)
SubClassOf(kisao:KISAO_0000288 kisao:KISAO_0000281)
SubClassOf(kisao:KISAO_0000288 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000288 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000288 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000288 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376))
DisjointClasses(kisao:KISAO_0000288 kisao:KISAO_0000289)

# Class: kisao:KISAO_0000289 (Adams method)

AnnotationAssertion(dc:created kisao:KISAO_0000289 "2011-05-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000289 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000289 "ByoDyn"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000289 "Adams method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000289 "http://identifiers.org/isbn/978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000289 "Adams' methods are multi-step methods used for the numerical integration of initial value problems in Ordinary Differential Equations (ODE's). Adams' algorithm consists of two parts: firstly, a starting procedure which provides y1, ... , yk-1 ( approximations to the exact solution at the points x0 + h, ... , x0 + (k - 1)h ) and, secondly, a multistep formula to obtain an approximation to the exact solution y(x0 + kh). This is then applied recursively, based on the numerical approximation of k successive steps, to compute y(x0 + (k + 1)h)."@en)
SubClassOf(kisao:KISAO_0000289 kisao:KISAO_0000281)
SubClassOf(kisao:KISAO_0000289 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000289 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000289 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376))

# Class: kisao:KISAO_0000290 (Merson method)

AnnotationAssertion(dc:created kisao:KISAO_0000290 "2011-05-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000290 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "JSim"@end) kisao:isImplementedIn kisao:KISAO_0000290 "http://identifiers.org/biosimulators/jsim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000290 "Merson method"@en)
AnnotationAssertion(Annotation(rdfs:comment "R.H. Merson, An operational method for the study of integration processes, in: Proceedings of the Symposium on Data Processing, Weapons Research Establishment, Salisbury, Australia, 1957, pp. 110-1-110-25."@en) rdfs:seeAlso kisao:KISAO_0000290 "http://nla.gov.au/nla.cat-vn870866"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000290 "KM"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000290 "Kutta-Merson method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000290 "Merson's method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000290 "Runge-Kutta-Merson method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000290 "A five-stage Runge-Kutta method with fourth-order accuracy."@en)
SubClassOf(kisao:KISAO_0000290 kisao:KISAO_0000302)
SubClassOf(kisao:KISAO_0000290 DataHasValue(kisao:KISAO_0000275 "4"^^xsd:integer))

# Class: kisao:KISAO_0000296 (Hammer-Hollingsworth method)

AnnotationAssertion(dc:created kisao:KISAO_0000296 "2011-05-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000296 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000296 "Hammer-Hollingsworth method"@en)
AnnotationAssertion(Annotation(rdfs:comment "P. C. Hammer & J. W. Hollingsworth, Trapezoidal methods of approximating solutions of differential equations, MTAC, v. 9, 1955, pp. 92-96. MR 17, 302."@en) rdfs:seeAlso kisao:KISAO_0000296 "urn:issn:0891-6837"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000296 "The numerical integration of ordinary differential equations by the use of Gaussian quadrature methods."@en)
SubClassOf(kisao:KISAO_0000296 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000296 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000296 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000296 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000296 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))

# Class: kisao:KISAO_0000297 (Lobatto method)

AnnotationAssertion(dc:created kisao:KISAO_0000297 "2011-05-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000297 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000297 "Lobatto method"@en)
AnnotationAssertion(Annotation(rdfs:comment "J. C. Butcher, Integration processes based on Radau quadrature formulas, Math. Comp., v. 18, 1964, pp. 233-244."@en) rdfs:seeAlso kisao:KISAO_0000297 "urn:issn:1088-6842(e)"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000297 "implicit Runge-Kutta method based on Lobatto quadrature"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000297 "There are three families of Lobatto methods, called IIIA, IIIB and IIIC. These are named after Rehuel Lobatto. All are implicit Runge-Kutta methods, have order 2s − 2 and they all have c1 = 0 and cs = 1."@en)
SubClassOf(kisao:KISAO_0000297 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000297 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000366)))
SubClassOf(kisao:KISAO_0000297 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000297 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000297 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000297 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))

# Class: kisao:KISAO_0000299 (Butcher-Kuntzmann method)

AnnotationAssertion(dc:created kisao:KISAO_0000299 "2011-05-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000299 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000299 "Butcher-Kuntzmann method"@en)
AnnotationAssertion(Annotation(rdfs:comment "F. Ceschin, J. Kuntzmann, Problèmes différentiels de conditions initiales. Paris 1963. Dunod."@fr) rdfs:seeAlso kisao:KISAO_0000299 "http://identifiers.org/doi/10.1002/zamm.19660460519"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Butcher, J. C. (1964) Implicit Runge-Kutta processes. Math. Comput. 18, 50-64."@en) rdfs:seeAlso kisao:KISAO_0000299 "urn:issn:1088-6842(e)"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000299 "Gauss method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000299 "From a theoretical point of view, the Butcher-Kuntzmann Runge-Kutta methods belong to the best step-by-step methods for nonstiff problems. These methods integrate first-order initial-value problems by means of formulas based on Gauss-Legendre quadrature, and combine excellent stability features with the property of superconvergence at the step points."@en)
SubClassOf(kisao:KISAO_0000299 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000299 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000299 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000299 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000299 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000366))
SubClassOf(kisao:KISAO_0000299 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))

# Class: kisao:KISAO_0000301 (Heun method)

AnnotationAssertion(dc:created kisao:KISAO_0000301 "2011-05-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000301 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000301 "Heun method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000301 "http://identifiers.org/isbn/978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000301 "Heun's method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000301 "The method is named after Karl L. W. M. Heun and is a numerical procedure for solving ordinary differential equations (ODEs) with a given initial value. It can be seen as extension of the Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261] into two-stage second-order Runge-Kutta method."@en)
SubClassOf(kisao:KISAO_0000301 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000301 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000301 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000301 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000301 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000301 DataHasValue(kisao:KISAO_0000275 "2"^^xsd:integer))

# Class: kisao:KISAO_0000302 (embedded Runge-Kutta method)

AnnotationAssertion(dc:created kisao:KISAO_0000302 "2011-05-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000302 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000302 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000302 "embedded Runge-Kutta method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000302 "http://identifiers.org/isbn/978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000302 "embedded RK"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000302 "An embedded Runge-Kutta method is a method in which two Runge-Kutta estimates are obtained using the same auxiliary functions ki but with a different linear combination of these functions so that one estimate has an order one greater than the other."@en)
SubClassOf(kisao:KISAO_0000302 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000302 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000302 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000302 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000302 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))

# Class: kisao:KISAO_0000303 (Zonneveld method)

AnnotationAssertion(dc:created kisao:KISAO_0000303 "2011-05-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000303 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000303 "Zonneveld method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Zonneveld, J. A (1970). Automatic numerical integration Mathematisch Centrum, Amsterdam"@en) rdfs:seeAlso kisao:KISAO_0000303 "http://trove.nla.gov.au/work/21424455"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000303 "An embedded Runge-Kutta method [http://identifiers.org/biomodels.kisao/KISAO_0000302] of order 4(3), proposed by J.A. Zonneveld in 1964."@en)
SubClassOf(kisao:KISAO_0000303 kisao:KISAO_0000302)
SubClassOf(kisao:KISAO_0000303 ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(kisao:KISAO_0000064 DataHasValue(kisao:KISAO_0000275 "3"^^xsd:integer))))
SubClassOf(kisao:KISAO_0000303 ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(kisao:KISAO_0000064 DataHasValue(kisao:KISAO_0000275 "4"^^xsd:integer))))

# Class: kisao:KISAO_0000304 (Radau method)

AnnotationAssertion(dc:created kisao:KISAO_0000304 "2011-05-11"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000304 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "JSim"@end) kisao:isImplementedIn kisao:KISAO_0000304 "http://identifiers.org/biosimulators/jsim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000304 "Radau method"@en)
AnnotationAssertion(Annotation(rdfs:comment "J. C. Butcher, Integration processes based on Radau quadrature formulas, Math. Comput., 18(1964), 233-244."@en) rdfs:seeAlso kisao:KISAO_0000304 "urn:issn:1088-6842(e)"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000304 "implicit Runge-Kutta method based on Radau quadrature"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000304 "Implicit Runge-Kutta methods based on Radau quadrature."@en)
SubClassOf(kisao:KISAO_0000304 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000304 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000304 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000304 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000304 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000304 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000484))
SubClassOf(kisao:KISAO_0000304 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000583))
SubClassOf(kisao:KISAO_0000304 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000584))

# Class: kisao:KISAO_0000305 (Verner method)

AnnotationAssertion(dc:created kisao:KISAO_0000305 "2011-05-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000305 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000305 "Verner method"@en)
AnnotationAssertion(Annotation(rdfs:comment "J.H. Verner, Some Runge-Kutta formula pairs, SIAM J. Numer. Anal 28 (1991) 496-511"@en) rdfs:seeAlso kisao:KISAO_0000305 "http://identifiers.org/doi/10.1137/0728027"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000305 "Verner's method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000305 "The first high order (6(5)) embedded Runge-Kutta formulas that avoid the drawback of giving identically zero error estimates for quadrature problems y' = f(x) were constructed by Verner in 1978."@en)
SubClassOf(kisao:KISAO_0000305 kisao:KISAO_0000302)
SubClassOf(kisao:KISAO_0000305 ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(kisao:KISAO_0000064 DataHasValue(kisao:KISAO_0000275 "5"^^xsd:integer))))
SubClassOf(kisao:KISAO_0000305 ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(kisao:KISAO_0000064 DataHasValue(kisao:KISAO_0000275 "6"^^xsd:integer))))

# Class: kisao:KISAO_0000306 (Lagrangian sliding fluid element algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000306 "2011-05-11"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000306 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "JSim"@end) kisao:isImplementedIn kisao:KISAO_0000306 "http://identifiers.org/biosimulators/jsim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000306 "Lagrangian sliding fluid element algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Bassingthwaighte JB, Chan IS, and Wang CY. Computationally efficient algorithms for capillary convection-permeation-diffusion models for blood-tissue exchange. Ann Biomed Eng 20: 687-725, 1992."@en) rdfs:seeAlso kisao:KISAO_0000306 "http://identifiers.org/pubmed/1449234"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000306 "BTEX"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000306 "LSFEA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000306 "blood-tissue exchange method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000306 "Because the analytic solutions to the partial differential equations require convolution integration, solutions are obtained relatively efficiently by a fast numerical method. Our approach centers on the use of a sliding fluid element algorithm for capillary convection, with the time step set equal to the length step divided by the fluid velocity. Radial fluxes by permeation between plasma, interstitial fluid, and cells and axial diffusion exchanges within each time step are calculated analytically. The method enforces mass conservation unless there is regional consumption."@en)
SubClassOf(kisao:KISAO_0000306 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000306 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000306 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000306 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000306 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000306 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000306 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000372))

# Class: kisao:KISAO_0000307 (finite difference method)

AnnotationAssertion(dc:created kisao:KISAO_0000307 "2011-05-11"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000307 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000307 "finite difference method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Y. Saad. 2003. Iterative Methods for Sparse Linear Systems (2nd ed.). Soc. for Industrial and Applied Math., Philadelphia, PA, USA."@en) rdfs:seeAlso kisao:KISAO_0000307 "http://identifiers.org/isbn/0898715342"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000307 "FDM"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000307 "The finite difference method is based on local approximations of the partial derivatives in a Partial Differential Equation, which are derived by low order Taylor series expansions."@en)
SubClassOf(kisao:KISAO_0000307 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000307 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000307 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000307 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000307 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000346))

# Class: kisao:KISAO_0000308 (MacCormack method)

AnnotationAssertion(dc:created kisao:KISAO_0000308 "2011-05-11"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000308 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "JSim"@end) kisao:isImplementedIn kisao:KISAO_0000308 "http://identifiers.org/biosimulators/jsim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000308 "MacCormack method"@en)
AnnotationAssertion(Annotation(rdfs:comment "MacCormack, R. W., The Effect of viscosity in hypervelocity impact cratering, AIAA Paper, 69-354 (1969)."@en) rdfs:seeAlso kisao:KISAO_0000308 "http://identifiers.org/doi/10.2514/2.6901"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000308 "In computational fluid dynamics, the MacCormack method is a widely used discretization scheme for the numerical solution of hyperbolic partial differential equations. This second-order finite difference method [http://identifiers.org/biomodels.kisao/KISAO_0000307] is introduced by R. W. MacCormack in 1969."@en)
SubClassOf(kisao:KISAO_0000308 kisao:KISAO_0000307)
DisjointClasses(kisao:KISAO_0000308 kisao:KISAO_0000309)

# Class: kisao:KISAO_0000309 (Crank-Nicolson method)

AnnotationAssertion(dc:created kisao:KISAO_0000309 "2011-05-11"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000309 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000309 "Crank-Nicolson method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Crank, J.; Nicolson, P. (1947). A practical method for numerical evaluation of solutions of partial differential equations of the heat conduction type. Proc. Camb. Phil. Soc. 43 (1): 50-67."@en) rdfs:seeAlso kisao:KISAO_0000309 "http://identifiers.org/doi/10.1007/BF02127704"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000309 "In numerical analysis, the Crank-Nicolson method is a finite difference method [http://identifiers.org/biomodels.kisao/KISAO_0000307] used for numerically solving the heat equation and similar partial differential equations. It is a second-order method in time, implicit in time, and is numerically stable. The method was developed by John Crank and Phyllis Nicolson in the mid 20th century."@en)
SubClassOf(kisao:KISAO_0000309 kisao:KISAO_0000307)
SubClassOf(kisao:KISAO_0000309 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))

# Class: kisao:KISAO_0000310 (method of lines)

AnnotationAssertion(dc:created kisao:KISAO_0000310 "2011-05-11"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000310 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) rdfs:label kisao:KISAO_0000310 "method of lines"@en)
AnnotationAssertion(Annotation(rdfs:comment "Schiesser, W. E. (1991). The Numerical Method of Lines. Academic Press."@en) rdfs:seeAlso kisao:KISAO_0000310 "http://identifiers.org/isbn/0126241309"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000310 "MOL"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000310 "NMOL"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000310 "NUMOL"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000310 "The method of lines is a general technique for solving partial differential equations (PDEs) by typically using finite difference relationships for the spatial derivatives and ordinary differential equations for the time derivative."@en)
SubClassOf(kisao:KISAO_0000310 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000310 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000310 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000310 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000346))

# Class: kisao:KISAO_0000311 (type of domain geometry handling)

AnnotationAssertion(dc:creator kisao:KISAO_0000311 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000311 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000311 "type of domain geometry handling"@en)
SubClassOf(kisao:KISAO_0000311 kisao:KISAO_0000097)

# Class: kisao:KISAO_0000314 (S-System power-law canonical differential equations solver)

AnnotationAssertion(dc:created kisao:KISAO_0000314 "2011-05-20"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000314 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "E-Cell"@end) kisao:isImplementedIn kisao:KISAO_0000314 "http://identifiers.org/biosimulators/ecell4"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000314 "S-System power-law canonical differential equations solver"@en)
AnnotationAssertion(Annotation(rdfs:comment "Irvine, D.H. and Savageau, M.A., Efficient solution of nonlinear ordinary differential equations expressed in S-System canonical form, Siam. J. Numer. Anal., 27:704-735, 1990."@en) rdfs:seeAlso kisao:KISAO_0000314 "http://identifiers.org/doi/10.1137/0727042"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000314 "ESSYNS GMA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000314 "Ordinary differential equations can be recast into a nonlinear canonical form called an S-system. Evidence for the generality of this class comes from extensive empirical examples that have been recast and from the discovery that sets of differential equations and functions, recognized as among the most general, are special cases of S-systems. Identification of this nonlinear canonical form suggests a radically different approach to numerical solution of ordinary differential equations. By capitalizing on the regular structure of S-systems, efficient formulas for a variable-order, variable-step Taylor-series method are developed. "@en)
SubClassOf(kisao:KISAO_0000314 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000314 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000314 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000314 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000314 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))

# Class: kisao:KISAO_0000315 (lattice gas automata)

AnnotationAssertion(dc:created kisao:KISAO_0000315 "2011-05-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000315 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000315 "lattice gas automata"@en)
AnnotationAssertion(Annotation(rdfs:comment "Dieter A. Wolf-Gladrow (2000). Lattice-Gas Cellular Automata and Lattice Boltzmann Models. Springer."@en) rdfs:seeAlso kisao:KISAO_0000315 "http://identifiers.org/isbn/3-540-66973-6"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000315 "LGA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000315 "LGCA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000315 "lattice gas cellular automata"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000315 "Lattice gas automata methods are a series of cellular automata methods used to simulate fluid flows. From the LGCA, it is possible to derive the macroscopic Navier-Stokes equations."@en)
SubClassOf(kisao:KISAO_0000315 kisao:KISAO_0000068)
SubClassOf(kisao:KISAO_0000315 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
DisjointClasses(kisao:KISAO_0000315 kisao:KISAO_0000334)

# Class: kisao:KISAO_0000316 (enhanced Greens function reaction dynamics)

AnnotationAssertion(dc:created kisao:KISAO_0000316 "2011-05-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000316 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000316 "enhanced Greens function reaction dynamics"@en)
AnnotationAssertion(Annotation(rdfs:comment "K. Takahashi, An exact Brownian dynamics method for cell simulation, in Computational Methods in Systems Biology, vol. 5307/2008."@en) rdfs:seeAlso kisao:KISAO_0000316 "http://identifiers.org/doi/10.1007/978-3-540-88562-7_3"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000316 "eGFRD"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000316 "enhanced Greens function reaction dynamics"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000316 "GFRD [http://identifiers.org/biomodels.kisao/KISAO_0000058] decomposes the multi­body reaction diffusion problem to a set of single and two body problems. Analytical solutions for two body reaction diffusion are available via Smoluchowski equation. eGFRD allows to solve each sub­problem asynchronously by introducing the concept of first passage processes."@en)
SubClassOf(kisao:KISAO_0000316 kisao:KISAO_0000056)
SubClassOf(kisao:KISAO_0000316 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000316 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000105))
SubClassOf(kisao:KISAO_0000316 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))
SubClassOf(kisao:KISAO_0000316 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
SubClassOf(kisao:KISAO_0000316 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000058))

# Class: kisao:KISAO_0000317 (E-Cell multi-algorithm simulation method)

AnnotationAssertion(dc:created kisao:KISAO_0000317 "2011-05-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000317 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "E-Cell"@end) kisao:isImplementedIn kisao:KISAO_0000317 "http://identifiers.org/biosimulators/ecell4"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000317 "E-Cell multi-algorithm simulation method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Takahashi, K., Kaizu, K., Hu, B., and Tomita, M., A multi-algorithm, multi-timescale method for cell simulation. Bioinformatics, in press."@en) rdfs:seeAlso kisao:KISAO_0000317 "http://identifiers.org/pubmed/14990450"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000317 "A modular meta-algorithm with a discrete event scheduler that can incorporate any type of time-driven simulation algorithm. It was shown that this meta-algorithm can efficiently drive simulation models with different simulation algorithms with little intrusive modification to the algorithms themselves. Only a few additional methods to handle communications between computational modules are required."@en)
SubClassOf(kisao:KISAO_0000317 kisao:KISAO_0000352)

# Class: kisao:KISAO_0000318 (Gauss-Legendre Runge-Kutta method)

AnnotationAssertion(dc:created kisao:KISAO_0000318 "2011-05-26"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000318 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@end) kisao:isImplementedIn kisao:KISAO_0000318 "http://identifiers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000318 "Gauss-Legendre Runge-Kutta method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Maitree Podisuk, Sirirat Khuntidilokwongsa, and Witchaya Rattanametawee. 2006. Gauss-Legendre Quadrature formula in Runge-Kutta method with modified model of Newton cooling law. In Proceedings of the 8th WSEAS international conference on Mathematical methods and computational techniques in electrical engineering (MMACTEE'06). World Scientific and Engineering Academy and Society (WSEAS), Stevens Point, Wisconsin, USA, 312-317."@en) rdfs:seeAlso kisao:KISAO_0000318 "http://identifiers.org/isbn/960-8457-54-8"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000318 "Open Formula"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000318 "So called 'Open Formula', two points formula, three points formula, four points formula, five points formula and six points formula of the Runge-Kutta method to solve the initial value problem of the ordinary differential equation. These formulas use the points and weights from the Gauss-Legendre Quadrature formulas for finding the value of the definite integral."@en)
SubClassOf(kisao:KISAO_0000318 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000318 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000318 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000318 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000108))
SubClassOf(kisao:KISAO_0000318 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000318 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))

# Class: kisao:KISAO_0000319 (Monte Carlo method)

AnnotationAssertion(dc:created kisao:KISAO_0000319 "2011-05-26"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000319 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000319 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000319 "Monte Carlo method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Metropolis, N.; Ulam, S. (1949). \"The Monte Carlo Method\". Journal of the American Statistical Association (American Statistical Association) 44 (247): 335-341."@en) rdfs:seeAlso kisao:KISAO_0000319 "http://identifiers.org/doi/10.2307/2280232"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000319 "MC"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000319 "Monte Carlo methods (or Monte Carlo experiments) are a class of computational algorithms that rely on repeated random sampling to compute their results."@en)
SubClassOf(kisao:KISAO_0000319 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000319 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))

# Class: kisao:KISAO_0000320 (BioRica hybrid method)

AnnotationAssertion(dc:created kisao:KISAO_0000320 "2011-05-26"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000320 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000320 "BioRica"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000320 "BioRica hybrid method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Cvijovic M, Soueidan H, Sherman DJ, Klipp E, Nikolski M. Exploratory simulation of cell ageing using hierarchical models. Genome Inform. 2008;21:114-25."@en) rdfs:seeAlso kisao:KISAO_0000320 "http://identifiers.org/pubmed/19425152"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000320 "The simulation schema for a given BioRica node is given by a hybrid algorithm that deals with continuous time and allows for discrete events that roll back the time according to these discrete interruptions."@en)
SubClassOf(kisao:KISAO_0000320 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000320 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000107))

# Class: kisao:KISAO_0000321 (Cash-Karp method)

AnnotationAssertion(dc:created kisao:KISAO_0000321 "2011-05-26"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000321 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000321 "Cain"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000321 "GSL"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000321 "Cash-Karp method"@en)
AnnotationAssertion(Annotation(rdfs:comment "J. R. Cash, A. H. Karp. \"A variable order Runge-Kutta method for initial value problems with rapidly varying right-hand sides\", ACM Transactions on Mathematical Software 16: 201-222, 1990."@en) rdfs:seeAlso kisao:KISAO_0000321 "http://identifiers.org/doi/10.1145/79505.79507"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000321 "An family of explicit Runge-Kutta formulas, which are very efficient for problems with smooth solution as well as problems having rapidly varying solutions. Each member of this family consists of a fifty-order formula that contains embedded formulas of all orders 1 through 4. By computing solutions at several different orders, it is possible to detect sharp fronts or discontinuities before all the function evaluations defining the full Runge-Kutta step have been computed."@en)
SubClassOf(kisao:KISAO_0000321 kisao:KISAO_0000435)

# Class: kisao:KISAO_0000322 (hybridity)

AnnotationAssertion(dc:created kisao:KISAO_0000322 "2011-05-27"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000322 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000322 "hybridity"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000322 "The basic idea of hybrid simulation methods is to combine the advantages of complementary simulation approaches: the whole system is subdivided into appropriate parts and different simulation methods operate on these parts at the same time."@en)
SubClassOf(kisao:KISAO_0000322 kisao:KISAO_0000097)

# Class: kisao:KISAO_0000323 (equation-free probabilistic steady-state approximation)

AnnotationAssertion(dc:created kisao:KISAO_0000323 "2011-06-02"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000323 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000323 "equation-free probabilistic steady-state approximation"@en)
AnnotationAssertion(Annotation(rdfs:comment "Salis H, Kaznessis YN. An equation-free probabilistic steady-state approximation: dynamic application to the stochastic simulation of biochemical reaction networks. J Chem Phys. 2005 Dec 1;123(21):214106."@en) rdfs:seeAlso kisao:KISAO_0000323 "http://identifiers.org/doi/10.1063/1.2131050"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000323 "We present a probabilistic steady-state approximation that separates the time scales of an arbitrary reaction network, detects the convergence of a marginal distribution to a quasi-steady-state, directly samples the underlying distribution, and uses those samples to accurately predict the state of the system, including the effects of the slow dynamics, at future times. The numerical method produces an accurate solution of both the fast and slow reaction dynamics while, for stiff systems, reducing the computational time by orders of magnitude. The developed theory makes no approximations on the shape or form of the underlying steady-state distribution and only assumes that it is ergodic. <...> The developed theory may be applied to any type of kinetic Monte Carlo simulation to more efficiently simulate dynamically stiff systems, including existing exact, approximate, or hybrid stochastic simulation techniques.
"@en)
SubClassOf(kisao:KISAO_0000323 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000323 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000323 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000325))
SubClassOf(kisao:KISAO_0000323 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000326))
SubClassOf(kisao:KISAO_0000323 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000327))
SubClassOf(kisao:KISAO_0000323 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000328))

# Class: kisao:KISAO_0000324 (nested stochastic simulation algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000324 "2011-06-02"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000324 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000324 "nested stochastic simulation algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "E W., Liu D. and Vanden-Eijnden E. Nested stochastic simulation algorithm for chemical kinetic systems with disparate rates. J Chem Phys. 2005 Nov 15;123(19):194107.
"@en) rdfs:seeAlso kisao:KISAO_0000324 "http://identifiers.org/pubmed/16321076"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000324 "nested SSA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000324 "This multiscale method is a small modification of the Gillespie's direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029], in the form of a nested SSA, with inner loops for the fast reactions, and outer loop for the slow reactions. The number of groups can be more than two, and the grouping into fast and slow  variables can be done dynamically in an adaptive version of the scheme."@en)
SubClassOf(kisao:KISAO_0000324 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000324 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000324 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000029))

# Class: kisao:KISAO_0000325 (minimum fast/discrete reaction occurrences number)

AnnotationAssertion(dc:created kisao:KISAO_0000325 "2011-06-02"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000325 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000325 "minimum fast/discrete reaction occurrences number"@en)
AnnotationAssertion(Annotation(rdfs:comment "Salis H, Kaznessis YN. An equation-free probabilistic steady-state approximation: dynamic application to the stochastic simulation of biochemical reaction networks. J Chem Phys. 2005 Dec 1;123(21):214106."@en) rdfs:seeAlso kisao:KISAO_0000325 "http://identifiers.org/doi/10.1063/1.2131050"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000325 "Parameter of 'equation-free probabilistic steady-state approximation' method  [http://identifiers.org/biomodels.kisao/KISAO_0000323], which describes the minimum number of fast/discrete reaction occurrences before their effects cause convergence to a quasi-steady-state distribution."@en)
SubClassOf(kisao:KISAO_0000325 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000325 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000323))
SubClassOf(kisao:KISAO_0000325 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000326 (number of samples)

AnnotationAssertion(dc:created kisao:KISAO_0000326 "2011-06-02"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000326 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000326 "number of samples"@en)
AnnotationAssertion(Annotation(rdfs:comment "Salis H, Kaznessis YN. An equation-free probabilistic steady-state approximation: dynamic application to the stochastic simulation of biochemical reaction networks. J Chem Phys. 2005 Dec 1;123(21):214106."@en) rdfs:seeAlso kisao:KISAO_0000326 "http://identifiers.org/doi/10.1063/1.2131050"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000326 "Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which determines the number of samples taken from the distribution."@en)
SubClassOf(kisao:KISAO_0000326 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000326 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000323))
SubClassOf(kisao:KISAO_0000326 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000327 (maximum discrete number)

AnnotationAssertion(dc:created kisao:KISAO_0000327 "2011-06-02"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000327 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000327 "maximum discrete number"@en)
AnnotationAssertion(Annotation(rdfs:comment "Salis H, Kaznessis YN. An equation-free probabilistic steady-state approximation: dynamic application to the stochastic simulation of biochemical reaction networks. J Chem Phys. 2005 Dec 1;123(21):214106."@en) rdfs:seeAlso kisao:KISAO_0000327 "http://identifiers.org/doi/10.1063/1.2131050"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000327 "Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which controls the maximum number of molecules of some reactant species in order for the reaction to be considered discrete."@en)
SubClassOf(kisao:KISAO_0000327 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000327 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000323))
SubClassOf(kisao:KISAO_0000327 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000328 (minimum fast rate)

AnnotationAssertion(dc:created kisao:KISAO_0000328 "2011-06-02"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000328 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000328 "minimum fast rate"@en)
AnnotationAssertion(Annotation(rdfs:comment "Salis H, Kaznessis YN. An equation-free probabilistic steady-state approximation: dynamic application to the stochastic simulation of biochemical reaction networks. J Chem Phys. 2005 Dec 1;123(21):214106."@en) rdfs:seeAlso kisao:KISAO_0000328 "http://identifiers.org/doi/10.1063/1.2131050"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000328 "Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which controls the minimum rate of the reaction in order for it to be considered fast."@en)
SubClassOf(kisao:KISAO_0000328 kisao:KISAO_0000252)
SubClassOf(kisao:KISAO_0000328 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000323))
SubClassOf(kisao:KISAO_0000328 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000329 (constant-time kinetic Monte Carlo algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000329 "2011-06-03"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000329 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000329 "constant-time kinetic Monte Carlo algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Slepoy A, Thompson AP, Plimpton SJ. A constant-time kinetic Monte Carlo algorithm for simulation of large biochemical reaction networks. J Chem Phys. 2008 May 28;128(20):205101."@en) rdfs:seeAlso kisao:KISAO_0000329 "http://identifiers.org/pubmed/18513044"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000329 "SSA-CR"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000329 "The computational cost of the original SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] scaled linearly with the number of reactions in the network. Gibson and Bruck developed a logarithmic scaling version of the SSA which uses a priority queue or binary tree for more efficient reaction selection [http://identifiers.org/biomodels.kisao/KISAO_0000027]. More generally, this problem is one of dynamic discrete random variate generation which finds many uses in kinetic Monte Carlo and discrete event simulation. We present here a constant-time algorithm, whose cost is independent of the number of reactions, enabled by a slightly more complex underlying data structure."@en)
SubClassOf(kisao:KISAO_0000329 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000329 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000329 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))

# Class: kisao:KISAO_0000330 (R-leaping algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000330 "2011-06-03"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000330 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000330 "R-leaping algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Auger A, Chatelain P, Koumoutsakos P. R-leaping: accelerating the stochastic simulation algorithm by reaction leaps. J Chem Phys. 2006 Aug 28;125(8):084103."@en) rdfs:seeAlso kisao:KISAO_0000330 "http://identifiers.org/pubmed/16964997"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000330 "R-leap method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000330 "A novel algorithm is proposed for the acceleration of the exact stochastic simulation algorithm by a predefined number of reaction firings (R-leaping) that may occur across several reaction channels. In the present approach, the numbers of reaction firings are correlated binomial distributions and the sampling procedure is independent of any permutation of the reaction channels. This enables the algorithm to efficiently handle large systems with disparate rates, providing substantial computational savings in certain cases."@en)
SubClassOf(kisao:KISAO_0000330 kisao:KISAO_0000621)
SubClassOf(kisao:KISAO_0000330 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))

# Class: kisao:KISAO_0000331 (exact R-leaping algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000331 "2011-06-03"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000331 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000331 "exact R-leaping algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Eric Mjolsness, David Orendorff, Philippe Chatelain, and Petros Koumoutsakos. An exact accelerated stochastic simulation algorithm. J Chem Phys. 2009 April 14; 130(14): 144110."@en) rdfs:seeAlso kisao:KISAO_0000331 "http://identifiers.org/pubmed/2852436"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000331 "ER-leap method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000331 "exact R-leap method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000331 "exact accelerated stochastic simulation algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000331 "We present a SSA which, similar to R-leap [http://identifiers.org/biomodels.kisao/KISAO_0000330], accelerates SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] by executing multiple reactions per algorithmic step, but which samples the reactant trajectories from the same probability distribution as the SSA. This 'exact R-leap' or 'ER-leap' algorithm is a modification of the R-leap algorithm which is both exact and capable of substantial speed-up over SSA."@en)
SubClassOf(kisao:KISAO_0000331 kisao:KISAO_0000621)
SubClassOf(kisao:KISAO_0000331 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
SubClassOf(kisao:KISAO_0000331 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000330))

# Class: kisao:KISAO_0000332 (ER-leap initial leap)

AnnotationAssertion(dc:created kisao:KISAO_0000332 "2011-06-03"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000332 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000332 "ER-leap initial leap"@en)
AnnotationAssertion(Annotation(rdfs:comment "Eric Mjolsness, David Orendorff, Philippe Chatelain, and Petros Koumoutsakos. An exact accelerated stochastic simulation algorithm. J Chem Phys. 2009 April 14; 130(14): 144110."@en) rdfs:seeAlso kisao:KISAO_0000332 "http://identifiers.org/pubmed/2852436"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000332 "L"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000332 "L (initial step) is a parameter of 'exact R-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000331]. ''We will assume that the reaction event to be bounded occurs within a run of L events in the SSA algorithm[http://identifiers.org/biomodels.kisao/KISAO_0000029], in order to execute L reactions at once in the manner of the R-leap algorithm[http://identifiers.org/biomodels.kisao/KISAO_0000230]''."@en)
SubClassOf(kisao:KISAO_0000332 kisao:KISAO_0000244)
SubClassOf(kisao:KISAO_0000332 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000331))
SubClassOf(kisao:KISAO_0000332 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000333 (accelerated stochastic simulation algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000333 "2011-06-03"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000333 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000333 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000333 "accelerated stochastic simulation algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000333 "accelerated SSA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000333 "An algorithm, which accelerates SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] either at the expense of its accuracy or exact."@en)
SubClassOf(kisao:KISAO_0000333 kisao:KISAO_0000241)
SubClassOf(kisao:KISAO_0000333 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000029))

# Class: kisao:KISAO_0000334 (multiparticle lattice gas automata)

AnnotationAssertion(dc:created kisao:KISAO_0000334 "2011-06-03"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000334 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000334 "multiparticle lattice gas automata"@en)
AnnotationAssertion(Annotation(rdfs:comment "Chopard B., et al.Multiparticle lattice gas automata for reaction diffusion systems. Int. J. Mod. Phys. C 1994;5:47-63."@en) rdfs:seeAlso kisao:KISAO_0000334 "http://identifiers.org/doi/10.1142/S0129183194000052"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000334 "multiparticle lattice gas cellular automata"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000334 "An algorithm which allows  for an arbitrary number of particles, while keeping the benefits of the cellular automata approach [http://identifiers.org/biomodels.kisao/KISAO_0000315]."@en)
SubClassOf(kisao:KISAO_0000334 kisao:KISAO_0000068)
SubClassOf(kisao:KISAO_0000334 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
SubClassOf(kisao:KISAO_0000334 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000315))

# Class: kisao:KISAO_0000335 (generalized stochastic simulation algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000335 "2011-06-03"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000335 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000335 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000335 "generalized stochastic simulation algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000335 "Gillespie direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029] follows unit-by-unit changes in the total numbers of each reactant species, it is especially well suited to the study of systems in which reactant densities are low and the application of methods based on continuum approximations, such as the traditional ordinary differential equations of chemical kinetics, is questionable. The 'generalized stochastic simulation algorithm' branch presents methods, which extend Gillespie direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029] to suit to systems with other characteristics."@en)
SubClassOf(kisao:KISAO_0000335 kisao:KISAO_0000241)
SubClassOf(kisao:KISAO_0000335 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000029))

# Class: kisao:KISAO_0000336 (D-leaping method)

AnnotationAssertion(dc:created kisao:KISAO_0000336 "2011-06-03"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000336 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000336 "D-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Bayati B, Chatelain P, Koumoutsakos. D-leaping: Accelerating stochastic simulation algorithms for reactions with delays. Journal of Computational Physics. 2009 Sept;228(16):5909-5918."@en) rdfs:seeAlso kisao:KISAO_0000336 "http://identifiers.org/doi/10.1016/j.jcp.2009.05.004"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000336 "We propose a novel, accelerated algorithm for the approximate stochastic simulation of biochemical systems with delays. The present work extends existing accelerated algorithms by distributing, in a time adaptive fashion, the delayed reactions so as to minimize the computational effort while preserving their accuracy."@en)
SubClassOf(kisao:KISAO_0000336 kisao:KISAO_0000335)
SubClassOf(kisao:KISAO_0000336 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))

# Class: kisao:KISAO_0000337 (finite element method)

AnnotationAssertion(dc:created kisao:KISAO_0000337 "2011-06-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000337 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000337 "finite element method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Pelosi G. The finite-element method, Part I: R. L. Courant: Historical Corner. IEEE Antennas and Propagation Magazine, Vol. 49, No. 2. (April 2007), pp. 180-182."@en) rdfs:seeAlso kisao:KISAO_0000337 "http://identifiers.org/doi/10.1109/MAP.2007.376627"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000337 "FEA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000337 "FEM"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000337 "finite element analysis"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000337 "A numerical technique for finding approximate solutions of partial differential equations (PDE) as well as of integral equations. The solution approach is based either on eliminating the differential equation completely (steady state problems), or rendering the PDE into an approximating system of ordinary differential equations, which are then numerically integrated using standard techniques such as Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261], Runge-Kutta [http://identifiers.org/biomodels.kisao/KISAO_0000064], etc."@en)
SubClassOf(kisao:KISAO_0000337 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000337 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000337 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000337 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000346))

# Class: kisao:KISAO_0000338 (h-version of the finite element method)

AnnotationAssertion(dc:created kisao:KISAO_0000338 "2011-06-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000338 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000338 "h-version of the finite element method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Babuska, I., T. Strouboulis, A. Mathur, C. S. Upadhyay, Pollution error in the h-version of the finite element method and the local quality of a-posteriori error estimators, Finite Elements in Analysis and Design, 17: 273-321, 1994."@en) rdfs:seeAlso kisao:KISAO_0000338 "http://identifiers.org/doi/10.1016/0168-874X(94)90003-5"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000338 "h-FEM"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000338 "h-method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000338 "Classical form of the 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337], in which polynomials of fixed degree p are used and the mesh is refined to increase accuracy. Can be considered as a special case of the h-p version [http://identifiers.org/biomodels.kisao/KISAO_0000340]."@en)
SubClassOf(kisao:KISAO_0000338 kisao:KISAO_0000337)

# Class: kisao:KISAO_0000339 (p-version of the finite element method)

AnnotationAssertion(dc:created kisao:KISAO_0000339 "2011-06-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000339 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000339 "p-version of the finite element method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Babuska, I., B.A. Szabo and I.N. Katz, The p-version of the finite element method, SIAM J. Numer. Anal., 18: 515-545, 1981."@en) rdfs:seeAlso kisao:KISAO_0000339 "http://identifiers.org/doi/10.1137/0718033"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000339 "p-FEM"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000339 "p-method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000339 "The p version of 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] uses a fixed mesh but increases the polynomial degree p to increase accuracy. Can be considered as a special case of the h-p version [http://identifiers.org/biomodels.kisao/KISAO_0000340]."@en)
SubClassOf(kisao:KISAO_0000339 kisao:KISAO_0000337)

# Class: kisao:KISAO_0000340 (h-p version of the finite element method)

AnnotationAssertion(dc:created kisao:KISAO_0000340 "2011-06-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000340 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000340 "h-p version of the finite element method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Babuska, I., and B. Guo, The h-p version of the finite element method, Comput. Mech., 1: 203-220, 1986."@en) rdfs:seeAlso kisao:KISAO_0000340 "http://identifiers.org/doi/10.1007/BF00272624"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000340 "hp-FEM"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000340 "hp-method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000340 "In h-p version of 'finite difference method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] the two approaches of mesh refinement and degree enchacement are combined."@en)
SubClassOf(kisao:KISAO_0000340 kisao:KISAO_0000337)
SubClassOf(kisao:KISAO_0000340 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000338))
SubClassOf(kisao:KISAO_0000340 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000339))
DisjointClasses(kisao:KISAO_0000340 kisao:KISAO_0000341)

# Class: kisao:KISAO_0000341 (mixed finite element method)

AnnotationAssertion(dc:created kisao:KISAO_0000341 "2011-06-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000341 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000341 "mixed finite element method"@en)
AnnotationAssertion(Annotation(rdfs:comment "D. N. Arnold. 1990. Mixed finite element methods for elliptic problems. Comput. Methods Appl. Mech. Eng. 82, 1-3 (September 1990), 281-300."@en) rdfs:seeAlso kisao:KISAO_0000341 "http://identifiers.org/doi/10.1016/0045-7825(90)90168-L"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000341 "A 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] in which both stress and displacement fields are approximated as primary variables."@en)
SubClassOf(kisao:KISAO_0000341 kisao:KISAO_0000337)

# Class: kisao:KISAO_0000342 (level set method)

AnnotationAssertion(dc:created kisao:KISAO_0000342 "2011-06-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000342 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000342 "level set method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Osher, S.; Sethian, J. A. (1988), \"Fronts propagating with curvature-dependent speed: Algorithms based on Hamilton-Jacobi formulations\", J. Comput. Phys. 79: 12-49."@en) rdfs:seeAlso kisao:KISAO_0000342 "http://identifiers.org/doi/10.1016/0021-9991(88)90002-2"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000342 "LSM"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000342 "level-set method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000342 "An algorithm for moving surfaces under their curvature. This algorithm rely on numerically solving Hamilton-Jacobi equations with viscous terms, using approximation techniques from hyperbolic conservation laws."@en)
SubClassOf(kisao:KISAO_0000342 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000342 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376)))

# Class: kisao:KISAO_0000343 (generalized finite element method)

AnnotationAssertion(dc:created kisao:KISAO_0000343 "2011-06-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000343 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000343 "generalized finite element method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Babuska, Ivo; Uday Banerjee, John E. Osborn (June 2004). Generalized Finite Element Methods: Main Ideas, Results, and Perspective. International Journal of Computational Methods 1 (1): 67-103."@en) rdfs:seeAlso kisao:KISAO_0000343 "http://identifiers.org/doi/10.1142/S0219876204000083"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000343 "GFEM"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000343 "PUM"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000343 "partition of unity method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000343 "The GFEM is a generalization of the classical 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] — in its h [http://identifiers.org/biomodels.kisao/KISAO_0000338], p [http://identifiers.org/biomodels.kisao/KISAO_0000339], and h-p versions [http://identifiers.org/biomodels.kisao/KISAO_0000340]— as well as of the various forms of meshless methods used in engineering."@en)
SubClassOf(kisao:KISAO_0000343 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000343 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000343 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000343 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000343 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000347))
SubClassOf(kisao:KISAO_0000343 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000337))

# Class: kisao:KISAO_0000345 (h-p cloud method)

AnnotationAssertion(dc:created kisao:KISAO_0000345 "2011-06-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000345 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000345 "h-p cloud method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Duarte, C. A. and Oden, J. T. (1996), H-p clouds—an h-p meshless method. Numerical Methods for Partial Differential Equations, 12: 673-705."@en) rdfs:seeAlso kisao:KISAO_0000345 "http://identifiers.org/doi/10.1002/(SICI)1098-2426(199611)12:6<673::AID-NUM3>3.0.CO;2-P"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000345 "h-p clouds"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000345 "method of clouds"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000345 "A meshless method, which uses a partition of unity to construct the family of h-p cloud functions. "@en)
SubClassOf(kisao:KISAO_0000345 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000345 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000345 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))
SubClassOf(kisao:KISAO_0000345 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000345 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000347))

# Class: kisao:KISAO_0000346 (mesh-based geometry handling)

AnnotationAssertion(dc:creator kisao:KISAO_0000346 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000346 "mesh-based geometry handling"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000346 "In most large-scale numerical simulations of physical phenomena, a large percentage of the overall computational effort is expended on technical details connected with meshing. These details include, in particular, grid generation, mesh adaptation to domain geometry, element or cell connectivity, grid motion and separation to model fracture, fragmentation, free surfaces, etc."@en)
SubClassOf(kisao:KISAO_0000346 kisao:KISAO_0000311)
DisjointClasses(kisao:KISAO_0000346 kisao:KISAO_0000347)

# Class: kisao:KISAO_0000347 (meshless geometry handling)

AnnotationAssertion(dc:creator kisao:KISAO_0000347 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000347 "meshless geometry handling"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000347 "Most meshless methods require a scattered set of nodal points in the domain of interest. In these methods, there may be no fixed connectivities between the nodes, unlike the finite element or finite difference methods. This feature has significant implications in modeling some physical phenomena that are characterized by a continuous change in the geometry of the domain under analysis. "@en)
SubClassOf(kisao:KISAO_0000347 kisao:KISAO_0000311)

# Class: kisao:KISAO_0000348 (extended finite element method)

AnnotationAssertion(dc:created kisao:KISAO_0000348 "2011-06-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000348 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000348 "extended finite element method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Stazi, F. L.; Budyn, E.; Chessa, J.; Belytschko, T. An extended finite element method with higher-order elements for curved cracks. Computational Mechanics, Volume 31, Issue 1-2, pp. 38-48 (2003)."@en) rdfs:seeAlso kisao:KISAO_0000348 "http://identifiers.org/doi/10.1007/s00466-002-0391-2"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000348 "X-FEM"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000348 "XFEM"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000348 "A numerical method to model arbitrary discontinuities in continuous bodies that does not require the mesh to conform to the discontinuities nor significant mesh refinement near singularities. In X-FEM the standard finite element approximation [http://identifiers.org/biomodels.kisao/KISAO_0000337] is enriched and the approximation space is extended by an additional family of functions."@en)
SubClassOf(kisao:KISAO_0000348 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000348 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000348 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000348 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000347))
SubClassOf(kisao:KISAO_0000348 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000337))

# Class: kisao:KISAO_0000349 (method of finite spheres)

AnnotationAssertion(dc:created kisao:KISAO_0000349 "2011-06-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000349 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000349 "method of finite spheres"@en)
AnnotationAssertion(Annotation(rdfs:comment "S. De and K. J. Bathe. The method of finite spheres. Computational Mechanics, Volume 25, Number 4, 329-345."@en) rdfs:seeAlso kisao:KISAO_0000349 "http://identifiers.org/doi/10.1007/s004660050481"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000349 "MFS"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000349 "Method of finite spheres is truly meshless in the sense that the nodes are placed and the numerical integration is performed without a mesh. Some of the novel features of the method of finite spheres are the numerical integration scheme and the way in which the Dirichlet boundary conditions are incorporated."@en)
SubClassOf(kisao:KISAO_0000349 kisao:KISAO_0000369)
SubClassOf(kisao:KISAO_0000349 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000349 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000349 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000347))

# Class: kisao:KISAO_0000350 (probability-weighted dynamic Monte Carlo method)

AnnotationAssertion(dc:created kisao:KISAO_0000350 "2011-06-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000350 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000350 "probability-weighted dynamic Monte Carlo method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Resat H, Wiley HS, Dixon DA. Probability-weighted dynamic Monte Carlo method for reaction kinetics simulations. J Phys Chem B. 2001;105:11026-11034."@en) rdfs:seeAlso kisao:KISAO_0000350 "http://identifiers.org/doi/10.1021/jp011404w"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000350 "PW-DMC"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000350 "probability-weighted DMC"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000350 "We have developed a probability-weighted DMC method by incorporating the weighted sampling algorithm of equilibrium molecular simulations. This new algorithm samples the slow reactions very efficiently and makes it possible to simulate in a computationally efficient manner the reaction kinetics of physical systems in which the rates of reactions vary by several orders of magnitude."@en)
SubClassOf(kisao:KISAO_0000350 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000350 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))

# Class: kisao:KISAO_0000351 (multinomial tau-leaping method)

AnnotationAssertion(dc:created kisao:KISAO_0000351 "2011-06-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000351 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000351 "multinomial tau-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Pettigrew MF, Resat H. Multinomial tau-leaping method for stochastic kinetic simulations. J Chem Phys. 2007 Feb 28;126(8):084101."@en) rdfs:seeAlso kisao:KISAO_0000351 "http://identifiers.org/pubmed/17343434"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000351 "MtauL"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000351 "The multinomial tau-leaping method  is an extension of the binomial tau-leaping method [http://identifiers.org/biomodels.kisao/KISAO_0000074] to networks with arbitrary multiple-channel reactant dependencies. Improvements were achieved by a combination of three factors: First, tau-leaping steps are determined simply and efficiently using a-priori information and Poisson distribution based estimates of expectation values for reaction numbers. Second, networks are partitioned into closed groups of reactions and corresponding reactants in which no group reactant set is found in any other group. Third, product formation is factored into upper bound estimation of the number of times a particular reaction occurs."@en)
SubClassOf(kisao:KISAO_0000351 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000351 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000074))

# Class: kisao:KISAO_0000352 (hybrid method)

AnnotationAssertion(dc:created kisao:KISAO_0000352 "2011-06-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000352 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000352 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000352 "hybrid method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000352 "A simulation methods which combines the advantages of complementary simulation approaches: the whole system is subdivided into appropriate parts and different simulation methods operate on these parts at the same time."@en)
SubClassOf(kisao:KISAO_0000352 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000352 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000322))
SubClassOf(kisao:KISAO_0000352 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000000))

# Class: kisao:KISAO_0000353 (generalized minimal residual algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000353 "2011-06-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000353 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000353 "CVODE"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000353 "generalized minimal residual algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Youcef Saad and Martin H. Schultz, GMRES: A Generalized Minimal Residual Algorithm for Solving Nonsymmetric Linear Systems. SIAM J. Sci. and Stat. Comput. 7, 856 (1986)."@en) rdfs:seeAlso kisao:KISAO_0000353 "http://identifiers.org/doi/10.1137/0907058"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000353 "GMRES"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000353 "An iterative method for solving linear systems, which has the property of minimizing at every step the norm of the residual vector over a Krylov subspace. The generalized minimal residual method extends the minimal residual method (MINRES) [http://identifiers.org/biomodels.kisao/KISAO_0000388], which is only applicable to symmetric systems, to non-symmetric systems."@en)
SubClassOf(kisao:KISAO_0000353 kisao:KISAO_0000354)
SubClassOf(kisao:KISAO_0000353 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000353 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000388))

# Class: kisao:KISAO_0000354 (Krylov subspace projection method)

AnnotationAssertion(dc:created kisao:KISAO_0000354 "2011-06-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000354 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000354 "Krylov subspace projection method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Y. Saad. 2003. Iterative Methods for Sparse Linear Systems (2nd ed.). Soc. for Industrial and Applied Math., Philadelphia, PA, USA."@en) rdfs:seeAlso kisao:KISAO_0000354 "http://identifiers.org/isbn/0898715342"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000354 "Krylov subspace method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000354 "Krylov subspace method is an iterative linear equation method, which builds up Krylov subspaces and look for good approximations to eigenvectors and invariant subspaces within the Krylov spaces."@en)
SubClassOf(kisao:KISAO_0000354 kisao:KISAO_0000398)
SubClassOf(kisao:KISAO_0000354 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000354 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))

# Class: kisao:KISAO_0000355 (DASPK)

AnnotationAssertion(dc:created kisao:KISAO_0000355 "2011-06-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000355 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000355 "DASPK"@en)
AnnotationAssertion(Annotation(rdfs:comment "Peter N. Brown, Alan C. Hindmarsh, and Linda R. Petzold. 1994. Using Krylov methods in the solution of large-scale differential-algebraic systems. SIAM J. Sci. Comput. 15, 6 (November 1994), 1467-1488."@en) rdfs:seeAlso kisao:KISAO_0000355 "http://identifiers.org/doi/10.1137/0915088"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "NARROW"@en) skos:altLabel kisao:KISAO_0000355 "DDASPK"@en)
AnnotationAssertion(Annotation(rdfs:comment "NARROW"@en) skos:altLabel kisao:KISAO_0000355 "SDASPK"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000355 "differential algebraic system solver with Krylov preconditioning"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000355 "In DASPK, we have combined the time-stepping methods of DASSL [http://identifiers.org/biomodels.kisao/KISAO_0000255] with preconditioned iterative method GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000386], for solving large-scale systems of DAEs of the form F(t, y, y') = 0, where F, y, y' are N-dimensional vectors, and a consistent set of initial conditions y(t0) = y0, y'(t0) = y'0 is given.
DASPK is written in Fortran."@en)
SubClassOf(kisao:KISAO_0000355 kisao:KISAO_0000432)
SubClassOf(kisao:KISAO_0000355 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000373))
SubClassOf(kisao:KISAO_0000355 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000283))
SubClassOf(kisao:KISAO_0000355 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000353))
SubClassOf(kisao:KISAO_0000355 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000356))
SubClassOf(kisao:KISAO_0000355 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000386))

# Class: kisao:KISAO_0000356 (DASSL)

AnnotationAssertion(dc:created kisao:KISAO_0000356 "2011-06-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000356 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000356 "DASSL"@en)
AnnotationAssertion(Annotation(rdfs:comment "Linda R. Petzold: A Description of DASSL: A Differential/Algebraic System Solver, SAND82-8637 (September 1982)."@en) rdfs:seeAlso kisao:KISAO_0000356 "http://www.nea.fr/abs/html/nesc9918.html"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "NARROW"@en) skos:altLabel kisao:KISAO_0000356 "DDASSL"@en)
AnnotationAssertion(Annotation(rdfs:comment "NARROW"@en) skos:altLabel kisao:KISAO_0000356 "SDASSL"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000356 "differential algebraic system solver"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000356 "DASSL is designed for the numerical solution of implicit systems of differential/algebraic equations written in the form F(t,y,y')=0, where F, y, and y' are vectors, and initial values for y and y' are given."@en)
SubClassOf(kisao:KISAO_0000356 kisao:KISAO_0000432)
SubClassOf(kisao:KISAO_0000356 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000373))

# Class: kisao:KISAO_0000357 (conjugate gradient method)

AnnotationAssertion(dc:created kisao:KISAO_0000357 "2011-06-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000357 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000357 "conjugate gradient method"@en)
AnnotationAssertion(Annotation(rdfs:comment "M. R. Hestenes and E. L. Stiefel, Methods of conjugate gradients for solving linear systems. J. Res. Natl. Bur. Stand. 49 (1952), p. 409."@en) rdfs:seeAlso kisao:KISAO_0000357 "urn:issn:0091-0635"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000357 "CG"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000357 "Conjugate gradient method is an algorithm for the numerical solution of particular systems of linear equations, namely those whose matrix is symmetric and positive-definite. The conjugate gradient method is an iterative method, so it can be applied to sparse systems that are too large to be handled by direct methods. Such systems often arise when numerically solving partial differential equations."@en)
SubClassOf(kisao:KISAO_0000357 kisao:KISAO_0000354)
SubClassOf(kisao:KISAO_0000357 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000404))

# Class: kisao:KISAO_0000358 (biconjugate gradient method)

AnnotationAssertion(dc:created kisao:KISAO_0000358 "2011-06-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000358 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000358 "biconjugate gradient method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Fletcher, R. (1976). \"Conjugate gradient methods for indefinite systems\". Numerical Analysis. Lecture Notes in Mathematics (Springer Berlin / Heidelberg) 506: 73-89."@en) rdfs:seeAlso kisao:KISAO_0000358 "http://identifiers.org/doi/10.1007/BFb0080109"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000358 "BCG"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000358 "Bi-CG"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000358 "BiCG"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000358 "The biconjugate gradient method provides a generalization of conjugate gradient method [http://identifiers.org/biomodels.kisao/KISAO_0000357] to non-symmetric matrices."@en)
SubClassOf(kisao:KISAO_0000358 kisao:KISAO_0000354)
SubClassOf(kisao:KISAO_0000358 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000357))

# Class: kisao:KISAO_0000362 (implicit-state Doob-Gillespie algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000362 "2011-06-13"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000362 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000362 "implicit-state Doob-Gillespie algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "V. Danos, J. Feret, W. Fontana, and J. Krivine. 2007. Scalable simulation of cellular signalling networks. In Proceedings of the 5th Asian conference on Programming languages and systems (APLAS'07), Zhong Shao (Ed.). Springer-Verlag, Berlin, Heidelberg, 139-157."@en) rdfs:seeAlso kisao:KISAO_0000362 "http://identifiers.org/isbn/3-540-76636-7 978-3-540-76636-0"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000362 "The algorithm uses a representation of the system together with a super-approximation of its ‘event horizon’ (all events that may happen next), and a specific correction scheme to obtain exact timings. Being completely local and not based on any kind of enumeration, this algorithm has a per event time cost which is independent of (i) the size of the set of generable species (which can even be infinite), and (ii) independent of the size of the system (ie, the number of agent instances). The algorithm can be refined, using concepts derived from the classical notion of causality, so that in addition to the above one also has that the even cost is depending (iii) only logarithmically on the size of the model (ie, the number of rules).
"@en)
SubClassOf(kisao:KISAO_0000362 kisao:KISAO_0000017)
SubClassOf(kisao:KISAO_0000362 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000021))
SubClassOf(kisao:KISAO_0000362 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000029))

# Class: kisao:KISAO_0000363 (rule-based simulation method)

AnnotationAssertion(dc:created kisao:KISAO_0000363 "2011-06-13"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000363 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000363 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000363 "rule-based simulation method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000363 "Rule-based models provide a powerful alternative to approaches that require explicit enumeration of all possible molecular species of a system. Such models consist of formal rules governing interactive behaviour. Rule-based simulation methods simulate such models."@en)
SubClassOf(kisao:KISAO_0000363 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000363 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000105))

# Class: kisao:KISAO_0000364 (Adams predictor-corrector method)

AnnotationAssertion(dc:created kisao:KISAO_0000364 "2011-06-16"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000364 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000364 "GSL"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000364 "Adams predictor-corrector method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Moulton, Forest R. (1926), New methods in exterior ballistics, University of Chicago Press."@en) rdfs:seeAlso kisao:KISAO_0000364 "urn:asin:B0000EFQ8B"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000364 "The combination of evaluating a single explicit integration method ('Adams-Bashforth method' [http://identifiers.org/biomodels.kisao/KISAO_0000279]) (the predictor step) in order to provide a good initial guess for the successive evaluation of an implicit method ('Adams-Moulton method' [http://identifiers.org/biomodels.kisao/KISAO_0000280]) (the corrector step) using iteration."@en)
SubClassOf(kisao:KISAO_0000364 kisao:KISAO_0000289)
SubClassOf(kisao:KISAO_0000364 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000279))
SubClassOf(kisao:KISAO_0000364 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000280))

# Class: kisao:KISAO_0000365 (NDSolve method)

AnnotationAssertion(dc:created kisao:KISAO_0000365 "2011-06-16"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000365 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000365 "Mathematica"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000365 "NDSolve method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Advanced Numerical Differential Equation Solving in Mathematica, Wolfram Mathematica Tutorial Collection, 2008."@en) rdfs:seeAlso kisao:KISAO_0000365 "http://identifiers.org/isbn/978-1-57955-058-5"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000365 "The Mathematica computation system function NDSolve is a general numerical differential equation solver. It can handle a wide range of ordinary differential equations as well as some partial differential equations. NDSolve can also solve some differential-algebraic equations, which are typically a mix of differential and algebraic equations."@en)
SubClassOf(kisao:KISAO_0000365 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000365 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000288))
SubClassOf(kisao:KISAO_0000365 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000302))
SubClassOf(kisao:KISAO_0000365 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000310))
SubClassOf(kisao:KISAO_0000365 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000364))
SubClassOf(kisao:KISAO_0000365 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000367))
SubClassOf(kisao:KISAO_0000365 ObjectSomeValuesFrom(kisao:KISAO_0000246 ObjectIntersectionOf(kisao:KISAO_0000064 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))))

# Class: kisao:KISAO_0000366 (symplecticness)

AnnotationAssertion(dc:created kisao:KISAO_0000366 "2011-06-16"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000366 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000366 "symplecticness"@en)
AnnotationAssertion(Annotation(rdfs:comment " J. M. Sanz-Serna (1992). Symplectic integrators for Hamiltonian problems: an overview. Acta Numerica, 1, pp 243-286"@en) rdfs:seeAlso kisao:KISAO_0000366 "http://identifiers.org/doi/10.1017/S0962492900002282"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000366 "Roughly speaking, ‘symplecticness’ is a characteristic property possessed by the solutions of Hamiltonian problems. A numerical method is called symplectic if, when applied to Hamiltonian problems, it generates numerical solutions which inherit the property of symplecticness (phase volume preservation)."@en)
SubClassOf(kisao:KISAO_0000366 kisao:KISAO_0000097)

# Class: kisao:KISAO_0000367 (partitioned Runge-Kutta method)

AnnotationAssertion(dc:created kisao:KISAO_0000367 "2011-06-16"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000367 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000367 "partitioned Runge-Kutta method"@en)
AnnotationAssertion(Annotation(rdfs:comment "P. Rentrop (1985): Partitioned Runge-Kutta methods with stiffness detection and stepsize control. Numer. Math., Vol. 47, p.545-564."@en) rdfs:seeAlso kisao:KISAO_0000367 "http://identifiers.org/doi/10.1007/BF01389456"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000367 "PRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000367 "SPRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000367 "symplectic partitioned Runge-Kutta method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000367 "If a Hamiltonian system possesses a natural partitioning, it is possible to integrate its certain components using one Runge-Kutta method and other components using a different Runge-Kutta method. The overall s-stage scheme is called a partitioned Runge-Kutta method."@en)
SubClassOf(kisao:KISAO_0000367 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000367 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000367 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000366))
SubClassOf(kisao:KISAO_0000367 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000367 ObjectMinCardinality(2 kisao:KISAO_0000360 kisao:KISAO_0000064))

# Class: kisao:KISAO_0000369 (partial differential equation discretization method)

AnnotationAssertion(dc:created kisao:KISAO_0000369 "2011-06-27"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000369 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000369 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000369 "partial differential equation discretization method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000369 "A method which solves partial differential equations by discretizing them, i.e. approximating them by equations that involve a finite number of unknowns."@en)
SubClassOf(kisao:KISAO_0000369 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000369 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(kisao:KISAO_0000369 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000372))

# Class: kisao:KISAO_0000370 (type of problem)

AnnotationAssertion(dc:created kisao:KISAO_0000370 "2011-06-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000370 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000370 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000370 "type of problem"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000370 "A characteristic describing the type of the problems which can be solved by the algorithm."@en)
SubClassOf(kisao:KISAO_0000370 kisao:KISAO_0000097)

# Class: kisao:KISAO_0000371 (stochastic differential equation problem)

AnnotationAssertion(dc:creator kisao:KISAO_0000371 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000371 "stochastic differential equation problem"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000371 "SDE problem"@en)
SubClassOf(kisao:KISAO_0000371 kisao:KISAO_0000405)

# Class: kisao:KISAO_0000372 (partial differential equation problem)

AnnotationAssertion(dc:creator kisao:KISAO_0000372 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000372 "partial differential equation problem"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000372 "PDE problem"@en)
SubClassOf(kisao:KISAO_0000372 kisao:KISAO_0000405)

# Class: kisao:KISAO_0000373 (differential-algebraic equation problem)

AnnotationAssertion(dc:creator kisao:KISAO_0000373 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000373 "differential-algebraic equation problem"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000373 "DAE"@en)
SubClassOf(kisao:KISAO_0000373 kisao:KISAO_0000405)

# Class: kisao:KISAO_0000374 (ordinary differential equation problem)

AnnotationAssertion(dc:creator kisao:KISAO_0000374 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000374 "ordinary differential equation problem"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000374 "ODE problem"@en)
SubClassOf(kisao:KISAO_0000374 kisao:KISAO_0000405)

# Class: kisao:KISAO_0000375 (delay differential equation problem)

AnnotationAssertion(dc:creator kisao:KISAO_0000375 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000375 "delay differential equation problem"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000375 "DDE problem"@en)
SubClassOf(kisao:KISAO_0000375 kisao:KISAO_0000405)

# Class: kisao:KISAO_0000376 (linearity of equation)

AnnotationAssertion(dc:created kisao:KISAO_0000376 "2011-07-19"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000376 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000376 "linearity of equation"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000376 "Linear differential equations are of the form Ly = f, where the differential operator L is a linear operator, y is the unknown function, and the right hand side f is a given function of the same nature as y."@en)
SubClassOf(kisao:KISAO_0000376 kisao:KISAO_0000370)

# Class: kisao:KISAO_0000377 (one-step method)

AnnotationAssertion(dc:created kisao:KISAO_0000377 "2011-06-30"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000377 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000377 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000377 "one-step method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000377 "http://identifiers.org/isbn/978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000377 "A numerical method for differential equations which uses one starting value at each step."@en)
SubClassOf(kisao:KISAO_0000377 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000377 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000377 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))
SubClassOf(kisao:KISAO_0000377 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000483))

# Class: kisao:KISAO_0000378 (implicit midpoint rule)

AnnotationAssertion(dc:created kisao:KISAO_0000378 "2011-06-30"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000378 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000378 "GSL"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000378 "implicit midpoint rule"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag."@en) rdfs:seeAlso kisao:KISAO_0000378 "http://identifiers.org/isbn/978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000378 "implicit Gaussian second order Runge-Kutta method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000378 "The implicit midpoint rule is a second-order case of the more general implicit s-stage Runge-Kutta methods [http://identifiers.org/biomodels.kisao/KISAO_0000064 and (http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000240)]."@en)
SubClassOf(kisao:KISAO_0000378 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000378 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000378 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000378 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000378 DataHasValue(kisao:KISAO_0000275 "2"^^xsd:integer))

# Class: kisao:KISAO_0000379 (Bulirsch-Stoer algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000379 "2011-07-01"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000379 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000379 "Bulirsch-Stoer algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Bulirsch R. and Stoer J. (1966) Numerical treatment of ordinary differential equations by extrapolation methods, Numerische Mathematik, Volume 8, Number 1, 1-13."@en) rdfs:seeAlso kisao:KISAO_0000379 "http://identifiers.org/doi/10.1007/BF02165234"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000379 "GBS"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000379 "Gragg-Bulirsch-Stoer algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000379 "The Bulirsch-Stoer method is an adaptive method which uses Gragg's modified midpoint method [http://identifiers.org/biomodels.kisao/KISAO_0000382] to estimate the solution of an initial value problem for various step sizes. The estimates are fit to a \"diagonal\" rational function or a polynomial as a function of the step size and the limit as the step size tends to zero is taken as the final estimate."@en)
SubClassOf(kisao:KISAO_0000379 kisao:KISAO_0000380)
SubClassOf(kisao:KISAO_0000379 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000379 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000379 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000382))

# Class: kisao:KISAO_0000380 (Richardson extrapolation based method)

AnnotationAssertion(dc:created kisao:KISAO_0000380 "2011-07-01"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000380 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000380 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000380 "Richardson extrapolation based method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Richardson, L. F. (1911). The approximate arithmetical solution by finite differences of physical problems including differential equations, with an application to the stresses in a masonry dam. Philosophical Transactions of the Royal Society of London, Series A 210 (459-470): 307-357."@en) rdfs:seeAlso kisao:KISAO_0000380 "http://identifiers.org/doi/10.1098/rsta.1911.0009"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000380 "A method based on ideas of Richardson extrapolation, which is a process for obtaining increased accuracy in a discretized approximation by extrapolating results from coarse discretizations to an arbitrarily fine one."@en)
SubClassOf(kisao:KISAO_0000380 kisao:KISAO_0000377)

# Class: kisao:KISAO_0000381 (midpoint method)

AnnotationAssertion(dc:created kisao:KISAO_0000381 "2011-07-01"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000381 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000381 "midpoint method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag."@en) rdfs:seeAlso kisao:KISAO_0000381 "http://identifiers.org/isbn/978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000381 "The midpoint method is an explicit method for approximating the solution of the initial value problem y' = f(x,y);  y(x0) = y0 at x for a given step size h. For the midpoint method the derivative of y(x) is approximated by the symmetric difference y'(x) = ( y(x+h) - y(x-h) ) / 2h + O(h2)."@en)
SubClassOf(kisao:KISAO_0000381 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000381 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000381 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000381 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000381 DataHasValue(kisao:KISAO_0000275 "2"^^xsd:integer))

# Class: kisao:KISAO_0000382 (modified midpoint method)

AnnotationAssertion(dc:created kisao:KISAO_0000382 "2011-07-01"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000382 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000382 "modified midpoint method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Press WH, Teukolsky SA, Vetterling WT, Flannery BP. Numerical Recipes in Fortran 77. Cambridge University Press (2001)."@en) rdfs:seeAlso kisao:KISAO_0000382 "http://identifiers.org/isbn/052143064X"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000382 "Gragg's method"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000382 "Gragg's modified midpoint method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000382 "The modified midpoint method is globally a second order method for approximating the solution of the initial value problem y' = f(x, y), y(x0) = y0, which advances a vector of dependent variables y(x) from a point x to a point x + H by a sequence of n substeps each of size h, h = H/n.
"@en)
SubClassOf(kisao:KISAO_0000382 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000382 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000382 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239))
SubClassOf(kisao:KISAO_0000382 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))

# Class: kisao:KISAO_0000383 (Bader-Deuflhard method)

AnnotationAssertion(dc:created kisao:KISAO_0000383 "2011-07-01"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000383 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000383 "GSL"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000383 "Bader-Deuflhard method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Bader, G. and Deuflhard, P. \"A Semi-Implicit Mid-Point Rule for Stiff Systems of Ordinary Differential Equations.\" Numer. Math. 41, 373-398, 1983."@en) rdfs:seeAlso kisao:KISAO_0000383 "http://identifiers.org/doi/10.1007/BF01418331"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000383 "The Bader-Deuflhard method is an extrapolation method based on a semi-implicit discretization [http://identifiers.org/biomodels.kisao/KISAO_0000387]. It is a generalization of the Bulirsch-Stoer algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000379] for solving ordinary differential equations."@en)
SubClassOf(kisao:KISAO_0000383 kisao:KISAO_0000380)
SubClassOf(kisao:KISAO_0000383 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000383 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000384))
SubClassOf(kisao:KISAO_0000383 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000379))

# Class: kisao:KISAO_0000384 (semi-implicit midpoint rule)

AnnotationAssertion(dc:created kisao:KISAO_0000384 "2011-07-01"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000384 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000384 "semi-implicit midpoint rule"@en)
AnnotationAssertion(Annotation(rdfs:comment "Bader, G. and Deuflhard, P. \"A Semi-Implicit Mid-Point Rule for Stiff Systems of Ordinary Differential Equations.\" Numer. Math. 41, 373-398, 1983."@en) rdfs:seeAlso kisao:KISAO_0000384 "http://identifiers.org/doi/10.1007/BF01418331"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000384 "A semi-implicit version of the midpoint method that has an even error series [http://identifiers.org/biomodels.kisao/KISAO_0000381]."@en)
SubClassOf(kisao:KISAO_0000384 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000384 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000384 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
SubClassOf(kisao:KISAO_0000384 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))

# Class: kisao:KISAO_0000386 (scaled preconditioned generalized minimal residual method)

AnnotationAssertion(dc:created kisao:KISAO_0000386 "2011-07-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000386 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000386 "scaled preconditioned generalized minimal residual method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Peter N. Brown, Alan C. Hindmarsh, and Linda R. Petzold. 1994. Using Krylov methods in the solution of large-scale differential-algebraic systems. SIAM J. Sci. Comput. 15, 6 (November 1994), 1467-1488."@en) rdfs:seeAlso kisao:KISAO_0000386 "http://identifiers.org/doi/10.1137/0915088"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000386 "SPGMR"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000386 "A scaled preconditioned version of 'generalized minimal residual algorithm' [http://identifiers.org/biomodels.kisao/KISAO_0000353]. For linear system Ax = b a preconditioner matrix P that approximates A is sought, for which linear system Px = b can be solved easily. Preconditioning is applied on the left only. Scaling is done using diagonal matrix D whose diagonal elements are weights w^i = rtol|y^i| +atol^i, where rtol is 'relative tolerance' [http://identifiers.org/biomodels.kisao/KISAO_0000209] and atol is 'absolute tolerance' [http://identifiers.org/biomodels.kisao/KISAO_0000211]."@en)
SubClassOf(kisao:KISAO_0000386 kisao:KISAO_0000353)
SubClassOf(kisao:KISAO_0000386 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000397))

# Class: kisao:KISAO_0000388 (minimal residual method)

AnnotationAssertion(dc:created kisao:KISAO_0000388 "2011-07-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000388 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000388 "minimal residual method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Paige C.C., Saunders M.A. Solution of sparse indefinite systems of linear equations, SIAM Journal on Numerical Analysis (1975) Volume: 12, Issue: 4, Publisher: SIAM, Pages: 617-629."@en) rdfs:seeAlso kisao:KISAO_0000388 "http://identifiers.org/doi/10.1137/0712047"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000388 "MINRES"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000388 "The 'minimal residual method' is an algorithm for the numerical solution of indefinite symmertic systems of linear equations."@en)
SubClassOf(kisao:KISAO_0000388 kisao:KISAO_0000354)
SubClassOf(kisao:KISAO_0000388 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000404))

# Class: kisao:KISAO_0000389 (quasi-minimal residual method)

AnnotationAssertion(dc:created kisao:KISAO_0000389 "2011-07-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000389 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000389 "quasi-minimal residual method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Roland W. Freund and Noël M. Nachtigal. QMR: a quasi-minimal residual method for non-Hermitian linear systems. NUMERISCHE MATHEMATIK Volume 60, Number 1, 315-339.
"@en) rdfs:seeAlso kisao:KISAO_0000389 "http://identifiers.org/doi/10.1007/BF01385726"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000389 "QMR"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000389 "The QMR algorithm is a robust iterative solver for general nonsingular non-Hermitian linear systems. The method uses a robust implementation of the look-ahead Lanczos algorithm to generate basis vectors for the Krylov subspaces Kn(r0, A). The QMR iterates are characterized by a quasi-minimal residual property over Kn(r0, A)."@en)
SubClassOf(kisao:KISAO_0000389 kisao:KISAO_0000393)

# Class: kisao:KISAO_0000392 (biconjugate gradient stabilized method)

AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000392 "CVODE"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000392 "biconjugate gradient stabilized method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Van der Vorst, H. A. (1992). Bi-CGSTAB: A Fast and Smoothly Converging Variant of Bi-CG for the Solution of Nonsymmetric Linear Systems. SIAM Journal on Scientific and Statistical Computing 13: 631-644."@en) rdfs:seeAlso kisao:KISAO_0000392 "http://identifiers.org/doi/10.1137/0913035"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000392 "Bi-CGSTAB"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000392 "BiCGSTAB"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000392 "An iterative method for the numerical solution of nonsymmetric linear systems. It is a variant of the biconjugate gradient method (BiCG) [http://identifiers.org/biomodels.kisao/KISAO_0000358] and has faster and smoother convergence than the original BiCG."@en)
SubClassOf(kisao:KISAO_0000392 kisao:KISAO_0000395)
DisjointClasses(kisao:KISAO_0000392 kisao:KISAO_0000393)

# Class: kisao:KISAO_0000393 (ingenious conjugate gradients-squared method)

AnnotationAssertion(dc:created kisao:KISAO_0000393 "2011-07-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000393 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000393 "ingenious conjugate gradients-squared method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Peter Sonneveld. 1989. CGS, a fast Lanczos-type solver for nonsymmetric linear systems. SIAM J. Sci. Stat. Comput. 10, 1 (January 1989), 36-52."@en) rdfs:seeAlso kisao:KISAO_0000393 "http://identifiers.org/doi/10.1137/0910004"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000393 "CGS"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000393 "A Lanczos-type method for nonsymmetric sparse linear systems. The method is based on a polynomial variant of the conjugate gradients algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000357]. Although related to the so-called bi-conjugate gradients (Bi-CG) algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000358], it does not involve adjoint matrix-vector multiplications, and the expected convergence rate is about twice that of the Bi-CG algorithm."@en)
SubClassOf(kisao:KISAO_0000393 kisao:KISAO_0000395)

# Class: kisao:KISAO_0000394 (quasi-minimal residual variant of biconjugate gradient stabilized method)

AnnotationAssertion(dc:created kisao:KISAO_0000394 "2011-07-19"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000394 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000394 "quasi-minimal residual variant of biconjugate gradient stabilized method"@en)
AnnotationAssertion(Annotation(rdfs:comment "T. F. Chan, E. Gallopoulos, V. Simoncini, T. Szeto, and C. H. Tong. 1994. A quasi-minimal residual variant of the Bi-CGSTAB algorithm for nonsymmetric systems. SIAM J. Sci. Comput. 15, 2 (March 1994), 338-347."@en) rdfs:seeAlso kisao:KISAO_0000394 "http://identifiers.org/doi/10.1137/0915023"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000394 "QMRCGSTAB"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000394 "QMRCGSTAB is a quasi-minimal residual (QMR) variant of the Bi-CGSTAB algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000394] of van der Vorst for solving nonsymmetric linear systems. The motivation for the QMR variant is to obtain smoother convergence behavior of the underlying method.
"@en)
SubClassOf(kisao:KISAO_0000394 kisao:KISAO_0000392)

# Class: kisao:KISAO_0000395 (improved biconjugate gradient method)

AnnotationAssertion(dc:created kisao:KISAO_0000395 "2011-07-19"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000395 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000395 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000395 "improved biconjugate gradient method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000395 "An 'improved biconjugate gradient method' branch contains algorithms which can be viewed as improvements over some of drawbacks of BCG [http://identifiers.org/biomodels.kisao/KISAO_0000358], such as (1) the need for matrix-vector multiplications with A^T (which can be inconvenient as well as doubling the number of matrix-vector multiplications compared to CG [http://identifiers.org/biomodels.kisao/KISAO_0000357] for each increase in the degree of the underlying Krylov subspace), (2) the possibility of breakdowns and (3) erratic convergence behavior.
"@en)
SubClassOf(kisao:KISAO_0000395 kisao:KISAO_0000354)
SubClassOf(kisao:KISAO_0000395 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000358))

# Class: kisao:KISAO_0000396 (transpose-free quasi-minimal residual algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000396 "2011-07-19"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000396 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000396 "CVODE"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000396 "transpose-free quasi-minimal residual algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Roland W. Freund. 1993. A transpose-free quasi-minimal residual algorithm for non-Hermitian linear systems. SIAM J. Sci. Comput. 14, 2 (March 1993), 470-482."@en) rdfs:seeAlso kisao:KISAO_0000396 "http://identifiers.org/doi/10.1137/0914029"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000396 "TFQMR"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000396 "A version of CGS [http://identifiers.org/biomodels.kisao/KISAO_0000393] which 'quasi-minimizes' the residual in the space spanned by the vectors generated by the CGS iteration.
"@en)
SubClassOf(kisao:KISAO_0000396 kisao:KISAO_0000389)

# Class: kisao:KISAO_0000397 (preconditioning technique)

AnnotationAssertion(dc:created kisao:KISAO_0000397 "2011-07-19"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000397 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000397 "preconditioning technique"@en)
AnnotationAssertion(Annotation(rdfs:comment "Saad, Yousef (2003). Iterative methods for sparse linear systems (2nd ed.). SIAM."@en) rdfs:seeAlso kisao:KISAO_0000397 "http://identifiers.org/isbn/0898715342"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000397 "Preconditioning is simply a means of transforming the original linear system into one which has the same solution, but which is likely to be easier to solve with an iterative solver."@en)
SubClassOf(kisao:KISAO_0000397 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000397 ObjectSomeValuesFrom(kisao:KISAO_0000399 kisao:KISAO_0000398))

# Class: kisao:KISAO_0000398 (iterative method for solving a system of linear equations)

AnnotationAssertion(dc:created kisao:KISAO_0000398 "2011-07-19"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000398 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000398 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000398 "iterative method for solving a system of linear equations"@en)
AnnotationAssertion(Annotation(rdfs:comment "Saad, Yousef (2003). Iterative methods for sparse linear systems (2nd ed.). SIAM."@en) rdfs:seeAlso kisao:KISAO_0000398 "http://identifiers.org/isbn/0898715342"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000398 kisao:KISAO_0000624)
SubClassOf(kisao:KISAO_0000398 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))

# Class: kisao:KISAO_0000403 (homogeneousness of equation)

AnnotationAssertion(dc:created kisao:KISAO_0000403 "2011-07-19"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000403 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000403 "homogeneousness of equation"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000403 "Homogeneous equations are of the form Ly = 0, where the differential operator L is a linear operator and y is the unknown function."@en)
SubClassOf(kisao:KISAO_0000403 kisao:KISAO_0000376)

# Class: kisao:KISAO_0000404 (symmetricity of matrix)

AnnotationAssertion(dc:created kisao:KISAO_0000404 "2011-07-19"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000404 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000404 "symmetricity of matrix"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000404 "In linear algebra, a symmetric matrix is a square matrix that is equal to its transpose."@en)
SubClassOf(kisao:KISAO_0000404 kisao:KISAO_0000370)

# Class: kisao:KISAO_0000405 (type of differential equation)

AnnotationAssertion(dc:created kisao:KISAO_0000405 "2011-07-19"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000405 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000405 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000405 "type of differential equation"@en)
SubClassOf(kisao:KISAO_0000405 kisao:KISAO_0000370)

# Class: kisao:KISAO_0000407 (steady state method)

AnnotationAssertion(dc:created kisao:KISAO_0000407 "2012-01-17"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000407 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000407 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000407 "Requested by Frank T. Bergmann on Sunday, November 27, 2011 4:45:30 PM."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000407 "steady state method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000407 "A method looking for a steady state of a dynamic system."@en)
SubClassOf(kisao:KISAO_0000407 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000407 kisao:KISAO_0000622)
SubClassOf(kisao:KISAO_0000407 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))

# Class: kisao:KISAO_0000408 (Newton-type method)

AnnotationAssertion(dc:created kisao:KISAO_0000408 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000408 "AZ"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000408 "Requested by Frank T. Bergmann on Sunday, November 27, 2011 4:45:30 PM."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000408 "Newton-type method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Deuflhard, P. Newton Methods for Nonlinear Problems: Affine Invariance and Adaptive Algorithms, Springer Series in Computational Mathematics, Vol. 35, 1st ed. 2004."@en) rdfs:seeAlso kisao:KISAO_0000408 "http://identifiers.org/isbn/9783540210993"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000408 "A method which attacks the solution of a nonlinear problem F(x) = 0 by solving a sequence of liner problems of the same kind.
The solution of the system F(x)=0 can be interpreted as a steady state of a dynamic system x'(t)=F(x(t)). The Newton approach will only work if the fixed point [http://identifiers.org/biomodels.teddy/TEDDY_0000086] of the dinamic system is attractive [http://identifiers.org/biomodels.teddy/TEDDY_0000094]."@en)
SubClassOf(kisao:KISAO_0000408 kisao:KISAO_0000631)
SubClassOf(kisao:KISAO_0000408 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000209))
SubClassOf(kisao:KISAO_0000408 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000211))
SubClassOf(kisao:KISAO_0000408 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000415))

# Class: kisao:KISAO_0000409 (ordinary Newton method)

AnnotationAssertion(dc:created kisao:KISAO_0000409 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000409 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000409 "ordinary Newton method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Deuflhard, P. Newton Methods for Nonlinear Problems: Affine Invariance and Adaptive Algorithms, Springer Series in Computational Mathematics, Vol. 35, 1st ed. 2004."@en) rdfs:seeAlso kisao:KISAO_0000409 "http://identifiers.org/isbn/9783540210993"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000409 "A 'Newton-type method' [http://identifiers.org/biomodels.kisao/KISAO_0000408] which solves the general nonlinear problem F(x)=0 by applying successive linearization F'(x[k])deltax[k]=-F(x[k]), x[k+1]=x[k]+deltax[k], k=0,1,..."@en)
SubClassOf(kisao:KISAO_0000409 kisao:KISAO_0000408)

# Class: kisao:KISAO_0000410 (simlified Newton method)

AnnotationAssertion(dc:created kisao:KISAO_0000410 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000410 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000410 "simlified Newton method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Deuflhard, P. Newton Methods for Nonlinear Problems: Affine Invariance and Adaptive Algorithms, Springer Series in Computational Mathematics, Vol. 35, 1st ed. 2004."@en) rdfs:seeAlso kisao:KISAO_0000410 "http://identifiers.org/isbn/9783540210993"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000410 "A 'Newton-type method' [http://identifiers.org/biomodels.kisao/KISAO_0000408] which is characterized by keeping the initial derivative throughout the whole iteration: F'(x[0])deltax[k]=-F(x[k]), x[k+1]=x[k]+deltax[k], k=0,1,..."@en)
SubClassOf(kisao:KISAO_0000410 kisao:KISAO_0000408)

# Class: kisao:KISAO_0000411 (Newton-like method)

AnnotationAssertion(dc:created kisao:KISAO_0000411 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000411 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000411 "Newton-like method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Deuflhard, P. Newton Methods for Nonlinear Problems: Affine Invariance and Adaptive Algorithms, Springer Series in Computational Mathematics, Vol. 35, 1st ed. 2004."@en) rdfs:seeAlso kisao:KISAO_0000411 "http://identifiers.org/isbn/9783540210993"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000411 "A 'Newton-type method' [http://identifiers.org/biomodels.kisao/KISAO_0000408] which is characterized by the fact that, in finite dimension, the Jacodian matrices are either replaced by some fixed 'close by' Jacobian F'(z) with z not equal to the initial guess x[0], or by some approximation so that: M'(x[0])deltax[k]=-F(x[k]), x[k+1]=x[k]+deltax[k], k=0,1,..."@en)
SubClassOf(kisao:KISAO_0000411 kisao:KISAO_0000408)

# Class: kisao:KISAO_0000412 (inexact Newton method)

AnnotationAssertion(dc:created kisao:KISAO_0000412 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000412 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000412 "inexact Newton method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Deuflhard, P. Newton Methods for Nonlinear Problems: Affine Invariance and Adaptive Algorithms, Springer Series in Computational Mathematics, Vol. 35, 1st ed. 2004."@en) rdfs:seeAlso kisao:KISAO_0000412 "http://identifiers.org/isbn/9783540210993"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000412 "iterative Newton method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000412 "truncated Newton method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000412 "For extremely large scale nonlinear problems the arising linear systems for the Newton corrections can no longer be solved directly ('exactly'), but must be solved iterativly ('inexactly) - which gives the name inexact Newton methods. The whole scheme then consists of an inner iteration (at Newton step k): 
F'(x[k])deltaxi[k]=-F(x[k])+ri[k], k=0,1,...
xi[k+1]=x[k]+deltaxi[k], i=0,1,..,imax[k]
in terms of residuals ri[k] and an outer iteration where, given x[0], the iterates are defined as x[k+1]=xi[k+1] for i=imax[k], k=0,1,..."@en)
SubClassOf(kisao:KISAO_0000412 kisao:KISAO_0000408)
SubClassOf(kisao:KISAO_0000412 ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(kisao:KISAO_0000000 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))))

# Class: kisao:KISAO_0000413 (exact Newton method)

AnnotationAssertion(dc:created kisao:KISAO_0000413 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000413 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000413 "exact Newton method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Deuflhard, P. Newton Methods for Nonlinear Problems: Affine Invariance and Adaptive Algorithms, Springer Series in Computational Mathematics, Vol. 35, 1st ed. 2004."@en) rdfs:seeAlso kisao:KISAO_0000413 "http://identifiers.org/isbn/9783540210993"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000413 "direct Newton method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000413 "Any of the finite dimensional Newton-type methods [http://identifiers.org/biomodels.kisao/KISAO_0000408] requires the numerical solution of the linear equations F'(x[k])deltax[k]=-F(x[k]). Whenever direct elimination methods are applicable, we speak of exact Newton methods."@en)
SubClassOf(kisao:KISAO_0000413 kisao:KISAO_0000408)
SubClassOf(kisao:KISAO_0000413 ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(kisao:KISAO_0000000 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))))

# Class: kisao:KISAO_0000415 (maximum number of steps)

AnnotationAssertion(dc:created kisao:KISAO_0000415 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000415 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000415 "maximum number of steps"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000415 "maximum steps"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000415 "The limit on number of internal steps before an output point."@en)
SubClassOf(kisao:KISAO_0000415 kisao:KISAO_0000244)
SubClassOf(kisao:KISAO_0000415 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000408))
SubClassOf(kisao:KISAO_0000415 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000416 (partial least squares regression method)

AnnotationAssertion(dc:created kisao:KISAO_0000416 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000416 "AZ"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000416 "Requested by Kristin Tøndel on Thursday, October 13, 2011 10:46:04 AM."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000416 "partial least squares regression method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Wold S, Martens H, Wold H (1983) The multivariate calibration method in chemistry solved by the PLS method. In: Lecture notes in Mathematics, Matrix Pencils. Heidelberg: Springer-Verlag. pp. 286-293."@en) rdfs:seeAlso kisao:KISAO_0000416 "http://identifiers.org/biomodels.kisao/10.1007/BFb0062108"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000416 "PLSR"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000416 "PLSR method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000416 "Multivariate regression method based on estimated latent variables. Related to Principal Component Analysis (PCA) and Principal Component Regression (PCR)."@en)
SubClassOf(kisao:KISAO_0000416 kisao:KISAO_0000423)
SubClassOf(kisao:KISAO_0000416 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000420))
SubClassOf(kisao:KISAO_0000416 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000421))

# Class: kisao:KISAO_0000417 (hierarchical cluster-based partial least squares regression method)

AnnotationAssertion(dc:created kisao:KISAO_0000417 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000417 "AZ"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000417 "Requested by Kristin Tøndel on Thursday, October 13, 2011 11:13:17 AM."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000417 "hierarchical cluster-based partial least squares regression method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Tøndel K, Indahl UG, Gjuvsland AB, Vik JO, Hunter P, et al. (2011) Hierarchical Cluster-based Partial Least Squares Regression is an efficient tool for metamodelling of nonlinear dynamic models. BMC Systems Biology 5: 90."@en) rdfs:seeAlso kisao:KISAO_0000417 "http://identifiers.org/doi/10.1186/1752-0509-5-90"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000417 "HC-PLSR"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000417 "Multivariate regression method based on separating the observations into clusters and generating Partial Least Squares Regression (PLSR) [http://identifiers.org/biomodels.kisao/KISAO_0000416] models within each cluster. This local regression analysis is suitable for very non-linear systems. PLSR is a regression method based on estimated latent variables, related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).
Hierarchical cluster-based partial least squares regression method uses fuzzy C-means clustering, PLSR and Linear Discriminant Analysis (LDA), Quadratic Discriminant Analysis (QDA) or Naive Bayes for classification of new observations to be predicted."@en)
SubClassOf(kisao:KISAO_0000417 kisao:KISAO_0000423)
SubClassOf(kisao:KISAO_0000417 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000322))
SubClassOf(kisao:KISAO_0000417 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000420))
SubClassOf(kisao:KISAO_0000417 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000424))
SubClassOf(kisao:KISAO_0000417 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000425))
SubClassOf(kisao:KISAO_0000417 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000416))
SubClassOf(kisao:KISAO_0000417 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000428))

# Class: kisao:KISAO_0000418 (N-way partial least squares regression method)

AnnotationAssertion(dc:created kisao:KISAO_0000418 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000418 "AZ"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000418 "Requested by Kristin Tøndel on Thursday, October 13, 2011 11:33:06 AM."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000418 "N-way partial least squares regression method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Bro R (1996) Multiway calibration. Multilinear PLS. J. Chemometrics 10: 47-6."@en) rdfs:seeAlso kisao:KISAO_0000418 "http://identifiers.org/doi/10.1002/(SICI)1099-128X(199601)10:1<47::AID-CEM400>3.0.CO;2-C"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "N-way toolbox website"@en) rdfs:seeAlso kisao:KISAO_0000418 "http://www.models.life.ku.dk/nwaytoolbox"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000418 "N-PLS"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000418 "N-way PLSR"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000418 "N-way partial least squares method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000418 "Multivariate regression method that can be used on N-way data. Based on Partial Least Squares Regression (PLSR) [http://identifiers.org/biomodels.kisao/KISAO_0000416], which is a regression method based on estimated latent variables. PLSR is related to Principal Component Analysis (PCA) and Principal Component Regression (PCR)."@en)
SubClassOf(kisao:KISAO_0000418 kisao:KISAO_0000423)
SubClassOf(kisao:KISAO_0000418 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000422))

# Class: kisao:KISAO_0000419 (metamodelling method)

AnnotationAssertion(dc:created kisao:KISAO_0000419 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000419 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000419 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000419 "metamodelling method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Tøndel K, Indahl UG, Gjuvsland AB, Vik JO, Hunter P, et al. (2011) Hierarchical Cluster-based Partial Least Squares Regression is an efficient tool for metamodelling of nonlinear dynamic models. BMC Systems Biology 5: 90."@en) rdfs:seeAlso kisao:KISAO_0000419 "http://identifiers.org/doi/10.1186/1752-0509-5-90"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000419 "Deterministic dynamic models of complex biological systems contain a large number of parameters and state variables, related through nonlinear differential equations with various types of feedback. A metamodel of such a dynamic model is a statistical approximation model that maps variation in parameters and initial conditions (inputs) to variation in features of the trajectories of the state variables (outputs) throughout the entire biologically relevant input space."@en)
SubClassOf(kisao:KISAO_0000419 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000419 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))

# Class: kisao:KISAO_0000420 (number of partial least squares components)

AnnotationAssertion(dc:created kisao:KISAO_0000420 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000420 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000420 "number of partial least squares components"@en)
AnnotationAssertion(Annotation(rdfs:comment "Wold S, Martens H, Wold H (1983) The multivariate calibration method in chemistry solved by the PLS method. In: Lecture notes in Mathematics, Matrix Pencils. Heidelberg: Springer-Verlag. pp. 286-293."@en) rdfs:seeAlso kisao:KISAO_0000420 "http://identifiers.org/biomodels.kisao/10.1007/BFb0062108"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000420 "Parameter used by 'partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000416] describing number of PLS components to include in the regression analysis."@en)
SubClassOf(kisao:KISAO_0000420 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000420 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000423))
SubClassOf(kisao:KISAO_0000420 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000421 (type of validation)

AnnotationAssertion(dc:created kisao:KISAO_0000421 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000421 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000421 "type of validation"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000421 "Parameter of 'partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000416] describing how validation is performed. Possible values include cross-validation and test set validation."@en)
SubClassOf(kisao:KISAO_0000421 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000421 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000423))

# Class: kisao:KISAO_0000422 (number of N-way partial least squares regression factors)

AnnotationAssertion(dc:created kisao:KISAO_0000422 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000422 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000422 "number of N-way partial least squares regression factors"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000422 "number of factors"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000422 "Parameter of 'N-way partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000369] describing the number of factors to compute."@en)
SubClassOf(kisao:KISAO_0000422 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000422 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000418))
SubClassOf(kisao:KISAO_0000422 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000423 (partial least squares regression-like method)

AnnotationAssertion(dc:created kisao:KISAO_0000423 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000423 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000423 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000423 "partial least squares regression-like method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000423 "Method for building regression models between independent and dependent variables."@en)
SubClassOf(kisao:KISAO_0000423 kisao:KISAO_0000419)
SubClassOf(kisao:KISAO_0000423 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000421))

# Class: kisao:KISAO_0000424 (mean-centring of variables)

AnnotationAssertion(dc:created kisao:KISAO_0000424 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000424 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000424 "mean-centring of variables"@en)
AnnotationAssertion(Annotation(rdfs:comment "Tøndel K, Indahl UG, Gjuvsland AB, Vik JO, Hunter P, et al. (2011) Hierarchical Cluster-based Partial Least Squares Regression is an efficient tool for metamodelling of nonlinear dynamic models. BMC Systems Biology 5: 90."@en) rdfs:seeAlso kisao:KISAO_0000424 "http://identifiers.org/doi/10.1186/1752-0509-5-90"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000424 "A boolean parameter of the 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417] specifying whether the variables were mean-centred prior to the regression analysis."@en)
SubClassOf(kisao:KISAO_0000424 kisao:KISAO_0000430)
SubClassOf(kisao:KISAO_0000424 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000423))
SubClassOf(kisao:KISAO_0000424 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:boolean))
DisjointClasses(kisao:KISAO_0000424 kisao:KISAO_0000425)

# Class: kisao:KISAO_0000425 (standardising of variables)

AnnotationAssertion(dc:created kisao:KISAO_0000425 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000425 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000425 "standardising of variables"@en)
AnnotationAssertion(Annotation(rdfs:comment "Tøndel K, Indahl UG, Gjuvsland AB, Vik JO, Hunter P, et al. (2011) Hierarchical Cluster-based Partial Least Squares Regression is an efficient tool for metamodelling of nonlinear dynamic models. BMC Systems Biology 5: 90."@en) rdfs:seeAlso kisao:KISAO_0000425 "http://identifiers.org/doi/10.1186/1752-0509-5-90"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000425 "A boolean parameter of the 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417] specifying whether the variables were standardised (divided by their standard deviations) prior to the regression analysis."@en)
SubClassOf(kisao:KISAO_0000425 kisao:KISAO_0000430)
SubClassOf(kisao:KISAO_0000425 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000423))
SubClassOf(kisao:KISAO_0000425 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:boolean))

# Class: kisao:KISAO_0000427 (number of clusters)

AnnotationAssertion(dc:created kisao:KISAO_0000427 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000427 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000427 "number of clusters"@en)
AnnotationAssertion(Annotation(rdfs:comment "Tøndel K, Indahl UG, Gjuvsland AB, Vik JO, Hunter P, et al. (2011) Hierarchical Cluster-based Partial Least Squares Regression is an efficient tool for metamodelling of nonlinear dynamic models. BMC Systems Biology 5: 90."@en) rdfs:seeAlso kisao:KISAO_0000427 "http://identifiers.org/doi/10.1186/1752-0509-5-90"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000427 "Parameter specifying the number of clusters used by C-means algorithm."@en)
SubClassOf(kisao:KISAO_0000427 kisao:KISAO_0000429)
SubClassOf(kisao:KISAO_0000427 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
DisjointClasses(kisao:KISAO_0000427 kisao:KISAO_0000428)

# Class: kisao:KISAO_0000428 (matrix for clusterization)

AnnotationAssertion(dc:created kisao:KISAO_0000428 "2012-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000428 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000428 "matrix for clusterization"@en)
AnnotationAssertion(Annotation(rdfs:comment "Tøndel K, Indahl UG, Gjuvsland AB, Vik JO, Hunter P, et al. (2011) Hierarchical Cluster-based Partial Least Squares Regression is an efficient tool for metamodelling of nonlinear dynamic models. BMC Systems Biology 5: 90."@en) rdfs:seeAlso kisao:KISAO_0000428 "http://identifiers.org/doi/10.1186/1752-0509-5-90"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000428 "A matrix to do the clustering in 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417]."@en)
SubClassOf(kisao:KISAO_0000428 kisao:KISAO_0000429)
SubClassOf(kisao:KISAO_0000428 ObjectAllValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000417))

# Class: kisao:KISAO_0000429 (clusterization parameter)

AnnotationAssertion(dc:creator kisao:KISAO_0000429 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000429 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000429 "clusterization parameter"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000429 "Parameter used by algorithms performing clusterization."@en)
SubClassOf(kisao:KISAO_0000429 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000430 (variables preprocessing parameter)

AnnotationAssertion(dc:creator kisao:KISAO_0000430 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000430 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000430 "variables preprocessing parameter"@en)
SubClassOf(kisao:KISAO_0000430 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000432 (IDA-like method)

AnnotationAssertion(dc:created kisao:KISAO_0000432 "2012-05-24"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000432 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000432 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000432 "IDA-like method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh, A. C., et al., SUNDIALS: Suite of Nonlinear and Differential/Algebraic Equation Solvers, ACM Trans. Math. Softw., 31:363-396, 2005."@en) rdfs:seeAlso kisao:KISAO_0000432 "http://identifiers.org/doi/10.1145/1089014.1089020"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000432 "Solves real differential-algebraic systems in N-space, in the general form F(t,y,y')=0,  y(t0)=y0,  y'(t0)=y'0. At each step, a Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408] leads to linear systems Jx=b, which are solved by one of five methods - two direct (dense or band; serial version only) and three Krylov [http://identifiers.org/biomodels.kisao/KISAO_0000354] (GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000353], BiCGStab [http://identifiers.org/biomodels.kisao/KISAO_0000392], or TFQMR [http://identifiers.org/biomodels.kisao/KISAO_0000396])."@en)
SubClassOf(kisao:KISAO_0000432 kisao:KISAO_0000408)
SubClassOf(kisao:KISAO_0000432 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000467))

# Class: kisao:KISAO_0000433 (CVODE-like method)

AnnotationAssertion(dc:created kisao:KISAO_0000433 "2012-05-24"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000433 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000433 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000433 "CVODE-like method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hindmarsh, A. C., et al., SUNDIALS: Suite of Nonlinear and Differential/Algebraic Equation Solvers, ACM Trans. Math. Softw., 31:363-396, 2005."@en) rdfs:seeAlso kisao:KISAO_0000433 "http://identifiers.org/doi/10.1145/1089014.1089020"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000433 "Solves ODE initial value problems, in real N-space, written as y'=f(t,y),  y(t0)=y0. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] method and the backward differentiation formula [http://identifiers.org/biomodels.kisao/KISAO_0000288]."@en)
SubClassOf(kisao:KISAO_0000433 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000433 ObjectUnionOf(ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000280) ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000288)))
SubClassOf(kisao:KISAO_0000433 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))
SubClassOf(kisao:KISAO_0000433 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000467))
SubClassOf(kisao:KISAO_0000433 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000559))

# Class: kisao:KISAO_0000434 (Higham-Hall method)

AnnotationAssertion(dc:created kisao:KISAO_0000434 "2012-09-25"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000434 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000434 "Higham-Hall method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Higham, D.J. and Hall, G. (1990) Embedded Runge-Kutta formulae with stable equilibrium states. Journal of Computational and Applied Mathematics, 29 (1). pp. 25-33."@en) rdfs:seeAlso kisao:KISAO_0000434 "http://identifiers.org/doi/10.1016/0377-0427(90)90192-3"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000434 "RK5(4)7FEql"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000434 "The equilibrium theory of Hall and Higham (1988) can be used to determine whether a Runge-Kutta algorithm will perform smoothly when stability restricts the stepsize. Higham-Hall method is a fifth order embedded Runge-Kutta method [http://identifiers.org/biomodels.kisao/KISAO_0000302], which behaves smoothly with respect to the standard type of stepsize controllers."@en)
SubClassOf(kisao:KISAO_0000434 kisao:KISAO_0000435)

# Class: kisao:KISAO_0000435 (embedded Runge-Kutta 5(4) method)

AnnotationAssertion(dc:created kisao:KISAO_0000435 "2012-09-26"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000435 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000435 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000435 "embedded Runge-Kutta 5(4) method"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000435 "RK5(4)"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000435 "An embedded Runge-Kutta integrator of order 5(4)."@en)
EquivalentClasses(kisao:KISAO_0000435 ObjectIntersectionOf(kisao:KISAO_0000302 ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(kisao:KISAO_0000064 DataHasValue(kisao:KISAO_0000275 "4"^^xsd:integer))) ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(kisao:KISAO_0000064 DataHasValue(kisao:KISAO_0000275 "5"^^xsd:integer)))))
SubClassOf(kisao:KISAO_0000435 kisao:KISAO_0000302)

# Class: kisao:KISAO_0000436 (Dormand-Prince 8(5,3) method)

AnnotationAssertion(dc:created kisao:KISAO_0000436 "2012-09-26"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000436 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000436 "Dormand-Prince 8(5,3) method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hairer, Ernst; Nørsett, Syvert Paul; Wanner, Gerhard (1993), Solving ordinary differential equations I: Nonstiff problems (2nd ed.), Berlin: Springer Verlag"@en) rdfs:seeAlso kisao:KISAO_0000436 "http://identifiers.org/isbn/978-3-540-56670-0"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000436 "This method is based on an 8(6) method by Dormand and Prince (i.e. order 8 for the integration and order 6 for error estimation) modified by Hairer and Wanner to use a 5th order error estimator with 3rd order correction."@en)
SubClassOf(kisao:KISAO_0000436 kisao:KISAO_0000302)
SubClassOf(kisao:KISAO_0000436 ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(kisao:KISAO_0000064 DataHasValue(kisao:KISAO_0000275 "5"^^xsd:integer))))
SubClassOf(kisao:KISAO_0000436 ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(kisao:KISAO_0000064 DataHasValue(kisao:KISAO_0000275 "8"^^xsd:integer))))
SubClassOf(kisao:KISAO_0000436 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000538))
SubClassOf(kisao:KISAO_0000436 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000539))
SubClassOf(kisao:KISAO_0000436 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000540))
SubClassOf(kisao:KISAO_0000436 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000541))
SubClassOf(kisao:KISAO_0000436 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000559))

# Class: kisao:KISAO_0000437 (flux balance analysis)

AnnotationAssertion(dc:created kisao:KISAO_0000437 "2012-11-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000437 "AZ"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000437 "Requested by Frank T. Bergmann on Thursday, November 29, 2012 9:51:58 AM."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000437 "flux balance analysis"@en)
AnnotationAssertion(Annotation(rdfs:comment "Jeffrey D Orth, Ines Thiele and Bernhard O Palsson (2010) What is flux balance analysis? Nature Biotechnology 28, 245–248"@en) rdfs:seeAlso kisao:KISAO_0000437 "http://identifiers.org/doi/10.1038/nbt.1614"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000437 "FBA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000437 "Flux balance analysis is a mathematical approach for analyzing the flow of metabolites through a metabolic network."@en)
SubClassOf(kisao:KISAO_0000437 kisao:KISAO_0000407)
SubClassOf(kisao:KISAO_0000437 kisao:KISAO_0000622)

# Class: kisao:KISAO_0000447 (COAST)

AnnotationAssertion(dc:created kisao:KISAO_0000447 "2013-01-28"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000447 "AZ"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000447 "Requested by Mark Moeller on Friday, January 25, 2013 11:11:30 AM."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000447 "COAST"@en)
AnnotationAssertion(Annotation(rdfs:comment "Holger Wagner, Mark Moeller, and Klaus Prank (2006) COAST: Controllable approximative stochastic reaction algorithm. J. Chem. Phys. 125, 174104"@en) rdfs:seeAlso kisao:KISAO_0000447 "http://identifiers.org/pubmed/17100426"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000447 "controllable approximative stochastic reaction algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000447 "An approximative algorithm for stochastic simulations of chemical reaction systems based on three different modeling levels: for small numbers of particles an exact [http://identifiers.org/biomodels.kisao/KISAO_0000236] stochastic [http://identifiers.org/biomodels.kisao/KISAO_0000104] model; for intermediate numbers an approximative [http://identifiers.org/biomodels.kisao/KISAO_0000237], but computationally more efficient stochastic [http://identifiers.org/biomodels.kisao/KISAO_0000104] model based on discrete Gaussian distributions; and for large numbers the deterministic [http://identifiers.org/biomodels.kisao/KISAO_0000103] reaction kinetics. In every simulation time step, the subdivision of the reaction channels into the three different modeling levels is done automatically, where all approximations applied can be controlled by a single error parameter for which an appropriate value can easily be found."@en)
SubClassOf(kisao:KISAO_0000447 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000447 ObjectSomeValuesFrom(kisao:KISAO_0000246 ObjectIntersectionOf(kisao:KISAO_0000015 kisao:KISAO_0000039)))
SubClassOf(kisao:KISAO_0000447 ObjectSomeValuesFrom(kisao:KISAO_0000360 ObjectIntersectionOf(kisao:KISAO_0000000 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))))
SubClassOf(kisao:KISAO_0000447 ObjectExactCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000211))

# Class: kisao:KISAO_0000448 (logical model simulation method)

AnnotationAssertion(dc:created kisao:KISAO_0000448 "2013-01-28"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000448 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000448 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000448 "logical model simulation method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Daniel Machado et al. Modeling formalisms in Systems Biology. AMB Express 2011, 1:45"@en) rdfs:seeAlso kisao:KISAO_0000448 "http://www.identifiers.org/pubmed/22141422"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000448 "Qualitative (logical) models specify the evolution rules of their components. In each state a number of transitions are enabled. A 'logical model simulation method' guides the choice of the transitions processed at each step."@en)
SubClassOf(kisao:KISAO_0000448 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000448 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000105))

# Class: kisao:KISAO_0000449 (synchronous logical model simulation method)

AnnotationAssertion(dc:created kisao:KISAO_0000449 "2013-01-28"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000449 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000449 "synchronous logical model simulation method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000449 "Qualitative (logical) models specify the evolution rules of their components. In the case of a synchronous updating all enabled transitions are processed simultaneously. "@en)
SubClassOf(kisao:KISAO_0000449 kisao:KISAO_0000448)
SubClassOf(kisao:KISAO_0000449 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000449 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000493))
DisjointClasses(kisao:KISAO_0000449 kisao:KISAO_0000450)

# Class: kisao:KISAO_0000450 (asynchronous logical model simulation method)

AnnotationAssertion(dc:created kisao:KISAO_0000450 "2013-01-28"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000450 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000450 "asynchronous logical model simulation method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000450 "Qualitative (logical) models specify the evolution rules of their components. It the case of an asynchronous updating all enabled transitions are performed independently: a state has as many successors as the number of transitions enabled in this state. An 'asynchronous logical model simulation method' specifies a rule to guide the choice of a unique transition at each step (for example random)."@en)
SubClassOf(kisao:KISAO_0000450 kisao:KISAO_0000448)
SubClassOf(kisao:KISAO_0000450 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000450 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000492))
SubClassOf(kisao:KISAO_0000450 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000574))

# Class: kisao:KISAO_0000451 (type of updating policy)

AnnotationAssertion(dc:created kisao:KISAO_0000451 "2013-01-28"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000451 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000451 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000451 "type of updating policy"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000451 "A rule to guide the choice of a unique transition at each step used by an 'asynchronous logical model simulation method' [http://identifiers.org/biomodels.kisao/KISAO_0000450]."@en)
SubClassOf(kisao:KISAO_0000451 kisao:KISAO_0000097)

# Class: kisao:KISAO_0000452 (random updating policy)

AnnotationAssertion(dc:created kisao:KISAO_0000452 "2013-01-28"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000452 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000452 "random updating policy"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000452 "An updating policy that chooses a transition randomly."@en)
SubClassOf(kisao:KISAO_0000452 kisao:KISAO_0000451)
SubClassOf(kisao:KISAO_0000452 ObjectSomeValuesFrom(kisao:KISAO_0000268 ObjectIntersectionOf(kisao:KISAO_0000450 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))))
DisjointClasses(kisao:KISAO_0000452 kisao:KISAO_0000453)

# Class: kisao:KISAO_0000453 (ordered updating policy)

AnnotationAssertion(dc:created kisao:KISAO_0000453 "2013-01-28"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000453 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000453 "ordered updating policy"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000453 "An updating policy that chooses a transition in a definite way."@en)
SubClassOf(kisao:KISAO_0000453 kisao:KISAO_0000451)
SubClassOf(kisao:KISAO_0000453 ObjectSomeValuesFrom(kisao:KISAO_0000268 ObjectIntersectionOf(kisao:KISAO_0000450 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))))

# Class: kisao:KISAO_0000454 (constant updating policy)

AnnotationAssertion(dc:created kisao:KISAO_0000454 "2013-01-28"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000454 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000454 "constant updating policy"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000454 "An updating policy that chooses a transition in a constant way."@en)
SubClassOf(kisao:KISAO_0000454 kisao:KISAO_0000453)

# Class: kisao:KISAO_0000455 (prioritized updating policy)

AnnotationAssertion(dc:created kisao:KISAO_0000455 "2013-01-28"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000455 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000455 "prioritized updating policy"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000455 "An updating policy that chooses a transition in a prioritized way."@en)
SubClassOf(kisao:KISAO_0000455 kisao:KISAO_0000453)

# Class: kisao:KISAO_0000467 (maximum step size)

AnnotationAssertion(dc:created kisao:KISAO_0000467 "2013-07-05"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000467 "AZ"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000467 "Requested by Andrew Miller on Tuesday, June 4, 2013 2:33:51 AM."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000467 "maximum step size"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000467 "An upper limit, in the units of the bound variable over which a numerical integration is being performed, that an adaptive step size numerical integration algorithm should take."@en)
SubClassOf(kisao:KISAO_0000467 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000467 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000468 (maximal timestep method)

AnnotationAssertion(dc:created kisao:KISAO_0000468 "2014-04-25"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000468 "AZ"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000468 "Requested by Andrzej Kierzek on Thursday, April 24, 2014 12:40:35 PM"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000468 "Used to simulate systems involving reactions with propensities varying by many orders of magnitude."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000468 "maximal timestep method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Puchalka J, Kierzek AM. Bridging the gap between stochastic and deterministic regimes in the kinetic simulations of the biochemical reaction networks. Biophys J. 2004 Mar;86(3):1357-72.
"@en) rdfs:seeAlso kisao:KISAO_0000468 "http://identifiers.org/pubmed/14990466"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000468 "Hybrid simulation algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000352] combining Gibson and Bruck algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000027] with the Gillespie tau-leap method [http://www.biomodels.net/kisao/KISAO#KISAO_0000039]."@en)
SubClassOf(kisao:KISAO_0000468 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000468 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000468 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000469))
SubClassOf(kisao:KISAO_0000468 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000027))
SubClassOf(kisao:KISAO_0000468 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000039))

# Class: kisao:KISAO_0000469 (maximal timestep)

AnnotationAssertion(dc:created kisao:KISAO_0000469 "2014-04-25"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000469 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000469 "maximal timestep"@en)
AnnotationAssertion(Annotation(rdfs:comment "Puchalka J, Kierzek AM. Bridging the gap between stochastic and deterministic regimes in the kinetic simulations of the biochemical reaction networks. Biophys J. 2004 Mar;86(3):1357-72."@en) rdfs:seeAlso kisao:KISAO_0000469 "http://identifiers.org/pubmed/14990466"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000469 "Key parameter of the 'maximal timestep method' [http://www.biomodels.net/kisao/KISAO#KISAO_0000468]. If Gillespie [http://www.biomodels.net/kisao/KISAO#KISAO_0000027] waiting time is longer than maximal timestep, slow reaction is not fired and tau-leap [http://www.biomodels.net/kisao/KISAO#KISAO_0000039] step is executed for fast reactions. Otherwise, slow reaction is fired and tau-leap [http://www.biomodels.net/kisao/KISAO#KISAO_0000039] is executed with shorter time step."@en)
SubClassOf(kisao:KISAO_0000469 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000470 (optimization algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000470 "2015-04-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000470 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000470 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000470 "optimization algorithm"@en)
AnnotationAssertion(rdfs:seeAlso kisao:KISAO_0000470 "http://en.wikipedia.org/wiki/Mathematical_optimization#Optimization_algorithms"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Brinkhuis J, Tikhomirov V. Optimization: Insights and Applications
Princeton Series in Applied Mathematics (illustrated), Princeton University Press, 2005."@en) rdfs:seeAlso kisao:KISAO_0000470 "http://identifiers.org/isbn/0691102872"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000470 "optimization method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000470 "An optimization algorithm tries to find the minumum or maximum of an arbitrary function. It takes a function of one or several variables and determines the values for the variables so that the function value is optimal."@en)
SubClassOf(kisao:KISAO_0000470 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000470 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))

# Class: kisao:KISAO_0000471 (local optimization algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000471 "2015-04-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000471 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000471 "local optimization algorithm"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000471 "local optimiation method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000471 "A local optimization algorithm is an optimisation algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000470] that only finds a local optimum of a function. If several optima exist for the function, it usually depends on the starting values for the variables which optimum is found."@en)
SubClassOf(kisao:KISAO_0000471 kisao:KISAO_0000470)
DisjointClasses(kisao:KISAO_0000471 kisao:KISAO_0000472)

# Class: kisao:KISAO_0000472 (global optimization algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000472 "2015-04-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000472 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000472 "global optimization algorithm"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000472 "global optimization method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000472 "A global optimization algorithm is an optimization algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000470] that tries to find the global optimum of a function. If a function has several minima/maxima with in the allowed range of variable values, the global minimum/maximum is the one with the smallest/largest function value."@en)
SubClassOf(kisao:KISAO_0000472 kisao:KISAO_0000470)
SubClassOf(kisao:KISAO_0000472 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000488))

# Class: kisao:KISAO_0000473 (Bayesian inference algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000473 "2015-04-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000473 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000473 "Bayesian inference algorithm"@en)
AnnotationAssertion(rdfs:seeAlso kisao:KISAO_0000473 "http://en.wikipedia.org/wiki/Bayesian_inference"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "George E. P. Box, George C. Tiao. Bayesian Inference in Statistical Analysis, Volume 40 of Wiley Classics Library. John Wiley & Sons (reprint, revised), 2011."@en) rdfs:seeAlso kisao:KISAO_0000473 "http://identifiers.org/isbn/111803144X"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000473 "A bayesian inference algorithm calculates a posterior probability distribution from a prior probability distribution and some additional evidence in the form of a likelyhood function."@en)
SubClassOf(kisao:KISAO_0000473 kisao:KISAO_0000000)

# Class: kisao:KISAO_0000475 (integration method)

AnnotationAssertion(dc:created kisao:KISAO_0000475 "2015-09-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000475 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "OpenCOR"@end) kisao:isImplementedIn kisao:KISAO_0000475 "http://identifiers.org/biosimulators/opencor"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000475 "integration method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Garny A and Hunter PJ (2015) OpenCOR: a modular and interoperable approach to computational biology. Front. Physiol. 6:26"@en) rdfs:seeAlso kisao:KISAO_0000475 "http://identifiers.org/doi/10.3389/fphys.2015.00026"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000475 "the integration method used by the solver"@en)
SubClassOf(kisao:KISAO_0000475 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000476 (iteration type)

AnnotationAssertion(dc:created kisao:KISAO_0000476 "2015-09-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000476 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "OpenCOR"@end) kisao:isImplementedIn kisao:KISAO_0000476 "http://identifiers.org/biosimulators/opencor"^^xsd:anyURI)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000476 "Requested in https://sourceforge.net/p/kisao/feature-requests/12/"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000476 "iteration type"@en)
AnnotationAssertion(Annotation(rdfs:comment "Garny A and Hunter PJ (2015) OpenCOR: a modular and interoperable approach to computational biology. Front. Physiol. 6:26"@en) rdfs:seeAlso kisao:KISAO_0000476 "http://identifiers.org/doi/10.3389/fphys.2015.00026"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000476 "the type of iteration used by the solver"@en)
SubClassOf(kisao:KISAO_0000476 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000477 (linear solver)

AnnotationAssertion(dc:created kisao:KISAO_0000477 "2015-09-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000477 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "OpenCOR"@end) kisao:isImplementedIn kisao:KISAO_0000477 "http://identifiers.org/biosimulators/opencor"^^xsd:anyURI)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000477 "Requested in https://sourceforge.net/p/kisao/feature-requests/12/"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000477 "linear solver"@en)
AnnotationAssertion(Annotation(rdfs:comment "Garny A and Hunter PJ (2015) OpenCOR: a modular and interoperable approach to computational biology. Front. Physiol. 6:26"@en) rdfs:seeAlso kisao:KISAO_0000477 "http://identifiers.org/doi/10.3389/fphys.2015.00026"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000477 "the linear solver used by the solver during a Newton iteration"@en)
SubClassOf(kisao:KISAO_0000477 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000478 (preconditioner)

AnnotationAssertion(dc:created kisao:KISAO_0000478 "2015-09-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000478 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "OpenCOR"@end) kisao:isImplementedIn kisao:KISAO_0000478 "http://identifiers.org/biosimulators/opencor"^^xsd:anyURI)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000478 "Requested in https://sourceforge.net/p/kisao/feature-requests/12/"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000478 "preconditioner"@en)
AnnotationAssertion(Annotation(rdfs:comment "Garny A and Hunter PJ (2015) OpenCOR: a modular and interoperable approach to computational biology. Front. Physiol. 6:26"@en) rdfs:seeAlso kisao:KISAO_0000478 "http://identifiers.org/doi/10.3389/fphys.2015.00026"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000478 "the preconditioner, if any, used by the solver when using a GMRES, BiCGStab or TFQMR linear solver during a Newton iteration."@en)
SubClassOf(kisao:KISAO_0000478 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000479 (upper half-bandwidth)

AnnotationAssertion(dc:created kisao:KISAO_0000479 "2015-09-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000479 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "OpenCOR"@end) kisao:isImplementedIn kisao:KISAO_0000479 "http://identifiers.org/biosimulators/opencor"^^xsd:anyURI)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000479 "Requested in https://sourceforge.net/p/kisao/feature-requests/12/"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000479 "upper half-bandwidth"@en)
AnnotationAssertion(Annotation(rdfs:comment "Garny A and Hunter PJ (2015) OpenCOR: a modular and interoperable approach to computational biology. Front. Physiol. 6:26"@en) rdfs:seeAlso kisao:KISAO_0000479 "http://identifiers.org/doi/10.3389/fphys.2015.00026"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000479 "the upper half-bandwidth value used by the Banded linear solver or preconditioner (a value between 0 and n-1 with n the number of ODEs/DAEs in the model)."@en)
SubClassOf(kisao:KISAO_0000479 kisao:KISAO_0000482)
SubClassOf(kisao:KISAO_0000479 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))
DisjointClasses(kisao:KISAO_0000479 kisao:KISAO_0000480)

# Class: kisao:KISAO_0000480 (lower half-bandwidth)

AnnotationAssertion(dc:created kisao:KISAO_0000480 "2015-09-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000480 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "OpenCOR"@end) kisao:isImplementedIn kisao:KISAO_0000480 "http://identifiers.org/biosimulators/opencor"^^xsd:anyURI)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000480 "Requested in https://sourceforge.net/p/kisao/feature-requests/12/"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000480 "lower half-bandwidth"@en)
AnnotationAssertion(Annotation(rdfs:comment "Garny A and Hunter PJ (2015) OpenCOR: a modular and interoperable approach to computational biology. Front. Physiol. 6:26"@en) rdfs:seeAlso kisao:KISAO_0000480 "http://identifiers.org/doi/10.3389/fphys.2015.00026"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000480 "the lower half-bandwidth value used by the Banded linear solver or preconditioner (a value between 0 and n-1 with n the number of ODEs/DAEs in the model)."@en)
SubClassOf(kisao:KISAO_0000480 kisao:KISAO_0000482)
SubClassOf(kisao:KISAO_0000480 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000481 (interpolate solution)

AnnotationAssertion(dc:created kisao:KISAO_0000481 "2015-09-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000481 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "OpenCOR"@end) kisao:isImplementedIn kisao:KISAO_0000481 "http://identifiers.org/biosimulators/opencor"^^xsd:anyURI)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000481 "Requested in https://sourceforge.net/p/kisao/feature-requests/12/"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000481 "interpolate solution"@en)
AnnotationAssertion(Annotation(rdfs:comment "Garny A and Hunter PJ (2015) OpenCOR: a modular and interoperable approach to computational biology. Front. Physiol. 6:26"@en) rdfs:seeAlso kisao:KISAO_0000481 "http://identifiers.org/doi/10.3389/fphys.2015.00026"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000481 "whether the solver returns an interpolated solution."@en)
SubClassOf(kisao:KISAO_0000481 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000481 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:boolean))

# Class: kisao:KISAO_0000482 (half-bandwith parameter)

AnnotationAssertion(rdfs:label kisao:KISAO_0000482 "half-bandwith parameter"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000482 "the parameter related to the half-bandwidth value used by the Banded linear solver or preconditioner."@en)
SubClassOf(kisao:KISAO_0000482 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000483 (step size)

AnnotationAssertion(dc:created kisao:KISAO_0000483 "2015-09-10"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000483 "AZ"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000483 "Requested in https://sourceforge.net/p/kisao/feature-requests/13/"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000483 "step size"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000483 "the size of every step of the algorithm"@en)
SubClassOf(kisao:KISAO_0000483 kisao:KISAO_0000242)

# Class: kisao:KISAO_0000484 (maximum order)

AnnotationAssertion(dc:creator kisao:KISAO_0000484 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000484 "Roadrunner"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000484 "maximum order"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000484 "Maximum order of method. For example, in Roadrunner it can be used for two parameters that one can set for deterministic runs: 'maximum_bdf_order' and 'maximum_adams_order'."@en)
SubClassOf(kisao:KISAO_0000484 kisao:KISAO_0000594)
SubClassOf(kisao:KISAO_0000484 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000485 (minimum step size)

AnnotationAssertion(dc:creator kisao:KISAO_0000485 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000485 "minimum step size"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000485 "A lower limit, in the units of the bound variable over which a numerical integration is being performed, that a numerical integration algorithm with variable step size should take."@en)
SubClassOf(kisao:KISAO_0000485 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000485 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000486 (maximum iterations)

AnnotationAssertion(dc:creator kisao:KISAO_0000486 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000486 "maximum iterations"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000486 "iteration limit"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000486 "For algorithms that iterate to a solution (steady state finders in particular), a limit on the number of iterations that should be performed."@en)
SubClassOf(kisao:KISAO_0000486 kisao:KISAO_0000244)

# Class: kisao:KISAO_0000487 (minimum damping)

AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000487 "Roadrunner"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000487 "The damping factor is a variable for at least some steady state algorithms: roadrunner allows you to set the minimum value for this."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000487 "minimum damping"@en)
SubClassOf(kisao:KISAO_0000487 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000487 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000488 (seed)

AnnotationAssertion(rdfs:label kisao:KISAO_0000488 "seed"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000488 "random seed"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000488 "Random seed of a stochastic algorithm. Setting it allows one to reproduce their results while running the same algorithm on the same computer."@en)
SubClassOf(kisao:KISAO_0000488 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000488 ObjectSomeValuesFrom(kisao:KISAO_0000250 ObjectIntersectionOf(kisao:KISAO_0000000 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))))

# Class: kisao:KISAO_0000491 (discrete event simulation algorithm)

AnnotationAssertion(rdfs:label kisao:KISAO_0000491 "discrete event simulation algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "C.G. Cassandras & S. Lafortune \"Introduction to Discrete Event Systems\", Chapt 1 2nd Ed 2008. Springer"@en) rdfs:seeAlso kisao:KISAO_0000491 "http://identifiers.org/isbn/0387333320"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000491 "DES"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000491 "Discrete Event Simulation algorithm refers to the simulation of systems whose (countable) discrete states change over time and are event-driven."@en)
SubClassOf(kisao:KISAO_0000491 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000491 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000105))

# Class: kisao:KISAO_0000492 (asynchronous updating policy)

AnnotationAssertion(rdfs:label kisao:KISAO_0000492 "asynchronous updating policy"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000492 "An updating policy where all enabled transitions (events) occur independently. Thus a state has as many successors as the number of transitions enabled in this state."@en)
SubClassOf(kisao:KISAO_0000492 kisao:KISAO_0000451)
DisjointClasses(kisao:KISAO_0000492 kisao:KISAO_0000493)

# Class: kisao:KISAO_0000493 (synchronous updating policy)

AnnotationAssertion(rdfs:label kisao:KISAO_0000493 "synchronous updating policy"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000493 "An updating policy where all enabled transitions occur simultaneously. Thus a state will have at most one successor."@en)
SubClassOf(kisao:KISAO_0000493 kisao:KISAO_0000451)

# Class: kisao:KISAO_0000494 (fully asynchronous updating policy)

AnnotationAssertion(rdfs:label kisao:KISAO_0000494 "fully asynchronous updating policy"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000494 "An updating policy where all enabled transitions occur either independently or (partially) simultaneously. (i.e. considering all possible combinations of enabled transitions). Thus a state has as many successors as the number of combinations of transitions enabled in this state."@en)
SubClassOf(kisao:KISAO_0000494 kisao:KISAO_0000492)

# Class: kisao:KISAO_0000495 (random asynchronous updating policy)

AnnotationAssertion(rdfs:label kisao:KISAO_0000495 "random asynchronous updating policy"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000495 "An updating policy where a single transition is picked randomly from the set of transitions enabled in this state. Thus a state will have at most one successor."@en)
SubClassOf(kisao:KISAO_0000495 kisao:KISAO_0000452)
SubClassOf(kisao:KISAO_0000495 kisao:KISAO_0000492)

# Class: kisao:KISAO_0000496 (CVODES)

AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000496 "SUNDIALS"@en)
AnnotationAssertion(Annotation(rdfs:comment "AMICI"@end) kisao:isImplementedIn kisao:KISAO_0000496 "http://identifiers.org/biosimulators/amici"^^xsd:anyURI)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000496 "CVODES is a superset of CVODE [http://identifiers.org/biomodels.kisao/KISAO_0000019] and hence all options available to CVODE (with the exception of the FCVODE interface module) are also available for CVODES. Both integration methods (Adams-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] and BDF [http://identifiers.org/biomodels.kisao/KISAO_0000288]) and the corresponding nonlinear iteration methods, as well as all linear solver and preconditioner modules, are available for the integration of the original ODEs, the sensitivity systems, or the adjoint system."@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000496 "CVODES"@en)
AnnotationAssertion(rdfs:seeAlso kisao:KISAO_0000496 "http://computation.llnl.gov/projects/sundials/cvodes"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000496 "CVODES is a solver for stiff and nonstiff ODE systems (initial value problem) given in explicit form y’ = f(t,y,p) with sensitivity analysis capabilities (both forward and adjoint modes)."@en)
SubClassOf(kisao:KISAO_0000496 kisao:KISAO_0000433)
SubClassOf(kisao:KISAO_0000496 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000019))
SubClassOf(kisao:KISAO_0000496 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000497))
SubClassOf(kisao:KISAO_0000496 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000543))
SubClassOf(kisao:KISAO_0000496 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000555))
SubClassOf(kisao:KISAO_0000496 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000556))
SubClassOf(kisao:KISAO_0000496 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000557))
SubClassOf(kisao:KISAO_0000496 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000558))

# Class: kisao:KISAO_0000497 (KLU)

AnnotationAssertion(dc:created kisao:KISAO_0000497 "2017-01-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000497 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000497 "KLU"@en)
AnnotationAssertion(Annotation(rdfs:comment "Davis, Timothy A., and Ekanathan Palamadai Natarajan. \"Algorithm 907: KLU, a direct sparse solver for circuit simulation problems.\" ACM Transactions on Mathematical Software (TOMS) 37.3 (2010): 36."@en) rdfs:seeAlso kisao:KISAO_0000497 "http://identifiers.org/doi/10.1145/1824801.1824814"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000497 "\"Clark Kent\" LU factorization algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000497 "KLU is a software package and an algorithm for solving sparse unsymmetric linear systems of equations that arise in circuit simulation applications. It relies on a permutation to Block Triangular Form (BTF), several methods for finding a fill-reducing ordering (variants of approximate minimum degree and nested dissection), and Gilbert/Peierls’ sparse left-looking LU factorization algorithm to factorize each block. The package is written in C and includes a MATLAB interface."@en)
SubClassOf(kisao:KISAO_0000497 kisao:KISAO_0000000)

# Class: kisao:KISAO_0000498 (number of runs)

AnnotationAssertion(dc:created kisao:KISAO_0000498 "2017-07-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000498 "AZ"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000498 "Requested in https://sourceforge.net/p/kisao/feature-requests/31/"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000498 "number of runs"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000498 "The number of runs that a simulation should perform. Typically used to specify the number of runs for a stochastic simulation."@en)
SubClassOf(kisao:KISAO_0000498 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000499 (dynamic flux balance analysis)

AnnotationAssertion(dc:created kisao:KISAO_0000499 "2017-09-12"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000499 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000499 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000499 "Ticket 32"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000499 "dynamic flux balance analysis"@en)
AnnotationAssertion(Annotation(rdfs:comment "DFBAlab: a fast and reliable MATLAB code for dynamic flux balance analysis.
Gomez JA, Höffner K, Barton PI. BMC Bioinformatics. 2014 Dec 18;15:409."@en) rdfs:seeAlso kisao:KISAO_0000499 "http://identifiers.org/doi/10.1186/s12859-014-0409-8"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000499 "DFBA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000499 "Dynamic flux balance analysis (DFBA) enables the simulation of dynamic biological systems by assuming organisms reach steady state rapidly in response to changes in the extracellular environment. DFBA couples flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model approaches with dynamic model approaches."@en)
SubClassOf(kisao:KISAO_0000499 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000499 kisao:KISAO_0000622)
SubClassOf(kisao:KISAO_0000499 ObjectSomeValuesFrom(kisao:KISAO_0000245 ObjectIntersectionOf(kisao:KISAO_0000374 kisao:KISAO_0000623)))
SubClassOf(kisao:KISAO_0000499 ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000437))

# Class: kisao:KISAO_0000500 (SOA-DFBA)

AnnotationAssertion(dc:created kisao:KISAO_0000500 "2017-09-12"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000500 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000500 "DFBAlab"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000500 "Ticket 32"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000500 "SOA-DFBA"@en)
AnnotationAssertion(Annotation(rdfs:comment "DFBAlab: a fast and reliable MATLAB code for dynamic flux balance analysis.
Gomez JA, Höffner K, Barton PI. BMC Bioinformatics. 2014 Dec 18;15:409."@en) rdfs:seeAlso kisao:KISAO_0000500 "http://identifiers.org/doi/10.1186/s12859-014-0409-8"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000500 "SOA"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000500 "static optimization approach dynamic flux balance analysis"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000500 "Dynamic Flux Balance Analysis (DFBA) [http://identifiers.org/biomodels.kisao/KISAO_0000499] couples flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model approaches with dynamic model approaches. The static optimization approach (SOA) uses the Euler forward method [http://identifiers.org/biomodels.kisao/KISAO_0000030], solving the embedded LPs at each time step. The FBA fluxes are assumed to be constant during the time step."@en)
SubClassOf(kisao:KISAO_0000500 kisao:KISAO_0000499)
SubClassOf(kisao:KISAO_0000500 ObjectSomeValuesFrom(kisao:KISAO_0000360 kisao:KISAO_0000030))

# Class: kisao:KISAO_0000501 (DOA-DFBA)

AnnotationAssertion(dc:created kisao:KISAO_0000501 "2017-09-12"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000501 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000501 "DFBAlab"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000501 "Ticket 32"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000501 "DOA-DFBA"@en)
AnnotationAssertion(Annotation(rdfs:comment "DFBAlab: a fast and reliable MATLAB code for dynamic flux balance analysis.
Gomez JA, Höffner K, Barton PI. BMC Bioinformatics. 2014 Dec 18;15:409."@en) rdfs:seeAlso kisao:KISAO_0000501 "http://identifiers.org/doi/10.1186/s12859-014-0409-8"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000501 "DOA"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000501 "dynamic optimization approach dynamic flux balance analysis"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000501 "Dynamic Flux Balance Analysis (DFBA) [http://identifiers.org/biomodels.kisao/KISAO_0000499] couples flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model approaches with dynamic model approaches. The dynamic optimization approach (DOA) discretizes the time horizon and optimizes simultaneously over the entire time period of interest by solving a nonlinear programming problem (NLP)."@en)
SubClassOf(kisao:KISAO_0000501 kisao:KISAO_0000499)
SubClassOf(kisao:KISAO_0000501 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376)))

# Class: kisao:KISAO_0000502 (DA-DFBA)

AnnotationAssertion(dc:created kisao:KISAO_0000502 "2017-09-12"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000502 "AZ"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000502 "DFBAlab"@en)
AnnotationAssertion(rdfs:comment kisao:KISAO_0000502 "Ticket 32"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000502 "DA-DFBA"@en)
AnnotationAssertion(Annotation(rdfs:comment "DFBAlab: a fast and reliable MATLAB code for dynamic flux balance analysis.
Gomez JA, Höffner K, Barton PI. BMC Bioinformatics. 2014 Dec 18;15:409."@en) rdfs:seeAlso kisao:KISAO_0000502 "http://identifiers.org/doi/10.1186/s12859-014-0409-8"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000502 "DA"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000502 "direct approach dynamics flux balance analysis"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000502 "Dynamic Flux Balance Analysis (DFBA) [http://identifiers.org/biomodels.kisao/KISAO_0000499] couples flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model approaches with dynamic model approaches. The direct approach (DA) includes the LP solver in the right-hand side evaluator for the ordinary differential equations (ODEs) and takes advantage of reliable implicit ODE integrators with adaptive step size for error control."@en)
SubClassOf(kisao:KISAO_0000502 kisao:KISAO_0000499)

# Class: kisao:KISAO_0000503 (simulated annealing)

AnnotationAssertion(dc:created kisao:KISAO_0000503 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000503 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000503 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000503 "simulated annealing"@en)
AnnotationAssertion(Annotation(rdfs:comment "S. Kirkpatrick, J., C.D. Gelatt, and M. P. Vecchi. Optimization by simulated annealing. Science. 220. 671 - 680. 1983."@en) rdfs:seeAlso kisao:KISAO_0000503 "http://identifiers.org/doi/10.1126/science.220.4598.671"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000503 "Simulated annealing is an optimization algorithm first proposed by Kirkpatrick et al. and was inspired by statistical mechanics and the way in which perfect crystals are formed. Perfect crystals are formed by first melting the substance of interest, and then cooling it very slowly. At large temperatures the particles vibrate with wide amplitude and this allows a search for global optimum. As the temperature decreases so do the vibrations until the system settles to the global optimum (the perfect crystal).

The simulated annealing optimization algorithm uses a similar concept: the objective function is considered a measure of the energy of the system and this is maintained constant for a certain number of iterations (a temperature cycle). In each iteration, the parameters are changed to a nearby location in parameter space and the new objective function value calculated; if it decreased, then the new state is accepted, if it increased then the new state is accepted with a probability that follows a Boltzmann distribution (higher temperature means higher probability of accepting the new state). After a fixed number of iterations, the stopping criterion is checked; if it is not time to stop, then the system's temperature is reduced and the algorithm continues.

Simulated annealing is a stochastic algorithm that is guaranteed to converge if ran for an infinite number of iterations. It is one of the most robust global optimization algorithms, although it is also one of the slowest. (Be warned that simulated annealing can run for hours or even days!)."@en)
SubClassOf(kisao:KISAO_0000503 kisao:KISAO_0000472)
SubClassOf(kisao:KISAO_0000503 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000211))
SubClassOf(kisao:KISAO_0000503 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000522))
SubClassOf(kisao:KISAO_0000503 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000523))

# Class: kisao:KISAO_0000504 (random search)

AnnotationAssertion(dc:created kisao:KISAO_0000504 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000504 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000504 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000504 "random search"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000504 "Random search is an optimization method that attempts to find the optimum by testing the objective function's value on a series of combinations of random values of the adjustable parameters. The random values are generated complying with any boundaries selected by the user, furthermore, any combinations of parameter values that do not fulfill constraints on the variables are excluded. This means that the method is capable of handling bounds on the adjustable parameters and fulfilling constraints.

For infinite number of iterations this method is guaranteed to find the global optimum of the objective function. In general one is interested in processing a very large number of iterations."@en)
SubClassOf(kisao:KISAO_0000504 kisao:KISAO_0000472)
SubClassOf(kisao:KISAO_0000504 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000486))

# Class: kisao:KISAO_0000505 (particle swarm)

AnnotationAssertion(dc:created kisao:KISAO_0000505 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000505 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000505 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000505 "particle swarm"@en)
AnnotationAssertion(Annotation(rdfs:comment "J. Kennedy and R. Eberhart. Particle Swarm Optimization. Proceedings of the Fourth IEEE International Conference on Neural Networks, Perth, Australia. 1942 - 1948. 1995."@en) rdfs:seeAlso kisao:KISAO_0000505 "http://identifiers.org/doi/10.1109/ICNN.1995.488968"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000505 "The particle swarm optimization method suggested by Kennedy and Eberhart is inspired by a flock of birds or a school of fish searching for food. Each particle has a position Xi and a velocity Vi in the parameter space. Additionally, it remembers its best achieved objective value O and position Mi. Dependent on its own information and the position of its best neighbor (a random subset of particles of the swarm) a new velocity is calculated. With this information the position is updated."@en)
SubClassOf(kisao:KISAO_0000505 kisao:KISAO_0000472)
SubClassOf(kisao:KISAO_0000505 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000486))

# Class: kisao:KISAO_0000506 (genetic algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000506 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000506 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000506 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000506 "genetic algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "T. Bäck, D.B. Fogel, and Z. Michalewicz. Handbook of evolutionary computation. Oxford: IOP Publishing/Oxford University Press. 1997."@en) rdfs:seeAlso kisao:KISAO_0000506 "http://identifiers.org/isbn/9780750308953"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000506 "GA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000506 "The genetic algorithm (GA) is a computational technique that mimics evolution and is based on reproduction and selection. A GA is composed of individuals that reproduce and compete, each one is a potential solution to the (optimization) problem and is represented by a \"genome\" where each gene corresponds to one adjustable parameter. At each generation of the GA, each individual is paired with one other at random for reproduction. Two offspring are produced by combining their genomes and allowing for \"cross-over\", i.e., the two new individuals have genomes that are formed from a combination of the genomes of their parents. Also each new gene might have mutated, i.e. the parameter value might have changed slightly. At the end of the generation, the algorithm has double the number of individuals. Then each of the individuals is confronted with a number of others to count how many does it outperform (the number of wins is the number of these competitors that represent worse solutions than itself). All the individuals are ranked by their number of wins, and the population is again reduced to the original number of individuals by eliminating those which have worse fitness (solutions)."@en)
SubClassOf(kisao:KISAO_0000506 kisao:KISAO_0000520)
DisjointClasses(kisao:KISAO_0000506 kisao:KISAO_0000508)

# Class: kisao:KISAO_0000507 (genetic algorithm SR)

AnnotationAssertion(dc:created kisao:KISAO_0000507 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000507 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000507 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000507 "genetic algorithm SR"@en)
AnnotationAssertion(Annotation(rdfs:comment "T. Runarsson and X. Yao. Stochastic ranking for constrained evolutionary optimization. EEE Transactions on Evolutionary Computation. 4. 284 - 294. 2000."@en) rdfs:seeAlso kisao:KISAO_0000507 "http://identifiers.org/doi/10.1109/4235.873238"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000507 "genetic algorithm with stochastic ranking"@en)
SubClassOf(kisao:KISAO_0000507 kisao:KISAO_0000506)

# Class: kisao:KISAO_0000508 (evolutionary programming)

AnnotationAssertion(dc:created kisao:KISAO_0000508 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000508 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000508 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000508 "evolutionary programming"@en)
AnnotationAssertion(Annotation(rdfs:comment "T. Bäck, D.B. Fogel, and Z. Michalewicz. Handbook of evolutionary computation. Oxford: IOP Publishing/Oxford University Press. 1997."@en) rdfs:seeAlso kisao:KISAO_0000508 "http://identifiers.org/isbn/9780750308953"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000508 "EP"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000508 "Evolutionary programming (EP) is a computational technique that mimics evolution and is based on reproduction and selection. An EP algorithm is composed of individuals that reproduce and compete, each one is a potential solution to the (optimization) problem and is represented by a \"genome\" where each gene corresponds to one adjustable parameter. At each generation of the EP, each individual reproduces asexually, i.e. divides into two individuals. One of these contains exactly the same \"genome\" as the parent while the other suffers some mutations (the parameter values of each gene change slightly). At the end of the generation, the algorithm has double the number of individuals. Then each of the individuals is confronted with a number of others to count how many does it outperform (the number of wins is the number of these competitors that represent worse solutions than itself). All the individuals are ranked by their number of wins, and the population is again reduced to the original number of individuals by eliminating those which have worse fitness (solutions)."@en)
SubClassOf(kisao:KISAO_0000508 kisao:KISAO_0000520)

# Class: kisao:KISAO_0000509 (evolutionary strategy)

AnnotationAssertion(dc:created kisao:KISAO_0000509 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000509 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000509 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000509 "evolutionary strategy"@en)
AnnotationAssertion(Annotation(rdfs:comment "T. Runarsson and X. Yao. Stochastic ranking for constrained evolutionary optimization. EEE Transactions on Evolutionary Computation. 4. 284 - 294. 2000."@en) rdfs:seeAlso kisao:KISAO_0000509 "http://identifiers.org/doi/10.1109/4235.873238"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000509 "SRES"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000509 "evolutionary strategies with stochastic ranking"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000509 "Evolutionary Strategies with Stochastic Ranking (SRES) is similar to Evolutionary Programming. However, a parent has multiple offsprings during each generation. Each offspring will contain a recombination of genes with another parent and additional mutations. The algorithm assures that each parameter value will be within its boundaries. But constraints to the solutions may be violated."@en)
SubClassOf(kisao:KISAO_0000509 kisao:KISAO_0000508)

# Class: kisao:KISAO_0000510 (truncated Newton)

AnnotationAssertion(dc:created kisao:KISAO_0000510 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000510 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000510 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000510 "truncated Newton"@en)
AnnotationAssertion(Annotation(rdfs:comment "P.E. Gill, W. Murray, and M.H. Wright. Practical Optimization. London, Academic Press. 1981."@en) rdfs:seeAlso kisao:KISAO_0000510 "http://identifiers.org/isbn/0122839528"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000510 "The Truncated Newton method is a sophisticated variant of the Newton optimization method. The Newton optimization method searches for the minimum of a nonlinear function by following descent directions determined from the function's first and second partial derivatives. The Truncated Newton method does an incomplete (truncated) solution of a system of linear equations to calculate the Newton direction. This means that the actual direction chosen for the descent is between the steepest descent direction and the true Newton direction."@en)
SubClassOf(kisao:KISAO_0000510 kisao:KISAO_0000471)

# Class: kisao:KISAO_0000511 (steepest descent)

AnnotationAssertion(dc:created kisao:KISAO_0000511 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000511 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000511 "steepest descent"@en)
AnnotationAssertion(Annotation(rdfs:comment "D.B. Fogel, L.J. Fogel, and J.W. Atmar. Meta-evolutionary programming. 25th Asiloma Conference on Signals, Systems and Computers. IEEE Computer Society, Asilomar . 540 - 545. 1992."@en) rdfs:seeAlso kisao:KISAO_0000511 "http://identifiers.org/doi/10.1109/ACSSC.1991.186507"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000511 "Steepest descent is an optimization method that follows the direction of steepest descent on the hyper-surface of the objective function to find a local minimum. The direction of steepest descent is defined by the negative of the gradient of the objective function."@en)
SubClassOf(kisao:KISAO_0000511 kisao:KISAO_0000471)
SubClassOf(kisao:KISAO_0000511 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000209))
SubClassOf(kisao:KISAO_0000511 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000486))

# Class: kisao:KISAO_0000512 (praxis)

AnnotationAssertion(dc:created kisao:KISAO_0000512 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000512 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000512 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000512 "praxis"@en)
AnnotationAssertion(Annotation(rdfs:comment "P.R. Brent. A new algorithm for minimizing a function of several variables without calculating derivatives. In Algorithms for minimization without derivatives, (Englewood Cliffs, NJ: Prentice-Hall, Inc.). 117 - 167. 1973."@en) rdfs:seeAlso kisao:KISAO_0000512 "http://identifiers.org/isbn/0486419983"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000512 "Praxis is a direct search method that searches for the minimum of a nonlinear function without requiring (or attempting to calculate) derivatives of that function. Praxis was developed by Brent after the method proposed by Powell. The inspiration for Praxis was the well-known method of minimising each adjustable parameter (direction) at a time - the principal axes method. In Praxis directions are chosen that do not coincide with the principal axes, in fact if the objective function is quadratic then these will be conjugate directions, assuring a fast convergence rate."@en)
SubClassOf(kisao:KISAO_0000512 kisao:KISAO_0000471)
SubClassOf(kisao:KISAO_0000512 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000209))

# Class: kisao:KISAO_0000513 (NL2SOL)

AnnotationAssertion(dc:created kisao:KISAO_0000513 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000513 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000513 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000513 "NL2SOL"@en)
AnnotationAssertion(Annotation(rdfs:comment "J. E. Dennis, D. M. Gay, and R. E. Welsch. An adaptive nonlinear least-squares algorithm. ACM Trans. Math. Softw.. 7(3). 348 - 368. 1981."@en) rdfs:seeAlso kisao:KISAO_0000513 "http://identifiers.org/doi/10.1145/355958.355966"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000513 "adaptive nonlinear least-squares algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000513 "The NL2SOL method is based on an adaptive nonlinear least-squares algorithm, devised by Dennis and colleagues. For problems with large number of residuals, this algorithm is known to be more reliable than Gauss-Newton or Levenberg-Marquardt method and more efficient than the secant or variable metric algorithms that are intended for general function minimization."@en)
SubClassOf(kisao:KISAO_0000513 kisao:KISAO_0000471)
SubClassOf(kisao:KISAO_0000513 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000486))

# Class: kisao:KISAO_0000514 (Nelder-Mead)

AnnotationAssertion(dc:created kisao:KISAO_0000514 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000514 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000514 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000514 "Nelder-Mead"@en)
AnnotationAssertion(Annotation(rdfs:comment "J. A. Nelder and R. Mead. A simplex method for function minimization. Computer Journal. 7. 308 - 313. 1965."@en) rdfs:seeAlso kisao:KISAO_0000514 "http://identifiers.org/doi/10.1093/comjnl/7.4.308"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000514 "simplex method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000514 "This method also known as the simplex method is due to Nelder and Mead. A simplex is a polytope of N+1 vertices in N dimensions. The objective function is evaluated at each vertex. Dependent on these calculated values a new simplex is constructed. The simplest step is to replace the worst point with a point reflected through the centroid of the remaining N points. If this point is better than the best current point, then we can try stretching exponentially out along this line. On the other hand, if this new point isn't much better than the previous value then we are stepping across a valley, so we shrink the simplex towards the best point."@en)
SubClassOf(kisao:KISAO_0000514 kisao:KISAO_0000471)
SubClassOf(kisao:KISAO_0000514 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000211))
SubClassOf(kisao:KISAO_0000514 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000486))

# Class: kisao:KISAO_0000515 (Levenberg-Marquardt)

AnnotationAssertion(dc:created kisao:KISAO_0000515 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000515 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000515 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000515 "Levenberg-Marquardt"@en)
AnnotationAssertion(Annotation(rdfs:comment "K. Levenberg. A method for the solution of certain nonlinear problems in least squares. Quart. Appl. Math.. 2. 164 - 168. 1944."@en) rdfs:seeAlso kisao:KISAO_0000515 "http://identifiers.org/doi/10.1090/qam/10666"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "D.W. Marquardt. An algorithm for least squares estimation of nonlinear parameters. SIAM Journal. 11. 431 - 441. 1963."@en) rdfs:seeAlso kisao:KISAO_0000515 "http://identifiers.org/doi/10.1137/0111030"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000515 "Levenberg-Marquardt is a gradient descent method. It is a hybrid between the steepest descent and the Newton methods.
Levenberg first suggested an improvement to the Newton method in order to make it more robust, i.e. to overcome the problem of non-convergence. His suggestion was to add a factor to the diagonal elements of the Hessian matrix of second derivatives when not close to the minimum (this can be judged by how positive definite the matrix is). The effect when this factor is large compared to the elements of Hessian is that the method then becomes the steepest descent method. Later Marquardt suggested that the factor should be multiplicative rather than additive and also defined a heuristic to make this factor increase or decrease. The method known as Levenberg-Marquardt is thus an adaptive method that effectively changes between the steepest descent to the Newton method."@en)
SubClassOf(kisao:KISAO_0000515 kisao:KISAO_0000471)
SubClassOf(kisao:KISAO_0000515 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000322))
SubClassOf(kisao:KISAO_0000515 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000209))
SubClassOf(kisao:KISAO_0000515 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000486))

# Class: kisao:KISAO_0000516 (Hooke&Jeeves)

AnnotationAssertion(dc:created kisao:KISAO_0000516 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000516 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000516 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000516 "Hooke&Jeeves"@en)
AnnotationAssertion(Annotation(rdfs:comment "R. Hooke and T. A. Jeeves. \"Direct search\" solution of numerical and statistical problems. Journal of the Association for Computing Machinery. 8. 212 - 229. 1961."@en) rdfs:seeAlso kisao:KISAO_0000516 "http://identifiers.org/doi/10.1145/321062.321069"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000516 "Hooke and Jeeves method"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000516 "Hooke-Jeeves method"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000516 "method of Hooke and Jeeves"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000516 "The method of Hooke and Jeeves is a direct search algorithm that searches for the minimum of a nonlinear function without requiring (or attempting to calculate) derivatives of the function. Instead it is based on a heuristic that suggests a descent direction using the values of the function calculated in a number of previous iterations."@en)
SubClassOf(kisao:KISAO_0000516 kisao:KISAO_0000471)
SubClassOf(kisao:KISAO_0000516 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000209))
SubClassOf(kisao:KISAO_0000516 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000486))

# Class: kisao:KISAO_0000517 (number of generations)

AnnotationAssertion(dc:created kisao:KISAO_0000517 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000517 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000517 "number of generations"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000517 "The parameter is a positive integer value to determine the number of generations the evolutionary algorithm shall evolve the population."@en)
SubClassOf(kisao:KISAO_0000517 kisao:KISAO_0000518)
SubClassOf(kisao:KISAO_0000517 DataExactCardinality(1 kisao:KISAO_0000251 xsd:integer))
DisjointClasses(kisao:KISAO_0000517 kisao:KISAO_0000519)

# Class: kisao:KISAO_0000518 (evolutionary algorithm parameter)

AnnotationAssertion(dc:created kisao:KISAO_0000518 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000518 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000518 "evolutionary algorithm parameter"@en)
SubClassOf(kisao:KISAO_0000518 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000518 ObjectSomeValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000520))

# Class: kisao:KISAO_0000519 (population size)

AnnotationAssertion(dc:created kisao:KISAO_0000519 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000519 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000519 "population size"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000519 "The parameter is a positive integer value to determine the size of the population, i.e., the number of individuals that survive after each generation."@en)
SubClassOf(kisao:KISAO_0000519 kisao:KISAO_0000518)
SubClassOf(kisao:KISAO_0000519 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000520 (evolutionary algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000520 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000520 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000520 "true"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000520 "evolutionary algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000520 "An optimisation algorithm that mimics evolution and is based on reproduction and selection."@en)
SubClassOf(kisao:KISAO_0000520 kisao:KISAO_0000472)
SubClassOf(kisao:KISAO_0000520 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000517))
SubClassOf(kisao:KISAO_0000520 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000519))

# Class: kisao:KISAO_0000521 (simulated annealing parameter)

AnnotationAssertion(dc:created kisao:KISAO_0000521 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000521 "AZ"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000521 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000521 "simulated annealing parameter"@en)
SubClassOf(kisao:KISAO_0000521 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000521 ObjectSomeValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000503))

# Class: kisao:KISAO_0000522 (start temperature)

AnnotationAssertion(dc:created kisao:KISAO_0000522 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000522 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000522 "start temperature"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000522 "Initial temperature of the system. The higher the temperature, the larger the probability that a global optimum is found. Note that the temperature should be very high in the beginning of the method (the system should be above the \"melting\" temperature). This value has the same units as the objective function, so what represents \"high\" is different from problem to problem."@en)
SubClassOf(kisao:KISAO_0000522 kisao:KISAO_0000521)
DisjointClasses(kisao:KISAO_0000522 kisao:KISAO_0000523)

# Class: kisao:KISAO_0000523 (cooling factor)

AnnotationAssertion(dc:created kisao:KISAO_0000523 "2019-01-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000523 "AZ"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000523 "cooling factor"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000523 "Rate by which the temperature is reduced from one cycle to the next, given by the formula: Tnew=Told*\"Cooling Factor\". The simulated annealing algorithm works best if the temperature is reduced at a slow rate, so this value should be close to 1."@en)
SubClassOf(kisao:KISAO_0000523 kisao:KISAO_0000521)
SubClassOf(kisao:KISAO_0000523 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:double))

# Class: kisao:KISAO_0000524 (partitioned leaping method)

AnnotationAssertion(dc:created kisao:KISAO_0000524 "2020-05-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000524 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "BioNetGen"@end) kisao:isImplementedIn kisao:KISAO_0000524 "http://identifiers.org/biosimulators/bionetgen"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000524 "partitioned leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Harris LA, Clancy P. A \"partitioned leaping\" approach for multiscale modeling of chemical reaction dynamics. J Chem Phys. 125 (14), 144107 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000524 "http://identifiers.org/doi/10.1063/1.2354085"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000524 "Multiscale simulation approach for modeling stochasticity in chemical reaction networks. The approach seamlessly integrates exact-stochastic and \"leaping\" methodologies into a single partitioned leaping algorithmic framework. The technique correctly accounts for stochastic noise at significantly reduced computational cost, requires the definition of only three modelindependent parameters and is particularly well-suited for simulating systems containing widely disparate species populations."@en)
SubClassOf(kisao:KISAO_0000524 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000524 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000488))

# Class: kisao:KISAO_0000525 (stop condition)

AnnotationAssertion(dc:created kisao:KISAO_0000525 "2020-05-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000525 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "BioNetGen"@end) kisao:isImplementedIn kisao:KISAO_0000525 "http://identifiers.org/biosimulators/bionetgen"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000525 "stop condition"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000525 "A condition upon which a simulation should terminate."@en)
SubClassOf(kisao:KISAO_0000525 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000526 (flux variability analysis)

AnnotationAssertion(dc:created kisao:KISAO_0000526 "2020-08-11"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000526 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COBRApy"@end) kisao:isImplementedIn kisao:KISAO_0000526 "http://identifiers.org/biosimulators/cobrapy"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000526 "flux variability analysis"@en)
AnnotationAssertion(Annotation(rdfs:comment "Mahadevan R, Schilling CH. The effects of alternate optimal solutions in constraint-based genome-scale metabolic models. Metab Eng. 2003;5(4):264-276."@en) rdfs:seeAlso kisao:KISAO_0000526 "http://identifiers.org/doi/10.1016/j.ymben.2003.09.002"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000526 "FVA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000526 "Method for determining the minimum and maximum flux of each reaction that satisfies the flux constraints of the flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model."@en)
SubClassOf(kisao:KISAO_0000526 kisao:KISAO_0000407)
SubClassOf(kisao:KISAO_0000526 kisao:KISAO_0000622)
SubClassOf(kisao:KISAO_0000526 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000529))
SubClassOf(kisao:KISAO_0000526 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000531))
SubClassOf(kisao:KISAO_0000526 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000532))
SubClassOf(kisao:KISAO_0000526 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000534))
SubClassOf(kisao:KISAO_0000526 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000578))

# Class: kisao:KISAO_0000527 (geometric flux balance analysis)

AnnotationAssertion(dc:created kisao:KISAO_0000527 "2020-08-11"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000527 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "COBRApy"@end) kisao:isImplementedIn kisao:KISAO_0000527 "http://identifiers.org/biosimulators/cobrapy"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000527 "geometric flux balance analysis"@en)
AnnotationAssertion(Annotation(rdfs:comment "Smallbone K, Simeonidis E. Flux balance analysis: a geometric perspective. J Theor Biol. 2009;258(2):311-315."@en) rdfs:seeAlso kisao:KISAO_0000527 "http://identifiers.org/doi/10.1016/j.jtbi.2009.01.027"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000527 "gFBA"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000527 "geometric FBA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000527 "Method for determining the central flux distribution among all flux distributions that satisfy the constraints of the  flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model."@en)
SubClassOf(kisao:KISAO_0000527 kisao:KISAO_0000437)
SubClassOf(kisao:KISAO_0000527 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000529))

# Class: kisao:KISAO_0000528 (parsimonious enzyme usage flux balance analysis (minimum sum of absolute fluxes))

AnnotationAssertion(dc:created kisao:KISAO_0000528 "2020-08-11"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000528 "AZ"@en)
AnnotationAssertion(Annotation(rdfs:comment "CBMPy"@end) kisao:isImplementedIn kisao:KISAO_0000528 "http://identifiers.org/biosimulators/cbmpy"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "COBRApy"@end) kisao:isImplementedIn kisao:KISAO_0000528 "http://identifiers.org/biosimulators/cobrapy"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000528 "parsimonious enzyme usage flux balance analysis (minimum sum of absolute fluxes)"@en)
AnnotationAssertion(Annotation(rdfs:comment "Lewis NE, Hixson KK, Conrad TM, et al. Omic data from evolved E. coli are consistent with computed optimal growth from genome-scale models. Mol Syst Biol. 2010;6:390."@en) rdfs:seeAlso kisao:KISAO_0000528 "http://identifiers.org/doi/10.1038/msb.2010.47"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000528 "pFBA"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000528 "parsimonious FBA"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000528 "parsimonious flux balance analysis"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000528 "Method for determining the smallest flux distribution among all flux distributions that satisfy the constraints of the flux balance analysis (FBA) [http://identifiers.org/biomodels.kisao/KISAO_0000437] model."@en)
SubClassOf(kisao:KISAO_0000528 kisao:KISAO_0000620)
SubClassOf(kisao:KISAO_0000528 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000531))
SubClassOf(kisao:KISAO_0000528 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000533))
DisjointClasses(kisao:KISAO_0000528 kisao:KISAO_0000554)

# Class: kisao:KISAO_0000529 (parallelism)

AnnotationAssertion(rdfs:label kisao:KISAO_0000529 "parallelism"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000529 "Number of parallel processes to use."@en)
SubClassOf(kisao:KISAO_0000529 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000529 ObjectSomeValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000526))
SubClassOf(kisao:KISAO_0000529 ObjectSomeValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000527))
SubClassOf(kisao:KISAO_0000529 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:integer))

# Class: kisao:KISAO_0000531 (fraction of optimum)

AnnotationAssertion(rdfs:label kisao:KISAO_0000531 "fraction of optimum"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000531 "Fraction of the optimum solution which must be maintained."@en)
SubClassOf(kisao:KISAO_0000531 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000531 ObjectSomeValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000526))
SubClassOf(kisao:KISAO_0000531 ObjectSomeValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000528))
SubClassOf(kisao:KISAO_0000531 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:float))

# Class: kisao:KISAO_0000532 (loopless)

AnnotationAssertion(rdfs:label kisao:KISAO_0000532 "loopless"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000532 "Whether to return only loopless flux solutions."@en)
SubClassOf(kisao:KISAO_0000532 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000532 ObjectSomeValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000526))
SubClassOf(kisao:KISAO_0000532 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:boolean))

# Class: kisao:KISAO_0000533 (pFBA factor)

AnnotationAssertion(rdfs:label kisao:KISAO_0000533 "pFBA factor"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000533 "Maximum permissible sum of absolute fluxes."@en)
SubClassOf(kisao:KISAO_0000533 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000533 ObjectSomeValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000528))
SubClassOf(kisao:KISAO_0000533 DataSomeValuesFrom(kisao:KISAO_0000251 xsd:float))

# Class: kisao:KISAO_0000534 (reactions)

AnnotationAssertion(rdfs:label kisao:KISAO_0000534 "reactions"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000534 "FVA algorithm [http://www.biomodels.net/kisao/KISAO#KISAO_0000526] parameter: reactions to compute the variablity of."@en)
SubClassOf(kisao:KISAO_0000534 kisao:KISAO_0000201)
SubClassOf(kisao:KISAO_0000534 ObjectSomeValuesFrom(kisao:KISAO_0000250 kisao:KISAO_0000526))

# Class: kisao:KISAO_0000535 (VODE)

AnnotationAssertion(dc:created kisao:KISAO_0000535 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000535 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000535 "Odespy"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000535 "SciPy"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000535 "deSolve"@en)
AnnotationAssertion(Annotation(rdfs:comment "GillesPy2"@end) kisao:isImplementedIn kisao:KISAO_0000535 "http://identifiers.org/biosimulators/gillespy2"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000535 "VODE"@en)
AnnotationAssertion(Annotation(rdfs:comment "Peter N. Brown, George D. Byrne & Alan C. Hindmarsh. VODE: A Variable-Coefficient ODE Solver. SIAM J. Sci. and Stat. Comput., 10(5), 1038–1051 (1988)."@en) rdfs:seeAlso kisao:KISAO_0000535 "http://identifiers.org/doi/10.1137/0910062"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "RELATED"@en) skos:altLabel kisao:KISAO_0000535 "DVODE"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000535 "Real-valued Variable-coefficient Ordinary Differential Equation solver, with fixed-leading-coefficient implementation"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000535 "real-valued variable-coefficient ordinary differential equation solver, with fixed-leading-coefficient implementation"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000535 "VODE provides implicit Adams method (for non-stiff problems) and a method based on backward differentiation formulas (BDF) (for stiff problems)."@en)
SubClassOf(kisao:KISAO_0000535 kisao:KISAO_0000433)
SubClassOf(kisao:KISAO_0000535 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000542))
SubClassOf(kisao:KISAO_0000535 ObjectMaxCardinality(1 kisao:KISAO_0000359 kisao:KISAO_0000019))

# Class: kisao:KISAO_0000536 (ZVODE)

AnnotationAssertion(dc:created kisao:KISAO_0000536 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000536 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000536 "Odespy"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000536 "SciPy"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000536 "deSolve"@en)
AnnotationAssertion(Annotation(rdfs:comment "GillesPy2"@end) kisao:isImplementedIn kisao:KISAO_0000536 "http://identifiers.org/biosimulators/gillespy2"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000536 "ZVODE"@en)
AnnotationAssertion(Annotation(rdfs:comment "Peter N. Brown, George D. Byrne & Alan C. Hindmarsh. VODE: A Variable-Coefficient ODE Solver. SIAM J. Sci. and Stat. Comput., 10(5), 1038–1051 (1988)."@en) rdfs:seeAlso kisao:KISAO_0000536 "http://identifiers.org/doi/10.1137/0910062"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000536 "Complex-valued Variable-coefficient Ordinary Differential Equation solver, with fixed-leading-coefficient implementation"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000536 "complex-valued variable-coefficient ordinary differential equation solver, with fixed-leading-coefficient implementation"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000536 "ZVODE provides implicit Adams method (for non-stiff problems) and a method based on backward differentiation formulas (BDF) (for stiff problems)."@en)
SubClassOf(kisao:KISAO_0000536 kisao:KISAO_0000433)
SubClassOf(kisao:KISAO_0000536 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000542))
SubClassOf(kisao:KISAO_0000536 ObjectMaxCardinality(1 kisao:KISAO_0000359 kisao:KISAO_0000019))

# Class: kisao:KISAO_0000537 (explicit Runge-Kutta method of order 3(2))

AnnotationAssertion(dc:created kisao:KISAO_0000537 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000537 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000537 "MATLAB"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000537 "Octave"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000537 "Odespy"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000537 "SciPy"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000537 "deSolve"@en)
AnnotationAssertion(Annotation(rdfs:comment "GillesPy2"@end) kisao:isImplementedIn kisao:KISAO_0000537 "http://identifiers.org/biosimulators/gillespy2"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000537 "explicit Runge-Kutta method of order 3(2)"@en)
AnnotationAssertion(Annotation(rdfs:comment "P. Bogacki & L. F. Shampine. A 3(2) pair of Runge - Kutta formulas. Applied Mathematics Letters 2(4), 321-325 (1989)."@en) rdfs:seeAlso kisao:KISAO_0000537 "http://identifiers.org/doi/10.1016/0893-9659(89)90079-7"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000537 "RK23"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000537 "RK23 uses the Bogacki-Shampine pair of formulas [1]. The error is controlled assuming accuracy of the second-order method, but steps are taken using the third-order accurate formula (local extrapolation is done). A cubic Hermite polynomial is used for the dense output."@en)
SubClassOf(kisao:KISAO_0000537 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000537 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000537 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))

# Class: kisao:KISAO_0000538 (safety factor on new step selection)

AnnotationAssertion(dc:created kisao:KISAO_0000538 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000538 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000538 "JModelica"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000538 "Odespy"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000538 "SciPy"@en)
AnnotationAssertion(Annotation(rdfs:comment "GillesPy2"@end) kisao:isImplementedIn kisao:KISAO_0000538 "http://identifiers.org/biosimulators/gillespy2"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000538 "safety factor on new step selection"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000538 "safe"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000538 "safety"@en)
SubClassOf(kisao:KISAO_0000538 kisao:KISAO_0000242)

# Class: kisao:KISAO_0000539 (minimum factor to change step size by)

AnnotationAssertion(dc:created kisao:KISAO_0000539 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000539 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000539 "JModelica"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000539 "Odespy"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000539 "SciPy"@en)
AnnotationAssertion(Annotation(rdfs:comment "GillesPy2"@end) kisao:isImplementedIn kisao:KISAO_0000539 "http://identifiers.org/biosimulators/gillespy2"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000539 "minimum factor to change step size by"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000539 "dfactor"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000539 "fac1"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000539 "Minimum factor to increase/decrease step size by in one step. The new step-size is chosen subject to the restriction fac1 <= current step-size / old step-size <= fac2."@en)
SubClassOf(kisao:KISAO_0000539 kisao:KISAO_0000242)

# Class: kisao:KISAO_0000540 (maximum factor to change step size by)

AnnotationAssertion(dc:created kisao:KISAO_0000540 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000540 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000540 "JModelica"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000540 "Odespy"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000540 "SciPy"@en)
AnnotationAssertion(Annotation(rdfs:comment "GillesPy2"@end) kisao:isImplementedIn kisao:KISAO_0000540 "http://identifiers.org/biosimulators/gillespy2"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000540 "maximum factor to change step size by"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000540 "fac2"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000540 "ifactor"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000540 "Maximum factor to increase/decrease step size by in one step. The new step-size is chosen subject to the restriction fac1 <= current step-size / old step-size <= fac2."@en)
SubClassOf(kisao:KISAO_0000540 kisao:KISAO_0000242)

# Class: kisao:KISAO_0000541 (beta parameter for stabilized step size control)

AnnotationAssertion(dc:created kisao:KISAO_0000541 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000541 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000541 "JModelica"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000541 "Odespy"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000541 "SciPy"@en)
AnnotationAssertion(Annotation(rdfs:comment "GillesPy2"@end) kisao:isImplementedIn kisao:KISAO_0000541 "http://identifiers.org/biosimulators/gillespy2"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000541 "beta parameter for stabilized step size control"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000541 "beta"@en)
SubClassOf(kisao:KISAO_0000541 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000541 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000542 (correction step should use internally generated full Jacobian)

AnnotationAssertion(dc:created kisao:KISAO_0000542 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000542 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000542 "SciPy"@en)
AnnotationAssertion(Annotation(rdfs:comment "GillesPy2"@end) kisao:isImplementedIn kisao:KISAO_0000542 "http://identifiers.org/biosimulators/gillespy2"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000542 "correction step should use internally generated full Jacobian"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000542 "MF=22"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000542 "with Jacobian"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000542 "Specifies whether the iteration method of the ODE solver’s correction step is chord iteration with an internally generated full Jacobian or functional iteration with no Jacobian. Option is only considered when the user has not supplied a Jacobian function and has not indicated (by setting either upper or lower band) that the Jacobian is banded."@en)
SubClassOf(kisao:KISAO_0000542 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000543 (stability limit detection flag)

AnnotationAssertion(dc:created kisao:KISAO_0000543 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000543 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000543 "SUNDIALS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000543 "stability limit detection flag"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000543 "Flag to activate stability limit detection."@en)
SubClassOf(kisao:KISAO_0000543 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000543 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000544 (IDAS)

AnnotationAssertion(dc:created kisao:KISAO_0000544 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000544 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000544 "SUNDIALS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000544 "IDAS"@en)
AnnotationAssertion(Annotation(rdfs:comment "SUNDIALS: Suite of nonlinear and differential/algebraic equation solvers. Alan C. Hindmarsh, Peter N. Brown, Keith E. Grant, Steven L. Lee, Radu Serban, Dana E. Shumaker & Carol S. Woodward. ACM Transactions on Mathematical Software 31(3), 363-396 (2005)."@en) rdfs:seeAlso kisao:KISAO_0000544 "http://identifiers.org/doi/10.1145/1089014.1089020"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000544 "implicit differential-algebraic solver with sensitivity analysis"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000544 "IDAS solves real differential-algebraic systems in N-space, in the general form F(t,y,y')=0, y(t0)=y0, y'(t0)=y'0 with sensitivity analysis."@en)
SubClassOf(kisao:KISAO_0000544 kisao:KISAO_0000432)
SubClassOf(kisao:KISAO_0000544 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000545))

# Class: kisao:KISAO_0000545 (include sensitivity variables in error control mechanism)

AnnotationAssertion(dc:created kisao:KISAO_0000545 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000545 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000545 "SUNDIALS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000545 "include sensitivity variables in error control mechanism"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000545 "errconS"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000545 "Specifies whether sensitivity variables are included or not in the error control mechanism."@en)
SubClassOf(kisao:KISAO_0000545 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000545 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000546 (convex optimization algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000546 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000546 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000546 "convex optimization algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000546 "Optimization of a convex function over a convex set. Convex optimization is subclass of global optimization because conveness gaurantees that each local optimum is a global optimum."@en)
SubClassOf(kisao:KISAO_0000546 kisao:KISAO_0000472)

# Class: kisao:KISAO_0000547 (linear programming)

AnnotationAssertion(dc:created kisao:KISAO_0000547 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000547 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000547 "CPLEX"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000547 "CVXOPT"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000547 "ConvOpt"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000547 "GLPK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000547 "Gurobi"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000547 "MATLAB"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000547 "Mosek"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000547 "OptLang"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000547 "SciPy"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000547 "SoPlex"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000547 "XPRESS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000547 "linear programming"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000547 "LP"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000547 "Method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships."@en)
SubClassOf(kisao:KISAO_0000547 kisao:KISAO_0000546)

# Class: kisao:KISAO_0000548 (quadratic programming)

AnnotationAssertion(dc:created kisao:KISAO_0000548 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000548 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000548 "CPLEX"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000548 "CVXOPT"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000548 "ConvOpt"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000548 "Gurobi"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000548 "MATLAB"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000548 "Mosek"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000548 "OptLang"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000548 "XPRESS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000548 "quadratic programming"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000548 "QP"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000548 "Process of solving a quadratic optimization problem."@en)
SubClassOf(kisao:KISAO_0000548 kisao:KISAO_0000549)

# Class: kisao:KISAO_0000549 (non-linear programming)

AnnotationAssertion(dc:created kisao:KISAO_0000549 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000549 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000549 "non-linear programming"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000549 "Process of solving an optimization problem where some of the constraints or the objective function are nonlinear."@en)
SubClassOf(kisao:KISAO_0000549 kisao:KISAO_0000472)

# Class: kisao:KISAO_0000550 (simplex method)

AnnotationAssertion(dc:created kisao:KISAO_0000550 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000550 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000550 "CPLEX"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000550 "GLPK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000550 "Gurobi"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000550 "simplex method"@en)
AnnotationAssertion(rdfs:seeAlso kisao:KISAO_0000550 "https://projecteuclid.org/euclid.pjm/1103044531"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000550 "Dantzig's simplex algorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000550 "Approach to solving linear programming models by hand using slack variables, tableaus, and pivot variables as a means to finding the optimal solution of an optimization problem."@en)
SubClassOf(kisao:KISAO_0000550 kisao:KISAO_0000547)

# Class: kisao:KISAO_0000551 (primal-dual interior point method)

AnnotationAssertion(dc:created kisao:KISAO_0000551 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000551 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000551 "CPLEX"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000551 "GLPK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000551 "Gurobi"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000551 "primal-dual interior point method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Sanjay Mehrotra. On the Implementation of a Primal-Dual Interior Point Method. SIAM Journal on Optimization, 2(4), 575–601(1991)."@en) rdfs:seeAlso kisao:KISAO_0000551 "http://identifiers.org/doi/10.1137/0802028"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000551 "The Interior Point method approximates the constraints of a linear programming model as a set of boundaries surrounding a region."@en)
SubClassOf(kisao:KISAO_0000551 kisao:KISAO_0000547)

# Class: kisao:KISAO_0000552 (optimization method)

AnnotationAssertion(dc:created kisao:KISAO_0000552 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000552 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000552 "CPLEX"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000552 "GLPK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000552 "Gurobi"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000552 "optimization method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000552 "Optimization method such as the revised simplex method [http://identifiers.org/biomodels.kisao/KISAO_0000550] or primal-dual interior point method [http://identifiers.org/biomodels.kisao/KISAO_0000551]."@en)
SubClassOf(kisao:KISAO_0000552 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000553 (optimization solver)

AnnotationAssertion(dc:created kisao:KISAO_0000553 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000553 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000553 "ConvOpt"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000553 "OptLang"@en)
AnnotationAssertion(Annotation(rdfs:comment "CBMPy"@end) kisao:isImplementedIn kisao:KISAO_0000553 "http://identifiers.org/biosimulators/cbmpy"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "COBRApy"@end) kisao:isImplementedIn kisao:KISAO_0000553 "http://identifiers.org/biosimulators/cobrapy"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "RAVEN"@end) kisao:isImplementedIn kisao:KISAO_0000553 "http://identifiers.org/biosimulators/raven"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000553 "optimization solver"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000553 "Optimization solver such as CPLEX, GLPK, or Gurobi."@en)
SubClassOf(kisao:KISAO_0000553 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000554 (parsimonius flux balance analysis (minimum number of active fluxes))

AnnotationAssertion(dc:created kisao:KISAO_0000554 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000554 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "CBMPy"@end) kisao:isImplementedIn kisao:KISAO_0000554 "http://identifiers.org/biosimulators/cbmpy"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000554 "parsimonius flux balance analysis (minimum number of active fluxes)"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000554 "pFBA"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000554 "parsimonious FBA"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000554 "parsimonious flux balance analysis"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000554 "A technique for selecting a parsimonious flux distribution which has a minimal number of active fluxes."@en)
SubClassOf(kisao:KISAO_0000554 kisao:KISAO_0000620)

# Class: kisao:KISAO_0000555 (absolute quadrature tolerance)

AnnotationAssertion(dc:created kisao:KISAO_0000555 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000555 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000555 "SUNDIALS"@en)
AnnotationAssertion(Annotation(rdfs:comment "AMICI"@end) kisao:isImplementedIn kisao:KISAO_0000555 "http://identifiers.org/biosimulators/amici"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000555 "absolute quadrature tolerance"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000555 "Absolute error tolerance of the adjoint solution."@en)
SubClassOf(kisao:KISAO_0000555 kisao:KISAO_0000211)

# Class: kisao:KISAO_0000556 (relative quadrature tolerance)

AnnotationAssertion(dc:created kisao:KISAO_0000556 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000556 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000556 "SUNDIALS"@en)
AnnotationAssertion(Annotation(rdfs:comment "AMICI"@end) kisao:isImplementedIn kisao:KISAO_0000556 "http://identifiers.org/biosimulators/amici"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000556 "relative quadrature tolerance"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000556 "Relative error tolerance of the adjoint solution."@en)
SubClassOf(kisao:KISAO_0000556 kisao:KISAO_0000209)

# Class: kisao:KISAO_0000557 (absolute steady-state tolerance)

AnnotationAssertion(dc:created kisao:KISAO_0000557 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000557 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000557 "SUNDIALS"@en)
AnnotationAssertion(Annotation(rdfs:comment "AMICI"@end) kisao:isImplementedIn kisao:KISAO_0000557 "http://identifiers.org/biosimulators/amici"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000557 "absolute steady-state tolerance"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000557 "Absolute error tolerance of the steady-state."@en)
SubClassOf(kisao:KISAO_0000557 kisao:KISAO_0000211)

# Class: kisao:KISAO_0000558 (relative steady-state tolerance)

AnnotationAssertion(dc:created kisao:KISAO_0000558 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000558 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000558 "SUNDIALS"@en)
AnnotationAssertion(Annotation(rdfs:comment "AMICI"@end) kisao:isImplementedIn kisao:KISAO_0000558 "http://identifiers.org/biosimulators/amici"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000558 "relative steady-state tolerance"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000558 "Relative error tolerance of the steady-state."@en)
SubClassOf(kisao:KISAO_0000558 kisao:KISAO_0000209)

# Class: kisao:KISAO_0000559 (initial step size)

AnnotationAssertion(dc:created kisao:KISAO_0000559 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000559 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000559 "SUNDIALS"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000559 "SciPy"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000559 "libRoadRunner"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000559 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "GillesPy2"@end) kisao:isImplementedIn kisao:KISAO_0000559 "http://identifiers.org/biosimulators/gillespy2"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@end) kisao:isImplementedIn kisao:KISAO_0000559 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000559 "initial step size"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000559 "Initial time step size."@en)
SubClassOf(kisao:KISAO_0000559 kisao:KISAO_0000242)

# Class: kisao:KISAO_0000560 (LSODA/LSODAR hybrid method)

AnnotationAssertion(dc:created kisao:KISAO_0000560 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000560 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000560 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000560 "LSODA/LSODAR hybrid method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Pedro Mendes, Stefan Hoops, Sven Sahle, Ralph Gauges, Joseph Dada & Ursula Kummer. Computational modeling of biochemical networks using COPASI. Methods in Molecular Biology 500, 17–59 (2009)."@en) rdfs:seeAlso kisao:KISAO_0000560 "http://identifiers.org/doi/10.1007/978-1-59745-525-1_2"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Frank T. Bergmann, Stefan Hoops, Brian Klahn, Ursula Kummer, Pedro Mendes Jürgen Pahle & Sven Sahle. COPASI and its applications in biotechnology. Journal of Biotechnology 261, 215–220 (2017)."@en) rdfs:seeAlso kisao:KISAO_0000560 "http://identifiers.org/doi/10.1016/j.jbiotec.2017.06.1200"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Stefan Hoops, Sven Sahle, Ralph Gauges, Christine Lee, Jürgen Pahle, Natalia Simus, Mudita Singhal, Liang Xu, Pedro Mendes & Ursula Kummer. COPASI—a complex pathway simulator. Bioinformatics 22 (24), 3067–3074 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000560 "http://identifiers.org/doi/10.1093/bioinformatics/btl485"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Sven Sahle, Ralph Gauges, Jürgen Pahle, Natalia Simus, Ursula Kummer, Stefan Hoops, Christine Lee, Mudita Singhal, Liang Xu & Pedro Mendes. Simulation of biochemical networks using COPASI—a complex pathway simulator. Proceedings of the 2006 Winter Simulation Conference, Monterey, CA, USA, 1698–1706 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000560 "http://identifiers.org/doi/10.5555/1218112.1218421"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000560 "Automatically use LSODA or LSODAR as apropriate for the given problem. Use LSODA if the problem has no roots. Use LSODAR if the problem has roots."@en)
SubClassOf(kisao:KISAO_0000560 kisao:KISAO_0000094)
SubClassOf(kisao:KISAO_0000560 ObjectSomeValuesFrom(kisao:KISAO_0000246 ObjectIntersectionOf(kisao:KISAO_0000088 kisao:KISAO_0000089)))

# Class: kisao:KISAO_0000561 (Pahle hybrid Gibson-Bruck Next Reaction method/Runge-Kutta method)

AnnotationAssertion(dc:created kisao:KISAO_0000561 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000561 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000561 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000561 "Pahle hybrid Gibson-Bruck Next Reaction method/Runge-Kutta method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Pedro Mendes, Stefan Hoops, Sven Sahle, Ralph Gauges, Joseph Dada & Ursula Kummer. Computational modeling of biochemical networks using COPASI. Methods in Molecular Biology 500, 17–59 (2009)."@en) rdfs:seeAlso kisao:KISAO_0000561 "http://identifiers.org/doi/10.1007/978-1-59745-525-1_2"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Frank T. Bergmann, Stefan Hoops, Brian Klahn, Ursula Kummer, Pedro Mendes Jürgen Pahle & Sven Sahle. COPASI and its applications in biotechnology. Journal of Biotechnology 261, 215–220 (2017)."@en) rdfs:seeAlso kisao:KISAO_0000561 "http://identifiers.org/doi/10.1016/j.jbiotec.2017.06.1200"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Stefan Hoops, Sven Sahle, Ralph Gauges, Christine Lee, Jürgen Pahle, Natalia Simus, Mudita Singhal, Liang Xu, Pedro Mendes & Ursula Kummer. COPASI—a complex pathway simulator. Bioinformatics 22 (24), 3067–3074 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000561 "http://identifiers.org/doi/10.1093/bioinformatics/btl485"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Sven Sahle, Ralph Gauges, Jürgen Pahle, Natalia Simus, Ursula Kummer, Stefan Hoops, Christine Lee, Mudita Singhal, Liang Xu & Pedro Mendes. Simulation of biochemical networks using COPASI—a complex pathway simulator. Proceedings of the 2006 Winter Simulation Conference, Monterey, CA, USA, 1698–1706 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000561 "http://identifiers.org/doi/10.5555/1218112.1218421"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000561 "Combines a deterministic numerical integration of ODEs with a stochastic simulation algorithm. The whole biochemical network is partitioned into a deterministic and a stochastic subnet internally. The deterministic subnet contains all reactions in which only species with high particle numbers take part. All reactions with at least one low-numbered species are in the stochastic subnet. The partitioning of the biochemical network can change dynamically during the simulation. The reaction probabilities of the stochastic subnet are approximated as constant during one stochastic step. A 4th-order Runge-Kutta method is used to numerically integrate the deterministic part of the system. The stochastic subnet is simulated by the Gibson-Bruck Next Reaction Method."@en)
SubClassOf(kisao:KISAO_0000561 kisao:KISAO_0000231)
SubClassOf(kisao:KISAO_0000561 ObjectSomeValuesFrom(kisao:KISAO_0000246 ObjectIntersectionOf(kisao:KISAO_0000027 kisao:KISAO_0000032)))

# Class: kisao:KISAO_0000562 (Pahle hybrid Gibson-Bruck Next Reaction method/LSODA method)

AnnotationAssertion(dc:created kisao:KISAO_0000562 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000562 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000562 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000562 "Pahle hybrid Gibson-Bruck Next Reaction method/LSODA method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Pedro Mendes, Stefan Hoops, Sven Sahle, Ralph Gauges, Joseph Dada & Ursula Kummer. Computational modeling of biochemical networks using COPASI. Methods in Molecular Biology 500, 17–59 (2009)."@en) rdfs:seeAlso kisao:KISAO_0000562 "http://identifiers.org/doi/10.1007/978-1-59745-525-1_2"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Frank T. Bergmann, Stefan Hoops, Brian Klahn, Ursula Kummer, Pedro Mendes Jürgen Pahle & Sven Sahle. COPASI and its applications in biotechnology. Journal of Biotechnology 261, 215–220 (2017)."@en) rdfs:seeAlso kisao:KISAO_0000562 "http://identifiers.org/doi/10.1016/j.jbiotec.2017.06.1200"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Stefan Hoops, Sven Sahle, Ralph Gauges, Christine Lee, Jürgen Pahle, Natalia Simus, Mudita Singhal, Liang Xu, Pedro Mendes & Ursula Kummer. COPASI—a complex pathway simulator. Bioinformatics 22 (24), 3067–3074 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000562 "http://identifiers.org/doi/10.1093/bioinformatics/btl485"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Sven Sahle, Ralph Gauges, Jürgen Pahle, Natalia Simus, Ursula Kummer, Stefan Hoops, Christine Lee, Mudita Singhal, Liang Xu & Pedro Mendes. Simulation of biochemical networks using COPASI—a complex pathway simulator. Proceedings of the 2006 Winter Simulation Conference, Monterey, CA, USA, 1698–1706 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000562 "http://identifiers.org/doi/10.5555/1218112.1218421"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000562 "Combines a deterministic numerical integration of ODEs with a stochastic simulation algorithm. The whole biochemical network is partitioned into a deterministic and a stochastic subnet internally. The deterministic subnet contains all reactions in which only species with high particle numbers take part. All reactions with at least one low-numbered species are in the stochastic subnet. The partitioning of the biochemical network can change dynamically during the simulation. The reaction probabilities of the stochastic subnet are approximated as constant during one stochastic step. The deterministic subnet is integrated with LSODA. The stochastic subnet is simulated by the Gibson-Bruck Next Reaction Method."@en)
SubClassOf(kisao:KISAO_0000562 kisao:KISAO_0000231)
SubClassOf(kisao:KISAO_0000562 ObjectSomeValuesFrom(kisao:KISAO_0000246 ObjectIntersectionOf(kisao:KISAO_0000027 kisao:KISAO_0000088)))

# Class: kisao:KISAO_0000563 (Pahle hybrid Gibson-Bruck Next Reaction method/RK-45 method)

AnnotationAssertion(dc:created kisao:KISAO_0000563 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000563 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000563 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000563 "Pahle hybrid Gibson-Bruck Next Reaction method/RK-45 method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Pedro Mendes, Stefan Hoops, Sven Sahle, Ralph Gauges, Joseph Dada & Ursula Kummer. Computational modeling of biochemical networks using COPASI. Methods in Molecular Biology 500, 17–59 (2009)."@en) rdfs:seeAlso kisao:KISAO_0000563 "http://identifiers.org/doi/10.1007/978-1-59745-525-1_2"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Frank T. Bergmann, Stefan Hoops, Brian Klahn, Ursula Kummer, Pedro Mendes Jürgen Pahle & Sven Sahle. COPASI and its applications in biotechnology. Journal of Biotechnology 261, 215–220 (2017)."@en) rdfs:seeAlso kisao:KISAO_0000563 "http://identifiers.org/doi/10.1016/j.jbiotec.2017.06.1200"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Stefan Hoops, Sven Sahle, Ralph Gauges, Christine Lee, Jürgen Pahle, Natalia Simus, Mudita Singhal, Liang Xu, Pedro Mendes & Ursula Kummer. COPASI—a complex pathway simulator. Bioinformatics 22 (24), 3067–3074 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000563 "http://identifiers.org/doi/10.1093/bioinformatics/btl485"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Sven Sahle, Ralph Gauges, Jürgen Pahle, Natalia Simus, Ursula Kummer, Stefan Hoops, Christine Lee, Mudita Singhal, Liang Xu & Pedro Mendes. Simulation of biochemical networks using COPASI—a complex pathway simulator. Proceedings of the 2006 Winter Simulation Conference, Monterey, CA, USA, 1698–1706 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000563 "http://identifiers.org/doi/10.5555/1218112.1218421"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000563 "Combines a deterministic numerical integration of ODEs with a stochastic simulation algorithm. The whole biochemical network is partitioned into a deterministic and a stochastic subnet internally. The deterministic subnet contains all reactions in which only species with high particle numbers take part. All reactions with at least one low-numbered species are in the stochastic subnet. The partitioning of the biochemical network can change dynamically during the simulation. The reaction probabilities of the stochastic subnet are approximated as constant during one stochastic step. The deterministic subnet is integrated with RK-45. The stochastic subnet is simulated by the Gibson-Bruck Next Reaction Method."@en)
SubClassOf(kisao:KISAO_0000563 kisao:KISAO_0000231)
SubClassOf(kisao:KISAO_0000563 ObjectSomeValuesFrom(kisao:KISAO_0000246 ObjectIntersectionOf(kisao:KISAO_0000027 kisao:KISAO_0000086)))

# Class: kisao:KISAO_0000564 (stochastic Runge-Kutta method)

AnnotationAssertion(dc:created kisao:KISAO_0000564 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000564 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000564 "stochastic Runge-Kutta method"@en)
AnnotationAssertion(rdfs:seeAlso kisao:KISAO_0000564 "https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_method_(SDE)"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000564 "Technique for the approximate numerical solution of a systems of stochastic differential equations (SDEs). The method is a generalisation of the Runge-Kutta method for ordinary differential equations to stochastic differential equations."@en)
SubClassOf(kisao:KISAO_0000564 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000564 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000564 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000371))

# Class: kisao:KISAO_0000565 (absolute tolerance for root finding)

AnnotationAssertion(dc:created kisao:KISAO_0000565 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000565 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000565 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000565 "absolute tolerance for root finding"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000565 "Absolute error tolerance for root finding."@en)
SubClassOf(kisao:KISAO_0000565 kisao:KISAO_0000211)

# Class: kisao:KISAO_0000566 (stochastic second order Runge-Kutta method)

AnnotationAssertion(dc:created kisao:KISAO_0000566 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000566 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000566 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000566 "stochastic second order Runge-Kutta method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Andreas Rößler. Second order Runge-Kutta methods for Itô stochastic differential equations. SIAM Journal Numerical Analysis 47 (3), 1713–1738 (2009)."@en) rdfs:seeAlso kisao:KISAO_0000566 "http://identifiers.org/doi/10.1137/060673308"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000566 "RI5"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000566 "Technique for the second order approximate numerical solution of a systems of stochastic differential equations (SDEs). The method is a generalisation of the Runge-Kutta method for ordinary differential equations to stochastic differential equations."@en)
SubClassOf(kisao:KISAO_0000566 kisao:KISAO_0000564)
SubClassOf(kisao:KISAO_0000566 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000565))
SubClassOf(kisao:KISAO_0000566 ObjectMaxCardinality(1 kisao:KISAO_0000259 kisao:KISAO_0000567))

# Class: kisao:KISAO_0000567 (force physical correctness)

AnnotationAssertion(dc:created kisao:KISAO_0000567 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000567 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "COPASI"@end) kisao:isImplementedIn kisao:KISAO_0000567 "http://identifiers.org/biosimulators/copasi"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000567 "force physical correctness"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000567 "Indicates whether to force physical correctness."@en)
SubClassOf(kisao:KISAO_0000567 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000568 (NLEQ1)

AnnotationAssertion(dc:created kisao:KISAO_0000568 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000568 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@end) kisao:isImplementedIn kisao:KISAO_0000568 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000568 "NLEQ1"@en)
AnnotationAssertion(Annotation(rdfs:comment "Ulrich Nowak & Lutz Weimann. A family of Newton codes for systems of highly nonlinear equations - algorithm, implementation, application. Konrad-Zuse-Zentrum für Informationstechnik Berlin 91-10 (1991)."@en) rdfs:seeAlso kisao:KISAO_0000568 "http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.43.3751"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Peter Deuflhard. Newton methods for nonlinear problems. Affine Invariance and Adaptive Algorithms (2004)."@en) rdfs:seeAlso kisao:KISAO_0000568 "http://identifiers.org/doi/10.1007/978-3-642-23899-4"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000568 "Newton-type method for solveing non-linear (NL) equations (EQ)"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000568 "numerical solution of nonlinear (NL) equations (EQ) especially designed for numerically sensitive problems"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000568 "Damped Newton-algorithm with rank strategy for systems of highly nonlinear equations.

Global Newton method with error oriented convergence criterion; arbitrary selection of direct linear equation solver."@en)
SubClassOf(kisao:KISAO_0000568 kisao:KISAO_0000408)

# Class: kisao:KISAO_0000569 (NLEQ2)

AnnotationAssertion(dc:created kisao:KISAO_0000569 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000569 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@end) kisao:isImplementedIn kisao:KISAO_0000569 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000569 "NLEQ2"@en)
AnnotationAssertion(Annotation(rdfs:comment "Ulrich Nowak & Lutz Weimann. A family of Newton codes for systems of highly nonlinear equations - algorithm, implementation, application. Konrad-Zuse-Zentrum für Informationstechnik Berlin 91-10 (1991)."@en) rdfs:seeAlso kisao:KISAO_0000569 "http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.43.3751"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Peter Deuflhard. Newton methods for nonlinear problems. Affine Invariance and Adaptive Algorithms (2004)."@en) rdfs:seeAlso kisao:KISAO_0000569 "http://identifiers.org/doi/10.1007/978-3-642-23899-4"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000569 "Newton-type method for solveing non-linear (NL) equations (EQ)"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000569 "numerical solution of nonlinear (NL) equations (EQ) especially designed for numerically sensitive problems"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000569 "Damped Newton-algorithm with rank strategy for systems of highly nonlinear equations.

Global Newton method with error oriented convergence criterion; QR-decomposition with subcondition number estimate."@en)
SubClassOf(kisao:KISAO_0000569 kisao:KISAO_0000408)

# Class: kisao:KISAO_0000570 (auto reduce tolerances)

AnnotationAssertion(dc:created kisao:KISAO_0000570 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000570 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "PySCeS"@end) kisao:isImplementedIn kisao:KISAO_0000570 "http://identifiers.org/biosimulators/pysces"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000570 "auto reduce tolerances"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000570 "Whether to automatically reduce tolerances."@en)
SubClassOf(kisao:KISAO_0000570 kisao:KISAO_0000242)
SubClassOf(kisao:KISAO_0000570 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000571 (absolute tolerance adjustment factor)

AnnotationAssertion(dc:created kisao:KISAO_0000571 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000571 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "PySCeS"@end) kisao:isImplementedIn kisao:KISAO_0000571 "http://identifiers.org/biosimulators/pysces"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000571 "absolute tolerance adjustment factor"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000571 "How much to adjust the absolute tolerance."@en)
SubClassOf(kisao:KISAO_0000571 kisao:KISAO_0000597)

# Class: kisao:KISAO_0000572 (level of superimposed noise)

AnnotationAssertion(dc:created kisao:KISAO_0000572 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000572 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "BoolNet"@end) kisao:isImplementedIn kisao:KISAO_0000572 "http://identifiers.org/biosimulators/boolnet"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000572 "level of superimposed noise"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000572 "noise level"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000572 "Standard deviation of the Gaussian noise which is added to each prediction."@en)
SubClassOf(kisao:KISAO_0000572 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000573 (probabilistic logical model simulation method)

AnnotationAssertion(dc:created kisao:KISAO_0000573 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000573 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "BoolNet"@end) kisao:isImplementedIn kisao:KISAO_0000573 "http://identifiers.org/biosimulators/boolnet"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000573 "probabilistic logical model simulation method"@en)
AnnotationAssertion(rdfs:seeAlso kisao:KISAO_0000573 "http://identifiers.org/doi/10.1093/bioinformatics/btq124"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000573 "Qualitative (logical) models specify the evolution rules of their components. Probabilistic networks allow for specifying more than one transition function per variable/gene. Each of these functions has a probability to be chosen, where the probabilities of all functions for one variable sum up to 1. Transitions are performed synchronously by choosing one transition function for each gene according to their probabilities and applying them to the current state."@en)
SubClassOf(kisao:KISAO_0000573 kisao:KISAO_0000319)
SubClassOf(kisao:KISAO_0000573 kisao:KISAO_0000448)
SubClassOf(kisao:KISAO_0000573 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000104))
SubClassOf(kisao:KISAO_0000573 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000452))

# Class: kisao:KISAO_0000574 (species transition probabilities)

AnnotationAssertion(dc:created kisao:KISAO_0000574 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000574 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "BoolNet"@end) kisao:isImplementedIn kisao:KISAO_0000574 "http://identifiers.org/biosimulators/boolnet"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000574 "species transition probabilities"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000574 "Probability of each species to be chosen for the next state transition."@en)
SubClassOf(kisao:KISAO_0000574 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000575 (hybrid tau-leaping method)

AnnotationAssertion(dc:created kisao:KISAO_0000575 "2020-11-06"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000575 "BD"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000575 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "GillesPy2"@end) kisao:isImplementedIn kisao:KISAO_0000575 "http://identifiers.org/biosimulators/gillespy2"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000575 "hybrid tau-leaping method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Drawert B et al. GillesPy2"@en) rdfs:seeAlso kisao:KISAO_0000575 "https://github.com/StochSS/GillesPy2"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000575 "A continuously coupled hybrid deterministic/stochastic simulation algorithm for biochemical networks. Biochemical species are classified as continuous, discrete, or switch. Tau-leaping is used to simulate stochastic species, and LSODA or another ODE integration method is used to simulate continuous species. Switch species are dynamically classified as either continuous or discrete at each timestep depending on a user defined error tolerance."@en)
SubClassOf(kisao:KISAO_0000575 kisao:KISAO_0000039)
SubClassOf(kisao:KISAO_0000575 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000575 ObjectSomeValuesFrom(kisao:KISAO_0000246 ObjectIntersectionOf(kisao:KISAO_0000039 ObjectUnionOf(kisao:KISAO_0000064 kisao:KISAO_0000088 kisao:KISAO_0000281))))

# Class: kisao:KISAO_0000576 (quadratic MOMA)

AnnotationAssertion(dc:created kisao:KISAO_0000576 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000576 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "COBRA Toolbox"@end) kisao:isImplementedIn kisao:KISAO_0000576 "http://identifiers.org/biosimulators/cobratoolbox"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Optflux"@end) kisao:isImplementedIn kisao:KISAO_0000576 "http://identifiers.org/biosimulators/optflux"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "RAVEN"@end) kisao:isImplementedIn kisao:KISAO_0000576 "http://identifiers.org/biosimulators/raven"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000576 "quadratic MOMA"@en)
AnnotationAssertion(Annotation(rdfs:comment "Segre, D., Vitkup, D., & Church, G. M. (2002). Analysis of optimality in natural and perturbed metabolic networks. Proceedings of the National Academy of Sciences, 99(23), 15112-15117."@en) rdfs:seeAlso kisao:KISAO_0000576 "http://identifiers.org/doi/10.1073/pnas.232349399"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000576 "MOMA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000576 "Quadratic Minimization of Metabolic Adjustment"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000576 "minimization of metabolic adjustment"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000576 "quadratic minimization of metabolic adjustment"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000576 "Minimization of metabolic adjustment (MOMA) is an extension of FBA for the prediction of flux distributions in gene knockouts. MOMA employs quadratic programming to identify the closest point (in terms of its Euclidean distance) in the permissible flux space of the knockout to the wild-type flux vector by solving the optimization problem

Min sum((fluxAi - fluxBi)^2) + sum(fluxAi)^(fluxMinimizationWeight) + sum(fluxBi)^(fluxMinimizationWeight)"@en)
SubClassOf(kisao:KISAO_0000576 kisao:KISAO_0000593)
SubClassOf(kisao:KISAO_0000576 ObjectSomeValuesFrom(kisao:KISAO_0000259 kisao:KISAO_0000577))
DisjointClasses(kisao:KISAO_0000576 kisao:KISAO_0000579)

# Class: kisao:KISAO_0000577 (flux minimization weight)

AnnotationAssertion(dc:created kisao:KISAO_0000577 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000577 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000577 "flux minimization weight"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000577 "The degree to which minimization of the sum of fluxes should be taken into account in Minimization of Metabolic Adjustment (MOMA) which solvers the optimization problem
 
Min sum((fluxAi - fluxBi)^2) + sum(fluxAi)^(fluxMinimizationWeight) + sum(fluxBi)^(fluxMinimizationWeight)"@en)
SubClassOf(kisao:KISAO_0000577 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000578 (nested algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000578 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000578 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000578 "nested algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000578 "nested method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000578 "subalgorithm"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000578 "A nested algorithm of an algorithm"@en)
SubClassOf(kisao:KISAO_0000578 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000579 (linear MOMA)

AnnotationAssertion(dc:created kisao:KISAO_0000579 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000579 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "COBRA Toolbox"@end) kisao:isImplementedIn kisao:KISAO_0000579 "http://identifiers.org/biosimulators/cobratoolbox"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Optflux"@end) kisao:isImplementedIn kisao:KISAO_0000579 "http://identifiers.org/biosimulators/optflux"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000579 "linear MOMA"@en)
AnnotationAssertion(Annotation(rdfs:comment "Szappanos, B., Kovács, K., Szamecz, B., Honti, F., Costanzo, M., Baryshnikova, A., ... & Andrews, B. J. (2011). An integrated approach to characterize genetic interaction networks in yeast metabolism. Nature genetics, 43(7), 656-662."@en) rdfs:seeAlso kisao:KISAO_0000579 "http://identifiers.org/doi/10.1038/ng.846"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000579 "Linear Minimization of Metabolic Adjustment"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000579 "linear minimization of metabolic adjustment"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000579 "Linear minimization of metabolic adjustment (MOMA) is an extension of FBA for the prediction of flux distributions in gene knockouts. Linear MOMA employs linear programming to identify the closest point (in terms of its L1 norm) in the permissible flux space of the knockout to the wild-type flux vector by solving the optimization problem

Min sum(|fluxAi - fluxBi|)"@en)
SubClassOf(kisao:KISAO_0000579 kisao:KISAO_0000593)

# Class: kisao:KISAO_0000580 (ROOM)

AnnotationAssertion(dc:created kisao:KISAO_0000580 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000580 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "COBRA Toolbox"@end) kisao:isImplementedIn kisao:KISAO_0000580 "http://identifiers.org/biosimulators/cobratoolbox"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Optflux"@end) kisao:isImplementedIn kisao:KISAO_0000580 "http://identifiers.org/biosimulators/optflux"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000580 "ROOM"@en)
AnnotationAssertion(Annotation(rdfs:comment "Shlomi, T., Berkman, O., & Ruppin, E. (2005). Regulatory on/off minimization of metabolic flux changes after genetic perturbations. Proceedings of the national academy of sciences, 102(21), 7695-7700."@en) rdfs:seeAlso kisao:KISAO_0000580 "http://identifiers.org/doi/10.1073/pnas.0406346102"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000580 "Regulatory on/off minimization of metabolic flux changes"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000580 "regulatory on/off minimization of metabolic flux changes"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000580 "Constraint-based algorithm for predicting the metabolic steady state after gene knockouts which aims to minimize the number of significant flux changes (hence on/off) with respect to the wild type."@en)
SubClassOf(kisao:KISAO_0000580 kisao:KISAO_0000407)
SubClassOf(kisao:KISAO_0000580 kisao:KISAO_0000622)

# Class: kisao:KISAO_0000581 (BKMC)

AnnotationAssertion(dc:created kisao:KISAO_0000581 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000581 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "MaBoSS"@end) kisao:isImplementedIn kisao:KISAO_0000581 "http://identifiers.org/biosimulators/maboss"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000581 "BKMC"@en)
AnnotationAssertion(Annotation(rdfs:comment "Stoll, G., Viara, E., Barillot, E., & Calzone, L. (2012). Continuous time Boolean modeling for biological signaling: application of Gillespie algorithm. BMC systems biology, 6(1), 1-18."@en) rdfs:seeAlso kisao:KISAO_0000581 "http://identifiers.org/doi/10.1186/1752-0509-6-116"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000581 "Boolean Kinetic Monte-Carlo"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000581 "Boolean kinetic Monte-Carlo"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000581 "The Boolean kinetic Monte Carlo method (BKMC) is a natural generalization of the asynchronous Boolean simulation method, with a direct probabilistic interpretation. In the BKMC framework, the dynamics is parameterized by a biological time and the order of update is noisy, which is less strict than priority classes introduced in GINsin. A BKMC model is specified by logical rules as in regular Boolean models but with a more precise information: a numerical rate is added for each transition of each node."@en)
SubClassOf(kisao:KISAO_0000581 kisao:KISAO_0000319)
SubClassOf(kisao:KISAO_0000581 kisao:KISAO_0000573)
SubClassOf(kisao:KISAO_0000581 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000322))
SubClassOf(kisao:KISAO_0000581 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000452))
SubClassOf(kisao:KISAO_0000581 ObjectSomeValuesFrom(kisao:KISAO_0000359 kisao:KISAO_0000029))

# Class: kisao:KISAO_0000582 (Spatiocyte method)

AnnotationAssertion(dc:created kisao:KISAO_0000582 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000582 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "E-Cell 4"@end) kisao:isImplementedIn kisao:KISAO_0000582 "http://identifiers.org/biosimulators/ecell4"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000582 "Spatiocyte method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Arjunan, S., & Tomita, M. (2009). A new multicompartmental reaction-diffusion modeling method links transient membrane attachment of E. coli MinE to E-ring formation. Nature Precedings, 1-1."@en) rdfs:seeAlso kisao:KISAO_0000582 "http://identifiers.org/doi/10.1038/npre.2009.3845.1"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000582 "Lattice-based stochastic particle simulation method for biochemical reaction and diffusion processes."@en)
SubClassOf(kisao:KISAO_0000582 kisao:KISAO_0000056)

# Class: kisao:KISAO_0000583 (minimum order)

AnnotationAssertion(dc:created kisao:KISAO_0000583 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000583 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "JSim"@end) kisao:isImplementedIn kisao:KISAO_0000583 "http://identifiers.org/biosimulators/jsim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000583 "minimum order"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000583 "Minimum order of method."@en)
SubClassOf(kisao:KISAO_0000583 kisao:KISAO_0000594)

# Class: kisao:KISAO_0000584 (initial order)

AnnotationAssertion(dc:created kisao:KISAO_0000584 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000584 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "JSim"@end) kisao:isImplementedIn kisao:KISAO_0000584 "http://identifiers.org/biosimulators/jsim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000584 "initial order"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000584 "Initial order of method."@en)
SubClassOf(kisao:KISAO_0000584 kisao:KISAO_0000594)

# Class: kisao:KISAO_0000585 (TOMS731)

AnnotationAssertion(dc:created kisao:KISAO_0000585 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000585 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "JSim"@end) kisao:isImplementedIn kisao:KISAO_0000585 "http://identifiers.org/biosimulators/jsim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000585 "TOMS731"@en)
AnnotationAssertion(Annotation(rdfs:comment "Blom, J. G., & Zegeling, P. A. (1994). Algorithm 731: a moving-grid interface for systems of one-dimensional time-dependent partial differential equations. ACM Transactions on Mathematical Software (TOMS), 20(2), 194-214."@en) rdfs:seeAlso kisao:KISAO_0000585 "http://identifiers.org/doi/10.1145/178365.178391"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000585 "Moving-grid interface for systems of one-dimensional time-dependent partial differential equations."@en)
SubClassOf(kisao:KISAO_0000585 kisao:KISAO_0000369)

# Class: kisao:KISAO_0000586 (Gibson-Bruck next reaction algorithm with indexed priority queue)

AnnotationAssertion(dc:created kisao:KISAO_0000586 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000586 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "SBSCL"@end) kisao:isImplementedIn kisao:KISAO_0000586 "http://identifiers.org/biosimulators/sbscl"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000586 "Gibson-Bruck next reaction algorithm with indexed priority queue"@en)
SubClassOf(kisao:KISAO_0000586 kisao:KISAO_0000027)

# Class: kisao:KISAO_0000587 (IMEX)

AnnotationAssertion(dc:created kisao:KISAO_0000587 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000587 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "BioUML"@end) kisao:isImplementedIn kisao:KISAO_0000587 "http://identifiers.org/biosimulators/biouml"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000587 "IMEX"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000587 "Implicit-Explicit Runge-Kutta method"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000587 "implicit-explicit Runge-Kutta method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000587 "Method for solving stiff and imaginary ODE problems"@en)
SubClassOf(kisao:KISAO_0000587 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000587 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000587 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))

# Class: kisao:KISAO_0000588 (flux sampling)

AnnotationAssertion(dc:created kisao:KISAO_0000588 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000588 "JRK"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000588 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000588 "flux sampling"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000588 "Method for sampling fluxes from the null space of a flux balance analysis model"@en)
SubClassOf(kisao:KISAO_0000588 kisao:KISAO_0000407)

# Class: kisao:KISAO_0000589 (ACB flux sampling method)

AnnotationAssertion(dc:created kisao:KISAO_0000589 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000589 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "COBRA Toolbox"@end) kisao:isImplementedIn kisao:KISAO_0000589 "http://identifiers.org/biosimulators/cobratoolbox"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000589 "ACB flux sampling method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Heirendt, L., Arreckx, S., Pfau, T., Mendoza, S. N., Richelle, A., Heinken, A., ... & Magnusdóttir, S. (2019). Creation and analysis of biochemical constraint-based models using the COBRA Toolbox v. 3.0. Nature protocols, 14(3), 639-702."@en) rdfs:seeAlso kisao:KISAO_0000589 "http://identifiers.org/doi/10.1038/s41596-018-0098-2"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000589 "Artificial centering boundary flux sampling method"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000589 "artificial centering boundary flux sampling method"@en)
SubClassOf(kisao:KISAO_0000589 kisao:KISAO_0000588)
DisjointClasses(kisao:KISAO_0000589 kisao:KISAO_0000590)

# Class: kisao:KISAO_0000590 (ACHR flux sampling method)

AnnotationAssertion(dc:created kisao:KISAO_0000590 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000590 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "COBRApy"@end) kisao:isImplementedIn kisao:KISAO_0000590 "http://identifiers.org/biosimulators/cobrapy"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "COBRA Toolbox"@end) kisao:isImplementedIn kisao:KISAO_0000590 "http://identifiers.org/biosimulators/cobratoolbox"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000590 "ACHR flux sampling method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Kaufman, D. E., & Smith, R. L. (1998). Direction choice for accelerated convergence in hit-and-run sampling. Operations Research, 46(1), 84-95."@en) rdfs:seeAlso kisao:KISAO_0000590 "http://identifiers.org/doi/10.1287/opre.46.1.84"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000590 "artificial centering hit-and-run flux sampling method"@en)
SubClassOf(kisao:KISAO_0000590 kisao:KISAO_0000588)

# Class: kisao:KISAO_0000591 (mdFBA)

AnnotationAssertion(dc:created kisao:KISAO_0000591 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000591 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "COBRA Toolbox"@end) kisao:isImplementedIn kisao:KISAO_0000591 "http://identifiers.org/biosimulators/cobratoolbox"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000591 "mdFBA"@en)
AnnotationAssertion(Annotation(rdfs:comment "Benyamini, T., Folger, O., Ruppin, E., & Shlomi, T. (2010). Flux balance analysis accounting for metabolite dilution. Genome biology, 11(4), R43."@en) rdfs:seeAlso kisao:KISAO_0000591 "http://identifiers.org/doi/10.1186/gb-2010-11-4-r43"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000591 "metabolic dilution flux balance analysis"@en)
SubClassOf(kisao:KISAO_0000591 kisao:KISAO_0000437)

# Class: kisao:KISAO_0000592 (dynamic rFBA)

AnnotationAssertion(dc:created kisao:KISAO_0000592 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000592 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "COBRA Toolbox"@end) kisao:isImplementedIn kisao:KISAO_0000592 "http://identifiers.org/biosimulators/cobratoolbox"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000592 "dynamic rFBA"@en)
AnnotationAssertion(Annotation(rdfs:comment "Covert, M. W., Schilling, C. H., & Palsson, B. (2001). Regulation of gene expression in flux balance models of metabolism. Journal of theoretical biology, 213(1), 73-88."@en) rdfs:seeAlso kisao:KISAO_0000592 "http://identifiers.org/doi/10.1006/jtbi.2001.2405"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000592 "dynamic regulatory flux balance analysis"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000592 "rFBA"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000592 "regulatory flux balance analysis"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000592 "Method for predicting the dynamics of metabolic fluxes under patterns of the regulation of gene expression"@en)
SubClassOf(kisao:KISAO_0000592 kisao:KISAO_0000595)
DisjointClasses(kisao:KISAO_0000592 kisao:KISAO_0000596)

# Class: kisao:KISAO_0000593 (MOMA)

AnnotationAssertion(dc:created kisao:KISAO_0000593 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000593 "JRK"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000593 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000593 "MOMA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000593 "Minimization of Metabolic Adjustment"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000593 "minimization of metabolic adjustment"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000593 "minimization of metabolic adjustment (MOMA) is an extension of FBA for the prediction of flux distributions in gene knockouts. MOMA identifies the closest point in the permissible flux space of the knockout to the wild-type flux vector by solving an optimization problem."@en)
SubClassOf(kisao:KISAO_0000593 kisao:KISAO_0000407)
SubClassOf(kisao:KISAO_0000593 kisao:KISAO_0000622)

# Class: kisao:KISAO_0000594 (order)

AnnotationAssertion(dc:created kisao:KISAO_0000594 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000594 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000594 "order"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000594 "Order of method"@en)
SubClassOf(kisao:KISAO_0000594 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000595 (rFBA)

AnnotationAssertion(dc:created kisao:KISAO_0000595 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000595 "JRK"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000595 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000595 "rFBA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000595 "regulatory flux balance analysis"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000595 "Method for predicting metabolic fluxes under patterns of the regulation of gene expression"@en)
SubClassOf(kisao:KISAO_0000595 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000595 kisao:KISAO_0000622)

# Class: kisao:KISAO_0000596 (srFBA)

AnnotationAssertion(dc:created kisao:KISAO_0000596 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000596 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000596 "srFBA"@en)
AnnotationAssertion(Annotation(rdfs:comment "Shlomi, T., Eisenberg, Y., Sharan, R., & Ruppin, E. (2007). A genome‐scale computational study of the interplay between transcriptional regulation and metabolism. Molecular systems biology, 3(1), 101."@en) rdfs:seeAlso kisao:KISAO_0000596 "http://identifiers.org/doi/10.1038/msb4100141"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000596 "SR-FBA"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000596 "steady-state regulatory flux balance analysis"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000596 "Method for predicting steady-state metabolic fluxes under patterns of the regulation of gene expression"@en)
SubClassOf(kisao:KISAO_0000596 kisao:KISAO_0000437)
SubClassOf(kisao:KISAO_0000596 kisao:KISAO_0000595)

# Class: kisao:KISAO_0000597 (tolerance)

AnnotationAssertion(dc:created kisao:KISAO_0000597 "2020-10-29"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000597 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000597 "tolerance"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000597 "Numeric value specifying the desired tolerance the user wants to achieve. A smaller value means that the prediction is calculated more accurately."@en)
SubClassOf(kisao:KISAO_0000597 kisao:KISAO_0000242)

# Class: kisao:KISAO_0000598 (hybrid Gibson - Milstein method)

AnnotationAssertion(dc:created kisao:KISAO_0000598 "2021-01-13"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000598 "JRK"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000598 "MLB"@en)
AnnotationAssertion(Annotation(rdfs:comment "VCell"@en) kisao:isImplementedIn kisao:KISAO_0000598 "http://identifiers.org/biosimulators/vcell"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000598 "hybrid Gibson - Milstein method"@en)
AnnotationAssertion(Annotation(rdfs:comment "H.Salis, V. Sotiropoulos and Y. Kaznessis,'Multiscale Hy3S: Hybrid stochastic simulation for supercomputers', BMC Bioinformatics 7:93 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000598 "http://identifiers.org/doi/10.1186/1471-2105-7-93"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000598 "A hybrid stochastic method partitions the system into subsets of fast and slow reactions and approximates the fast reactions as a continuous Markov process, using a chemical Langevin equation, and accurately describes the slow dynamics using the Gibson algorithm. Fixed time step Milstein is used for approximate numerical solution of CLE."@en)
SubClassOf(kisao:KISAO_0000598 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000598 ObjectSomeValuesFrom(kisao:KISAO_0000246 ObjectIntersectionOf(kisao:KISAO_0000027 kisao:KISAO_0000287)))

# Class: kisao:KISAO_0000599 (hybrid Gibson - Euler-Maruyama method)

AnnotationAssertion(dc:created kisao:KISAO_0000599 "2021-01-13"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000599 "JRK"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000599 "MLB"@en)
AnnotationAssertion(Annotation(rdfs:comment "VCell"@en) kisao:isImplementedIn kisao:KISAO_0000599 "http://identifiers.org/biosimulators/vcell"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000599 "hybrid Gibson - Euler-Maruyama method"@en)
AnnotationAssertion(Annotation(rdfs:comment "H.Salis, V. Sotiropoulos and Y. Kaznessis,'Multiscale Hy3S: Hybrid stochastic simulation for supercomputers', BMC Bioinformatics 7:93 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000599 "http://identifiers.org/doi/10.1186/1471-2105-7-93"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000599 "A hybrid stochastic method partitions the system into subsets of fast and slow reactions and approximates the fast reactions as a continuous Markov process, using a chemical Langevin equation, and accurately describes the slow dynamics using the Gibson algorithm. Fixed time step Milstein is used for approximate numerical solution of CLE."@en)
SubClassOf(kisao:KISAO_0000599 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000599 ObjectSomeValuesFrom(kisao:KISAO_0000246 ObjectIntersectionOf(kisao:KISAO_0000027 kisao:KISAO_0000286)))

# Class: kisao:KISAO_0000600 (hybrid adaptive Gibson - Milstein method)

AnnotationAssertion(dc:created kisao:KISAO_0000600 "2021-01-13"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000600 "JRK"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000600 "MLB"@en)
AnnotationAssertion(Annotation(rdfs:comment "VCell"@en) kisao:isImplementedIn kisao:KISAO_0000600 "http://identifiers.org/biosimulators/vcell"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000600 "hybrid adaptive Gibson - Milstein method"@en)
AnnotationAssertion(Annotation(rdfs:comment "H.Salis, V. Sotiropoulos and Y. Kaznessis,'Multiscale Hy3S: Hybrid stochastic simulation for supercomputers', BMC Bioinformatics 7:93 (2006)."@en) rdfs:seeAlso kisao:KISAO_0000600 "http://identifiers.org/doi/10.1186/1471-2105-7-93"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000600 "A hybrid stochastic method partitions the system into subsets of fast and slow reactions and approximates the fast reactions as a continuous Markov process, using a chemical Langevin equation, and accurately describes the slow dynamics using the Gibson algorithm. Fixed time step Milstein is used for approximate numerical solution of CLE."@en)
SubClassOf(kisao:KISAO_0000600 kisao:KISAO_0000352)
SubClassOf(kisao:KISAO_0000600 ObjectSomeValuesFrom(kisao:KISAO_0000246 ObjectIntersectionOf(kisao:KISAO_0000027 kisao:KISAO_0000287)))

# Class: kisao:KISAO_0000601 (number of trials)

AnnotationAssertion(dc:created kisao:KISAO_0000601 "2021-01-13"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000601 "JRK"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000601 "MLB"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000601 "number of trials"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000601 "trials"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000601 "Number of multiple trials (e.g., of a scatter search method)."@en)
SubClassOf(kisao:KISAO_0000601 kisao:KISAO_0000244)

# Class: kisao:KISAO_0000602 (minimum species threshold for continuous approximation)

AnnotationAssertion(dc:created kisao:KISAO_0000602 "2021-01-13"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000602 "JRK"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000602 "MLB"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000602 "minimum species threshold for continuous approximation"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000602 "Epsilon"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000602 "epsilon"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000602 "Minimum number of molecules of both reactant and product species required for approximation as a continuous Markov process."@en)
SubClassOf(kisao:KISAO_0000602 kisao:KISAO_0000244)

# Class: kisao:KISAO_0000603 (minimum reaction rate for continuous approximation)

AnnotationAssertion(dc:created kisao:KISAO_0000603 "2021-01-13"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000603 "JRK"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000603 "MLB"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000603 "minimum reaction rate for continuous approximation"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000603 "Lambda"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000603 "lambda"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000603 "Minimum reaction rate required for approximation as a continuous Markov process."@en)
SubClassOf(kisao:KISAO_0000603 kisao:KISAO_0000244)

# Class: kisao:KISAO_0000604 (MSR tolerance)

AnnotationAssertion(dc:created kisao:KISAO_0000604 "2021-01-13"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000604 "JRK"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000604 "MLB"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000604 "MSR tolerance"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000604 "Multiple slow reactions tolerance"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000604 "multiple slow reactions tolerance"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000604 "Maximum allowed effect of executing multiple slow reactions per numerical integration of the SDEs."@en)
SubClassOf(kisao:KISAO_0000604 kisao:KISAO_0000209)

# Class: kisao:KISAO_0000605 (SDE tolerance)

AnnotationAssertion(dc:created kisao:KISAO_0000605 "2021-01-13"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000605 "JRK"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000605 "MLB"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000605 "SDE tolerance"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000605 "Maximum allowed value of the drift and diffusion errors."@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000605 "maximum allowed value of the drift and diffusion errors."@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000605 "Stochastic differential equation tolerance"@en)
SubClassOf(kisao:KISAO_0000605 kisao:KISAO_0000209)

# Class: kisao:KISAO_0000606 (hierarchical stochastic simulation algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000606 "2021-01-25"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000606 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@en) kisao:isImplementedIn kisao:KISAO_0000606 "http://identifiers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000606 "hierarchical stochastic simulation algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Watanabe, L. H., & Myers, C. J. (2014). Hierarchical stochastic simulation algorithm for SBML models of genetic circuits. Frontiers in bioengineering and biotechnology, 2, 55."@en) rdfs:seeAlso kisao:KISAO_0000606 "http://identifiers.org/doi/10.3389/fbioe.2014.00055"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000606 "hSSA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000606 "Fast, memory-efficient method for stochastic simulation of hierarchically organized models, such as a model of a cellular population where each cell in the population is represented by the same species and reactions."@en)
SubClassOf(kisao:KISAO_0000606 kisao:KISAO_0000241)
SubClassOf(kisao:KISAO_0000606 ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102)))
SubClassOf(kisao:KISAO_0000606 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))
SubClassOf(kisao:KISAO_0000606 ObjectSomeValuesFrom(kisao:KISAO_0000361 kisao:KISAO_0000029))

# Class: kisao:KISAO_0000607 (hierarchical Fehlberg method)

AnnotationAssertion(dc:created kisao:KISAO_0000607 "2021-01-25"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000607 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@en) kisao:isImplementedIn kisao:KISAO_0000607 "http://identifiers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000607 "hierarchical Fehlberg method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Watanabe, L. H., & Myers, C. J. (2014). Hierarchical stochastic simulation algorithm for SBML models of genetic circuits. Frontiers in bioengineering and biotechnology, 2, 55."@en) rdfs:seeAlso kisao:KISAO_0000607 "http://identifiers.org/doi/10.3389/fbioe.2014.00055"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000607 "hODE"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000607 "hierarchical ODE integration method"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000607 "hierarchical ordinary differential equation integration method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000607 "Method for continuous simulation of hierarchically organized models, such as a model of a cellular population where each cell in the population is represented by the same species and reactions."@en)
SubClassOf(kisao:KISAO_0000607 kisao:KISAO_0000086)

# Class: kisao:KISAO_0000608 (hierarchical flux balance analysis)

AnnotationAssertion(dc:created kisao:KISAO_0000608 "2021-01-25"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000608 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@en) kisao:isImplementedIn kisao:KISAO_0000608 "http://identifiers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000608 "hierarchical flux balance analysis"@en)
AnnotationAssertion(Annotation(rdfs:comment "Watanabe, L. H., & Myers, C. J. (2014). Hierarchical stochastic simulation algorithm for SBML models of genetic circuits. Frontiers in bioengineering and biotechnology, 2, 55."@en) rdfs:seeAlso kisao:KISAO_0000608 "http://identifiers.org/doi/10.3389/fbioe.2014.00055"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000608 "Hierarchical FBA"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000608 "hFBA"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000608 "hierarchical FBA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000608 "Method for constraint-based simulation of hierarchically organized models, such as a model of a cellular population where each cell in the population is represented by the same species and reactions."@en)
SubClassOf(kisao:KISAO_0000608 kisao:KISAO_0000437)

# Class: kisao:KISAO_0000609 (embedded Runge-Kutta Prince-Dormand (8,9) method)

AnnotationAssertion(dc:created kisao:KISAO_0000609 "2021-01-25"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000609 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@en) kisao:isImplementedIn kisao:KISAO_0000609 "http://identifiers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000609 "embedded Runge-Kutta Prince-Dormand (8,9) method"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000609 "RK8PD"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000609 "An embedded Runge-Kutta integrator of order 8(9)."@en)
SubClassOf(kisao:KISAO_0000609 kisao:KISAO_0000302)

# Class: kisao:KISAO_0000610 (composite-rejection stochastic simulation algorithm)

AnnotationAssertion(dc:created kisao:KISAO_0000610 "2021-01-25"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000610 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@en) kisao:isImplementedIn kisao:KISAO_0000610 "http://identifiers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000610 "composite-rejection stochastic simulation algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Slepoy, A., Thompson, A. P., & Plimpton, S. J. (2008). A constant-time kinetic Monte Carlo algorithm for simulation of large biochemical reaction networks. The journal of chemical physics, 128(20), 05B618."@en) rdfs:seeAlso kisao:KISAO_0000610 "http://identifiers.org/doi/10.1063/1.2919546"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000610 "SSA-CR"@en)
SubClassOf(kisao:KISAO_0000610 kisao:KISAO_0000333)
SubClassOf(kisao:KISAO_0000610 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000236))

# Class: kisao:KISAO_0000611 (incremental stochastic simulation algorithm)

AnnotationAssertion(dc:creator kisao:KISAO_0000611 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@en) kisao:isImplementedIn kisao:KISAO_0000611 "https://identifers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000611 "incremental stochastic simulation algorithm"@en)
AnnotationAssertion(Annotation(rdfs:comment "Winstead, C., Madsen, C., & Myers, C. (2010, May). iSSA: An incremental stochastic simulation algorithm for genetic circuits. In Proceedings of 2010 IEEE International Symposium on Circuits and Systems (pp. 553-556). IEEE."@en) rdfs:seeAlso kisao:KISAO_0000611 "http://identifiers.org/doi/10.1109/ISCAS.2010.5537539"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000611 "iSSA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000611 "Performs local averaging over small time-intervals to compute statistics on typical behavior."@en)
SubClassOf(kisao:KISAO_0000611 kisao:KISAO_0000335)

# Class: kisao:KISAO_0000612 (implicit 4th order Runge-Kutta method at Gaussian points)

AnnotationAssertion(dc:created kisao:KISAO_0000612 "2021-01-25"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000612 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@en) kisao:isImplementedIn kisao:KISAO_0000612 "http://identifiers.org/biosimulators/ibiosim"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000612 "implicit 4th order Runge-Kutta method at Gaussian points"@en)
AnnotationAssertion(Annotation(rdfs:comment "EXACT"@en) skos:altLabel kisao:KISAO_0000612 "RK4IMP"@en)
SubClassOf(kisao:KISAO_0000612 kisao:KISAO_0000064)
SubClassOf(kisao:KISAO_0000612 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000612 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000374))

# Class: kisao:KISAO_0000613 (stochastic simulation algorithm with normally-distributed next reaction times)

AnnotationAssertion(dc:created kisao:KISAO_0000613 "2021-01-25"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000613 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@en) kisao:isImplementedIn kisao:KISAO_0000613 "http://identifiers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000613 "stochastic simulation algorithm with normally-distributed next reaction times"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000613 "NMC"@en)
SubClassOf(kisao:KISAO_0000613 kisao:KISAO_0000335)

# Class: kisao:KISAO_0000614 (implementation)

AnnotationAssertion(dc:created kisao:KISAO_0000614 "2021-01-25"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000614 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000614 "implementation"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000614 "An implementation of an algorithm. For example, simulation tools can this parameter to differentiate among C, Python, and Java implementations of the same algorithms and allow investigators to select one of these specific implementations through SED-ML."@en)
SubClassOf(kisao:KISAO_0000614 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000615 (fully-implicit regular grid finite volume method with a variable time step)

AnnotationAssertion(dc:created kisao:KISAO_0000615 "2021-01-30"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000615 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "VCell"@en) kisao:isImplementedIn kisao:KISAO_0000615 "http://identifiers.org/biosimulators/vcell"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000615 "fully-implicit regular grid finite volume method with a variable time step"@en)
SubClassOf(kisao:KISAO_0000615 kisao:KISAO_0000285)

# Class: kisao:KISAO_0000616 (semi-implicit regular grid finite volume method with a fixed time step)

AnnotationAssertion(dc:created kisao:KISAO_0000616 "2021-01-30"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000616 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "VCell"@en) kisao:isImplementedIn kisao:KISAO_0000616 "http://identifiers.org/biosimulators/vcell"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000616 "semi-implicit regular grid finite volume method with a fixed time step"@en)
SubClassOf(kisao:KISAO_0000616 kisao:KISAO_0000285)

# Class: kisao:KISAO_0000617 (IDA-CVODE hybrid method)

AnnotationAssertion(dc:created kisao:KISAO_0000617 "2021-01-30"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000617 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "VCell"@en) kisao:isImplementedIn kisao:KISAO_0000617 "http://identifiers.org/biosimulators/vcell"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000617 "IDA-CVODE hybrid method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000617 "Meta algorithm which chooses between IDA and CVODE depending on the problem to be solved.

CVODE is used for ordinary differential equation (ODE) systems. IDA is used for differential-algebraic equation (DAE) systems."@en)
SubClassOf(kisao:KISAO_0000617 kisao:KISAO_0000352)

# Class: kisao:KISAO_0000618 (bunker)

AnnotationAssertion(dc:created kisao:KISAO_0000618 "2021-01-30"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000618 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@en) kisao:isImplementedIn kisao:KISAO_0000618 "http://identifiers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000618 "bunker"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000618 "A variant of the stochastic simulation algorithm (SSA) in which the time to the next reaction is equated to the mean inter-event time (inverse of the sum of the propensitites of the reactions) rather than sampled from a distribution parameterized by this mean inter-event time. In this method, the next reaction time is deterministic rather than stochastic as in SSA."@en)
SubClassOf(kisao:KISAO_0000618 kisao:KISAO_0000335)

# Class: kisao:KISAO_0000619 (emc-sim)

AnnotationAssertion(dc:created kisao:KISAO_0000619 "2021-01-30"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000619 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "iBioSim"@en) kisao:isImplementedIn kisao:KISAO_0000619 "http://identifiers.org/biosimulators/ibiosim"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000619 "emc-sim"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000619 "A variant of the stochastic simulation algorithm (SSA) in which the time to the next reaction is a constant equal to 1 time unit. In this method, the next reaction time is deterministic rather than stochastic as in SSA."@en)
SubClassOf(kisao:KISAO_0000619 kisao:KISAO_0000335)

# Class: kisao:KISAO_0000620 (parsimonius flux balance analysis)

AnnotationAssertion(dc:created kisao:KISAO_0000620 "2021-04-27"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000620 "JRK"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000620 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000620 "parsimonius flux balance analysis"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000620 "pFBA"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000620 "A technique for selecting a flux distribution which is parsimonious by some metric, such as a solution which has the minimal number of active fluxes or a solution which has the smallest sum of active fluxes."@en)
SubClassOf(kisao:KISAO_0000620 kisao:KISAO_0000437)

# Class: kisao:KISAO_0000621 (stochastic simulation leaping method)

AnnotationAssertion(dc:created kisao:KISAO_0000621 "2021-04-27"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000621 "JRK"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000621 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000621 "stochastic simulation leaping method"@en)
SubClassOf(kisao:KISAO_0000621 kisao:KISAO_0000333)

# Class: kisao:KISAO_0000622 (flux balance method)

AnnotationAssertion(dc:created kisao:KISAO_0000622 "2021--04-27"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000622 "JRK"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000622 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000622 "flux balance method"@en)
SubClassOf(kisao:KISAO_0000622 kisao:KISAO_0000000)

# Class: kisao:KISAO_0000623 (flux balance problem)

AnnotationAssertion(dc:created kisao:KISAO_0000623 "2021-04-28"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000623 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000623 "flux balance problem"@en)
SubClassOf(kisao:KISAO_0000623 kisao:KISAO_0000370)

# Class: kisao:KISAO_0000624 (method for solving a system of linear equations)

AnnotationAssertion(dc:created kisao:KISAO_0000624 "2021-06-01"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000624 "JRK"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000624 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000624 "method for solving a system of linear equations"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000624 "method for solving a system of linear equations

Example system of equations:

3x + 2y - z = 0
2x - 2y + 4z = 0
-x + 1/2y - z = 0"@en)
SubClassOf(kisao:KISAO_0000624 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000624 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000373))
SubClassOf(kisao:KISAO_0000624 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000376))

# Class: kisao:KISAO_0000625 (dense direct solver)

AnnotationAssertion(dc:created kisao:KISAO_0000625 "2021-06-01"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000625 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000625 "CVODE"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000625 "dense direct solver"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000625 "denese"@en)
SubClassOf(kisao:KISAO_0000625 kisao:KISAO_0000624)

# Class: kisao:KISAO_0000626 (band direct solver)

AnnotationAssertion(dc:created kisao:KISAO_0000626 "2021-06-01"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000626 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000626 "CVODE"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000626 "band direct solver"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000626 "banded"@en)
SubClassOf(kisao:KISAO_0000626 kisao:KISAO_0000624)

# Class: kisao:KISAO_0000627 (diagonal approximate Jacobian solver)

AnnotationAssertion(dc:created kisao:KISAO_0000627 "2021-06-01"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000627 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000627 "CVODE"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000627 "diagonal approximate Jacobian solver"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000627 "diagonal"@en)
SubClassOf(kisao:KISAO_0000627 kisao:KISAO_0000624)
SubClassOf(kisao:KISAO_0000627 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000237))

# Class: kisao:KISAO_0000628 (modelling and simulation algorithm parameter value)

AnnotationAssertion(dc:creator kisao:KISAO_0000628 "JRK"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000628 "2012-06-01"^^xsd:date)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000628 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000628 "modelling and simulation algorithm parameter value"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000628 "A value of a parameter of an algorithm"@en)

# Class: kisao:KISAO_0000629 (null)

AnnotationAssertion(dc:created kisao:KISAO_0000629 "2021-06-01"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000629 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000629 "null"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000629 "none"@en)
SubClassOf(kisao:KISAO_0000629 kisao:KISAO_0000628)

# Class: kisao:KISAO_0000630 (root-finding method)

AnnotationAssertion(dc:created kisao:KISAO_0000630 "2021-06-01"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000630 "JRK"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000630 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000630 "root-finding method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000630 "Method for finding the root of a function (f(x) = 0)."@en)
SubClassOf(kisao:KISAO_0000630 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000630 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000106))

# Class: kisao:KISAO_0000631 (iterative root-finding method)

AnnotationAssertion(dc:creator kisao:KISAO_0000631 "JRK"@en)
AnnotationAssertion(dc:creator kisao:KISAO_0000631 "2021-06-01"^^xsd:date)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000631 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000631 "iterative root-finding method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000631 "Iterative method for finding the root of a function (f(x) = 0)."@en)
SubClassOf(kisao:KISAO_0000631 kisao:KISAO_0000630)

# Class: kisao:KISAO_0000632 (functional iteration root-finding method)

AnnotationAssertion(dc:created kisao:KISAO_0000632 "2021-06-01"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000632 "JRK"@en)
AnnotationAssertion(kisao:isImplementedIn kisao:KISAO_0000632 "CVODE"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000632 "functional iteration root-finding method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Roger Peng. Advanced Statistical Computing."@en) rdfs:seeAlso kisao:KISAO_0000632 "https://bookdown.org/rdpeng/advstatcomp/functional-iteration.html"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000632 "Iterative method for finding the root of a function f(x) given by

y^{n(m+1)} = h_{n} β_{n,0} f(t_{n}, y^{n(m)}) + a_n

This method only involves evaluations of f. This method is suitable for non-stiff functions."@en)
SubClassOf(kisao:KISAO_0000632 kisao:KISAO_0000631)

# Class: kisao:KISAO_0000633 (computational function)

AnnotationAssertion(dc:created kisao:KISAO_0000633 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000633 "JRK"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000633 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000633 "computational function"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000633 "A mathematical function such as the calculation of a minimum, maximum, or mean of a set of values."@en)

# Class: kisao:KISAO_0000634 (scaled property)

AnnotationAssertion(dc:created kisao:KISAO_0000634 "JRK"@en)
AnnotationAssertion(dc:created kisao:KISAO_0000634 "2021-06-04"^^xsd:date)
AnnotationAssertion(rdfs:label kisao:KISAO_0000634 "scaled property"@en)
SubClassOf(kisao:KISAO_0000634 kisao:KISAO_0000820)

# Class: kisao:KISAO_0000635 (unscaled property)

AnnotationAssertion(dc:created kisao:KISAO_0000635 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000635 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000635 "unscaled property"@en)
SubClassOf(kisao:KISAO_0000635 kisao:KISAO_0000820)

# Class: kisao:KISAO_0000636 (primary property)

AnnotationAssertion(dc:created kisao:KISAO_0000636 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000636 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000636 "primary property"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000636 "A primary output of a simulation."@en)
SubClassOf(kisao:KISAO_0000636 kisao:KISAO_0000820)

# Class: kisao:KISAO_0000637 (derived property)

AnnotationAssertion(dc:created kisao:KISAO_0000637 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000637 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000637 "derived property"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000637 "An output of a simulation which can be derived from its primary outputs."@en)
SubClassOf(kisao:KISAO_0000637 kisao:KISAO_0000820)

# Class: kisao:KISAO_0000638 (level)

AnnotationAssertion(dc:created kisao:KISAO_0000638 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000638 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000638 "level"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000638 "A level such as of a qualitative variable."@en)
SubClassOf(kisao:KISAO_0000638 kisao:KISAO_0000831)
SubClassOf(kisao:KISAO_0000638 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000822))

# Class: kisao:KISAO_0000639 (flux)

AnnotationAssertion(dc:created kisao:KISAO_0000639 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000639 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000639 "flux"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000639 "A rate through an volume such as of a reaction of a constraint-based models."@en)
SubClassOf(kisao:KISAO_0000639 kisao:KISAO_0000831)
SubClassOf(kisao:KISAO_0000639 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000655))

# Class: kisao:KISAO_0000640 (lower bound)

AnnotationAssertion(dc:created kisao:KISAO_0000640 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000640 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000640 "lower bound"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000640 "A lower bound on an estimate of a quantity."@en)
SubClassOf(kisao:KISAO_0000640 kisao:KISAO_0000641)

# Class: kisao:KISAO_0000641 (bound)

AnnotationAssertion(dc:created kisao:KISAO_0000641 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000641 "JRK"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000641 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000641 "bound"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000641 "An upper or lower bound on an estimate of a quantity."@en)
SubClassOf(kisao:KISAO_0000641 kisao:KISAO_0000820)

# Class: kisao:KISAO_0000642 (minimum flux)

AnnotationAssertion(dc:created kisao:KISAO_0000642 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000642 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000642 "minimum flux"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000642 "Minimum possible flux such as computed by flux variability analysis (FVA, KISAO_0000526)."@en)
SubClassOf(kisao:KISAO_0000642 kisao:KISAO_0000639)
SubClassOf(kisao:KISAO_0000642 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000640))

# Class: kisao:KISAO_0000643 (upper bound)

AnnotationAssertion(dc:created kisao:KISAO_0000643 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000643 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000643 "upper bound"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000643 "An upper bound on an estimate of a quantity."@en)
SubClassOf(kisao:KISAO_0000643 kisao:KISAO_0000641)

# Class: kisao:KISAO_0000644 (maximum flux)

AnnotationAssertion(dc:created kisao:KISAO_0000644 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000644 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000644 "maximum flux"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000644 "Maximum possible flux such as computed by flux variability analysis (FVA, KISAO_0000526)."@en)
SubClassOf(kisao:KISAO_0000644 kisao:KISAO_0000639)
SubClassOf(kisao:KISAO_0000644 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000643))

# Class: kisao:KISAO_0000645 (objective value)

AnnotationAssertion(dc:created kisao:KISAO_0000645 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000645 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000645 "objective value"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000645 "Value of an objective function such as of a constraint-based model."@en)
SubClassOf(kisao:KISAO_0000645 kisao:KISAO_0000831)

# Class: kisao:KISAO_0000646 (propensity)

AnnotationAssertion(dc:created kisao:KISAO_0000646 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000646 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000646 "propensity"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000646 "Tendency of an event such as of the firing of a reaction in the stochastic simulation algorithm (SSA, KISAO_0000029)."@en)
SubClassOf(kisao:KISAO_0000646 kisao:KISAO_0000831)

# Class: kisao:KISAO_0000647 (derivative)

AnnotationAssertion(dc:created kisao:KISAO_0000647 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000647 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000647 "derivative"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000647 "Rate of change of a variable with respect to another variable."@en)
SubClassOf(kisao:KISAO_0000647 kisao:KISAO_0000820)
SubClassOf(kisao:KISAO_0000647 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000821))

# Class: kisao:KISAO_0000648 (step)

AnnotationAssertion(dc:created kisao:KISAO_0000648 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000648 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000648 "step"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000648 "Iteration such as along a pseudo timecourse of a logical simulation."@en)
SubClassOf(kisao:KISAO_0000648 kisao:KISAO_0000831)

# Class: kisao:KISAO_0000649 (shadow price)

AnnotationAssertion(dc:created kisao:KISAO_0000649 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000649 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000649 "shadow price"@en)
AnnotationAssertion(rdfs:seeAlso kisao:KISAO_0000649 "https://en.wikipedia.org/wiki/Shadow_price"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000649 "Change, per infinitesimal unit of the constraint, in the optimal value of the objective function of an optimization problem obtained by relaxing the constraint."@en)
SubClassOf(kisao:KISAO_0000649 kisao:KISAO_0000650)

# Class: kisao:KISAO_0000650 (sensitivity)

AnnotationAssertion(dc:created kisao:KISAO_0000650 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000650 "JRK"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000650 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000650 "sensitivity"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000650 "The sensitivity of a variable to another variable, such as the derivative a variable with respect to another."@en)
SubClassOf(kisao:KISAO_0000650 kisao:KISAO_0000831)
SubClassOf(kisao:KISAO_0000650 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000647))

# Class: kisao:KISAO_0000651 (reduced costs)

AnnotationAssertion(dc:created kisao:KISAO_0000651 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000651 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000651 "reduced costs"@en)
AnnotationAssertion(rdfs:seeAlso kisao:KISAO_0000651 "https://en.wikipedia.org/wiki/Reduced_cost"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000651 "The amount by which an objective function coefficient would have to improve before it would be possible for a corresponding variable to assume a positive value in the optimal solution."@en)
SubClassOf(kisao:KISAO_0000651 kisao:KISAO_0000650)

# Class: kisao:KISAO_0000652 (concentration rate)

AnnotationAssertion(dc:created kisao:KISAO_0000652 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000652 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000652 "concentration rate"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000652 "Rate of a process relative to a volume, such as the rate of a reaction in molar^-1 s^-1."@en)
SubClassOf(kisao:KISAO_0000652 kisao:KISAO_0000834)
SubClassOf(kisao:KISAO_0000652 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000821))

# Class: kisao:KISAO_0000653 (particle number rate)

AnnotationAssertion(dc:created kisao:KISAO_0000653 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000653 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000653 "particle number rate"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000653 "Rate of a process in extensive/absolute units such as mole reactions per second."@en)
SubClassOf(kisao:KISAO_0000653 kisao:KISAO_0000834)
SubClassOf(kisao:KISAO_0000653 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000822))

# Class: kisao:KISAO_0000654 (amount rate)

AnnotationAssertion(dc:created kisao:KISAO_0000654 "2021-06-04"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000654 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000654 "amount rate"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000654 "rate of a process in extensive/absolute units such as reactions per second."@en)
SubClassOf(kisao:KISAO_0000654 kisao:KISAO_0000834)
SubClassOf(kisao:KISAO_0000654 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000822))

# Class: kisao:KISAO_0000655 (rate)

AnnotationAssertion(dc:created kisao:KISAO_0000655 "06-04-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000655 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000655 "rate"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000655 "Speed at which a process is occuring such as the temporal rate of a chemical reaction,"@en)
SubClassOf(kisao:KISAO_0000655 kisao:KISAO_0000820)

# Class: kisao:KISAO_0000656 (use adaptive time steps)

AnnotationAssertion(dc:created kisao:KISAO_0000656 "2021-06-05"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000656 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@en) kisao:isImplementedIn kisao:KISAO_0000656 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000656 "use adaptive time steps"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000656 "Whether an algorithm should use adaptive or fixed time steps."@en)
SubClassOf(kisao:KISAO_0000656 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000657 (sequential logical simulation method)

AnnotationAssertion(dc:created kisao:KISAO_0000657 "2021-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000657 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000657 "sequential logical simulation method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000657 "Qualitative (logical) models specify the evolution rules of their components. In the case of a sequential updating, nodes are updated sequentially in a pre-determined deterministic order."@en)
SubClassOf(kisao:KISAO_0000657 kisao:KISAO_0000448)
SubClassOf(kisao:KISAO_0000657 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000103))
SubClassOf(kisao:KISAO_0000657 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000454))
SubClassOf(kisao:KISAO_0000657 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000493))

# Class: kisao:KISAO_0000658 (logical model analysis method)

AnnotationAssertion(dc:created kisao:KISAO_0000658 "2021-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000658 "JRK"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000658 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000658 "logical model analysis method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000658 "A method for analyzing a logical model, such as finding its fixed points."@en)
SubClassOf(kisao:KISAO_0000658 kisao:KISAO_0000000)
SubClassOf(kisao:KISAO_0000658 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000105))

# Class: kisao:KISAO_0000659 (Naldi MDD logical model stable state search method)

AnnotationAssertion(dc:created kisao:KISAO_0000659 "2021-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000659 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000659 "Naldi MDD logical model stable state search method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Aurélien Naldi, Denis Thieffry and Claudine Chaouiya. Decision Diagrams for the Representation and Analysis of Logical Models of Genetic Networks. Computational Methods in Systems Biology 2007, 4695.") rdfs:seeAlso kisao:KISAO_0000659 "http://identifiers.org/doi:10.1007/978-3-540-75140-3_16"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000659 "Naldi Multi-valued Decision Diagram stable state search method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000659 "Efficient method for determining the stable states of a regulatory graph using a Multi-valued Decision Diagram (MDD) representation of the logical functions."@en)
SubClassOf(kisao:KISAO_0000659 kisao:KISAO_0000660)

# Class: kisao:KISAO_0000660 (logical model stable state search method)

AnnotationAssertion(dc:created kisao:KISAO_0000660 "2021-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000660 "JRK"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000660 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000660 "logical model stable state search method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000660 "Method for determining the stable states of a regulatory graph."@en)
SubClassOf(kisao:KISAO_0000660 kisao:KISAO_0000658)

# Class: kisao:KISAO_0000661 (logical model trap space identification method)

AnnotationAssertion(dc:created kisao:KISAO_0000661 "2021-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000661 "JRK"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000661 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000661 "logical model trap space identification method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000661 "Method for determining the trap spaces, or stable motifs or symbolic stable states, of a regulatory graph,"@en)
SubClassOf(kisao:KISAO_0000661 kisao:KISAO_0000658)

# Class: kisao:KISAO_0000662 (Klarner ASP logical model trap space identification method)

AnnotationAssertion(dc:created kisao:KISAO_0000662 "2021-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000662 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000662 "Klarner ASP logical model trap space identification method"@en)
AnnotationAssertion(Annotation(rdfs:comment "Hannes Klarner, Alexander Bockmayr, and Heike Siebert. Computing maximal and minimal trap spaces of Boolean networks. Natural Computing 14.4 (2015): 535-544."@en) rdfs:seeAlso kisao:KISAO_0000662 "http://identifiers.org/doi:10.1007/s11047-015-9520-7"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000662 "Klarner Answer Set Programming logical model trap space identification method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000662 "Optimization-based method rooted in answer set programming (ASP) for computing the trap spaces of a regulatory graph."@en)
SubClassOf(kisao:KISAO_0000662 kisao:KISAO_0000661)

# Class: kisao:KISAO_0000663 (BDD logical model trap space identification method)

AnnotationAssertion(dc:created kisao:KISAO_0000663 "2021-07-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000663 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000663 "BDD logical model trap space identification method"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000663 "Binary Decision Diagram logical model trap space identification method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000663 "Method for determining the trap spaces of a regulatory graph using a Binary Decision Diagram (BDD)."@en)
SubClassOf(kisao:KISAO_0000663 kisao:KISAO_0000661)

# Class: kisao:KISAO_0000664 (Second order backward implicit product Euler scheme)

AnnotationAssertion(protege:defaultLanguage kisao:KISAO_0000664 "Method for solving Volterra equations. Uses the trapezoidal rule."@en)
AnnotationAssertion(dc:created kisao:KISAO_0000664 "2021-08-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000664 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "XPP"@en) kisao:isImplementedIn kisao:KISAO_0000664 "http://identifiers.org/biosimulators/xpp"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000664 "Second order backward implicit product Euler scheme"@en)
AnnotationAssertion(Annotation(rdfs:comment "Peter Linz. Numerical methods for Volterra integral equations of the first kind. Computer Journal 12 (4): 393–397 (1969)."@en) rdfs:seeAlso kisao:KISAO_0000664 "http://identifiers.org/doi:10.1093/comjnl/12.4.393"^^xsd:anyURI)
AnnotationAssertion(Annotation(rdfs:comment "Peter Linz. Analytical and Numerical Methods for Volterra Equations. 1985."@en) rdfs:seeAlso kisao:KISAO_0000664 "https://doi.org/10.1137/1.9781611970852"^^xsd:anyURI)
SubClassOf(kisao:KISAO_0000664 kisao:KISAO_0000000)

# Class: kisao:KISAO_0000665 (maximum number of iterations for root finding)

AnnotationAssertion(dc:created kisao:KISAO_0000665 "2021-08-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000665 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "XPP"@en) kisao:isImplementedIn kisao:KISAO_0000665 "http://identifiers.org/biosimulators/xpp"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000665 "maximum number of iterations for root finding"@en)
SubClassOf(kisao:KISAO_0000665 kisao:KISAO_0000242)

# Class: kisao:KISAO_0000666 (Jacobian epsilon)

AnnotationAssertion(dc:created kisao:KISAO_0000666 "2021-08-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000666 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "XPP"@en) kisao:isImplementedIn kisao:KISAO_0000666 "http://identifiers.org/biosimulators/xpp"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000666 "Jacobian epsilon"@en)
SubClassOf(kisao:KISAO_0000666 kisao:KISAO_0000242)

# Class: kisao:KISAO_0000667 (memory size)

AnnotationAssertion(dc:created kisao:KISAO_0000667 "2021-08-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000667 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "XPP"@en) kisao:isImplementedIn kisao:KISAO_0000667 "http://identifiers.org/biosimulators/xpp"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000667 "memory size"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000667 "Maximum number of points to store in memory, such as in the second order backward implicit product Euler scheme."@en)
SubClassOf(kisao:KISAO_0000667 kisao:KISAO_0000242)

# Class: kisao:KISAO_0000668 (Numerical Recipes in C "stiff" Rosenbrock method)

AnnotationAssertion(dc:created kisao:KISAO_0000668 "2021-08-08"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000668 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "XPP"@en) kisao:isImplementedIn kisao:KISAO_0000668 "http://identifiers.org/biosimulators/xpp"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000668 "Numerical Recipes in C \"stiff\" Rosenbrock method"@en)
AnnotationAssertion(rdfs:seeAlso kisao:KISAO_0000668 "Implementation of the Kaps and Rentrop using the parameters recommended by Shampine and Watts."@en)
AnnotationAssertion(rdfs:seeAlso kisao:KISAO_0000668 "Shampine, L.F., and Watts, H.A. 1977, in Mathematical Software III, J.R. Rice, ed. (New York: Academic Press), pp. 257–275; 1979, Applied Mathematics and Computation, vol. 5, pp. 93–121."@en)
AnnotationAssertion(Annotation(rdfs:comment "William H. Press, Saul A. Teukolsky, William T. Vetterling & Brian P. Flannery. Numerical Recipes in C. The Art of Scientific Computing, 2nd Edition, 1992. Chapter 16. Pages 739-741."@en) rdfs:seeAlso kisao:KISAO_0000668 "https://dl.acm.org/doi/10.5555/148286"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000668 "stiff"@en)
SubClassOf(kisao:KISAO_0000668 kisao:KISAO_0000033)

# Class: kisao:KISAO_0000669 (Resource Balance Analysis)

AnnotationAssertion(dc:created kisao:KISAO_0000669 "2021-08-12"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000669 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "RBApy"@en) kisao:isImplementedIn kisao:KISAO_0000669 "http://identifiers.org/biosimulators/rbapy"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000669 "Resource Balance Analysis"@en)
AnnotationAssertion(Annotation(rdfs:comment "A. Goelzer, V. Fromion, G. Scorletti. Cell design in bacteria as a convex optimization problem. Automatica, 47(6):1210-1218 (2011)."@en) rdfs:seeAlso kisao:KISAO_0000669 "https://doi.org/10.1016/j.automatica.2011.02.038"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000669 "RBA"@en)
SubClassOf(kisao:KISAO_0000669 kisao:KISAO_0000407)

# Class: kisao:KISAO_0000670 (use multiple steps)

AnnotationAssertion(dc:created kisao:KISAO_0000670 "2021-08-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000670 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@en) kisao:isImplementedIn kisao:KISAO_0000670 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000670 "use multiple steps"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000670 "Whether to perform a multiple time step simulation."@en)
SubClassOf(kisao:KISAO_0000670 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000671 (use stiff method)

AnnotationAssertion(dc:created kisao:KISAO_0000671 "2021-08-07"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000671 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@en) kisao:isImplementedIn kisao:KISAO_0000671 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000671 "use stiff method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000671 "Specifies whether the integrator attempts to solve stiff equations."@en)
SubClassOf(kisao:KISAO_0000671 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000672 (Numerical Recipes in C "quality-controlled Runge-Kutta" method)

AnnotationAssertion(dc:created kisao:KISAO_0000672 "2021-08-18"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000672 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "XPP"@en) kisao:isImplementedIn kisao:KISAO_0000672 "http://identifiers.org/biosimulators/xpp"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000672 "Numerical Recipes in C \"quality-controlled Runge-Kutta\" method"@en)
AnnotationAssertion(Annotation(rdfs:comment "William H. Press, Saul A. Teukolsky, William T. Vetterling & Brian P. Flannery. Numerical Recipes in C. The Art of Scientific Computing, 2nd Edition, 1992. Chapter 16. Pages 719."@en) rdfs:seeAlso kisao:KISAO_0000672 "https://dl.acm.org/doi/10.5555/148286"^^xsd:anyURI)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000672 "rkqs"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000672 "Cash-Karp method with step size adjustment."@en)
SubClassOf(kisao:KISAO_0000672 kisao:KISAO_0000321)

# Class: kisao:KISAO_0000673 (skip reactions that produce negative species amounts)

AnnotationAssertion(dc:created kisao:KISAO_0000673 "2021-08-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000673 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@en) kisao:isImplementedIn kisao:KISAO_0000673 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000673 "skip reactions that produce negative species amounts"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000673 "Parameter which instructs a simulation tool to skip reactions that would result in negative amounts of species."@en)
SubClassOf(kisao:KISAO_0000673 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000674 (presimulate)

AnnotationAssertion(dc:created kisao:KISAO_0000674 "2021-08-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000674 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@en) kisao:isImplementedIn kisao:KISAO_0000674 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000674 "presimulate"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000674 "Whether a model should be presimulated prior to analysis."@en)
SubClassOf(kisao:KISAO_0000674 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000675 (Broyden method)

AnnotationAssertion(dc:created kisao:KISAO_0000675 "2021-08-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000675 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@en) kisao:isImplementedIn kisao:KISAO_0000675 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000675 "Broyden method"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000675 "Family of Quasi-Newton methods for finding roots in k variables originally described by C. G. Broyden in 1965."@en)
SubClassOf(kisao:KISAO_0000675 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000676 (degree of linearity)

AnnotationAssertion(dc:created kisao:KISAO_0000676 "2021-08-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000676 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@en) kisao:isImplementedIn kisao:KISAO_0000676 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000676 "degree of linearity"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000676 "The degree of linearity of a system."@en)
SubClassOf(kisao:KISAO_0000676 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000677 (maximum number of steps for presimulation)

AnnotationAssertion(dc:created kisao:KISAO_0000677 "2021-08-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000677 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@en) kisao:isImplementedIn kisao:KISAO_0000677 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000677 "maximum number of steps for presimulation"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000677 "Maximum number of steps to take in presimulating a model prior to analysis."@en)
SubClassOf(kisao:KISAO_0000677 kisao:KISAO_0000415)

# Class: kisao:KISAO_0000678 (maximum number of steps for approximation)

AnnotationAssertion(dc:created kisao:KISAO_0000678 "2021-08-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000678 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@en) kisao:isImplementedIn kisao:KISAO_0000678 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000678 "maximum number of steps for approximation"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000678 "Maximum number of steps to take in approximating an analysis."@en)
SubClassOf(kisao:KISAO_0000678 kisao:KISAO_0000415)

# Class: kisao:KISAO_0000679 (maximum time for approximation)

AnnotationAssertion(dc:created kisao:KISAO_0000679 "2021-08-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000679 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@en) kisao:isImplementedIn kisao:KISAO_0000679 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000679 "maximum time for approximation"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000679 "Maximum amount of time to spend approximating an analysis."@en)
SubClassOf(kisao:KISAO_0000679 kisao:KISAO_0000681)

# Class: kisao:KISAO_0000680 (duration)

AnnotationAssertion(dc:created kisao:KISAO_0000680 "2021-08-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000680 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@en) kisao:isImplementedIn kisao:KISAO_0000680 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000680 "duration"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000680 "Length of time to simulate."@en)
SubClassOf(kisao:KISAO_0000680 kisao:KISAO_0000201)

# Class: kisao:KISAO_0000681 (maximum time)

AnnotationAssertion(dc:created kisao:KISAO_0000681 "2021-08-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000681 "JRK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000681 "maximum time"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000681 "Maximum amount of wall time for an operation."@en)
SubClassOf(kisao:KISAO_0000681 kisao:KISAO_0000244)

# Class: kisao:KISAO_0000682 (allow approximation)

AnnotationAssertion(dc:created kisao:KISAO_0000682 "2021-08-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000682 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@en) kisao:isImplementedIn kisao:KISAO_0000682 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000682 "allow approximation"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000682 "Whether to find an approximate solution if an exact solution could not be found."@en)
SubClassOf(kisao:KISAO_0000682 kisao:KISAO_0000243)

# Class: kisao:KISAO_0000683 (relative tolerance for approximation)

AnnotationAssertion(dc:created kisao:KISAO_0000683 "2021-08-23"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000683 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "tellurium"@en) kisao:isImplementedIn kisao:KISAO_0000683 "http://identifiers.org/biosimulators/tellurium"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000683 "relative tolerance for approximation"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000683 "Relatative tolerance for an alternative approximate solution to an exact solution which could not be found."@en)
SubClassOf(kisao:KISAO_0000683 kisao:KISAO_0000209)

# Class: kisao:KISAO_0000684 (number of steps per output)

AnnotationAssertion(dc:created kisao:KISAO_0000684 "2021-09-22"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000684 "JRK"@en)
AnnotationAssertion(Annotation(rdfs:comment "BioNetgen"@en) kisao:isImplementedIn kisao:KISAO_0000684 "http://identifiers.org/biosimulators/bionetgen"^^xsd:anyURI)
AnnotationAssertion(rdfs:label kisao:KISAO_0000684 "number of steps per output"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000684 "Number of simulation steps between each simulation output."@en)
SubClassOf(kisao:KISAO_0000684 kisao:KISAO_0000244)

# Class: kisao:KISAO_0000800 (systems property)

AnnotationAssertion(dc:created kisao:KISAO_0000800 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000800 "LPS"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000800 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000800 "systems property"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000800 "A systems-level property of an entire model or simulation."@en)
SubClassOf(kisao:KISAO_0000800 kisao:KISAO_0000831)

# Class: kisao:KISAO_0000801 (concentration control coefficient matrix (unscaled))

AnnotationAssertion(dc:created kisao:KISAO_0000801 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000801 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000801 "concentration control coefficient matrix (unscaled)"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000801 "The unscaled concentration control coefficient matrix. The dimensions are species by reactions."@en)
SubClassOf(kisao:KISAO_0000801 kisao:KISAO_0000800)
SubClassOf(kisao:KISAO_0000801 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000635))

# Class: kisao:KISAO_0000802 (control coefficient (scaled))

AnnotationAssertion(dc:created kisao:KISAO_0000802 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000802 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000802 "control coefficient (scaled)"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000802 "A scaled control coefficient of any dependent element (such as a reaction or a floating species) with respect to an independent element (such as a global parameter or boundary species)."@en)
SubClassOf(kisao:KISAO_0000802 kisao:KISAO_0000800)
SubClassOf(kisao:KISAO_0000802 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000634))

# Class: kisao:KISAO_0000803 (control coefficient (unscaled))

AnnotationAssertion(dc:created kisao:KISAO_0000803 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000803 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000803 "control coefficient (unscaled)"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000803 "An unscaled control coefficient of any dependent element (such as a reaction or a floating species) with respect to an independent element (such as a global parameter or boundary species)."@en)
SubClassOf(kisao:KISAO_0000803 kisao:KISAO_0000800)
SubClassOf(kisao:KISAO_0000803 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000635))

# Class: kisao:KISAO_0000804 (elasticity matrix (unscaled))

AnnotationAssertion(dc:created kisao:KISAO_0000804 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000804 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000804 "elasticity matrix (unscaled)"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000804 "The unscaled elasticity matrix. The dimensions are reactions by species."@en)
SubClassOf(kisao:KISAO_0000804 kisao:KISAO_0000800)
SubClassOf(kisao:KISAO_0000804 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000635))

# Class: kisao:KISAO_0000805 (elasticity coefficient (unscaled))

AnnotationAssertion(dc:created kisao:KISAO_0000805 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000805 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000805 "elasticity coefficient (unscaled)"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000805 "An unscaled elasticity coefficient of any reaction with respect to an independent element (such as a global parameter or boundary species)."@en)
SubClassOf(kisao:KISAO_0000805 kisao:KISAO_0000800)
SubClassOf(kisao:KISAO_0000805 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000635))

# Class: kisao:KISAO_0000806 (elasticity matrix (scaled))

AnnotationAssertion(dc:created kisao:KISAO_0000806 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000806 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000806 "elasticity matrix (scaled)"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000806 "The scaled elasticity matrix. The dimensions are reactions by species."@en)
SubClassOf(kisao:KISAO_0000806 kisao:KISAO_0000800)
SubClassOf(kisao:KISAO_0000806 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000634))

# Class: kisao:KISAO_0000807 (elasticity coefficient (scaled))

AnnotationAssertion(dc:created kisao:KISAO_0000807 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000807 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000807 "elasticity coefficient (scaled)"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000807 "A scaled elasticity coefficient of any reaction with respect to an independent element (such as a global parameter or boundary species)."@en)
SubClassOf(kisao:KISAO_0000807 kisao:KISAO_0000800)
SubClassOf(kisao:KISAO_0000807 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000634))

# Class: kisao:KISAO_0000808 (reduced stoichiometry matrix)

AnnotationAssertion(dc:created kisao:KISAO_0000808 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000808 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000808 "reduced stoichiometry matrix"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000808 "The reduced stoichiometry matrix. The dimensions are species by reactions."@en)
SubClassOf(kisao:KISAO_0000808 kisao:KISAO_0000800)

# Class: kisao:KISAO_0000809 (reduced Jacobian matrix)

AnnotationAssertion(dc:created kisao:KISAO_0000809 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000809 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000809 "reduced Jacobian matrix"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000809 "The reduced Jacobian matrix. The dimensions are species by species."@en)
SubClassOf(kisao:KISAO_0000809 kisao:KISAO_0000800)

# Class: kisao:KISAO_0000810 (reduced eigenvalue matrix)

AnnotationAssertion(dc:created kisao:KISAO_0000810 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000810 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000810 "reduced eigenvalue matrix"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000810 "The reduced eigenvalue matrix of a model. The dimensions are species by two, where the first column is the real part of the eigenvalues, and the second column is the imaginary part of the eigenvalues."@en)
SubClassOf(kisao:KISAO_0000810 kisao:KISAO_0000800)

# Class: kisao:KISAO_0000811 (stoichiometry matrix)

AnnotationAssertion(dc:created kisao:KISAO_0000811 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000811 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000811 "stoichiometry matrix"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000811 "full stochiometry matrix"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000811 "The (full) stoichiometry matrix. The dimensions are species by reactions."@en)
SubClassOf(kisao:KISAO_0000811 kisao:KISAO_0000800)

# Class: kisao:KISAO_0000812 (Jacobian matrix)

AnnotationAssertion(dc:created kisao:KISAO_0000812 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000812 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000812 "Jacobian matrix"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000812 "full Jacobian matrix"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000812 "The (full) Jacobian matrix. The dimensions are species by species."@en)
SubClassOf(kisao:KISAO_0000812 kisao:KISAO_0000800)

# Class: kisao:KISAO_0000813 (Eigenvalue matrix)

AnnotationAssertion(dc:created kisao:KISAO_0000813 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000813 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000813 "Eigenvalue matrix"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000813 "full eigenvalue matrix"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000813 "The (full) eigenvalue matrix of a model. The dimensions are species by two, where the first column is the real part of the eigenvalues, and the second column is the imaginary part of the eigenvalues."@en)
SubClassOf(kisao:KISAO_0000813 kisao:KISAO_0000800)

# Class: kisao:KISAO_0000814 (flux control coefficient matrix (unscaled))

AnnotationAssertion(dc:created kisao:KISAO_0000814 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000814 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000814 "flux control coefficient matrix (unscaled)"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000814 "The unscaled flux control coefficient matrix. The dimensions are reactions by reactions."@en)
SubClassOf(kisao:KISAO_0000814 kisao:KISAO_0000800)
SubClassOf(kisao:KISAO_0000814 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000635))

# Class: kisao:KISAO_0000815 (flux control coefficient matrix (scaled))

AnnotationAssertion(dc:created kisao:KISAO_0000815 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000815 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000815 "flux control coefficient matrix (scaled)"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000815 "The scaled flux control coefficient matrix. The dimensions are reactions by reactions."@en)
SubClassOf(kisao:KISAO_0000815 kisao:KISAO_0000800)
SubClassOf(kisao:KISAO_0000815 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000634))

# Class: kisao:KISAO_0000816 (link matrix)

AnnotationAssertion(dc:created kisao:KISAO_0000816 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000816 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000816 "link matrix"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000816 "The link matrix of a model."@en)
SubClassOf(kisao:KISAO_0000816 kisao:KISAO_0000800)

# Class: kisao:KISAO_0000817 (kernel matrix)

AnnotationAssertion(dc:created kisao:KISAO_0000817 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000817 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000817 "kernel matrix"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000817 "The Kernel matrix of a model."@en)
SubClassOf(kisao:KISAO_0000817 kisao:KISAO_0000800)

# Class: kisao:KISAO_0000818 (L0 matrix)

AnnotationAssertion(dc:created kisao:KISAO_0000818 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000818 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000818 "L0 matrix"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000818 "The L0 matrix of a model."@en)
SubClassOf(kisao:KISAO_0000818 kisao:KISAO_0000800)

# Class: kisao:KISAO_0000819 (Nr matrix)

AnnotationAssertion(dc:created kisao:KISAO_0000819 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000819 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000819 "Nr matrix"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000819 "The Nr matrix of a model."@en)
SubClassOf(kisao:KISAO_0000819 kisao:KISAO_0000800)

# Class: kisao:KISAO_0000820 (model and simulation property characteristic)

AnnotationAssertion(dc:created kisao:KISAO_0000820 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000820 "LPS"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000820 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000820 "model and simulation property characteristic"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000820 "A property of a variable of a model or simulation."@en)

# Class: kisao:KISAO_0000821 (intensive property)

AnnotationAssertion(dc:created kisao:KISAO_0000821 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000821 "LPS"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000821 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000821 "intensive property"@en)
AnnotationAssertion(rdfs:seeAlso kisao:KISAO_0000821 "https://en.wikipedia.org/wiki/Intensive_and_extensive_properties"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000821 "An intensive variable such as a concentration or temperature."@en)
SubClassOf(kisao:KISAO_0000821 kisao:KISAO_0000820)

# Class: kisao:KISAO_0000822 (extensive property)

AnnotationAssertion(dc:created kisao:KISAO_0000822 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000822 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000822 "extensive property"@en)
AnnotationAssertion(rdfs:seeAlso kisao:KISAO_0000822 "https://en.wikipedia.org/wiki/Intensive_and_extensive_properties"^^xsd:anyURI)
AnnotationAssertion(skos:definition kisao:KISAO_0000822 "An extensive variable such as an amount, particle number, or mass."@en)
SubClassOf(kisao:KISAO_0000822 kisao:KISAO_0000820)

# Class: kisao:KISAO_0000824 (aggregation function)

AnnotationAssertion(dc:created kisao:KISAO_0000824 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000824 "LPS"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000824 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000824 "aggregation function"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000824 "A function that aggregates a set of results, reducing its dimension(s). Examples include functions that compute minima or maxima of sets of values."@en)
SubClassOf(kisao:KISAO_0000824 kisao:KISAO_0000633)

# Class: kisao:KISAO_0000825 (mean ignoring NaN)

AnnotationAssertion(dc:created kisao:KISAO_0000825 "2021-06-03"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000825 "LPS, MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000825 "mean ignoring NaN"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000825 "The mean (average) of a set of values, ignoring NaN entries."@en)
SubClassOf(kisao:KISAO_0000825 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000826 (standard deviation ignoring NaN)

AnnotationAssertion(dc:created kisao:KISAO_0000826 "2021-06-03"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000826 "LPS, MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000826 "standard deviation ignoring NaN"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000826 "The standard deviation of a set of values, ignoring NaN entries."@en)
SubClassOf(kisao:KISAO_0000826 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000827 (standard error ignoring NaN)

AnnotationAssertion(dc:created kisao:KISAO_0000827 "2021-06-03"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000827 "LPS, MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000827 "standard error ignoring NaN"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000827 "The standard error of a set of values, ignoring NaN entries."@en)
SubClassOf(kisao:KISAO_0000827 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000828 (maximum ignoring NaN)

AnnotationAssertion(dc:created kisao:KISAO_0000828 "2021-06-03"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000828 "LPS, MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000828 "maximum ignoring NaN"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000828 "The maximum value of a set of values, ignoring NaN entries."@en)
SubClassOf(kisao:KISAO_0000828 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000829 (minimum ignoring NaN)

AnnotationAssertion(dc:created kisao:KISAO_0000829 "2021-06-03"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000829 "LPS, MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000829 "minimum ignoring NaN"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000829 "The minimum value of a set of values, ignoring NaN entries."@en)
SubClassOf(kisao:KISAO_0000829 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000830 (maximum)

AnnotationAssertion(dc:created kisao:KISAO_0000830 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000830 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000830 "maximum"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000830 "The maximum of a set of values. If the values contain NaN the maximum is NaN."@en)
SubClassOf(kisao:KISAO_0000830 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000831 (model and simulation property)

AnnotationAssertion(dc:created kisao:KISAO_0000831 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000831 "LPS"@en)
AnnotationAssertion(kisao:isOrganizational kisao:KISAO_0000831 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label kisao:KISAO_0000831 "model and simulation property"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000831 "A variable of a model or simulation."@en)

# Class: kisao:KISAO_0000832 (time)

AnnotationAssertion(dc:created kisao:KISAO_0000832 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000832 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000832 "time"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000832 "The implied time variable of the model state."@en)
SubClassOf(kisao:KISAO_0000832 kisao:KISAO_0000831)

# Class: kisao:KISAO_0000834 (rate of change)

AnnotationAssertion(dc:created kisao:KISAO_0000834 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000834 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000834 "rate of change"@en)
AnnotationAssertion(skos:altLabel kisao:KISAO_0000834 "rate"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000834 "The rate of change of one variable with respect to a second variable."@en)
SubClassOf(kisao:KISAO_0000834 kisao:KISAO_0000831)
SubClassOf(kisao:KISAO_0000834 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000647))
SubClassOf(kisao:KISAO_0000834 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000655))

# Class: kisao:KISAO_0000835 (concentration control coefficient matrix (scaled))

AnnotationAssertion(dc:created kisao:KISAO_0000835 "06-03-2021"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000835 "LPS"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000835 "concentration control coefficient matrix (scaled)"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000835 "The scaled concentration control coefficient matrix. The dimensions are species by reactions."@en)
SubClassOf(kisao:KISAO_0000835 kisao:KISAO_0000800)
SubClassOf(kisao:KISAO_0000835 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000634))

# Class: kisao:KISAO_0000836 (amount)

AnnotationAssertion(dc:created kisao:KISAO_0000836 "06-03-2021")
AnnotationAssertion(dc:creator kisao:KISAO_0000836 "LPS")
AnnotationAssertion(rdfs:label kisao:KISAO_0000836 "amount"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000836 "The extensive quantity amount.")
SubClassOf(kisao:KISAO_0000836 kisao:KISAO_0000831)
SubClassOf(kisao:KISAO_0000836 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000822))

# Class: kisao:KISAO_0000837 (particle number)

AnnotationAssertion(dc:created kisao:KISAO_0000837 "06-03-2021")
AnnotationAssertion(dc:creator kisao:KISAO_0000837 "LPS")
AnnotationAssertion(rdfs:label kisao:KISAO_0000837 "particle number"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000837 "The extensive quantity particle number, or, the molar amount of the entity multiplied by Avogadro's number.")
SubClassOf(kisao:KISAO_0000837 kisao:KISAO_0000831)
SubClassOf(kisao:KISAO_0000837 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000822))

# Class: kisao:KISAO_0000838 (concentration)

AnnotationAssertion(dc:created kisao:KISAO_0000838 "06-03-2021")
AnnotationAssertion(dc:creator kisao:KISAO_0000838 "LPS")
AnnotationAssertion(rdfs:label kisao:KISAO_0000838 "concentration"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000838 "The intensive quantity concentration, or, the amount of the entity with respect to the entity in which it resides.")
SubClassOf(kisao:KISAO_0000838 kisao:KISAO_0000831)
SubClassOf(kisao:KISAO_0000838 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000821))

# Class: kisao:KISAO_0000839 (temperature)

AnnotationAssertion(dc:created kisao:KISAO_0000839 "06-03-2021")
AnnotationAssertion(dc:creator kisao:KISAO_0000839 "LPS")
AnnotationAssertion(rdfs:label kisao:KISAO_0000839 "temperature"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000839 "The intensive quantity temperature.")
SubClassOf(kisao:KISAO_0000839 kisao:KISAO_0000831)
SubClassOf(kisao:KISAO_0000839 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000821))

# Class: kisao:KISAO_0000840 (minimum)

AnnotationAssertion(dc:created kisao:KISAO_0000840 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000840 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000840 "minimum"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000840 "The minimum of a set of values. If the values contain NaN the minimum is NaN."@en)
SubClassOf(kisao:KISAO_0000840 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000841 (mean)

AnnotationAssertion(dc:created kisao:KISAO_0000841 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000841 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000841 "mean"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000841 "The mean of a set of values. If the values contain NaN the mean is NaN."@en)
SubClassOf(kisao:KISAO_0000841 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000842 (standard deviation)

AnnotationAssertion(dc:created kisao:KISAO_0000842 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000842 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000842 "standard deviation"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000842 "The standard deviation of a set of values. If the values contain NaN the standard deviation is NaN."@en)
SubClassOf(kisao:KISAO_0000842 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000843 (standard error)

AnnotationAssertion(dc:created kisao:KISAO_0000843 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000843 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000843 "standard error"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000843 "The standard error of a set of values. If the values contain NaN the standard deviation is NaN."@en)
SubClassOf(kisao:KISAO_0000843 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000844 (sum ignoring NaN)

AnnotationAssertion(dc:created kisao:KISAO_0000844 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000844 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000844 "sum ignoring NaN"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000844 "The sum of a set of values, ignoring Nan entries."@en)
SubClassOf(kisao:KISAO_0000844 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000845 (sum)

AnnotationAssertion(dc:created kisao:KISAO_0000845 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000845 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000845 "sum"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000845 "The sum of a set of values. If the values contain NaN the sum is NaN."@en)
SubClassOf(kisao:KISAO_0000845 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000846 (product ignoring NaN)

AnnotationAssertion(dc:created kisao:KISAO_0000846 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000846 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000846 "product ignoring NaN"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000846 "The product of a set of values, ignoring Nan entries."@en)
SubClassOf(kisao:KISAO_0000846 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000847 (product)

AnnotationAssertion(dc:created kisao:KISAO_0000847 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000847 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000847 "product"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000847 "The product of a set of values. If the values contain NaN the product is NaN."@en)
SubClassOf(kisao:KISAO_0000847 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000848 (cumulative sum ignoring NaN)

AnnotationAssertion(dc:created kisao:KISAO_0000848 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000848 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000848 "cumulative sum ignoring NaN"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000848 "The cumulative sum of a set of values, ignoring Nan entries."@en)
SubClassOf(kisao:KISAO_0000848 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000849 (cumulative sum)

AnnotationAssertion(dc:created kisao:KISAO_0000849 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000849 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000849 "cumulative sum"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000849 "The cumulative sum of a set of values. If the values contain NaN the cumulative sum is NaN."@en)
SubClassOf(kisao:KISAO_0000849 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000850 (cumulative product ignoring NaN)

AnnotationAssertion(dc:created kisao:KISAO_0000850 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000850 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000850 "cumulative product ignoring NaN"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000850 "The cumulative product of a set of values, ignoring Nan entries."@en)
SubClassOf(kisao:KISAO_0000850 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000851 (cumulative product)

AnnotationAssertion(dc:created kisao:KISAO_0000851 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000851 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000851 "cumulative product"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000851 "The cumulative product of a set of values. If the values contain NaN the cumulative product is NaN."@en)
SubClassOf(kisao:KISAO_0000851 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000852 (count ignoring NaN)

AnnotationAssertion(dc:created kisao:KISAO_0000852 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000852 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000852 "count ignoring NaN"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000852 "The number of non-zero elements of a set of values, ignoring Nan entries."@en)
SubClassOf(kisao:KISAO_0000852 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000853 (count)

AnnotationAssertion(dc:created kisao:KISAO_0000853 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000853 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000853 "count"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000853 "The number of non-zero elements of a set of values. If the values contain NaN the count is NaN."@en)
SubClassOf(kisao:KISAO_0000853 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000854 (length ignoring NaN)

AnnotationAssertion(dc:created kisao:KISAO_0000854 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000854 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000854 "length ignoring NaN"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000854 "The number of elements of a set of values, ignoring Nan entries."@en)
SubClassOf(kisao:KISAO_0000854 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000855 (length)

AnnotationAssertion(dc:created kisao:KISAO_0000855 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000855 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000855 "length"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000855 "The number of elements of a set of values."@en)
SubClassOf(kisao:KISAO_0000855 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000856 (median ignoring NaN)

AnnotationAssertion(dc:created kisao:KISAO_0000856 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000856 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000856 "median ignoring NaN"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000856 "The median of a set of values, ignoring Nan entries."@en)
SubClassOf(kisao:KISAO_0000856 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000857 (median)

AnnotationAssertion(dc:created kisao:KISAO_0000857 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000857 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000857 "median"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000857 "The median of a set of values. If the values contain NaN the median is NaN."@en)
SubClassOf(kisao:KISAO_0000857 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000858 (variance ignoring NaN)

AnnotationAssertion(dc:created kisao:KISAO_0000858 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000858 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000858 "variance ignoring NaN"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000858 "The variance of a set of values, ignoring Nan entries."@en)
SubClassOf(kisao:KISAO_0000858 kisao:KISAO_0000824)

# Class: kisao:KISAO_0000859 (variance)

AnnotationAssertion(dc:created kisao:KISAO_0000859 "2021-10-09"^^xsd:date)
AnnotationAssertion(dc:creator kisao:KISAO_0000859 "MK"@en)
AnnotationAssertion(rdfs:label kisao:KISAO_0000859 "variance"@en)
AnnotationAssertion(skos:definition kisao:KISAO_0000859 "The variance of a set of values. If the values contain NaN the variance is NaN."@en)
SubClassOf(kisao:KISAO_0000859 kisao:KISAO_0000824)


EquivalentClasses(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000322) ObjectSomeValuesFrom(kisao:KISAO_0000246 kisao:KISAO_0000000))
SubClassOf(ObjectIntersectionOf(kisao:KISAO_0000000 ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000311)) ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000102))
SubClassOf(ObjectIntersectionOf(kisao:KISAO_0000064 ObjectComplementOf(kisao:KISAO_0000367) ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000239)) ObjectComplementOf(ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000366)))
SubClassOf(ObjectIntersectionOf(kisao:KISAO_0000064 ObjectComplementOf(kisao:KISAO_0000367) ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000366)) ObjectSomeValuesFrom(kisao:KISAO_0000245 kisao:KISAO_0000240))
DisjointClasses(kisao:KISAO_0000000 kisao:KISAO_0000097 kisao:KISAO_0000201)
DisjointClasses(kisao:KISAO_0000003 kisao:KISAO_0000027 kisao:KISAO_0000028 kisao:KISAO_0000038 kisao:KISAO_0000323 kisao:KISAO_0000324 kisao:KISAO_0000329 kisao:KISAO_0000350 kisao:KISAO_0000610 kisao:KISAO_0000621)
DisjointClasses(kisao:KISAO_0000015 kisao:KISAO_0000029 kisao:KISAO_0000333 kisao:KISAO_0000335 kisao:KISAO_0000606)
DisjointClasses(kisao:KISAO_0000017 kisao:KISAO_0000021 kisao:KISAO_0000264)
DisjointClasses(kisao:KISAO_0000019 kisao:KISAO_0000020 kisao:KISAO_0000496 kisao:KISAO_0000535 kisao:KISAO_0000536)
DisjointClasses(kisao:KISAO_0000019 kisao:KISAO_0000282 kisao:KISAO_0000283)
DisjointClasses(kisao:KISAO_0000019 kisao:KISAO_0000282 kisao:KISAO_0000356)
DisjointClasses(kisao:KISAO_0000020 kisao:KISAO_0000282 kisao:KISAO_0000355)
DisjointClasses(kisao:KISAO_0000032 kisao:KISAO_0000033 kisao:KISAO_0000276 kisao:KISAO_0000296 kisao:KISAO_0000297 kisao:KISAO_0000299 kisao:KISAO_0000301 kisao:KISAO_0000302 kisao:KISAO_0000304 kisao:KISAO_0000318 kisao:KISAO_0000367 kisao:KISAO_0000378 kisao:KISAO_0000381 kisao:KISAO_0000382 kisao:KISAO_0000384)
DisjointClasses(kisao:KISAO_0000039 kisao:KISAO_0000082 kisao:KISAO_0000330 kisao:KISAO_0000331)
DisjointClasses(kisao:KISAO_0000040 kisao:KISAO_0000045 kisao:KISAO_0000046 kisao:KISAO_0000048 kisao:KISAO_0000074 kisao:KISAO_0000081 kisao:KISAO_0000084 kisao:KISAO_0000351 kisao:KISAO_0000524 kisao:KISAO_0000575)
DisjointClasses(kisao:KISAO_0000051 kisao:KISAO_0000075 kisao:KISAO_0000095 kisao:KISAO_0000336 kisao:KISAO_0000611 kisao:KISAO_0000613 kisao:KISAO_0000618 kisao:KISAO_0000619)
DisjointClasses(kisao:KISAO_0000056 kisao:KISAO_0000094 kisao:KISAO_0000273 kisao:KISAO_0000281 kisao:KISAO_0000306 kisao:KISAO_0000314 kisao:KISAO_0000319 kisao:KISAO_0000363 kisao:KISAO_0000369 kisao:KISAO_0000377 kisao:KISAO_0000397 kisao:KISAO_0000398 kisao:KISAO_0000407 kisao:KISAO_0000408 kisao:KISAO_0000419 kisao:KISAO_0000433 kisao:KISAO_0000448)
DisjointClasses(kisao:KISAO_0000056 kisao:KISAO_0000094 kisao:KISAO_0000273 kisao:KISAO_0000281 kisao:KISAO_0000306 kisao:KISAO_0000314 kisao:KISAO_0000319 kisao:KISAO_0000363 kisao:KISAO_0000369 kisao:KISAO_0000377 kisao:KISAO_0000397 kisao:KISAO_0000398 kisao:KISAO_0000407 kisao:KISAO_0000408 kisao:KISAO_0000419 kisao:KISAO_0000433 kisao:KISAO_0000491)
DisjointClasses(kisao:KISAO_0000056 kisao:KISAO_0000094 kisao:KISAO_0000273 kisao:KISAO_0000281 kisao:KISAO_0000306 kisao:KISAO_0000314 kisao:KISAO_0000319 kisao:KISAO_0000363 kisao:KISAO_0000369 kisao:KISAO_0000377 kisao:KISAO_0000397 kisao:KISAO_0000398 kisao:KISAO_0000419)
DisjointClasses(kisao:KISAO_0000056 kisao:KISAO_0000094 kisao:KISAO_0000273 kisao:KISAO_0000281 kisao:KISAO_0000306 kisao:KISAO_0000314 kisao:KISAO_0000363 kisao:KISAO_0000369 kisao:KISAO_0000377 kisao:KISAO_0000397 kisao:KISAO_0000398 kisao:KISAO_0000408 kisao:KISAO_0000419 kisao:KISAO_0000433 kisao:KISAO_0000448 kisao:KISAO_0000473)
DisjointClasses(kisao:KISAO_0000056 kisao:KISAO_0000094 kisao:KISAO_0000273 kisao:KISAO_0000306 kisao:KISAO_0000314 kisao:KISAO_0000319 kisao:KISAO_0000363 kisao:KISAO_0000369 kisao:KISAO_0000397 kisao:KISAO_0000398 kisao:KISAO_0000407 kisao:KISAO_0000408 kisao:KISAO_0000419 kisao:KISAO_0000433 kisao:KISAO_0000448 kisao:KISAO_0000473 kisao:KISAO_0000491 kisao:KISAO_0000497 kisao:KISAO_0000499)
DisjointClasses(kisao:KISAO_0000056 kisao:KISAO_0000094 kisao:KISAO_0000273 kisao:KISAO_0000306 kisao:KISAO_0000314 kisao:KISAO_0000363 kisao:KISAO_0000407 kisao:KISAO_0000419 kisao:KISAO_0000433 kisao:KISAO_0000470 kisao:KISAO_0000473 kisao:KISAO_0000491 kisao:KISAO_0000497)
DisjointClasses(kisao:KISAO_0000064 kisao:KISAO_0000261 kisao:KISAO_0000286 kisao:KISAO_0000380)
DisjointClasses(kisao:KISAO_0000071 kisao:KISAO_0000088 kisao:KISAO_0000089 kisao:KISAO_0000090 kisao:KISAO_0000091 kisao:KISAO_0000093 kisao:KISAO_0000232 kisao:KISAO_0000233 kisao:KISAO_0000234 kisao:KISAO_0000560)
DisjointClasses(kisao:KISAO_0000086 kisao:KISAO_0000087 kisao:KISAO_0000321 kisao:KISAO_0000434)
DisjointClasses(kisao:KISAO_0000098 kisao:KISAO_0000099 kisao:KISAO_0000100 kisao:KISAO_0000102 kisao:KISAO_0000235 kisao:KISAO_0000238 kisao:KISAO_0000311 kisao:KISAO_0000322 kisao:KISAO_0000366 kisao:KISAO_0000370 kisao:KISAO_0000451)
DisjointClasses(kisao:KISAO_0000203 kisao:KISAO_0000204 kisao:KISAO_0000205 kisao:KISAO_0000248 kisao:KISAO_0000249 kisao:KISAO_0000257 kisao:KISAO_0000258 kisao:KISAO_0000260 kisao:KISAO_0000327 kisao:KISAO_0000328)
DisjointClasses(kisao:KISAO_0000216 kisao:KISAO_0000230 kisao:KISAO_0000469 kisao:KISAO_0000484)
DisjointClasses(kisao:KISAO_0000223 kisao:KISAO_0000253 kisao:KISAO_0000332 kisao:KISAO_0000415)
DisjointClasses(kisao:KISAO_0000223 kisao:KISAO_0000253 kisao:KISAO_0000332 kisao:KISAO_0000486)
DisjointClasses(kisao:KISAO_0000231 kisao:KISAO_0000317 kisao:KISAO_0000320 kisao:KISAO_0000365 kisao:KISAO_0000447 kisao:KISAO_0000468 kisao:KISAO_0000499 kisao:KISAO_0000575 kisao:KISAO_0000595 kisao:KISAO_0000598 kisao:KISAO_0000599 kisao:KISAO_0000600 kisao:KISAO_0000617)
DisjointClasses(kisao:KISAO_0000241 kisao:KISAO_0000274 kisao:KISAO_0000278 kisao:KISAO_0000573)
DisjointClasses(kisao:KISAO_0000242 kisao:KISAO_0000243 kisao:KISAO_0000244 kisao:KISAO_0000252 kisao:KISAO_0000420 kisao:KISAO_0000421 kisao:KISAO_0000422 kisao:KISAO_0000429 kisao:KISAO_0000430 kisao:KISAO_0000475 kisao:KISAO_0000476 kisao:KISAO_0000477 kisao:KISAO_0000478 kisao:KISAO_0000481 kisao:KISAO_0000482 kisao:KISAO_0000487 kisao:KISAO_0000488 kisao:KISAO_0000498 kisao:KISAO_0000518 kisao:KISAO_0000521 kisao:KISAO_0000525 kisao:KISAO_0000529)
DisjointClasses(kisao:KISAO_0000242 kisao:KISAO_0000243 kisao:KISAO_0000244 kisao:KISAO_0000252 kisao:KISAO_0000420 kisao:KISAO_0000421 kisao:KISAO_0000422 kisao:KISAO_0000429 kisao:KISAO_0000430 kisao:KISAO_0000475 kisao:KISAO_0000476 kisao:KISAO_0000477 kisao:KISAO_0000478 kisao:KISAO_0000481 kisao:KISAO_0000482 kisao:KISAO_0000487 kisao:KISAO_0000488 kisao:KISAO_0000498 kisao:KISAO_0000518 kisao:KISAO_0000521 kisao:KISAO_0000525 kisao:KISAO_0000529 kisao:KISAO_0000531)
DisjointClasses(kisao:KISAO_0000242 kisao:KISAO_0000243 kisao:KISAO_0000244 kisao:KISAO_0000252 kisao:KISAO_0000420 kisao:KISAO_0000421 kisao:KISAO_0000422 kisao:KISAO_0000429 kisao:KISAO_0000430 kisao:KISAO_0000475 kisao:KISAO_0000476 kisao:KISAO_0000477 kisao:KISAO_0000478 kisao:KISAO_0000481 kisao:KISAO_0000482 kisao:KISAO_0000487 kisao:KISAO_0000488 kisao:KISAO_0000498 kisao:KISAO_0000518 kisao:KISAO_0000521 kisao:KISAO_0000525 kisao:KISAO_0000529 kisao:KISAO_0000531 kisao:KISAO_0000532 kisao:KISAO_0000533 kisao:KISAO_0000534)
DisjointClasses(kisao:KISAO_0000242 kisao:KISAO_0000243 kisao:KISAO_0000244 kisao:KISAO_0000252 kisao:KISAO_0000420 kisao:KISAO_0000421 kisao:KISAO_0000422 kisao:KISAO_0000429 kisao:KISAO_0000430 kisao:KISAO_0000475 kisao:KISAO_0000476 kisao:KISAO_0000477 kisao:KISAO_0000478 kisao:KISAO_0000481 kisao:KISAO_0000482 kisao:KISAO_0000487 kisao:KISAO_0000488 kisao:KISAO_0000498 kisao:KISAO_0000525)
DisjointClasses(kisao:KISAO_0000243 kisao:KISAO_0000420 kisao:KISAO_0000421 kisao:KISAO_0000422 kisao:KISAO_0000430 kisao:KISAO_0000475 kisao:KISAO_0000476 kisao:KISAO_0000477 kisao:KISAO_0000478 kisao:KISAO_0000481 kisao:KISAO_0000482 kisao:KISAO_0000487 kisao:KISAO_0000488 kisao:KISAO_0000498)
DisjointClasses(kisao:KISAO_0000254 kisao:KISAO_0000325 kisao:KISAO_0000326 kisao:KISAO_0000467)
DisjointClasses(kisao:KISAO_0000279 kisao:KISAO_0000280 kisao:KISAO_0000364)
DisjointClasses(kisao:KISAO_0000282 kisao:KISAO_0000409 kisao:KISAO_0000410 kisao:KISAO_0000411 kisao:KISAO_0000432)
DisjointClasses(kisao:KISAO_0000282 kisao:KISAO_0000412 kisao:KISAO_0000413 kisao:KISAO_0000432)
DisjointClasses(kisao:KISAO_0000285 kisao:KISAO_0000307 kisao:KISAO_0000310 kisao:KISAO_0000337 kisao:KISAO_0000342 kisao:KISAO_0000343 kisao:KISAO_0000345 kisao:KISAO_0000348 kisao:KISAO_0000349)
DisjointClasses(kisao:KISAO_0000287 kisao:KISAO_0000288 kisao:KISAO_0000289)
DisjointClasses(kisao:KISAO_0000290 kisao:KISAO_0000303 kisao:KISAO_0000305 kisao:KISAO_0000436)
DisjointClasses(kisao:KISAO_0000303 kisao:KISAO_0000305 kisao:KISAO_0000435 kisao:KISAO_0000436)
DisjointClasses(kisao:KISAO_0000338 kisao:KISAO_0000339 kisao:KISAO_0000341)
DisjointClasses(kisao:KISAO_0000353 kisao:KISAO_0000357 kisao:KISAO_0000358 kisao:KISAO_0000388 kisao:KISAO_0000395)
DisjointClasses(kisao:KISAO_0000371 kisao:KISAO_0000372 kisao:KISAO_0000373 kisao:KISAO_0000374)
DisjointClasses(kisao:KISAO_0000376 kisao:KISAO_0000404 kisao:KISAO_0000405 kisao:KISAO_0000623)
DisjointClasses(kisao:KISAO_0000416 kisao:KISAO_0000417 kisao:KISAO_0000418)
DisjointClasses(kisao:KISAO_0000437 kisao:KISAO_0000526 kisao:KISAO_0000580 kisao:KISAO_0000588 kisao:KISAO_0000593)
DisjointClasses(kisao:KISAO_0000500 kisao:KISAO_0000501 kisao:KISAO_0000502)
DisjointClasses(kisao:KISAO_0000503 kisao:KISAO_0000504 kisao:KISAO_0000505 kisao:KISAO_0000520)
DisjointClasses(kisao:KISAO_0000510 kisao:KISAO_0000511 kisao:KISAO_0000512 kisao:KISAO_0000513 kisao:KISAO_0000514 kisao:KISAO_0000515 kisao:KISAO_0000516)
DisjointClasses(kisao:KISAO_0000527 kisao:KISAO_0000591 kisao:KISAO_0000596 kisao:KISAO_0000608 kisao:KISAO_0000620)
DisjointClasses(kisao:KISAO_0000561 kisao:KISAO_0000562 kisao:KISAO_0000563)
DisjointClasses(kisao:KISAO_0000800 kisao:KISAO_0000801 kisao:KISAO_0000814 kisao:KISAO_0000815)
AnnotationAssertion(kisao:isOrganizational owl:Thing "true"^^xsd:boolean)
)