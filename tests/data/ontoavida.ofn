Prefix(:=<http://purl.obolibrary.org/obo/ontoavida.owl#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(obo:=<http://purl.obolibrary.org/obo/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(skos:=<http://www.w3.org/2004/02/skos/core#>)
Prefix(terms:=<http://purl.org/dc/terms/>)
Prefix(oboInOwl:=<http://www.geneontology.org/formats/oboInOwl#>)


Ontology(<http://purl.obolibrary.org/obo/ontoavida.owl>
<http://purl.obolibrary.org/obo/ontoavida/releases/2022-03-15/ontoavida.owl>
Annotation(dc:description "The Ontology for Avida (OntoAvida) project aims to develop an integrated vocabulary for the description of the most widely used computational approach for performing experimental evolution using digital organisms (i.e., self-replicating computer programs that evolve within a user-defined computational environment).

The lack of a clearly defined vocabulary makes biologists feel reluctant to embrace the field of digital evolution. This unique ontology has the potential to change this picture overnight.

OntoAvida was initially developed by https://fortunalab.org, the computational biology lab at the Do√±ana Biological Station (a research institute of the Spanish National Research Council based at Seville, Spain). Contributors to OntoAvida are expected to include members of the Digital Evolution Laboratory (https://devolab.org/) at Michigan State University (USA).

More information can be found at https://obofoundry.org/ontology/ontoavida.html"@en)
Annotation(dc:title "OntoAvida: ontology for Avida digital evolution platform."@en)
Annotation(terms:license <https://creativecommons.org/licenses/by/4.0/>)

Declaration(Class(obo:FBcv_0000212))
Declaration(Class(obo:GSSO_009994))
Declaration(Class(obo:NCIT_C42790))
Declaration(Class(obo:ONTOAVIDA_00000001))
Declaration(Class(obo:ONTOAVIDA_00000002))
Declaration(Class(obo:ONTOAVIDA_00000003))
Declaration(Class(obo:ONTOAVIDA_00000007))
Declaration(Class(obo:ONTOAVIDA_00000008))
Declaration(Class(obo:ONTOAVIDA_00000009))
Declaration(Class(obo:ONTOAVIDA_00000010))
Declaration(Class(obo:ONTOAVIDA_00000011))
Declaration(Class(obo:ONTOAVIDA_00000012))
Declaration(Class(obo:ONTOAVIDA_00000013))
Declaration(Class(obo:ONTOAVIDA_00000014))
Declaration(Class(obo:ONTOAVIDA_00000017))
Declaration(Class(obo:ONTOAVIDA_00000018))
Declaration(Class(obo:ONTOAVIDA_00000022))
Declaration(Class(obo:ONTOAVIDA_00000023))
Declaration(Class(obo:ONTOAVIDA_00000024))
Declaration(Class(obo:ONTOAVIDA_00000025))
Declaration(Class(obo:ONTOAVIDA_00000026))
Declaration(Class(obo:ONTOAVIDA_00000027))
Declaration(Class(obo:ONTOAVIDA_00000028))
Declaration(Class(obo:ONTOAVIDA_00000029))
Declaration(Class(obo:ONTOAVIDA_00000030))
Declaration(Class(obo:ONTOAVIDA_00000031))
Declaration(Class(obo:ONTOAVIDA_00000032))
Declaration(Class(obo:ONTOAVIDA_00000033))
Declaration(Class(obo:ONTOAVIDA_00000034))
Declaration(Class(obo:ONTOAVIDA_00000035))
Declaration(Class(obo:ONTOAVIDA_00000036))
Declaration(Class(obo:ONTOAVIDA_00000037))
Declaration(Class(obo:ONTOAVIDA_00000038))
Declaration(Class(obo:ONTOAVIDA_00000039))
Declaration(Class(obo:ONTOAVIDA_00000040))
Declaration(Class(obo:ONTOAVIDA_00000041))
Declaration(Class(obo:ONTOAVIDA_00000042))
Declaration(Class(obo:ONTOAVIDA_00000043))
Declaration(Class(obo:ONTOAVIDA_00000044))
Declaration(Class(obo:ONTOAVIDA_00000045))
Declaration(Class(obo:ONTOAVIDA_00000046))
Declaration(Class(obo:ONTOAVIDA_00000047))
Declaration(Class(obo:ONTOAVIDA_00000048))
Declaration(Class(obo:ONTOAVIDA_00000049))
Declaration(Class(obo:ONTOAVIDA_00000050))
Declaration(Class(obo:ONTOAVIDA_00000051))
Declaration(Class(obo:ONTOAVIDA_00000052))
Declaration(Class(obo:ONTOAVIDA_00000053))
Declaration(Class(obo:ONTOAVIDA_00000054))
Declaration(Class(obo:ONTOAVIDA_00000055))
Declaration(Class(obo:ONTOAVIDA_00000056))
Declaration(Class(obo:ONTOAVIDA_00000057))
Declaration(Class(obo:ONTOAVIDA_00000058))
Declaration(Class(obo:ONTOAVIDA_00000059))
Declaration(Class(obo:ONTOAVIDA_00000060))
Declaration(Class(obo:ONTOAVIDA_00000061))
Declaration(Class(obo:ONTOAVIDA_00000062))
Declaration(Class(obo:ONTOAVIDA_00000063))
Declaration(Class(obo:ONTOAVIDA_00000064))
Declaration(Class(obo:ONTOAVIDA_00000065))
Declaration(Class(obo:ONTOAVIDA_00000066))
Declaration(Class(obo:ONTOAVIDA_00000067))
Declaration(Class(obo:ONTOAVIDA_00000068))
Declaration(Class(obo:ONTOAVIDA_00000069))
Declaration(Class(obo:ONTOAVIDA_00000070))
Declaration(Class(obo:ONTOAVIDA_00000071))
Declaration(Class(obo:ONTOAVIDA_00000072))
Declaration(Class(obo:ONTOAVIDA_00000073))
Declaration(Class(obo:ONTOAVIDA_00000074))
Declaration(Class(obo:ONTOAVIDA_00000075))
Declaration(Class(obo:ONTOAVIDA_00000076))
Declaration(Class(obo:ONTOAVIDA_00000077))
Declaration(Class(obo:ONTOAVIDA_00000078))
Declaration(Class(obo:ONTOAVIDA_00000079))
Declaration(Class(obo:ONTOAVIDA_00000080))
Declaration(Class(obo:ONTOAVIDA_00000081))
Declaration(Class(obo:ONTOAVIDA_00000082))
Declaration(Class(obo:ONTOAVIDA_00000083))
Declaration(Class(obo:ONTOAVIDA_00000084))
Declaration(Class(obo:ONTOAVIDA_00000085))
Declaration(Class(obo:ONTOAVIDA_00000086))
Declaration(Class(obo:ONTOAVIDA_00000087))
Declaration(Class(obo:ONTOAVIDA_00000088))
Declaration(Class(obo:ONTOAVIDA_00000089))
Declaration(Class(obo:ONTOAVIDA_00000090))
Declaration(Class(obo:ONTOAVIDA_00000091))
Declaration(Class(obo:ONTOAVIDA_00000092))
Declaration(Class(obo:ONTOAVIDA_00000093))
Declaration(Class(obo:ONTOAVIDA_00000094))
Declaration(Class(obo:ONTOAVIDA_00000095))
Declaration(Class(obo:ONTOAVIDA_00000096))
Declaration(Class(obo:ONTOAVIDA_00000097))
Declaration(Class(obo:ONTOAVIDA_00000100))
Declaration(Class(obo:ONTOAVIDA_00000101))
Declaration(Class(obo:ONTOAVIDA_00000102))
Declaration(Class(obo:ONTOAVIDA_00000103))
Declaration(Class(obo:ONTOAVIDA_00000104))
Declaration(Class(obo:ONTOAVIDA_00000105))
Declaration(Class(obo:ONTOAVIDA_00000106))
Declaration(Class(obo:ONTOAVIDA_00000107))
Declaration(Class(obo:ONTOAVIDA_00000108))
Declaration(Class(obo:ONTOAVIDA_00000109))
Declaration(Class(obo:ONTOAVIDA_00000110))
Declaration(Class(obo:ONTOAVIDA_00000111))
Declaration(Class(obo:ONTOAVIDA_00000112))
Declaration(Class(obo:ONTOAVIDA_00000113))
Declaration(Class(obo:ONTOAVIDA_00000114))
Declaration(Class(obo:ONTOAVIDA_00000115))
Declaration(Class(obo:ONTOAVIDA_00000116))
Declaration(Class(obo:ONTOAVIDA_00000117))
Declaration(Class(obo:ONTOAVIDA_00000118))
Declaration(Class(obo:ONTOAVIDA_00000119))
Declaration(Class(obo:ONTOAVIDA_00000120))
Declaration(Class(obo:ONTOAVIDA_00000124))
Declaration(Class(obo:ONTOAVIDA_00000126))
Declaration(Class(obo:ONTOAVIDA_00000127))
Declaration(Class(obo:ONTOAVIDA_00000128))
Declaration(Class(obo:ONTOAVIDA_00000129))
Declaration(Class(obo:ONTOAVIDA_00000130))
Declaration(Class(obo:ONTOAVIDA_00000131))
Declaration(Class(obo:ONTOAVIDA_00000132))
Declaration(Class(obo:ONTOAVIDA_00000133))
Declaration(Class(obo:ONTOAVIDA_00000135))
Declaration(Class(obo:ONTOAVIDA_00000136))
Declaration(Class(obo:ONTOAVIDA_00000137))
Declaration(Class(obo:ONTOAVIDA_00000138))
Declaration(Class(obo:ONTOAVIDA_00000139))
Declaration(Class(obo:ONTOAVIDA_00000140))
Declaration(Class(obo:ONTOAVIDA_00000141))
Declaration(Class(obo:ONTOAVIDA_00000142))
Declaration(Class(obo:ONTOAVIDA_00000143))
Declaration(Class(obo:ONTOAVIDA_00000144))
Declaration(Class(obo:ONTOAVIDA_00000145))
Declaration(Class(obo:ONTOAVIDA_00000146))
Declaration(Class(obo:ONTOAVIDA_00000147))
Declaration(Class(obo:ONTOAVIDA_00000148))
Declaration(Class(obo:ONTOAVIDA_00000149))
Declaration(Class(obo:ONTOAVIDA_00000150))
Declaration(Class(obo:ONTOAVIDA_00000151))
Declaration(Class(obo:ONTOAVIDA_00000155))
Declaration(Class(obo:ONTOAVIDA_00000157))
Declaration(Class(obo:ONTOAVIDA_00000162))
Declaration(Class(obo:ONTOAVIDA_00000163))
Declaration(Class(obo:ONTOAVIDA_00000164))
Declaration(Class(obo:ONTOAVIDA_00000165))
Declaration(Class(obo:ONTOAVIDA_00000168))
Declaration(Class(obo:ONTOAVIDA_00000169))
Declaration(Class(obo:ONTOAVIDA_00000170))
Declaration(Class(obo:ONTOAVIDA_00000171))
Declaration(Class(obo:ONTOAVIDA_00000172))
Declaration(Class(obo:ONTOAVIDA_00000173))
Declaration(Class(obo:ONTOAVIDA_00000174))
Declaration(Class(obo:ONTOAVIDA_00000190))
Declaration(Class(obo:ONTOAVIDA_00001201))
Declaration(Class(obo:ONTOAVIDA_00001202))
Declaration(Class(obo:ONTOAVIDA_00001205))
Declaration(Class(obo:ONTOAVIDA_00001206))
Declaration(Class(obo:ONTOAVIDA_00001207))
Declaration(Class(obo:ONTOAVIDA_00001208))
Declaration(Class(obo:ONTOAVIDA_00001209))
Declaration(Class(obo:ONTOAVIDA_00001210))
Declaration(Class(obo:ONTOAVIDA_00002001))
Declaration(Class(obo:ONTOAVIDA_00002002))
Declaration(Class(obo:ONTOAVIDA_00002003))
Declaration(Class(obo:ONTOAVIDA_00002004))
Declaration(Class(obo:ONTOAVIDA_00002005))
Declaration(Class(obo:ONTOAVIDA_00002006))
Declaration(Class(obo:ONTOAVIDA_00002007))
Declaration(Class(obo:ONTOAVIDA_00002008))
Declaration(Class(obo:ONTOAVIDA_00002009))
Declaration(Class(obo:ONTOAVIDA_00002010))
Declaration(Class(obo:ONTOAVIDA_00002011))
Declaration(Class(obo:ONTOAVIDA_00002012))
Declaration(Class(obo:ONTOAVIDA_00002013))
Declaration(Class(obo:ONTOAVIDA_00002014))
Declaration(Class(obo:ONTOAVIDA_00002015))
Declaration(Class(obo:ONTOAVIDA_00002016))
Declaration(Class(obo:ONTOAVIDA_00002017))
Declaration(Class(obo:ONTOAVIDA_00002018))
Declaration(Class(obo:ONTOAVIDA_00002019))
Declaration(Class(obo:ONTOAVIDA_00002020))
Declaration(Class(obo:ONTOAVIDA_00002021))
Declaration(Class(obo:ONTOAVIDA_00002022))
Declaration(Class(obo:ONTOAVIDA_00002023))
Declaration(Class(obo:ONTOAVIDA_00002024))
Declaration(Class(obo:ONTOAVIDA_00002025))
Declaration(Class(obo:ONTOAVIDA_00002026))
Declaration(Class(obo:ONTOAVIDA_00002027))
Declaration(Class(obo:ONTOAVIDA_00002028))
Declaration(Class(obo:ONTOAVIDA_00002029))
Declaration(Class(obo:ONTOAVIDA_00002030))
Declaration(Class(obo:ONTOAVIDA_00002031))
Declaration(Class(obo:ONTOAVIDA_00002032))
Declaration(Class(obo:ONTOAVIDA_00002033))
Declaration(Class(obo:ONTOAVIDA_00002034))
Declaration(Class(obo:ONTOAVIDA_00002035))
Declaration(Class(obo:ONTOAVIDA_00002036))
Declaration(Class(obo:ONTOAVIDA_00002037))
Declaration(Class(obo:ONTOAVIDA_00002038))
Declaration(Class(obo:ONTOAVIDA_00002039))
Declaration(Class(obo:ONTOAVIDA_00002040))
Declaration(Class(obo:ONTOAVIDA_00002041))
Declaration(Class(obo:ONTOAVIDA_00002042))
Declaration(Class(obo:ONTOAVIDA_00002043))
Declaration(Class(obo:ONTOAVIDA_00002044))
Declaration(Class(obo:ONTOAVIDA_00002045))
Declaration(Class(obo:ONTOAVIDA_00002046))
Declaration(Class(obo:ONTOAVIDA_00002047))
Declaration(Class(obo:ONTOAVIDA_00002048))
Declaration(Class(obo:ONTOAVIDA_00002049))
Declaration(Class(obo:ONTOAVIDA_00002050))
Declaration(Class(obo:ONTOAVIDA_00002051))
Declaration(Class(obo:ONTOAVIDA_00002052))
Declaration(Class(obo:ONTOAVIDA_00002053))
Declaration(Class(obo:ONTOAVIDA_00002054))
Declaration(Class(obo:ONTOAVIDA_00002055))
Declaration(Class(obo:ONTOAVIDA_00002056))
Declaration(Class(obo:ONTOAVIDA_00002057))
Declaration(Class(obo:ONTOAVIDA_00002058))
Declaration(Class(obo:ONTOAVIDA_00002059))
Declaration(Class(obo:ONTOAVIDA_00002060))
Declaration(Class(obo:ONTOAVIDA_00002061))
Declaration(Class(obo:ONTOAVIDA_00002062))
Declaration(Class(obo:ONTOAVIDA_00002063))
Declaration(Class(obo:ONTOAVIDA_00002064))
Declaration(Class(obo:ONTOAVIDA_00002065))
Declaration(Class(obo:ONTOAVIDA_00002066))
Declaration(Class(obo:ONTOAVIDA_00002067))
Declaration(Class(obo:ONTOAVIDA_00002068))
Declaration(Class(obo:ONTOAVIDA_00002069))
Declaration(Class(obo:ONTOAVIDA_00002070))
Declaration(Class(obo:ONTOAVIDA_00002071))
Declaration(Class(obo:ONTOAVIDA_00002072))
Declaration(Class(obo:ONTOAVIDA_00002073))
Declaration(Class(obo:ONTOAVIDA_00002074))
Declaration(Class(obo:ONTOAVIDA_00002075))
Declaration(Class(obo:ONTOAVIDA_00002076))
Declaration(Class(obo:ONTOAVIDA_00002077))
Declaration(Class(obo:ONTOAVIDA_00002078))
Declaration(Class(obo:ONTOAVIDA_00002079))
Declaration(Class(obo:ONTOAVIDA_00002080))
Declaration(Class(obo:ONTOAVIDA_00002081))
Declaration(Class(obo:ONTOAVIDA_00002082))
Declaration(Class(obo:ONTOAVIDA_00002083))
Declaration(Class(obo:ONTOAVIDA_00002084))
Declaration(Class(obo:ONTOAVIDA_00002085))
Declaration(Class(obo:ONTOAVIDA_00002086))
Declaration(Class(obo:ONTOAVIDA_00002087))
Declaration(Class(obo:ONTOAVIDA_00002088))
Declaration(Class(obo:ONTOAVIDA_00002089))
Declaration(Class(obo:ONTOAVIDA_00002090))
Declaration(Class(obo:ONTOAVIDA_00002091))
Declaration(Class(obo:ONTOAVIDA_00002092))
Declaration(Class(obo:ONTOAVIDA_00002093))
Declaration(Class(obo:ONTOAVIDA_00002094))
Declaration(Class(obo:ONTOAVIDA_00002095))
Declaration(Class(obo:ONTOAVIDA_00002096))
Declaration(Class(obo:ONTOAVIDA_00002097))
Declaration(Class(obo:ONTOAVIDA_00002098))
Declaration(Class(obo:ONTOAVIDA_00002099))
Declaration(Class(obo:ONTOAVIDA_00002100))
Declaration(Class(obo:ONTOAVIDA_00002101))
Declaration(Class(obo:ONTOAVIDA_00002102))
Declaration(Class(obo:ONTOAVIDA_00002103))
Declaration(Class(obo:ONTOAVIDA_00002104))
Declaration(Class(obo:ONTOAVIDA_00002105))
Declaration(Class(obo:ONTOAVIDA_00002106))
Declaration(Class(obo:ONTOAVIDA_00002107))
Declaration(Class(obo:ONTOAVIDA_00002108))
Declaration(Class(obo:ONTOAVIDA_00002109))
Declaration(Class(obo:ONTOAVIDA_00002110))
Declaration(Class(obo:ONTOAVIDA_00002111))
Declaration(Class(obo:ONTOAVIDA_00002112))
Declaration(Class(obo:ONTOAVIDA_00002113))
Declaration(Class(obo:ONTOAVIDA_00002114))
Declaration(Class(obo:ONTOAVIDA_00002115))
Declaration(Class(obo:ONTOAVIDA_00002116))
Declaration(Class(obo:ONTOAVIDA_00002117))
Declaration(Class(obo:ONTOAVIDA_00002118))
Declaration(Class(obo:ONTOAVIDA_00002119))
Declaration(Class(obo:ONTOAVIDA_00002120))
Declaration(Class(obo:ONTOAVIDA_00002121))
Declaration(Class(obo:ONTOAVIDA_00002122))
Declaration(Class(obo:ONTOAVIDA_00002123))
Declaration(Class(obo:ONTOAVIDA_00002124))
Declaration(Class(obo:ONTOAVIDA_00002125))
Declaration(Class(obo:ONTOAVIDA_00002126))
Declaration(Class(obo:ONTOAVIDA_00002127))
Declaration(Class(obo:ONTOAVIDA_00002128))
Declaration(Class(obo:ONTOAVIDA_00002129))
Declaration(Class(obo:ONTOAVIDA_00002130))
Declaration(Class(obo:ONTOAVIDA_00002131))
Declaration(Class(obo:ONTOAVIDA_00002132))
Declaration(Class(obo:ONTOAVIDA_00002133))
Declaration(Class(obo:ONTOAVIDA_00002134))
Declaration(Class(obo:ONTOAVIDA_00002135))
Declaration(Class(obo:ONTOAVIDA_00002136))
Declaration(Class(obo:ONTOAVIDA_00002137))
Declaration(Class(obo:ONTOAVIDA_00002138))
Declaration(Class(obo:ONTOAVIDA_00002139))
Declaration(Class(obo:ONTOAVIDA_00002140))
Declaration(Class(obo:ONTOAVIDA_00002141))
Declaration(Class(obo:ONTOAVIDA_00002142))
Declaration(Class(obo:ONTOAVIDA_00002143))
Declaration(Class(obo:ONTOAVIDA_00002144))
Declaration(Class(obo:ONTOAVIDA_00002145))
Declaration(Class(obo:ONTOAVIDA_00002146))
Declaration(Class(obo:ONTOAVIDA_00002147))
Declaration(Class(obo:ONTOAVIDA_00002148))
Declaration(Class(obo:ONTOAVIDA_00002149))
Declaration(Class(obo:ONTOAVIDA_00002150))
Declaration(Class(obo:ONTOAVIDA_00002151))
Declaration(Class(obo:ONTOAVIDA_00002152))
Declaration(Class(obo:ONTOAVIDA_00002153))
Declaration(Class(obo:ONTOAVIDA_00002154))
Declaration(Class(obo:ONTOAVIDA_00002155))
Declaration(Class(obo:ONTOAVIDA_00002156))
Declaration(Class(obo:ONTOAVIDA_00002157))
Declaration(Class(obo:ONTOAVIDA_00002158))
Declaration(Class(obo:ONTOAVIDA_00002159))
Declaration(Class(obo:ONTOAVIDA_00002160))
Declaration(Class(obo:ONTOAVIDA_00002161))
Declaration(Class(obo:ONTOAVIDA_00002162))
Declaration(Class(obo:ONTOAVIDA_00002163))
Declaration(Class(obo:ONTOAVIDA_00002164))
Declaration(Class(obo:ONTOAVIDA_00002165))
Declaration(Class(obo:ONTOAVIDA_00002166))
Declaration(Class(obo:ONTOAVIDA_00002167))
Declaration(Class(obo:ONTOAVIDA_00002168))
Declaration(Class(obo:ONTOAVIDA_00002169))
Declaration(Class(obo:ONTOAVIDA_00002170))
Declaration(Class(obo:ONTOAVIDA_00002171))
Declaration(Class(obo:ONTOAVIDA_00002172))
Declaration(Class(obo:ONTOAVIDA_00002173))
Declaration(Class(obo:ONTOAVIDA_00002174))
Declaration(Class(obo:ONTOAVIDA_00002175))
Declaration(Class(obo:ONTOAVIDA_00002176))
Declaration(Class(obo:ONTOAVIDA_00002177))
Declaration(Class(obo:ONTOAVIDA_00002178))
Declaration(Class(obo:ONTOAVIDA_00002179))
Declaration(Class(obo:ONTOAVIDA_00002180))
Declaration(Class(obo:ONTOAVIDA_00002181))
Declaration(Class(obo:ONTOAVIDA_00002182))
Declaration(Class(obo:ONTOAVIDA_00002183))
Declaration(Class(obo:ONTOAVIDA_00002184))
Declaration(Class(obo:ONTOAVIDA_00002185))
Declaration(Class(obo:ONTOAVIDA_00002186))
Declaration(Class(obo:ONTOAVIDA_00002187))
Declaration(Class(obo:ONTOAVIDA_00002188))
Declaration(Class(obo:ONTOAVIDA_00002189))
Declaration(Class(obo:ONTOAVIDA_00002190))
Declaration(Class(obo:ONTOAVIDA_00002191))
Declaration(Class(obo:ONTOAVIDA_00002192))
Declaration(Class(obo:ONTOAVIDA_00002193))
Declaration(Class(obo:ONTOAVIDA_00002194))
Declaration(Class(obo:ONTOAVIDA_00002195))
Declaration(Class(obo:ONTOAVIDA_00002196))
Declaration(Class(obo:ONTOAVIDA_00002197))
Declaration(Class(obo:ONTOAVIDA_00002198))
Declaration(Class(obo:ONTOAVIDA_00002199))
Declaration(Class(obo:ONTOAVIDA_00002200))
Declaration(Class(obo:ONTOAVIDA_00002201))
Declaration(Class(obo:ONTOAVIDA_00002202))
Declaration(Class(obo:ONTOAVIDA_00002203))
Declaration(Class(obo:ONTOAVIDA_00002204))
Declaration(Class(obo:ONTOAVIDA_00002205))
Declaration(Class(obo:ONTOAVIDA_00002206))
Declaration(Class(obo:ONTOAVIDA_00002207))
Declaration(Class(obo:ONTOAVIDA_00002208))
Declaration(Class(obo:ONTOAVIDA_00002209))
Declaration(Class(obo:ONTOAVIDA_00002210))
Declaration(Class(obo:ONTOAVIDA_00002211))
Declaration(Class(obo:ONTOAVIDA_00002212))
Declaration(Class(obo:ONTOAVIDA_00002213))
Declaration(Class(obo:ONTOAVIDA_00002214))
Declaration(Class(obo:ONTOAVIDA_00002215))
Declaration(Class(obo:ONTOAVIDA_00002216))
Declaration(Class(obo:ONTOAVIDA_00002217))
Declaration(Class(obo:ONTOAVIDA_00002218))
Declaration(Class(obo:ONTOAVIDA_00002219))
Declaration(Class(obo:ONTOAVIDA_00002220))
Declaration(Class(obo:ONTOAVIDA_00002221))
Declaration(Class(obo:ONTOAVIDA_00002222))
Declaration(Class(obo:ONTOAVIDA_00002223))
Declaration(Class(obo:ONTOAVIDA_00002224))
Declaration(Class(obo:ONTOAVIDA_00002225))
Declaration(Class(obo:ONTOAVIDA_00002226))
Declaration(Class(obo:ONTOAVIDA_00002227))
Declaration(Class(obo:ONTOAVIDA_00002228))
Declaration(Class(obo:ONTOAVIDA_00002229))
Declaration(Class(obo:ONTOAVIDA_00002230))
Declaration(Class(obo:ONTOAVIDA_00002231))
Declaration(Class(obo:ONTOAVIDA_00002232))
Declaration(Class(obo:ONTOAVIDA_00002233))
Declaration(Class(obo:ONTOAVIDA_00002234))
Declaration(Class(obo:ONTOAVIDA_00002235))
Declaration(Class(obo:ONTOAVIDA_00002236))
Declaration(Class(obo:ONTOAVIDA_00002237))
Declaration(Class(obo:ONTOAVIDA_00002238))
Declaration(Class(obo:ONTOAVIDA_00002239))
Declaration(Class(obo:ONTOAVIDA_00002240))
Declaration(Class(obo:ONTOAVIDA_00002241))
Declaration(Class(obo:ONTOAVIDA_00002242))
Declaration(Class(obo:ONTOAVIDA_00002243))
Declaration(Class(obo:ONTOAVIDA_00002244))
Declaration(Class(obo:ONTOAVIDA_00002245))
Declaration(Class(obo:ONTOAVIDA_00002246))
Declaration(Class(obo:ONTOAVIDA_00002247))
Declaration(Class(obo:ONTOAVIDA_00002248))
Declaration(Class(obo:ONTOAVIDA_00002249))
Declaration(Class(obo:ONTOAVIDA_00002250))
Declaration(Class(obo:ONTOAVIDA_00002251))
Declaration(Class(obo:ONTOAVIDA_00002252))
Declaration(Class(obo:ONTOAVIDA_00002253))
Declaration(Class(obo:ONTOAVIDA_00002254))
Declaration(Class(obo:ONTOAVIDA_00002255))
Declaration(Class(obo:ONTOAVIDA_00002256))
Declaration(Class(obo:ONTOAVIDA_00002257))
Declaration(Class(obo:ONTOAVIDA_00002258))
Declaration(Class(obo:ONTOAVIDA_00002259))
Declaration(Class(obo:ONTOAVIDA_00002260))
Declaration(Class(obo:ONTOAVIDA_00002261))
Declaration(Class(obo:ONTOAVIDA_00002262))
Declaration(Class(obo:ONTOAVIDA_00002263))
Declaration(Class(obo:ONTOAVIDA_00002264))
Declaration(Class(obo:ONTOAVIDA_00002265))
Declaration(Class(obo:ONTOAVIDA_00002266))
Declaration(Class(obo:ONTOAVIDA_00002267))
Declaration(Class(obo:ONTOAVIDA_00002268))
Declaration(Class(obo:ONTOAVIDA_00002269))
Declaration(Class(obo:ONTOAVIDA_00002270))
Declaration(Class(obo:ONTOAVIDA_00002271))
Declaration(Class(obo:ONTOAVIDA_00002272))
Declaration(Class(obo:ONTOAVIDA_00002273))
Declaration(Class(obo:ONTOAVIDA_00002274))
Declaration(Class(obo:ONTOAVIDA_00002275))
Declaration(Class(obo:ONTOAVIDA_00002276))
Declaration(Class(obo:ONTOAVIDA_00002277))
Declaration(Class(obo:ONTOAVIDA_00002278))
Declaration(Class(obo:ONTOAVIDA_00002279))
Declaration(Class(obo:ONTOAVIDA_00002280))
Declaration(Class(obo:ONTOAVIDA_00002281))
Declaration(Class(obo:ONTOAVIDA_00002282))
Declaration(Class(obo:ONTOAVIDA_00002283))
Declaration(Class(obo:ONTOAVIDA_00002284))
Declaration(Class(obo:ONTOAVIDA_00002285))
Declaration(Class(obo:ONTOAVIDA_00002286))
Declaration(Class(obo:ONTOAVIDA_00002287))
Declaration(Class(obo:ONTOAVIDA_00002288))
Declaration(Class(obo:ONTOAVIDA_00002289))
Declaration(Class(obo:ONTOAVIDA_00002290))
Declaration(Class(obo:ONTOAVIDA_00002291))
Declaration(Class(obo:ONTOAVIDA_00002292))
Declaration(Class(obo:ONTOAVIDA_00002293))
Declaration(Class(obo:ONTOAVIDA_00002294))
Declaration(Class(obo:ONTOAVIDA_00002295))
Declaration(Class(obo:ONTOAVIDA_00002296))
Declaration(Class(obo:ONTOAVIDA_00002297))
Declaration(Class(obo:ONTOAVIDA_00002298))
Declaration(Class(obo:ONTOAVIDA_00002299))
Declaration(Class(obo:ONTOAVIDA_00002300))
Declaration(Class(obo:ONTOAVIDA_00002301))
Declaration(Class(obo:ONTOAVIDA_00002302))
Declaration(Class(obo:ONTOAVIDA_00002303))
Declaration(Class(obo:ONTOAVIDA_00002304))
Declaration(Class(obo:ONTOAVIDA_00002305))
Declaration(Class(obo:ONTOAVIDA_00002306))
Declaration(Class(obo:ONTOAVIDA_00002307))
Declaration(Class(obo:ONTOAVIDA_00002308))
Declaration(Class(obo:ONTOAVIDA_00002309))
Declaration(Class(obo:ONTOAVIDA_00002310))
Declaration(Class(obo:ONTOAVIDA_00002311))
Declaration(Class(obo:ONTOAVIDA_00002312))
Declaration(Class(obo:ONTOAVIDA_00002313))
Declaration(Class(obo:ONTOAVIDA_00002314))
Declaration(Class(obo:ONTOAVIDA_00002315))
Declaration(Class(obo:ONTOAVIDA_00002316))
Declaration(Class(obo:ONTOAVIDA_00002317))
Declaration(Class(obo:ONTOAVIDA_00002318))
Declaration(Class(obo:ONTOAVIDA_00002319))
Declaration(Class(obo:ONTOAVIDA_00002320))
Declaration(Class(obo:ONTOAVIDA_00002321))
Declaration(Class(obo:ONTOAVIDA_00002322))
Declaration(Class(obo:ONTOAVIDA_00002323))
Declaration(Class(obo:ONTOAVIDA_00002324))
Declaration(Class(obo:ONTOAVIDA_00002325))
Declaration(Class(obo:ONTOAVIDA_00002326))
Declaration(Class(obo:ONTOAVIDA_00002327))
Declaration(Class(obo:ONTOAVIDA_00002328))
Declaration(Class(obo:ONTOAVIDA_00002329))
Declaration(Class(obo:ONTOAVIDA_00002330))
Declaration(Class(obo:ONTOAVIDA_00002331))
Declaration(Class(obo:ONTOAVIDA_00002332))
Declaration(Class(obo:ONTOAVIDA_00002333))
Declaration(Class(obo:ONTOAVIDA_00002334))
Declaration(Class(obo:ONTOAVIDA_00002335))
Declaration(Class(obo:ONTOAVIDA_00002336))
Declaration(Class(obo:ONTOAVIDA_00002337))
Declaration(Class(obo:ONTOAVIDA_00002338))
Declaration(Class(obo:ONTOAVIDA_00002339))
Declaration(Class(obo:ONTOAVIDA_00002340))
Declaration(Class(obo:ONTOAVIDA_00002341))
Declaration(Class(obo:ONTOAVIDA_00002342))
Declaration(Class(obo:ONTOAVIDA_00002343))
Declaration(Class(obo:ONTOAVIDA_00002344))
Declaration(Class(obo:ONTOAVIDA_00002345))
Declaration(Class(obo:ONTOAVIDA_00002346))
Declaration(Class(obo:ONTOAVIDA_00002347))
Declaration(Class(obo:ONTOAVIDA_00002348))
Declaration(Class(obo:ONTOAVIDA_00002349))
Declaration(Class(obo:ONTOAVIDA_00002350))
Declaration(Class(obo:ONTOAVIDA_00002351))
Declaration(Class(obo:ONTOAVIDA_00002352))
Declaration(Class(obo:ONTOAVIDA_00002353))
Declaration(Class(obo:ONTOAVIDA_00002354))
Declaration(Class(obo:ONTOAVIDA_00002355))
Declaration(Class(obo:ONTOAVIDA_00002356))
Declaration(Class(obo:ONTOAVIDA_00002357))
Declaration(Class(obo:ONTOAVIDA_00002358))
Declaration(Class(obo:ONTOAVIDA_00002359))
Declaration(Class(obo:ONTOAVIDA_00002360))
Declaration(Class(obo:ONTOAVIDA_00002361))
Declaration(Class(obo:ONTOAVIDA_00002362))
Declaration(Class(obo:ONTOAVIDA_00002363))
Declaration(Class(obo:ONTOAVIDA_00002364))
Declaration(Class(obo:ONTOAVIDA_00002365))
Declaration(Class(obo:ONTOAVIDA_00002366))
Declaration(Class(obo:ONTOAVIDA_00002367))
Declaration(Class(obo:ONTOAVIDA_00002368))
Declaration(Class(obo:ONTOAVIDA_00002369))
Declaration(Class(obo:ONTOAVIDA_00002370))
Declaration(Class(obo:ONTOAVIDA_00002371))
Declaration(Class(obo:ONTOAVIDA_00002372))
Declaration(Class(obo:ONTOAVIDA_00002373))
Declaration(Class(obo:ONTOAVIDA_00002374))
Declaration(Class(obo:ONTOAVIDA_00002375))
Declaration(Class(obo:ONTOAVIDA_00002376))
Declaration(Class(obo:ONTOAVIDA_00002377))
Declaration(Class(obo:ONTOAVIDA_00002378))
Declaration(Class(obo:ONTOAVIDA_00002379))
Declaration(Class(obo:ONTOAVIDA_00002380))
Declaration(Class(obo:ONTOAVIDA_00002381))
Declaration(Class(obo:ONTOAVIDA_00002382))
Declaration(Class(obo:ONTOAVIDA_00002383))
Declaration(Class(obo:ONTOAVIDA_00002384))
Declaration(Class(obo:ONTOAVIDA_00002385))
Declaration(Class(obo:ONTOAVIDA_00002386))
Declaration(Class(obo:ONTOAVIDA_00002387))
Declaration(Class(obo:ONTOAVIDA_00002388))
Declaration(Class(obo:ONTOAVIDA_00002389))
Declaration(Class(obo:ONTOAVIDA_00002390))
Declaration(Class(obo:ONTOAVIDA_00002391))
Declaration(Class(obo:ONTOAVIDA_00002392))
Declaration(Class(obo:ONTOAVIDA_00002393))
Declaration(Class(obo:ONTOAVIDA_00002394))
Declaration(Class(obo:ONTOAVIDA_00002395))
Declaration(Class(obo:ONTOAVIDA_00002396))
Declaration(Class(obo:ONTOAVIDA_00002397))
Declaration(Class(obo:ONTOAVIDA_00002398))
Declaration(Class(obo:ONTOAVIDA_00002399))
Declaration(Class(obo:ONTOAVIDA_00002400))
Declaration(Class(obo:ONTOAVIDA_00002401))
Declaration(Class(obo:ONTOAVIDA_00002402))
Declaration(Class(obo:ONTOAVIDA_00002403))
Declaration(Class(obo:ONTOAVIDA_00002404))
Declaration(Class(obo:ONTOAVIDA_00002405))
Declaration(Class(obo:ONTOAVIDA_00002406))
Declaration(Class(obo:ONTOAVIDA_00002407))
Declaration(Class(obo:ONTOAVIDA_00002408))
Declaration(Class(obo:ONTOAVIDA_00002409))
Declaration(Class(obo:ONTOAVIDA_00002410))
Declaration(Class(obo:ONTOAVIDA_00002411))
Declaration(Class(obo:ONTOAVIDA_00002412))
Declaration(Class(obo:ONTOAVIDA_00002413))
Declaration(Class(obo:ONTOAVIDA_00002414))
Declaration(Class(obo:ONTOAVIDA_00002415))
Declaration(Class(obo:ONTOAVIDA_00002416))
Declaration(Class(obo:ONTOAVIDA_00002417))
Declaration(Class(obo:ONTOAVIDA_00002418))
Declaration(Class(obo:ONTOAVIDA_00002419))
Declaration(Class(obo:ONTOAVIDA_00002420))
Declaration(Class(obo:ONTOAVIDA_00002421))
Declaration(Class(obo:ONTOAVIDA_00002422))
Declaration(Class(obo:ONTOAVIDA_00002423))
Declaration(Class(obo:ONTOAVIDA_00002424))
Declaration(Class(obo:ONTOAVIDA_00002425))
Declaration(Class(obo:ONTOAVIDA_00002426))
Declaration(Class(obo:ONTOAVIDA_00002427))
Declaration(Class(obo:ONTOAVIDA_00002428))
Declaration(Class(obo:ONTOAVIDA_00002429))
Declaration(Class(obo:ONTOAVIDA_00002430))
Declaration(Class(obo:ONTOAVIDA_00002431))
Declaration(Class(obo:ONTOAVIDA_00002432))
Declaration(Class(obo:ONTOAVIDA_00002433))
Declaration(Class(obo:ONTOAVIDA_00002434))
Declaration(Class(obo:ONTOAVIDA_00002435))
Declaration(Class(obo:ONTOAVIDA_00002436))
Declaration(Class(obo:ONTOAVIDA_00002437))
Declaration(Class(obo:ONTOAVIDA_00002438))
Declaration(Class(obo:ONTOAVIDA_00002439))
Declaration(Class(obo:ONTOAVIDA_00002440))
Declaration(Class(obo:ONTOAVIDA_00002441))
Declaration(Class(obo:ONTOAVIDA_00002442))
Declaration(Class(obo:ONTOAVIDA_00002443))
Declaration(Class(obo:ONTOAVIDA_00002444))
Declaration(Class(obo:ONTOAVIDA_00002445))
Declaration(Class(obo:ONTOAVIDA_00002446))
Declaration(Class(obo:ONTOAVIDA_00002447))
Declaration(Class(obo:ONTOAVIDA_00002448))
Declaration(Class(obo:ONTOAVIDA_00002449))
Declaration(Class(obo:ONTOAVIDA_00002450))
Declaration(Class(obo:ONTOAVIDA_00002451))
Declaration(Class(obo:ONTOAVIDA_00002452))
Declaration(Class(obo:ONTOAVIDA_00002453))
Declaration(Class(obo:ONTOAVIDA_00002454))
Declaration(Class(obo:ONTOAVIDA_00002455))
Declaration(Class(obo:ONTOAVIDA_00002456))
Declaration(Class(obo:ONTOAVIDA_00002457))
Declaration(Class(obo:ONTOAVIDA_00002458))
Declaration(Class(obo:ONTOAVIDA_00002459))
Declaration(Class(obo:ONTOAVIDA_00002460))
Declaration(Class(obo:ONTOAVIDA_00002461))
Declaration(Class(obo:ONTOAVIDA_00002462))
Declaration(Class(obo:ONTOAVIDA_00002463))
Declaration(Class(obo:ONTOAVIDA_00002464))
Declaration(Class(obo:ONTOAVIDA_00002465))
Declaration(Class(obo:ONTOAVIDA_00002466))
Declaration(Class(obo:ONTOAVIDA_00002467))
Declaration(Class(obo:ONTOAVIDA_00002468))
Declaration(Class(obo:ONTOAVIDA_00002469))
Declaration(Class(obo:ONTOAVIDA_00002470))
Declaration(Class(obo:ONTOAVIDA_00002471))
Declaration(Class(obo:ONTOAVIDA_00002472))
Declaration(Class(obo:ONTOAVIDA_00002473))
Declaration(Class(obo:ONTOAVIDA_00002474))
Declaration(Class(obo:ONTOAVIDA_00002475))
Declaration(Class(obo:ONTOAVIDA_00002476))
Declaration(Class(obo:ONTOAVIDA_00002477))
Declaration(Class(obo:ONTOAVIDA_00002478))
Declaration(Class(obo:ONTOAVIDA_00002479))
Declaration(Class(obo:ONTOAVIDA_00002480))
Declaration(Class(obo:ONTOAVIDA_00002481))
Declaration(Class(obo:ONTOAVIDA_00002482))
Declaration(Class(obo:ONTOAVIDA_00002483))
Declaration(Class(obo:ONTOAVIDA_00002484))
Declaration(Class(obo:ONTOAVIDA_00002485))
Declaration(Class(obo:ONTOAVIDA_00002486))
Declaration(Class(obo:ONTOAVIDA_00002487))
Declaration(Class(obo:ONTOAVIDA_00002488))
Declaration(Class(obo:ONTOAVIDA_00002489))
Declaration(Class(obo:ONTOAVIDA_00002490))
Declaration(Class(obo:ONTOAVIDA_00002491))
Declaration(Class(obo:ONTOAVIDA_00002492))
Declaration(Class(obo:ONTOAVIDA_00002493))
Declaration(Class(obo:ONTOAVIDA_00002494))
Declaration(Class(obo:ONTOAVIDA_00002495))
Declaration(Class(obo:ONTOAVIDA_00002496))
Declaration(Class(obo:ONTOAVIDA_00002497))
Declaration(Class(obo:ONTOAVIDA_00002498))
Declaration(Class(obo:ONTOAVIDA_00002499))
Declaration(Class(obo:ONTOAVIDA_00002500))
Declaration(Class(obo:ONTOAVIDA_00002501))
Declaration(Class(obo:ONTOAVIDA_00002502))
Declaration(Class(obo:ONTOAVIDA_00002503))
Declaration(Class(obo:ONTOAVIDA_00002504))
Declaration(Class(obo:ONTOAVIDA_00002505))
Declaration(Class(obo:ONTOAVIDA_00002506))
Declaration(Class(obo:ONTOAVIDA_00002507))
Declaration(Class(obo:ONTOAVIDA_00002508))
Declaration(Class(obo:ONTOAVIDA_00002509))
Declaration(Class(obo:ONTOAVIDA_00002510))
Declaration(Class(obo:ONTOAVIDA_00002511))
Declaration(Class(obo:ONTOAVIDA_00002512))
Declaration(Class(obo:STATO_0000002))
Declaration(ObjectProperty(obo:ONTOAVIDA_00000004))
Declaration(ObjectProperty(obo:ONTOAVIDA_00000005))
Declaration(ObjectProperty(obo:ONTOAVIDA_00000134))
Declaration(ObjectProperty(obo:ONTOAVIDA_00000154))
Declaration(ObjectProperty(obo:ONTOAVIDA_00000176))
Declaration(ObjectProperty(obo:ONTOAVIDA_00000182))
Declaration(ObjectProperty(obo:ONTOAVIDA_00001197))
Declaration(ObjectProperty(obo:ONTOAVIDA_00001198))
Declaration(ObjectProperty(obo:ONTOAVIDA_00001199))
Declaration(ObjectProperty(obo:ONTOAVIDA_00001200))
Declaration(ObjectProperty(obo:RO_0000056))
Declaration(ObjectProperty(obo:RO_0001018))
Declaration(ObjectProperty(obo:RO_0001019))
Declaration(ObjectProperty(obo:RO_0002180))
Declaration(ObjectProperty(obo:RO_0002331))
Declaration(ObjectProperty(obo:RO_0002353))
Declaration(ObjectProperty(obo:RO_0002443))
Declaration(ObjectProperty(obo:RO_0002444))
Declaration(ObjectProperty(obo:RO_0002445))
Declaration(ObjectProperty(obo:RO_0002507))
Declaration(ObjectProperty(rdfs:member))
Declaration(DataProperty(obo:ONTOAVIDA_00000006))
Declaration(DataProperty(obo:ONTOAVIDA_00000015))
Declaration(DataProperty(obo:ONTOAVIDA_00000019))
Declaration(DataProperty(obo:ONTOAVIDA_00000098))
Declaration(DataProperty(obo:ONTOAVIDA_00000121))
Declaration(DataProperty(obo:ONTOAVIDA_00000122))
Declaration(DataProperty(obo:ONTOAVIDA_00000123))
Declaration(DataProperty(obo:ONTOAVIDA_00000125))
Declaration(DataProperty(obo:ONTOAVIDA_00000160))
Declaration(DataProperty(obo:ONTOAVIDA_00000161))
Declaration(DataProperty(obo:ONTOAVIDA_00000166))
Declaration(DataProperty(obo:ONTOAVIDA_00000175))
Declaration(DataProperty(obo:ONTOAVIDA_00000191))
Declaration(DataProperty(obo:ONTOAVIDA_00000192))
Declaration(DataProperty(obo:ONTOAVIDA_00000193))
Declaration(DataProperty(obo:ONTOAVIDA_00000197))
Declaration(AnnotationProperty(obo:IAO_0000112))
Declaration(AnnotationProperty(obo:IAO_0000114))
Declaration(AnnotationProperty(obo:IAO_0000115))
Declaration(AnnotationProperty(obo:IAO_0000116))
Declaration(AnnotationProperty(obo:IAO_0000117))
Declaration(AnnotationProperty(obo:IAO_0000118))
Declaration(AnnotationProperty(obo:IAO_0000119))
Declaration(AnnotationProperty(obo:IAO_0000232))
Declaration(AnnotationProperty(obo:RO_0001900))
Declaration(AnnotationProperty(dc:description))
Declaration(AnnotationProperty(dc:identifier))
Declaration(AnnotationProperty(dc:title))
Declaration(AnnotationProperty(terms:description))
Declaration(AnnotationProperty(terms:license))
Declaration(AnnotationProperty(oboInOwl:hasBroadSynonym))
Declaration(AnnotationProperty(oboInOwl:hasDbXref))
Declaration(AnnotationProperty(oboInOwl:hasExactSynonym))
Declaration(AnnotationProperty(oboInOwl:hasOBONamespace))
Declaration(AnnotationProperty(oboInOwl:id))
Declaration(AnnotationProperty(oboInOwl:inSubset))
Declaration(AnnotationProperty(skos:example))

############################
#   Object Properties
############################

# Object Property: obo:ONTOAVIDA_00000004 (executes)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000004 "A relation between a digital organism and its transcriptome, in which the instruction codes harbored in its genome are executed to produce the transcriptome. It might depend on the environment (i.e., \"executes at seed\", being seed the integer used for starting the pseudo-random number generator)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000004 "executes"@en)
SubObjectPropertyOf(obo:ONTOAVIDA_00000004 owl:topObjectProperty)
InverseObjectProperties(obo:ONTOAVIDA_00000004 obo:ONTOAVIDA_00000005)
AsymmetricObjectProperty(obo:ONTOAVIDA_00000004)
ObjectPropertyDomain(obo:ONTOAVIDA_00000004 obo:GSSO_009994)
ObjectPropertyRange(obo:ONTOAVIDA_00000004 obo:ONTOAVIDA_00000124)

# Object Property: obo:ONTOAVIDA_00000005 (is executed by)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000005 "A relation between a digital organism and its transcriptome, in which the transcriptome results from executing the instruction codes harbored in the genome of the digital organism. It might depend on the environment (i.e., \"is executed by at seed\", being seed the integer used for starting the pseudo-random number generator)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000005 "is executed by"@en)
SubObjectPropertyOf(obo:ONTOAVIDA_00000005 owl:topObjectProperty)
AsymmetricObjectProperty(obo:ONTOAVIDA_00000005)
ObjectPropertyDomain(obo:ONTOAVIDA_00000005 obo:ONTOAVIDA_00000124)
ObjectPropertyRange(obo:ONTOAVIDA_00000005 obo:GSSO_009994)

# Object Property: obo:ONTOAVIDA_00000134 (has digital phenotype)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000134 "A relation between a digital organism and the digital phenotype encoded by its digital genome. A digital genome can encode different digital phenotypes in distinct computational environments, and therefore, a digital organism can have more than one digital phenotype."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000134 "has digital phenotype"@en)
SubObjectPropertyOf(obo:ONTOAVIDA_00000134 owl:topObjectProperty)
AsymmetricObjectProperty(obo:ONTOAVIDA_00000134)
ObjectPropertyDomain(obo:ONTOAVIDA_00000134 obo:GSSO_009994)
ObjectPropertyRange(obo:ONTOAVIDA_00000134 obo:ONTOAVIDA_00000151)

# Object Property: obo:ONTOAVIDA_00000154 (mutant of)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000154 "A relation between two digital organisms where their genomes differ in a single instruction code."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000154 "mutant of"@en)
SubObjectPropertyOf(obo:ONTOAVIDA_00000154 owl:topObjectProperty)
SymmetricObjectProperty(obo:ONTOAVIDA_00000154)
ObjectPropertyDomain(obo:ONTOAVIDA_00000154 obo:GSSO_009994)
ObjectPropertyRange(obo:ONTOAVIDA_00000154 obo:GSSO_009994)

# Object Property: obo:ONTOAVIDA_00000176 (is computed by)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000176 "A relation between a digital organism and a logic operation, in which the logic operation is performed when the digital organism executes the instruction codes harbored in its genome. It might depend on the environment (i.e., \"is computed at seed\", being seed the integer used for starting the pseudo-random number generator)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000176 "is computed by"@en)
SubObjectPropertyOf(obo:ONTOAVIDA_00000176 owl:topObjectProperty)
InverseObjectProperties(obo:ONTOAVIDA_00000176 obo:ONTOAVIDA_00000182)
AsymmetricObjectProperty(obo:ONTOAVIDA_00000176)
ObjectPropertyDomain(obo:ONTOAVIDA_00000176 obo:ONTOAVIDA_00000111)
ObjectPropertyRange(obo:ONTOAVIDA_00000176 obo:GSSO_009994)

# Object Property: obo:ONTOAVIDA_00000182 (computes)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000182 "A relation between a digital organism and a logic operation, in which the digital organism performs the logic operation by executing the instruction codes harbored in its genome. It might depend on the environment (i.e., \"computes at seed\", being seed the integer used for starting the pseudo-random number generator)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000182 "computes"@en)
SubObjectPropertyOf(obo:ONTOAVIDA_00000182 owl:topObjectProperty)
AsymmetricObjectProperty(obo:ONTOAVIDA_00000182)
ObjectPropertyDomain(obo:ONTOAVIDA_00000182 obo:GSSO_009994)
ObjectPropertyRange(obo:ONTOAVIDA_00000182 obo:ONTOAVIDA_00000111)

# Object Property: obo:ONTOAVIDA_00001197 (encodes)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00001197 "A relation between the genome and the phenotype of a digital organism, in which the genome contains information that is used to produce the phenotype. It might depend on the environment (i.e., \"encodes at seed\", being seed the integer used for starting the pseudo-random number generator)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00001197 "encodes"@en)
SubObjectPropertyOf(obo:ONTOAVIDA_00001197 owl:topObjectProperty)
InverseObjectProperties(obo:ONTOAVIDA_00001197 obo:ONTOAVIDA_00001199)
AsymmetricObjectProperty(obo:ONTOAVIDA_00001197)
ObjectPropertyDomain(obo:ONTOAVIDA_00001197 obo:ONTOAVIDA_00000097)
ObjectPropertyRange(obo:ONTOAVIDA_00001197 obo:ONTOAVIDA_00000151)

# Object Property: obo:ONTOAVIDA_00001198 (encodes seq)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00001198 "A relation between the genome and the container storing the phenotypes a digital organism has in different environments (i.e., \"encodes at seed\", being seed the integer used for starting the pseudo-random number generator), in which the genome contains information that is used to produce the phenotype."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00001198 "encodes seq"@en)
SubObjectPropertyOf(obo:ONTOAVIDA_00001198 owl:topObjectProperty)
AsymmetricObjectProperty(obo:ONTOAVIDA_00001198)
ObjectPropertyDomain(obo:ONTOAVIDA_00001198 obo:ONTOAVIDA_00000097)
ObjectPropertyRange(obo:ONTOAVIDA_00001198 obo:ONTOAVIDA_00000151)

# Object Property: obo:ONTOAVIDA_00001199 (is encoded by)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00001199 "A relation between the genome and the phenotype of a digital organism, in which the phenotype is produced from the information contained in the genome. It might depend on the environment (i.e., \"is encoded by at seed\", being seed the integer used for starting the pseudo-random number generator)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00001199 "is encoded by"@en)
SubObjectPropertyOf(obo:ONTOAVIDA_00001199 owl:topObjectProperty)
AsymmetricObjectProperty(obo:ONTOAVIDA_00001199)
ObjectPropertyDomain(obo:ONTOAVIDA_00001199 obo:ONTOAVIDA_00000151)
ObjectPropertyRange(obo:ONTOAVIDA_00001199 obo:ONTOAVIDA_00000097)

# Object Property: obo:ONTOAVIDA_00001200 (involves)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00001200 "A relation where p involves c if and only if some process p' is enabled by c', and c' is part of c."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00001200 "involves"@en)
SubObjectPropertyOf(obo:ONTOAVIDA_00001200 owl:topObjectProperty)
InverseObjectProperties(obo:ONTOAVIDA_00001200 obo:RO_0002331)
AsymmetricObjectProperty(obo:ONTOAVIDA_00001200)
ObjectPropertyDomain(obo:ONTOAVIDA_00001200 obo:ONTOAVIDA_00000096)
ObjectPropertyRange(obo:ONTOAVIDA_00001200 obo:STATO_0000002)

# Object Property: obo:RO_0000056 (participates in)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0000056 "A relation between a continuant and a process, in which the continuant is somehow involved in the process."@en)
AnnotationAssertion(rdfs:label obo:RO_0000056 "participates in"@en)
SubObjectPropertyOf(obo:RO_0000056 owl:topObjectProperty)
AsymmetricObjectProperty(obo:RO_0000056)

# Object Property: obo:RO_0001018 (contained in)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0001018 "A relation where w is 'contained in' p implies that w is part of the structure of p"@en)
AnnotationAssertion(rdfs:label obo:RO_0001018 "contained in"@en)
SubObjectPropertyOf(obo:RO_0001018 owl:topObjectProperty)
InverseObjectProperties(obo:RO_0001018 obo:RO_0001019)
AsymmetricObjectProperty(obo:RO_0001018)
ObjectPropertyDomain(obo:RO_0001018 obo:ONTOAVIDA_00000135)
ObjectPropertyRange(obo:RO_0001018 obo:ONTOAVIDA_00000124)

# Object Property: obo:RO_0001019 (contains)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0001019 "A relation where w 'contains' p implies that p is part of the structure of w"@en)
AnnotationAssertion(rdfs:label obo:RO_0001019 "contains"@en)
SubObjectPropertyOf(obo:RO_0001019 owl:topObjectProperty)
AsymmetricObjectProperty(obo:RO_0001019)
ObjectPropertyDomain(obo:RO_0001019 obo:ONTOAVIDA_00000124)
ObjectPropertyRange(obo:RO_0001019 obo:ONTOAVIDA_00000135)

# Object Property: obo:RO_0002180 (has component)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002180 "A relation where w 'has component' p if w 'has part' p and w is such that it can be directly disassembled into into n parts p, p2, p3, ..., pn, where these parts are of similar type."@en)
AnnotationAssertion(rdfs:label obo:RO_0002180 "has component"@en)
SubObjectPropertyOf(obo:RO_0002180 owl:topObjectProperty)
AsymmetricObjectProperty(obo:RO_0002180)
ObjectPropertyDomain(obo:RO_0002180 obo:GSSO_009994)
ObjectPropertyRange(obo:RO_0002180 obo:ONTOAVIDA_00000097)

# Object Property: obo:RO_0002331 (involved in)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002331 "A relation where c is involved in p if and only if c enables some process p', and p' is part of p."@en)
AnnotationAssertion(rdfs:label obo:RO_0002331 "involved in"@en)
SubObjectPropertyOf(obo:RO_0002331 obo:RO_0000056)
AsymmetricObjectProperty(obo:RO_0002331)
ObjectPropertyDomain(obo:RO_0002331 obo:STATO_0000002)
ObjectPropertyRange(obo:RO_0002331 obo:ONTOAVIDA_00000096)

# Object Property: obo:RO_0002353 (output of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002353 "A relation where c is output p if c participates in p, c is not present at the beginning of p, and c is not present at the end of p."@en)
AnnotationAssertion(rdfs:label obo:RO_0002353 "output of"@en)
SubObjectPropertyOf(obo:RO_0002353 obo:RO_0000056)
AsymmetricObjectProperty(obo:RO_0002353)
ObjectPropertyDomain(obo:RO_0002353 obo:FBcv_0000212)
ObjectPropertyRange(obo:RO_0002353 obo:ONTOAVIDA_00000096)

# Object Property: obo:RO_0002443 (interacts with via parasite-host interaction)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002443 "An interaction relationship between two organisms living together in more or less intimate association in a relationship in which association is disadvantageous or destructive to one of the organisms (GO).")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002443 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002443 "http://www.ncbi.nlm.nih.gov/pubmed/19278549"^^xsd:anyURI)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002443 "This relation groups a pair of inverse relations, parasite of and parasitized by")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002443 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:label obo:RO_0002443 "interacts with via parasite-host interaction")
SubObjectPropertyOf(obo:RO_0002443 owl:topObjectProperty)
SymmetricObjectProperty(obo:RO_0002443)

# Object Property: obo:RO_0002444 (parasite of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002444 "Pediculus humanus capitis parasite of human")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002444 "A relation in which one organism, the parasite, lives off of another organism, the host, harming it and possibly causing death."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002444 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002444 "parasitizes")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002444 "direct parasite of")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002444 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:label obo:RO_0002444 "parasite of")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002444 "http://eol.org/schema/terms/parasitizes")
SubObjectPropertyOf(obo:RO_0002444 obo:RO_0002443)
InverseObjectProperties(obo:RO_0002444 obo:RO_0002445)
AsymmetricObjectProperty(obo:RO_0002444)
ObjectPropertyDomain(obo:RO_0002444 obo:ONTOAVIDA_00000018)
ObjectPropertyRange(obo:RO_0002444 obo:ONTOAVIDA_00000017)

# Object Property: obo:RO_0002445 (parasitized by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002445 "A relation in which one organism, the host, harbours another organism, the parasite, being harmed and possibly killed by it."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002445 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002445 "has parasite")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002445 "parasitised by")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002445 "directly parasitized by")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002445 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:label obo:RO_0002445 "parasitized by")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002445 "http://eol.org/schema/terms/hasParasite")
SubObjectPropertyOf(obo:RO_0002445 obo:RO_0002443)
AsymmetricObjectProperty(obo:RO_0002445)
ObjectPropertyDomain(obo:RO_0002445 obo:ONTOAVIDA_00000017)
ObjectPropertyRange(obo:RO_0002445 obo:ONTOAVIDA_00000018)

# Object Property: obo:RO_0002507 (determined by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002507 "A relation where s determined by f if and only if s is a type of system, and f is a material entity that is part of s, such that f exerts a strong causal influence on the functioning of s, and the removal of f would cause the collapse of s."@en)
AnnotationAssertion(rdfs:label obo:RO_0002507 "determined by"@en)
SubObjectPropertyOf(obo:RO_0002507 owl:topObjectProperty)
AsymmetricObjectProperty(obo:RO_0002507)
ObjectPropertyDomain(obo:RO_0002507 obo:ONTOAVIDA_00000151)
ObjectPropertyRange(obo:RO_0002507 obo:ONTOAVIDA_00000111)

# Object Property: owl:topObjectProperty (owl:topObjectProperty)

SubObjectPropertyOf(owl:topObjectProperty owl:topObjectProperty)


############################
#   Data Properties
############################

# Data Property: obo:ONTOAVIDA_00000006 (gestation time)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000006 "Number of instruction codes executed by a digital organism to produce a viable offspring."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000006 "gestation time"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000006 owl:topDataProperty)
DataPropertyDomain(obo:ONTOAVIDA_00000006 obo:GSSO_009994)
DataPropertyRange(obo:ONTOAVIDA_00000006 xsd:integer)

# Data Property: obo:ONTOAVIDA_00000015 (doi)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000015 "Character string used as a permanent identifier for a digital object, in a format controlled by the International DOI Foundation."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000015 "doi"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000015 owl:topDataProperty)
FunctionalDataProperty(obo:ONTOAVIDA_00000015)
DataPropertyDomain(obo:ONTOAVIDA_00000015 obo:FBcv_0000212)
DataPropertyRange(obo:ONTOAVIDA_00000015 xsd:string)

# Data Property: obo:ONTOAVIDA_00000019 (virtual CPU)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000019 "Virtual central processing unit (CPU) that executes the instruction codes of a digital organism's genome. It can take two values: 'default' (virtual CPU running on the default hardware: it consists of a memory space with four heads pointing to specific locations in that memory, three registers, two stacks, and input and output buffers) and 'transsmt' (virtual CPU running on the Transsmt hardware: it consists of a memory space with four heads pointing to specific locations in that memory, four stacks, and input and output buffers)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000019 "virtual CPU"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000019 owl:topDataProperty)
FunctionalDataProperty(obo:ONTOAVIDA_00000019)
DataPropertyDomain(obo:ONTOAVIDA_00000019 obo:GSSO_009994)
DataPropertyRange(obo:ONTOAVIDA_00000019 DataOneOf("default" "transsmt"))

# Data Property: obo:ONTOAVIDA_00000098 (instruction sequence)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000098 "An instruction sequence is a linear string of letters representing instruction codes of a digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000098 "instruction sequence"@en)

# Data Property: obo:ONTOAVIDA_00000121 (tandem repeat instruction sequence)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000121 "A tandem repeat instruction sequence is a linear string of letters representing the instruction codes that make up the tandem repeat contained in the transcriptome executed by a digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000121 "tandem repeat instruction sequence"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000121 obo:ONTOAVIDA_00000098)
FunctionalDataProperty(obo:ONTOAVIDA_00000121)
DataPropertyDomain(obo:ONTOAVIDA_00000121 obo:ONTOAVIDA_00000135)
DataPropertyRange(obo:ONTOAVIDA_00000121 xsd:string)

# Data Property: obo:ONTOAVIDA_00000122 (genome instruction sequence)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000122 "A genome instruction sequence is a linear string of letters representing the instruction codes that make up the genome of a digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000122 "genome instruction sequence"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000122 obo:ONTOAVIDA_00000098)
FunctionalDataProperty(obo:ONTOAVIDA_00000122)
DataPropertyDomain(obo:ONTOAVIDA_00000122 obo:ONTOAVIDA_00000097)
DataPropertyRange(obo:ONTOAVIDA_00000122 xsd:string)

# Data Property: obo:ONTOAVIDA_00000123 (transcriptome instruction sequence)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000123 "A transcriptome instruction sequence is a linear string of letters representing the instruction codes that make up the transcriptome executed by a digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000123 "transcriptome instruction sequence"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000123 obo:ONTOAVIDA_00000098)
FunctionalDataProperty(obo:ONTOAVIDA_00000123)
DataPropertyDomain(obo:ONTOAVIDA_00000123 obo:ONTOAVIDA_00000124)
DataPropertyRange(obo:ONTOAVIDA_00000123 xsd:string)

# Data Property: obo:ONTOAVIDA_00000125 (tandem repeat length)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000125 "Number of instruction codes that make up the tandem repeat executed by a digital organism during the replication process."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000125 "tandem repeat length"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000125 owl:topDataProperty)
FunctionalDataProperty(obo:ONTOAVIDA_00000125)
DataPropertyDomain(obo:ONTOAVIDA_00000125 obo:ONTOAVIDA_00000135)
DataPropertyRange(obo:ONTOAVIDA_00000125 xsd:integer)

# Data Property: obo:ONTOAVIDA_00000160 (position at genome)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000160 "A position at genome indicates the position of an instruction code along the digital genome of a digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000160 "position at genome"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000160 owl:topDataProperty)

# Data Property: obo:ONTOAVIDA_00000161 (transcriptome position at genome)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000161 "A transcriptome position at genome indicates the position of the instruction codes constituting a transcriptome along the digital genome of a digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000161 "transcriptome position at genome"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000161 obo:ONTOAVIDA_00000160)
FunctionalDataProperty(obo:ONTOAVIDA_00000161)
DataPropertyDomain(obo:ONTOAVIDA_00000161 obo:ONTOAVIDA_00000124)
DataPropertyRange(obo:ONTOAVIDA_00000161 xsd:string)

# Data Property: obo:ONTOAVIDA_00000166 (tandem repeat position at genome)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000166 "A tandem position at genome indicates the position of the instruction codes constituting a tandem repeat along the digital genome of a digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000166 "tandem repeat position at genome"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000166 obo:ONTOAVIDA_00000160)
FunctionalDataProperty(obo:ONTOAVIDA_00000166)
DataPropertyDomain(obo:ONTOAVIDA_00000166 obo:ONTOAVIDA_00000124)
DataPropertyRange(obo:ONTOAVIDA_00000166 xsd:string)

# Data Property: obo:ONTOAVIDA_00000175 (genome length)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000175 "Number of instruction codes comprising the genome of a digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000175 "genome length"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000175 owl:topDataProperty)
FunctionalDataProperty(obo:ONTOAVIDA_00000175)
DataPropertyDomain(obo:ONTOAVIDA_00000175 obo:ONTOAVIDA_00000097)
DataPropertyRange(obo:ONTOAVIDA_00000175 xsd:integer)

# Data Property: obo:ONTOAVIDA_00000191 (transcriptome length)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000191 "Number of instruction codes that are executed by a digital organism during the replication process."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000191 "transcriptome length"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000191 owl:topDataProperty)
FunctionalDataProperty(obo:ONTOAVIDA_00000191)
DataPropertyDomain(obo:ONTOAVIDA_00000191 obo:ONTOAVIDA_00000124)
DataPropertyRange(obo:ONTOAVIDA_00000191 xsd:integer)

# Data Property: obo:ONTOAVIDA_00000192 (viable)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000192 "The ability of a digital organism to produce an offspring able to replicate by executing its genome. It might depend on the environment (i.e., \"viable at seed\", being seed the integer used for starting the pseudo-random number generator)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000192 "viable"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000192 owl:topDataProperty)
DataPropertyDomain(obo:ONTOAVIDA_00000192 obo:GSSO_009994)
DataPropertyRange(obo:ONTOAVIDA_00000192 xsd:boolean)

# Data Property: obo:ONTOAVIDA_00000193 (genome length executed)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000193 "Number of instruction codes, out of the total number number of instruction codes comprising a digital organism's genome, that are executed by a digital organism during the replication process.  It might depend on the environment (i.e., \"genome length executed at seed\", being seed the integer used for starting the pseudo-random number generator)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000193 "genome length executed"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000193 owl:topDataProperty)
DataPropertyDomain(obo:ONTOAVIDA_00000193 obo:GSSO_009994)
DataPropertyRange(obo:ONTOAVIDA_00000193 xsd:integer)

# Data Property: obo:ONTOAVIDA_00000197 (number of tandem repetitions)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000197 "Number of times that a tandem repeat is executed by a digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000197 "number of tandem repetitions"@en)
SubDataPropertyOf(obo:ONTOAVIDA_00000197 owl:topDataProperty)
FunctionalDataProperty(obo:ONTOAVIDA_00000197)
DataPropertyDomain(obo:ONTOAVIDA_00000197 obo:ONTOAVIDA_00000124)
DataPropertyRange(obo:ONTOAVIDA_00000197 xsd:integer)



############################
#   Classes
############################

# Class: obo:FBcv_0000212 (paper)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "FBC:SM") obo:IAO_0000115 obo:FBcv_0000212 "An article reporting original research, published in a peer-reviewed journal.")
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "MeSH:D016428") oboInOwl:hasBroadSynonym obo:FBcv_0000212 "Journal article")
AnnotationAssertion(oboInOwl:hasDbXref obo:FBcv_0000212 "MeSH:D016428")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:FBcv_0000212 "pub_type")
AnnotationAssertion(oboInOwl:id obo:FBcv_0000212 "FBcv:0000212")
AnnotationAssertion(rdfs:comment obo:FBcv_0000212 "Note that this is a much more specific class than that referred to by MeSH Journal article (D016428).")
AnnotationAssertion(rdfs:label obo:FBcv_0000212 "paper")
SubClassOf(obo:FBcv_0000212 owl:Thing)

# Class: obo:GSSO_009994 (digital organism)

AnnotationAssertion(obo:IAO_0000115 obo:GSSO_009994 "A digital organism is a self-replicating computer program that mutates and evolve within a user-defined computational environment."@en)
AnnotationAssertion(rdfs:label obo:GSSO_009994 "digital organism"@en)
SubClassOf(obo:GSSO_009994 owl:Thing)
DisjointClasses(obo:GSSO_009994 obo:ONTOAVIDA_00000097)
DisjointClasses(obo:GSSO_009994 obo:ONTOAVIDA_00000124)
DisjointClasses(obo:GSSO_009994 obo:ONTOAVIDA_00000135)
DisjointClasses(obo:GSSO_009994 obo:ONTOAVIDA_00000151)

# Class: obo:NCIT_C42790 (experiment)

AnnotationAssertion(obo:IAO_0000115 obo:NCIT_C42790 "An experiment is a scientific procedure undertaken to make a discovery, test a hypothesis, or demonstrate a known fact."@en)
AnnotationAssertion(rdfs:label obo:NCIT_C42790 "experiment"@en)
SubClassOf(obo:NCIT_C42790 owl:Thing)

# Class: obo:ONTOAVIDA_00000001 (configuration file)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000001 "A configuration file is a digital file that stores settings that are specific to a particular software."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000001 "configuration file"@en)
SubClassOf(obo:ONTOAVIDA_00000001 obo:STATO_0000002)

# Class: obo:ONTOAVIDA_00000002 (executable file)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000002 "An executable file is a digital file that executes a process."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000002 "executable file"@en)
SubClassOf(obo:ONTOAVIDA_00000002 obo:STATO_0000002)

# Class: obo:ONTOAVIDA_00000003 (instruction set file)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000003 "An instruction set file is a digital file containing the instruction set that defines the genetic language of a digital organism in Avida (i.e., the instruction codes that a digital organism can hold in its genome). The name of the instruction set may not be the same as the name of the file containing the instruction set (i.e., one file may contain multiple instruction sets)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000003 "instruction set file"@en)
SubClassOf(obo:ONTOAVIDA_00000003 obo:STATO_0000002)

# Class: obo:ONTOAVIDA_00000007 (logic environment)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000007 "A computational environment that defines the logic operations that are listed in the environment configuration file."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000007 "logic environment"@en)
SubClassOf(obo:ONTOAVIDA_00000007 owl:Thing)

# Class: obo:ONTOAVIDA_00000008 (avida configuration file)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000008 "An avida configuration file is a configuracion file that set up all the basic conditions for performing an experiment in Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000008 "avida configuration file"@en)
SubClassOf(obo:ONTOAVIDA_00000008 obo:ONTOAVIDA_00000001)

# Class: obo:ONTOAVIDA_00000009 (events configuration file)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000009 "An events configuration file is a configuration file that controls the events that need to occur throughout the course of an experiment in Avida.

This file consists of a list of events that will be triggered either singly or periodically. The format for each line is: 'type' 'timing' 'event' 'arguments'. The type determines what kind of timings the event will be based off of (i.e., immediate [i], based on update [u], or based on generation [g]). The timing should only be included for non-immediate events. If a single number is given for timing, the event occurs at that update/generation. A second number can be included (separated by a colon ':') to indicate how often the event should be repeated. And if a third number is listed (again, colon seperated) this will be the last time the event can occur on. The event is simply the name of the action that should be performed, and the arguments detail exactly how it should work when it is triggered."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000009 "events configuration file"@en)
SubClassOf(obo:ONTOAVIDA_00000009 obo:ONTOAVIDA_00000001)

# Class: obo:ONTOAVIDA_00000010 (environment configuration file)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000010 "An environment configuration file is a configuration file that set up the way a digital organism interacts with its computational environment in Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000010 "environment configuration file"@en)
SubClassOf(obo:ONTOAVIDA_00000010 obo:ONTOAVIDA_00000001)

# Class: obo:ONTOAVIDA_00000011 (configuration command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000011 "A configuration command is a directive included in a configuration file that make up a configuration file in Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000011 "configuration command"@en)
SubClassOf(obo:ONTOAVIDA_00000011 owl:Thing)

# Class: obo:ONTOAVIDA_00000012 (analyze configuration file)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000012 "An analyze configuration file is a configuration file that involves loading the genomes of digital organisms in one or more batches to perform additional tests after an evolutionary experiment in Avida has been completed."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000012 "analyze configuration file"@en)
SubClassOf(obo:ONTOAVIDA_00000012 obo:ONTOAVIDA_00000001)

# Class: obo:ONTOAVIDA_00000013 (analyze mode)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000013 "The analyze mode is an execution mode of Avida consisting of performing an experiment where the genome of a single digital organism is executed in a test virtual CPU to compute its properties."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000013 "analyze mode"@en)
SubClassOf(obo:ONTOAVIDA_00000013 obo:ONTOAVIDA_00000096)
SubClassOf(obo:ONTOAVIDA_00000013 ObjectExactCardinality(1 obo:ONTOAVIDA_00001200 obo:ONTOAVIDA_00000002))
SubClassOf(obo:ONTOAVIDA_00000013 ObjectExactCardinality(1 obo:ONTOAVIDA_00001200 obo:ONTOAVIDA_00000003))
SubClassOf(obo:ONTOAVIDA_00000013 ObjectExactCardinality(1 obo:ONTOAVIDA_00001200 obo:ONTOAVIDA_00000008))
SubClassOf(obo:ONTOAVIDA_00000013 ObjectExactCardinality(1 obo:ONTOAVIDA_00001200 obo:ONTOAVIDA_00000009))
SubClassOf(obo:ONTOAVIDA_00000013 ObjectExactCardinality(1 obo:ONTOAVIDA_00001200 obo:ONTOAVIDA_00000010))
SubClassOf(obo:ONTOAVIDA_00000013 ObjectExactCardinality(1 obo:ONTOAVIDA_00001200 obo:ONTOAVIDA_00000012))

# Class: obo:ONTOAVIDA_00000014 (standard mode)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000014 "The standard mode is an execution mode of Avida consisting of performing an experiment where populations of digital organisms evolve in a open ended computational environment (i.e., standard or transsmt virtual CPU)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000014 "standard mode"@en)
SubClassOf(obo:ONTOAVIDA_00000014 obo:ONTOAVIDA_00000096)
SubClassOf(obo:ONTOAVIDA_00000014 ObjectExactCardinality(0 obo:ONTOAVIDA_00001200 obo:ONTOAVIDA_00000012))
SubClassOf(obo:ONTOAVIDA_00000014 ObjectExactCardinality(1 obo:ONTOAVIDA_00001200 obo:ONTOAVIDA_00000002))
SubClassOf(obo:ONTOAVIDA_00000014 ObjectExactCardinality(1 obo:ONTOAVIDA_00001200 obo:ONTOAVIDA_00000003))
SubClassOf(obo:ONTOAVIDA_00000014 ObjectExactCardinality(1 obo:ONTOAVIDA_00001200 obo:ONTOAVIDA_00000008))
SubClassOf(obo:ONTOAVIDA_00000014 ObjectExactCardinality(1 obo:ONTOAVIDA_00001200 obo:ONTOAVIDA_00000009))
SubClassOf(obo:ONTOAVIDA_00000014 ObjectExactCardinality(1 obo:ONTOAVIDA_00001200 obo:ONTOAVIDA_00000010))

# Class: obo:ONTOAVIDA_00000017 (host digital organism)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000017 "A host digital organism is a digital organism whose CPU-cycles can be stolen by another digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000017 "host digital organism"@en)
SubClassOf(obo:ONTOAVIDA_00000017 obo:GSSO_009994)
DisjointClasses(obo:ONTOAVIDA_00000017 obo:ONTOAVIDA_00000018)

# Class: obo:ONTOAVIDA_00000018 (parasite digital organism)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000018 "A parasite digital organism is a digital organism capable of stealing CPU-cycles from another digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000018 "parasite digital organism"@en)
SubClassOf(obo:ONTOAVIDA_00000018 obo:GSSO_009994)

# Class: obo:ONTOAVIDA_00000022 (instruction code)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000022 "An instruction code is a group of bits that instruct the computer to perform a specific operation. Each intruction code may be followed by a series of options that define how that instruction code should be used. In Avida, each position of a digital organism genome consists of an instruction code."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000022 "instruction code"@en)
SubClassOf(obo:ONTOAVIDA_00000022 owl:Thing)

# Class: obo:ONTOAVIDA_00000023 (add)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000023 "The instruction code 'add' is an instruction code of the heads_default and heads_sex instruction sets that reads in the contents of the BX and CX registers and sums them together. The result of this operation is then placed in the ?BX? register. This instruction code can be modified by one 'nop' instruction code, which specify which register is used to place the result of this operation."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000023 "add"@en)
SubClassOf(obo:ONTOAVIDA_00000023 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000024 (dec)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000024 "The instruction code 'dec' is an instruction code of the heads_default and heads_sex instruction sets that reads in the contents of the ?BX? register and decrements it by one. This instruction code is destructive (I.e., it pops the old value off the register), and can be modified by one 'nop' instruction code, which specifies which register is used."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000024 "dec"@en)
SubClassOf(obo:ONTOAVIDA_00000024 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000025 (Divide-Erase)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000025 "The instruction code 'Divide-Erase' is an instruction code of the transsmt instruction set that attempts to divide off a finished offspring copy. It uses whatever memory space the write-head is currently pointing to as the offspring's genome. If this instruction code fails, the memory space is cleared and the organism's heads are reset. Note that this instruction code is equivalent to the instruction code 'h-divide' of the heads_default instruction set."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000025 "Divide-Erase"@en)
SubClassOf(obo:ONTOAVIDA_00000025 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000026 (divide-sex)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000026 "The instruction code 'divide-sex' is an instruction code of the head_sex instruction set that attempts to divide off a finished offspring copy. But, instead of placing it in the population immediately, its offspring is stored until the offspring of another digital organism is produced, at which time they recombine their genomes and the two recombinant products are placed into the population."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000026 "divide-sex"@en)
SubClassOf(obo:ONTOAVIDA_00000026 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000027 (get-head)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000027 "The instruction code 'get-head' is an instruction code of the heads_default and heads_sex instruction sets that copy the position of the instruction pointer ?IP? into the CX register. This instruction code can be modified by one 'nop' instruction, which specifies which head its position will be copied."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000027 "get-head"@en)
SubClassOf(obo:ONTOAVIDA_00000027 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000028 (h-alloc)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000028 "The instruction code 'h-allow' is an instruction code of the heads_default and heads_sex instruction sets that allocates additional memory for the digital organism up to the maximum it is allowed to use for its offspring."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000028 "h-alloc"@en)
SubClassOf(obo:ONTOAVIDA_00000028 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000029 (h-copy)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000029 "The instruction code 'h-copy' is an instruction code of the heads_default and heads_sex instruction sets that reads the contents of the digital organism's memory at the position of the read-head and copy that to the position of the write-head. If a non-zero copy mutation rate is set, a test will be made based on this probability to determine if a mutation occurs. If so, a random instruction code (chosen from the full instruction set with equal probability) will be placed at the write-head instead."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000029 "h-copy"@en)
SubClassOf(obo:ONTOAVIDA_00000029 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000030 (h-divide)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000030 "The instruction code 'h-divide' is an instruction code of the heads_default instruction set that attempts to divide off a finished offspring copy. The original digital organism keeps the state of its memory up until the read-head. The offspring's memory is initialized to everything between the read-head and the write-head. All digital organism's memory past the write-head is removed entirely."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000030 "h-divide"@en)
SubClassOf(obo:ONTOAVIDA_00000030 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000031 (h-search)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000031 "The instruction code 'h-search' is an instruction code of the heads_default and heads_sex instruction sets that will read in the template that follows it, and find the location of a complement template in the code. The BX register will be set to the distance to the complement from the current position of the instruction pointer, and the CX register will be set to the size of the template. The flow-head will also be placed at the beginning of the complement template. If no template follows, both BX and CX will be set to zero, and the flow-head will be placed on the instruction immediatly following the 'h-search' instruction code."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000031 "h-search"@en)
SubClassOf(obo:ONTOAVIDA_00000031 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000032 (Head-Move)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000032 "The instruction code 'Head-Move' is an instruction code of the transsmt instruction set that will cause the instruction pointer ?IP? to jump to the position in memory of the flow-head. This instruction code can be modified by one 'Nop' instruction code, which specify which head to move to the position pointed to by the flow-head. Note that this instruction code is equivalent to the 'mov-head' instruction code of the heads_default instruction set."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000032 "Head-Move"@en)
SubClassOf(obo:ONTOAVIDA_00000032 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000033 (Head-Pop)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000033 "The instruction code 'Head-Pop' is an instruction code of the transsmt instruction set that pops a position of the ?B? stack and moves the instruction pointer ?IP? to that position. This instruction code can be modified by one or two 'Nop' instruction codes, which specify which stacks are compared. The first 'Nop' instruction code specifies which head (read-head, write-head, flow-head, or instruction pointer) is used, and the second 'Nop' instruction code specifies from which stack the position is popped."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000033 "Head-Pop"@en)
SubClassOf(obo:ONTOAVIDA_00000033 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000034 (Head-Push)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000034 "The instruction code 'Head-Push' is an instruction code of the transsmt instruction set that pushes the position of the instruction pointer ?IP? onto the ?B? stack. Note that this instruction code differs from the instruction code 'Inst-Read' in that it pushes the location of the specified head rather than the value at that position. This instruction code can be modified by one or two 'Nop' instruction codes, which specify which stacks are compared. The first 'Nop' instruction code specifies which head (read-head, write-head, flow-head, or instruction pointer) is used, and the second 'Nop' instruction code specifies on which stack the position is pushed."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000034 "Head-Push"@en)
SubClassOf(obo:ONTOAVIDA_00000034 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000035 (If-Equal)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000035 "The instruction code 'If-Equal' is an instruction code of the transsmt instruction set that compares the value on the top of the ?A? stack to the value on the top of the ?B? stack. If they are equal, the next instruction code (after a modifying 'Nop' instruction code, if one is present) is executed. If they are not equal, that next instruction code is skipped. This instruction code can be modified by one or two 'Nop' instruction codes, which specify which stacks are compared."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000035 "If-Equal"@en)
SubClassOf(obo:ONTOAVIDA_00000035 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000036 (If-Greater)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000036 "The instruction code 'If-Greater' is an instruction code of the transsmt instruction set that compares the value on the top of the ?A? stack to the value on the top of the ?B? stack. If the value of the ?A? stack is greater that the value of the ?B? stack, the next instruction code (after a modifying Nop' instruction code, if one is present) is executed, otherwise it will be skipped. This instruction code can be modified by one or two 'Nop' instruction codes, which specify which stacks are compared."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000036 "If-Greater"@en)
SubClassOf(obo:ONTOAVIDA_00000036 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000037 (if-label)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000037 "The instruction code 'if-label' is an instruction code of the heads_default and heads_sex instruction sets that reads in the template that follows it, and tests if its complement template was the most recent series of instruction codes copied. If so, it executes the next instruction code, otherwise it skips it. This instruction code is commonly used for a digital organism to determine when it has finished producing its offspring."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000037 "if-label"@en)
SubClassOf(obo:ONTOAVIDA_00000037 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000038 (if-less)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000038 "The instruction code 'if-less' is an instruction code of the heads_default and heads_sex instruction sets that compares the ?BX? register to its complement. If ?BX? is the lesser of the pair, the next instruction code (after a modifying 'nop' instruction code, if one is present) is executed. If it is greater or equal, then that next instruction code is skipped. This instruction code can be modified by one 'nop' instruction code, which specifies which register is compared."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000038 "if-less"@en)
SubClassOf(obo:ONTOAVIDA_00000038 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000039 (If-Less)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000039 "The instruction code 'If-Less' is an instruction code of the transsmt instruction set that compares the value on the top of the ?A? stack to the value on the top of the ?B? stack. If the value of the ?A? stack is less that the value of the ?B? stack, the next instruction code (after a modifying 'Nop' instruction code, if one is present) is executed, otherwise it will be skipped. This instruction code can be modified by one or two 'Nop' instruction codes, which specify which stacks are compared."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000039 "If-Less"@en)
SubClassOf(obo:ONTOAVIDA_00000039 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000040 (if-n-equ)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000040 "The instruction code 'if-n-equ' is an instruction code of the heads_default and heads_sex instruction sets that compares the ?BX? register to its complement. If they are not equal, the next instruction code (after a modifying 'nop' instruction code, if one is present) is executed. If they are equal, that next instruction code is skipped."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000040 "if-n-equ"@en)
SubClassOf(obo:ONTOAVIDA_00000040 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000041 (If-Not-Equal)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000041 "The instruction code 'If-Not-Equal' is an instruction code of the transsmt instruction set that compares the value on the top of the ?A? stack to the value on the top of the ?B? stack. If they are not equal, the next instruction (after a modifying 'Nop' instruction code, if one is present) is executed. If they are equal, that next instruction code is skipped. This instruction code can be modified by one or two 'Nop' instruction codes, which specify which stacks are compared."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000041 "If-Not-Equal"@en)
SubClassOf(obo:ONTOAVIDA_00000041 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000042 (inc)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000042 "The instruction code 'inc' is an instruction code of the heads_default and heads_sex instruction sets that reads in the contents of the ?BX? register and increments it by one. This instruction code is destructive (i.e., it pops the old value off the register). This instruction code can be modified by one 'nop' instruction code, which specifies which register is used."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000042 "inc"@en)
SubClassOf(obo:ONTOAVIDA_00000042 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000043 (Inject)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000043 "The instruction code 'Inject' is an instruction code of the transsmt instruction set that acts similarly to the instruction code 'Divide-Erase', but instead of dividing off a \"free-living\" organism, it attempts to \"infect\" a host digital organism with its parasite genome contained in the memory space pointed to by the write-head. This instruction code allows a digital organism to become a parasite digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000043 "Inject"@en)
SubClassOf(obo:ONTOAVIDA_00000043 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000044 (input-output)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000044 "The instruction code 'input-output' is an instruction code of the heads_default and heads_sex instruction sets that takes the contents of the ?BX? register (i.e., a 32-bit binary number) and outputs it, checking it for any logic operation that may have been performed on the two 32-bit binary numbers stored in its input buffers. It also places a randomly generated 32-bit binary number from the environment into the ?BX? register. This instruction code can be modified by one 'nop' instruction code, which specifies which register is used. Input-output instruction codes can be executed either only once or many times during the time it takes to produce an offspring. This means that a digital organism can take input numbers from the environment more than once before replicating and can compute the result of more than one logic operation."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000044 "input-output"@en)
SubClassOf(obo:ONTOAVIDA_00000044 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000045 (Inst-Read)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000045 "The instruction code 'Inst-Read' is an instruction code of the transsmt instruction set that pushes the instruction code pointed ?IP? to by the read-head onto the ?A? stack and advances the read-head by one position. This instruction code can be modified by one or two 'Nop' instruction codes. The first 'Nop' instruction code specifies which head (read-head, write-head, flow-head, or instruction pointer) is used, and the second 'Nop' instruction code specifies on which stack the instruction pointer is pushed."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000045 "Inst-Read"@en)
SubClassOf(obo:ONTOAVIDA_00000045 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000046 (Inst-Write)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000046 "The instruction code 'Inst-Write' is an instruction code of the transsmt instruction set that pops the instruction code on the ?A? stack and writes it into the memory location pointed to by the write-head ?WH?, and and advances the write-head ?WH? by one position. This instruction code can be modified by one or two 'Nop' instruction codes. The first 'Nop' instruction code specifies which head (read-head, write-head, flow-head, or instruction pointer) is used, and the second 'Nop' instruction code specifies from which stack the instruction is read."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000046 "Inst-Write"@en)
SubClassOf(obo:ONTOAVIDA_00000046 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000047 (IO)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000047 "The instruction code 'IO' is an instruction code of the transsmt instruction set that outputs the 32-bit binary number stored at the top of the ?B? stack, checking it for any logic operation that may have been performed on the two 32-bit binary numbers stored in its input buffers. It also places a randomly generated 32-bit binary number from the environment onto the ?B? stack. Input-output instruction codes can be executed either only once or many times during the time it takes to generate an offspring. This means that a digital organism can take input numbers from the environment more than once before replicating and can compute the result of more than one logic operation. This instruction code can be modified by one or two 'Nop' instruction codes. The first 'Nop' instruction code specifies the input stack, and the second 'Nop' instruction code specifies the output stack. If only one 'Nop' instruction code is used, the same stack is used for both the input and output values. Note that the 'input-output' instruction code of the heads_default instruction set can only be modified by one 'nop' instruction code (i.e., the same register is used for both the input and output values)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000047 "IO"@en)
SubClassOf(obo:ONTOAVIDA_00000047 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000048 (jump-head)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000048 "The instruction code 'jump-head' is an instruction code of the heads_default and heads_sex instruction sets that reads in the value of the CX register, and the move the instruction pointer ?IP? by that fixed amount through the organism's memory. This instruction code can be modified by one 'nop' instruction code, which specifies which head to move."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000048 "jump-head"@en)
SubClassOf(obo:ONTOAVIDA_00000048 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000049 (move-head)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000049 "The instruction code 'move-head' is an instruction code of the heads_default and heads_sex instruction sets that will cause the instruction pointer ?IP? to jump to the position in memory of the flow-head. This instruction code can be modified by one 'nop' instruction code, which specifies which head to move to the position pointed to by the flow-head."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000049 "move-head"@en)
SubClassOf(obo:ONTOAVIDA_00000049 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000050 (nand)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000050 "The instruction code 'nand' is an instruction code of the heads_default and heads_sex instruction sets that reads in the contents of the BX and CX registers (each of which are 32-bit binary numbers) and performs a bitwise NAND operation on them. The result of this operation is placed in the ?BX? register. This instruction code can be modified by one 'nop' instruction code, which specifies which register is used to place the result of this operation. Note that this is the only logic operation provided by the instruction set."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000050 "nand"@en)
SubClassOf(obo:ONTOAVIDA_00000050 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000051 (nop)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000051 "The instruction code 'nop' is an instruction code of the heads_default and heads_sex instruction sets that does nothing or modifies the behavior of the instruction code preceeding it by changing the virtual CPU component that it affects (register or head), or acts as part of a template to denote positions in a digital organism's genome. A register name (AX, BX, or CX) surrounded by question marks refers to that register being used by default when the instruction code in question is being executed, but if the instruction code is followed by a 'nop' instruction code, the 'nop' instruction code will alter the register used. A head abbreviation (IP, RH, WH, or FH) surrounded by question marks refers to that head being used as a default, when the instruction code in question is being executed, but if the instruction code is followed by a 'nop' instruction code, the 'nop' instruction code will alter the head used."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000051 "nop"@en)
SubClassOf(obo:ONTOAVIDA_00000051 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000052 (nop-A)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000052 "The instruction code 'nop-A' is an instruction code of the heads_default and heads_sex instruction sets that does nothing or modifies the register being used by default to the register AX or the head being used by default to the instruction pointer."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000052 "nop-A"@en)
SubClassOf(obo:ONTOAVIDA_00000052 obo:ONTOAVIDA_00000051)

# Class: obo:ONTOAVIDA_00000053 (nop-B)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000053 "The instruction code 'nop-B' is an instruction code of the heads_default and heads_sex instruction sets that does nothing or modifies the register being used by default to the register BX or the head being used by default to the read-head."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000053 "nop-B"@en)
SubClassOf(obo:ONTOAVIDA_00000053 obo:ONTOAVIDA_00000051)

# Class: obo:ONTOAVIDA_00000054 (nop-C)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000054 "The instruction code 'nop-C' is an instruction code of the heads_default and heads_sex instruction sets that does nothing or modifies the register being used by default to the register CX or the head being used by default to the write-head."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000054 "nop-C"@en)
SubClassOf(obo:ONTOAVIDA_00000054 obo:ONTOAVIDA_00000051)

# Class: obo:ONTOAVIDA_00000055 (Nop)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000055 "The instruction code 'Nop' is an instruction code of the transsmt instruction set that does nothing or modifies the behavior of the instruction code preceeding it by changing the virtual CPU component that it affects (stack or head), or acts as part of a template to denote positions in a digital organism's genome. Note that most operations that use 2 'Nop' instruction codes to specify which stacks to use can also be parameterized by a single 'Nop' instruction code, in which case the second modifier is assigned the next stack in sequence (e.g., C->D, D->A, etc.)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000055 "Nop"@en)
SubClassOf(obo:ONTOAVIDA_00000055 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000056 (Nop-A)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000056 "The instruction code 'Nop-A' is an instruction code of the transsmt instruction set that does nothing or modifies the stack being used by default to the stack A or the head being used by default to the instruction pointer."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000056 "Nop-A"@en)
SubClassOf(obo:ONTOAVIDA_00000056 obo:ONTOAVIDA_00000055)

# Class: obo:ONTOAVIDA_00000057 (Nop-B)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000057 "The instruction code 'Nop-B' is aninstruction code of the transsmt instruction set that does nothing or modifies the stack being used by default to the stack B or the head being used by default to the read-head."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000057 "Nop-B"@en)
SubClassOf(obo:ONTOAVIDA_00000057 obo:ONTOAVIDA_00000055)

# Class: obo:ONTOAVIDA_00000058 (Nop-C)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000058 "The instruction code 'Nop-C' is an instruction code of the transsmt instruction set that does nothing or modifies the stack being used by default to the stack C or the head being used by default to the write-head."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000058 "Nop-C"@en)
SubClassOf(obo:ONTOAVIDA_00000058 obo:ONTOAVIDA_00000055)

# Class: obo:ONTOAVIDA_00000059 (Nop-D)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000059 "The instruction code 'Nop-D' is an instruction code of the transsmt instruction set that does nothing or modifies the stack being used by default to the stack D or the head being used by default to the flow-head."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000059 "Nop-D"@en)
SubClassOf(obo:ONTOAVIDA_00000059 obo:ONTOAVIDA_00000055)

# Class: obo:ONTOAVIDA_00000060 (pop)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000060 "The instruction set 'pop' is an instruction code of the heads_default and heads_sex instruction sets that removes the top element from the active stack, and places it into the ?BX? register. This instruction code can be modified by one 'nop' instruction code, which specifies which register is used."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000060 "pop"@en)
SubClassOf(obo:ONTOAVIDA_00000060 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000061 (push)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000061 "The instruction code 'push' is an instruction code of the heads_default and heads_sex instruction sets that reads in the contents of the ?BX? register, and places it as a new entry at the top of the active stack.This instruction code can be modified by one 'nop' instruction code, which specifies which register is used."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000061 "push"@en)
SubClassOf(obo:ONTOAVIDA_00000061 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000062 (Push-Comp)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000062 "The instruction code 'Push-Comp' is an instruction code of the transsmt instruction set that pops a value off of the ?B? stack and pushes it onto the complement stack (i.e., the stack two over in sequence), in this case, the ?D? stack. This instruction code can be modified by one or two 'Nop' instruction codes, which specify the source and the destination stacks, respectively."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000062 "Push-Comp"@en)
SubClassOf(obo:ONTOAVIDA_00000062 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000063 (Push-Next)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000063 "The instruction code 'Push-Next' is an instruction code of the transsmt instruction set that pops a value off of the ?A? stack and pushes it onto the next stack in sequence (the ?B? stack). This instruction code can be modified by one or two 'Nop' instruction codes, which specify the source and the destination stacks, respectively."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000063 "Push-Next"@en)
SubClassOf(obo:ONTOAVIDA_00000063 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000064 (Push-Prev)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000064 "The instruction code 'Push-Prev' is an instruction code of the transsmt instruction set that pops a value off of the ?B? stack and pushes it onto the previous stack in sequence (the ?A? stack). This instruction code can be modified by one or two 'Nop' instruction codes, which specify the source and the destination stacks, respectively."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000064 "Push-Prev"@en)
SubClassOf(obo:ONTOAVIDA_00000064 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000065 (Search)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000065 "The instruction code 'Search' is an instruction code of the transsmt instruction set that reads in the sequence of 'Nop' instruction codes that follows it, and searches for the location of a complement template (e.g., B:C:D -> D:A:B) in a digital organism's genome. If the complement is not found, a value of 0 will be pushed to the top of the B stack. If a complement is found, the distance between the current instruction code being executed and the beginning of the complement will be pushed onto the B stack, the size of the template will be pushed on the A stack, and the flow-head will be moved to the end of the complement template."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000065 "Search"@en)
SubClassOf(obo:ONTOAVIDA_00000065 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000066 (set-flow)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000066 "The instruction code 'set-flow' is an instruction code of the heads_default and heads_sex instruction sets that moves the flow-head to the memory position specify by the ?CX? register. This instruction code can be modified by one 'nop' instruction code, which specifies which register is used to move the flow-head."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000066 "set-flow"@en)
SubClassOf(obo:ONTOAVIDA_00000066 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000067 (SetMemory)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000067 "The instruction code 'SetMemory' is an instruction code of the transsmt instruction set that selects which memory space is active (I.e., which memory space the flow-head is pointing to). The memory spaces can be labeled with up to 4 'Nop' instruction codes. If no 'Nop' instruction codes are given, the memory space containing the currently executing digital organism is selected. If a 'Nop' instruction code is provided that does not yet exist, a new memory space is created."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000067 "SetMemory"@en)
SubClassOf(obo:ONTOAVIDA_00000067 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000068 (shift-l)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000068 "The instruction code 'shift-l' is an instruction code of the heads_default and heads_sex instruction sets that reads in the contents of the ?BX? register, and shifts all of the bits in that register to the left by one, placing a zero as the new rightmost bit, and truncating any bits beyond the 32 maximum. For values that require fewer than 32 bits, it effectively multiplies that value by two. This instruction code can be modified by one 'nop' instruction code, which specifies which register is used."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000068 "shift-l"@en)
SubClassOf(obo:ONTOAVIDA_00000068 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000069 (shift-r)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000069 "The instruction code 'shift-r' is an instruction code of the heads_default and heads_sex instruction sets that reads in the contents of the ?BX? register and shifts all of the bits in that register to the right by one. In effect, it divides the value stored in the register by two, rounding down. This instruction code can be modified by one 'nop' instruction code, which specifies which register is used."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000069 "shift-r"@en)
SubClassOf(obo:ONTOAVIDA_00000069 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000070 (sub)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000070 "The instruction code 'sub' is an instruction code of the heads_default and heads_sex instruction sets that reads in the contents of the BX and CX registers and subtracts CX from BX. The result of this operation is then placed in the ?BX? register. This instruction code can be modified by one 'nop' instruction code, which specifies which register is used to place the result of this operation."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000070 "sub"@en)
SubClassOf(obo:ONTOAVIDA_00000070 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000071 (swap)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000071 "The instruction code 'swap' is an instruction code of the heads_default and heads_sex instruction sets that swaps the contents of the ?BX? register with its complement. This instruction code can be modified by one 'nop' instruction code, which specifies which register is used."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000071 "swap"@en)
SubClassOf(obo:ONTOAVIDA_00000071 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000072 (swap-stk)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000072 "The instruction code 'swap-stk' is an instruction code of the heads_default and heads_sex instruction sets that toggles the active stack in the virtual CPU. All other instruction codes that use a stack will always use the active one."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000072 "swap-stk"@en)
SubClassOf(obo:ONTOAVIDA_00000072 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000073 (Val-Add)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000073 "The instruction code 'Val-Add' is an instruction code of the transsmt instruction set that pushes the sum of values from the top of the ?B? and ?C? stacks onto the B stack. This instruction code can be modified by one or two 'Nop' instruction codes, which specify which stacks are added."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000073 "Val-Add"@en)
SubClassOf(obo:ONTOAVIDA_00000073 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000074 (Val-Copy)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000074 "The instruction code 'Val-Copy' is an instruction code of the transsmt instruction set that pushes a copy of the value at the top of the ?B? stack onto the ?B? stack. This instruction code can be modified by one or two 'Nop' instruction codes, which specify the source and the destination stacks, respectively. In this case, if only one 'Nop' instruction code is used, the value is copied and pushed onto the same stack as the source."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000074 "Val-Copy"@en)
SubClassOf(obo:ONTOAVIDA_00000074 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000075 (Val-Dec)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000075 "The instruction code 'Val-Dec' is an instruction code of the transsmt instruction set that decrements the value at the top of ?B? stack by one. This instruction code is destructive (I.e., it pops the old value off the stack)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000075 "Val-Dec"@en)
SubClassOf(obo:ONTOAVIDA_00000075 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000076 (Val-Delete)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000076 "The instruction code 'Val-Delete' is an instruction code of the transsmt instruction set that pops off a value from the ?B? stack. This instruction code may be modified by one 'Nop' instruction code, which determines from which stack to remove a value."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000076 "Val-Delete"@en)
SubClassOf(obo:ONTOAVIDA_00000076 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000077 (Val-Div)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000077 "The instruction code 'Val-Div' is an instruction code of the transsmt instruction set that pushes the result of the integer division of the value from the top of the ?B? stack by the value at the top of the ?C? stak onto the B stack. This instruction code can be modified by one or two 'Nop' instruction codes, which specify which stacks are divided. If there is an arithmetic error caused by the division, the instruction code fails and does not return a value."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000077 "Val-Div"@en)
SubClassOf(obo:ONTOAVIDA_00000077 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000078 (Val-Inc)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000078 "The instruction code 'Val-Inc' is an instruction code of the transsmt instruction set that increments the value at the top of ?B? stack by one. This instruction code is destructive (i.e., it pops the old value off the stack)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000078 "Val-Inc"@en)
SubClassOf(obo:ONTOAVIDA_00000078 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000079 (Val-Mod)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000079 "The instruction code 'Val-Mod' is an instruction code of the transsmt instruction set that pushes the remainder from integer division between the value from the top of the ?B? stack by the value at the top of the ?C? stak onto the B stack. This instruction code can be modified by one or two 'Nop' instruction codes, which specify which stacks are divided. If there is an arithmetic error caused by the division, the instructioncode fails and does not return a value."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000079 "Val-Mod"@en)
SubClassOf(obo:ONTOAVIDA_00000079 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000080 (Val-Mult)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000080 "The instruction code 'Val-Mult' is an instruction code of the transsmt instruction set that pushes the result of multiplying the values from the top of the ?B? and ?C? staks onto the B stack. This instruction code can be modified by one or two 'Nop' instructions, which specify which stacks are multiplied."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000080 "Val-Mult"@en)
SubClassOf(obo:ONTOAVIDA_00000080 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000081 (Val-Nand)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000081 "The instruction code 'Val-Nand' is an instruction code of the transsmt instruction set that computes the bitwise NAND logic operation on the values at the top of the ?B? and ?C? stacks. The result of this operation is pushed onto the top of the B stack. This instruction code can be modified by one or two 'Nop' instruction codes, which specify which stacks are used for computing the logic operation. Note that this is the only logic operation provided by the instruction set."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000081 "Val-Nand"@en)
SubClassOf(obo:ONTOAVIDA_00000081 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000082 (Val-Shift-L)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000082 "The instruction code 'Val-Shift-L' is an instruction code of the transsmt instruction set that shifts the value at the top of the ?B? stack over one bit to the left, effectively multiplying the value by two and ignoring any potential overflow. This instruction code can be modified by one 'Nop' instruction code, which specifies which stack is used."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000082 "Val-Shift-L"@en)
SubClassOf(obo:ONTOAVIDA_00000082 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000083 (Val-Shift-R)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000083 "The instruction code 'Val-Shift-R' is an instruction code of the transsmt instruction set that shifts the value at the top of the ?B? stack over one bit to the right,  effectively dividing the value by two and rounding down. This instruction code can be modified by one 'Nop' instruction code, which specifies which stack is used."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000083 "Val-Shift-R"@en)
SubClassOf(obo:ONTOAVIDA_00000083 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000084 (Val-Sub)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000084 "The instruction code 'Val-Sub' is an instruction code of the transsmt instruction set that pushes the result of substracting the values from the top of the ?B? and ?C? stacks onto the B stack. This instruction code can be modified by one or two 'Nop' instruction codes, which specify which stacks are substracted."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000084 "Val-Sub"@en)
SubClassOf(obo:ONTOAVIDA_00000084 obo:ONTOAVIDA_00000022)

# Class: obo:ONTOAVIDA_00000085 (digital organism file)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000085 "A digital organism file is a digital file containing the list of instruction codes that constitutes the genome of a digital organism in Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000085 "digital organism file"@en)
SubClassOf(obo:ONTOAVIDA_00000085 obo:STATO_0000002)

# Class: obo:ONTOAVIDA_00000086 (instset-transsmt.cfg)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000086 "An instruction set file containing the instruction set that allows host-parasite interactions to take place in Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000086 "instset-transsmt.cfg"@en)
SubClassOf(obo:ONTOAVIDA_00000086 obo:ONTOAVIDA_00000003)

# Class: obo:ONTOAVIDA_00000087 (instset-heads-sex.cfg)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000087 "An instruction set file containing the instruction set that allows digital organisms reproduce sexually in Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000087 "instset-heads-sex.cfg"@en)
SubClassOf(obo:ONTOAVIDA_00000087 obo:ONTOAVIDA_00000003)

# Class: obo:ONTOAVIDA_00000088 (instset-heads.cfg)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000088 "An instruction set file containing the default instruction set in Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000088 "instset-heads.cfg"@en)
SubClassOf(obo:ONTOAVIDA_00000088 obo:ONTOAVIDA_00000003)

# Class: obo:ONTOAVIDA_00000089 (avida)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000089 "The digital file that executes Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000089 "avida"@en)
SubClassOf(obo:ONTOAVIDA_00000089 obo:ONTOAVIDA_00000002)

# Class: obo:ONTOAVIDA_00000090 (analyze.cfg)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000090 "The default analyze configuration file."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000090 "analyze.cfg"@en)
SubClassOf(obo:ONTOAVIDA_00000090 obo:ONTOAVIDA_00000012)

# Class: obo:ONTOAVIDA_00000091 (environment.cfg)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000091 "The default environment configuration file. The default environment provides a digital organism with new, random input strings every time an 'input-output' instruction code ('IO' for the transsmt instruction set) is executed. The genome of a digital organism can harbor one or several input-output instructions that can be executed either only once or many times during the time it takes to generate an offspring. This means that the organism can take input numbers from the environment more than once before replicating and can compute the result of more than one logic operation."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000091 "environment.cfg"@en)
SubClassOf(obo:ONTOAVIDA_00000091 obo:ONTOAVIDA_00000010)

# Class: obo:ONTOAVIDA_00000092 (events.cfg)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000092 "The default events configuration file."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000092 "events.cfg"@en)
SubClassOf(obo:ONTOAVIDA_00000092 obo:ONTOAVIDA_00000009)

# Class: obo:ONTOAVIDA_00000093 (avida.cfg)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000093 "The default avida configuration file. This file is actually an excellent guide to itself; every option has a description of what it does and what its options are."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000093 "avida.cfg"@en)
SubClassOf(obo:ONTOAVIDA_00000093 obo:ONTOAVIDA_00000008)

# Class: obo:ONTOAVIDA_00000094 (default-heads.org)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000094 "The default file containing a digital organism that is defined by the default instruction set and the default hardware type."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000094 "default-heads.org"@en)
SubClassOf(obo:ONTOAVIDA_00000094 obo:ONTOAVIDA_00000085)
DisjointClasses(obo:ONTOAVIDA_00000094 obo:ONTOAVIDA_00000095)

# Class: obo:ONTOAVIDA_00000095 (default-transsmt.org)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000095 "The default file containing a parasite digital organism that is defined by the transsmt instruction set and the transSMT hardware type."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000095 "default-transsmt.org"@en)
SubClassOf(obo:ONTOAVIDA_00000095 obo:ONTOAVIDA_00000085)

# Class: obo:ONTOAVIDA_00000096 (avida experiment)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000096 "An avida experiment is an experiment carried out in Avida using digital organisms."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000096 "avida experiment"@en)
SubClassOf(obo:ONTOAVIDA_00000096 obo:NCIT_C42790)

# Class: obo:ONTOAVIDA_00000097 (digital genome)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000097 "A digital genome is a circular list of instruction codes that can be executed sequentially by the virtual CPU of a digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000097 "digital genome"@en)
SubClassOf(obo:ONTOAVIDA_00000097 owl:Thing)
DisjointClasses(obo:ONTOAVIDA_00000097 obo:ONTOAVIDA_00000124)
DisjointClasses(obo:ONTOAVIDA_00000097 obo:ONTOAVIDA_00000135)
DisjointClasses(obo:ONTOAVIDA_00000097 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00000100 (stack)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000100 "A stack is a digital storage space that a digital organism uses for storing numbers. The default virtual CPU and the transsmt virtual CPU have two and four stacks, respectively, used for storing numbers. In the default virtual CPU, the 'push' and 'pop' instruction codes are used to move numbers between the registers and the stack, and the 'swap-stk' instruction toggles the active stack in use. A digital organism can theoretically store an arbitrary amount of data in the stacks, but for practical purposes the maximum stack depth is limited to ten."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000100 "stack"@en)
SubClassOf(obo:ONTOAVIDA_00000100 obo:ONTOAVIDA_00000129)

# Class: obo:ONTOAVIDA_00000101 (batch)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000101 "A batch is a digital storage space where the genomes of the digital organisms are loaded before being executed in analyze mode."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000101 "batch"@en)
SubClassOf(obo:ONTOAVIDA_00000101 obo:ONTOAVIDA_00000129)

# Class: obo:ONTOAVIDA_00000102 (buffer)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000102 "A buffer is a digital storage space that a digital organism uses to receive information or return the processed results."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000102 "buffer"@en)
SubClassOf(obo:ONTOAVIDA_00000102 obo:ONTOAVIDA_00000129)

# Class: obo:ONTOAVIDA_00000103 (input buffer)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000103 "An input buffer is the buffer that a digital organism uses to receive information."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000103 "input buffer"@en)
SubClassOf(obo:ONTOAVIDA_00000103 obo:ONTOAVIDA_00000102)

# Class: obo:ONTOAVIDA_00000104 (output buffer)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000104 "An output buffer is the buffer that a digital organism uses to return the processed results."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000104 "output buffer"@en)
SubClassOf(obo:ONTOAVIDA_00000104 obo:ONTOAVIDA_00000102)

# Class: obo:ONTOAVIDA_00000105 (CPU cycle)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000105 "A CPU cycle is the amount of time it takes the virtual CPU of a digital organism in Avida to execute a single instruction code in its memory."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000105 "CPU cycle"@en)
SubClassOf(obo:ONTOAVIDA_00000105 owl:Thing)

# Class: obo:ONTOAVIDA_00000106 (head)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000106 "A head is a mechanism that reads data from or writes data to the digital organism's memory space."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000106 "head"@en)
SubClassOf(obo:ONTOAVIDA_00000106 owl:Thing)

# Class: obo:ONTOAVIDA_00000107 (flow-head)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000107 "A flow-head is the head that marks the beginning of a loop in a digital organism's memory space to jump the instruction pointer back to from the loop's end."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000107 "flow-head"@en)
SubClassOf(obo:ONTOAVIDA_00000107 obo:ONTOAVIDA_00000106)

# Class: obo:ONTOAVIDA_00000108 (instruction pointer)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000108 "An instruction-pointer is the head that determines the next instruction code to be executed by the virtual CPU of a digital organism. After each execution, the instruction pointer is automaticall advanced (unless the instruction code executed dictates otherwise)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000108 "instruction pointer"@en)
SubClassOf(obo:ONTOAVIDA_00000108 obo:ONTOAVIDA_00000106)

# Class: obo:ONTOAVIDA_00000109 (read-head)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000109 "A read-head is the head that determines what instruction code is copied by the virtual CPU of a digital organism when a 'h-copy' instruction code is executed ('Val-Copy' instruction code if the transsmt instruction set is used)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000109 "read-head"@en)
SubClassOf(obo:ONTOAVIDA_00000109 obo:ONTOAVIDA_00000106)

# Class: obo:ONTOAVIDA_00000110 (write-head)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000110 "A writ- head is the head that determines the position of a digital organism's memory space where the instruction code is going to be copied to by the virtual CPU of a digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000110 "write-head"@en)
SubClassOf(obo:ONTOAVIDA_00000110 obo:ONTOAVIDA_00000106)

# Class: obo:ONTOAVIDA_00000111 (logic operation)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000111 "A logic operation is a mathematical function in which each bit is treated independently of all the other bits in a binary number. Thus if a logic operation 'and' was performed between two bitstrings, the first bit of the first string would be added to the first bit in the second string, the second bit to the second bit and so on."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000111 "logic operation"@en)
SubClassOf(obo:ONTOAVIDA_00000111 owl:Thing)

# Class: obo:ONTOAVIDA_00000112 (and)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000112 "The 'and' logic operation is a logic operation on two bitstrings that returns 1 if and only if both inputs are 1 (otherwise it returns 0)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000112 "and"@en)
SubClassOf(obo:ONTOAVIDA_00000112 obo:ONTOAVIDA_00000111)

# Class: obo:ONTOAVIDA_00000113 (and-not)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000113 "The 'and-not' logic operation is a logic operation on two bitstrings that only returns 1 if for each bit pair one input is 1 and the other input is 0 (otherwise it returns 0)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000113 "and-not"@en)
SubClassOf(obo:ONTOAVIDA_00000113 obo:ONTOAVIDA_00000111)

# Class: obo:ONTOAVIDA_00000114 (equals)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000114 "The 'equals' logic operation is a logic operation on two bitstrings that returns 1 if both bits are identical, and 0 if they are different."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000114 "equals"@en)
SubClassOf(obo:ONTOAVIDA_00000114 obo:ONTOAVIDA_00000111)

# Class: obo:ONTOAVIDA_00000115 (not-and)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000115 "The 'not-and' logic operation is a logic operation on two bitstrings that returns 0 if and only if both inputs at the corresponding bit positions are 1 (otherwise it returns 1)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000115 "not-and"@en)
SubClassOf(obo:ONTOAVIDA_00000115 obo:ONTOAVIDA_00000111)

# Class: obo:ONTOAVIDA_00000116 (not-or)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000116 "The 'not-or' logic operation is a logic operation on two bitstrings that returns 1 only if both inputs are 0 (otherwise it returns 0)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000116 "not-or"@en)
SubClassOf(obo:ONTOAVIDA_00000116 obo:ONTOAVIDA_00000111)

# Class: obo:ONTOAVIDA_00000117 (not)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000117 "The 'not' logic operation is a logic operation on a single bitstring that returns 1 at a bit position if the input is 0 at that bit position, and 0 if the input is 1."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000117 "not"@en)
SubClassOf(obo:ONTOAVIDA_00000117 obo:ONTOAVIDA_00000111)

# Class: obo:ONTOAVIDA_00000118 (or)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000118 "The 'or' logic operation is a logic operation on two bitstrings that returns 1 if either the first input, the second input, or both are 1 (otherwise it returns 0)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000118 "or"@en)
SubClassOf(obo:ONTOAVIDA_00000118 obo:ONTOAVIDA_00000111)

# Class: obo:ONTOAVIDA_00000119 (orn-not)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000119 "The 'orn-not' logic operation is a logic operation on two bitstrings that returns 1 if for each input bit pair one input bit is 1 or the other is 0 (otherwise it returns 0)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000119 "orn-not"@en)
SubClassOf(obo:ONTOAVIDA_00000119 obo:ONTOAVIDA_00000111)

# Class: obo:ONTOAVIDA_00000120 (exclusive or)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000120 "The 'exclusive-or' logic opertation is a logic operation on two bitstrings that returns 1 if one but not both of the inputs are 1 (otherwise it returns 0)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000120 "exclusive or"@en)
SubClassOf(obo:ONTOAVIDA_00000120 obo:ONTOAVIDA_00000111)

# Class: obo:ONTOAVIDA_00000124 (digital transcriptome)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000124 "A digital transcriptome is a list of the instruction codes that have been executed by the virtual CPU of a digital organism during its replication."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000124 "digital transcriptome"@en)
SubClassOf(obo:ONTOAVIDA_00000124 owl:Thing)
DisjointClasses(obo:ONTOAVIDA_00000124 obo:ONTOAVIDA_00000135)
DisjointClasses(obo:ONTOAVIDA_00000124 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00000126 (register)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000126 "A register is a digital storage space that a digital organism uses for storing a single number. The default virtual CPU contains three registers (XA, XB, and XC), each of which is made up of 32 bits. All math-based instruction codes operate on the registers, and various instruction codes will move the values in the registers around."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000126 "register"@en)
SubClassOf(obo:ONTOAVIDA_00000126 obo:ONTOAVIDA_00000129)

# Class: obo:ONTOAVIDA_00000127 (update)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000127 "An update is the amount of time during which a digital organism executes on average 30 instruction codes from its genome."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000127 "update"@en)
SubClassOf(obo:ONTOAVIDA_00000127 owl:Thing)

# Class: obo:ONTOAVIDA_00000128 (digital organism memory)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000128 "A digital organism memory is a digital storage space that a digital organism uses to hold a sequence of instruction codes to be executed. The memory space is initialize to the genome of the digital organism, but it will be modified over the lifetime of the digital organism, typically as an offspring is produced. As section of the memory is then divided off to initialize the offspring. Memory is treated as circular, such that execution will loop back to the first instruction code after the last instruction code has been executed."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000128 "digital organism memory"@en)
SubClassOf(obo:ONTOAVIDA_00000128 obo:ONTOAVIDA_00000129)

# Class: obo:ONTOAVIDA_00000129 (digital storage space)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000129 "A digital storage space is a memory or disk space of a computer that is used to retain digital data."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000129 "digital storage space"@en)
SubClassOf(obo:ONTOAVIDA_00000129 owl:Thing)

# Class: obo:ONTOAVIDA_00000130 (instruction set)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000130 "An instruction set is a list of instruction codes that a digital organism can hold in its genome (i.e., its genetic language)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000130 "instruction set"@en)
SubClassOf(obo:ONTOAVIDA_00000130 owl:Thing)

# Class: obo:ONTOAVIDA_00000131 (heads_default)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000131 "The heads_default instruction set is the default instruction set in Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000131 "heads_default"@en)
SubClassOf(obo:ONTOAVIDA_00000131 obo:ONTOAVIDA_00000130)

# Class: obo:ONTOAVIDA_00000132 (heads_sex)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000132 "The heads_sex instruction set is the instruction set that allows digital organisms reproduce sexually in Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000132 "heads_sex"@en)
SubClassOf(obo:ONTOAVIDA_00000132 obo:ONTOAVIDA_00000130)

# Class: obo:ONTOAVIDA_00000133 (transsmt)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000133 "The transsmt instruction set is the instruction set that allows host-parasite interactions to take place in Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000133 "transsmt"@en)
SubClassOf(obo:ONTOAVIDA_00000133 obo:ONTOAVIDA_00000130)

# Class: obo:ONTOAVIDA_00000135 (digital tandem repeat)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000135 "A digital tandem repeat is a string of two or more instruction codes within a digital transcriptome that are executed sequentially more than once by a digital organism."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000135 "digital tandem repeat"@en)
SubClassOf(obo:ONTOAVIDA_00000135 owl:Thing)
DisjointClasses(obo:ONTOAVIDA_00000135 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00000136 (template)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000136 "A template is a sequence of no-operation instruction codes ('nop' or 'Nop', for the heads_default and transsmt instruction sets, respectively) used to mark regions of code within a digital organism's genome."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000136 "template"@en)
SubClassOf(obo:ONTOAVIDA_00000136 owl:Thing)

# Class: obo:ONTOAVIDA_00000137 (nop notation)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000137 "A nop notation is a single or two capital letters (IP, RH, WH, or FH for heads; AX, BX, and CX for registers; and A, B, C, D for stacks) surrounded by question marks that refer to the head, register, or stack being used as a default."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000137 "nop notation"@en)
SubClassOf(obo:ONTOAVIDA_00000137 owl:Thing)

# Class: obo:ONTOAVIDA_00000138 (nop-head notation)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000138 "A nop-head notation is a two-letter notation (IP, RH, WH, or FH) surrounded by question marks that refers to that head being used as a default, when the instruction code in question is being executed. But if the instruction code is followed by a no-operation ('nop' or 'Nop') instruction code, the 'nop' or 'Nop' instruction code will alter the register used. A 'nop-A' or 'Nop-A' instruction code indicates the instruction pointer (IP); a 'nop-B' or 'Nop-B' instruction code indicates the read-head (RH); a 'nop-C' or 'Nop-C' instruction code indicates the write-head (WH); and a 'Nop-D' instruction code indicates the flow-head (FH)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000138 "nop-head notation"@en)
SubClassOf(obo:ONTOAVIDA_00000138 obo:ONTOAVIDA_00000137)

# Class: obo:ONTOAVIDA_00000139 (nop-register notation)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000139 "A nop-register notation is a two-letter notation (AX, BX, or CX) surrounded by question marks that refers to that register being used by default when the instruction in question is being executed. But if the instruction code is followed by a no-operation ('nop') instruction code, the 'nop' instruction code will alter the register used. A 'nop-A' instruction indicates the AX register; a 'nop-B' instruction code indicates the BX register; and a 'nop-C' instruction code indicates the CX register. It does not apply to the transsmt virtual CPU because the Transsmt hardware does not use registers."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000139 "nop-register notation"@en)
SubClassOf(obo:ONTOAVIDA_00000139 obo:ONTOAVIDA_00000137)

# Class: obo:ONTOAVIDA_00000140 (nop-stack notation)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000140 "A nop-stack notation is a single-letter noation (A, B, C, or D) surrounded by question marks that refers to that stack being used by default when the instruction code in question is being executed. But if the instruction code is followed by a no-operation ('Nop') instruction code, the 'Nop' instruction code will alter the register used. A 'Nop-A' instruction code indicates the stack A; a 'Nop-B' instruction code indicates the stack B; a 'Nop-C' instruction code indicates the stack C; and a 'Nop-D' instruction code indicates the stack D. It only applies to the transsmt virtual CPU, because the TransSMT hardware does not use registers."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000140 "nop-stack notation"@en)
SubClassOf(obo:ONTOAVIDA_00000140 obo:ONTOAVIDA_00000137)

# Class: obo:ONTOAVIDA_00000141 (hardware type)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000141 "A hardware type is the way the memory of a digital organism and the execution threads are managed by Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000141 "hardware type"@en)
SubClassOf(obo:ONTOAVIDA_00000141 owl:Thing)

# Class: obo:ONTOAVIDA_00000142 (TransSMT hardware)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000142 "The TransSMT hardware is the hardware type that allows host-parasite interactions to take place in Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000142 "TransSMT hardware"@en)
SubClassOf(obo:ONTOAVIDA_00000142 obo:ONTOAVIDA_00000141)
DisjointClasses(obo:ONTOAVIDA_00000142 obo:ONTOAVIDA_00000143)

# Class: obo:ONTOAVIDA_00000143 (default hardware)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000143 "The default hardware is the default hardware type used in Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000143 "default hardware"@en)
SubClassOf(obo:ONTOAVIDA_00000143 obo:ONTOAVIDA_00000141)

# Class: obo:ONTOAVIDA_00000144 (analyze configuration command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000144 "The analyze configuration command is a directive included in the analyze configuration file that is used for loading, manipulating, and saving data from an experiment performed in the analyze mode of Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000144 "analyze configuration command"@en)
SubClassOf(obo:ONTOAVIDA_00000144 obo:ONTOAVIDA_00000011)

# Class: obo:ONTOAVIDA_00000145 (analyze configuration DETAIL command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000145 "The analyze configuration DETAIL command is an analyze configuration command that, after the execution of an analyze configuration RECALC or RECALCULATE command, writes statistics of the genomes of the digital organisms (one per line) loaded in a batch and executed in analyze mode to an output file."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000145 "analyze configuration DETAIL command"@en)
SubClassOf(obo:ONTOAVIDA_00000145 obo:ONTOAVIDA_00000144)

# Class: obo:ONTOAVIDA_00000146 (analyze configuration LOAD_ORGANISM command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000146 "The analyze configuration LOAD_ORGANISM command is an analyze configuration command that loads a single genome in a batch from a digital organism file."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000146 "analyze configuration LOAD_ORGANISM command"@en)
SubClassOf(obo:ONTOAVIDA_00000146 obo:ONTOAVIDA_00000144)

# Class: obo:ONTOAVIDA_00000147 (analyze configuration LOAD_SEQUENCE command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000147 "The analyze configuration LOAD_SEQUENCE command is an analyze configuration command that loads a single genome in a batch from a genome instruction sequence."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000147 "analyze configuration LOAD_SEQUENCE command"@en)
SubClassOf(obo:ONTOAVIDA_00000147 obo:ONTOAVIDA_00000144)

# Class: obo:ONTOAVIDA_00000148 (analyze configuration RECALCULATE command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000148 "The analyze configuration RECALCULATE command is an analyze configuration command that runs all of the genomes loaded in the current batch through a test virtual CPU and records the measurements taken (fitness, gestation time, etc.). This command overrides any values that may have been loaded in with the genomes. The \"use_resources\" flags means whether or not the test virtual CPU will use resources when it runs. If the \"use_random_inputs\" flag is set, then digital organisms will be provided with new, random input 32-bit binary numbers for each trace as they would experience during an experiment performed using the standard mode of Avida. By default, the same inputs are provided every time to digital organisms in analyze mode. Phenotypic plasticity information is not available from the analyze configuration RECALCULATE command (you should use the analyze configuration RECALC command with \"num_trials X\", where X is greater than 1, for phenotypic plasticity statistics)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000148 "analyze configuration RECALCULATE command"@en)
SubClassOf(obo:ONTOAVIDA_00000148 obo:ONTOAVIDA_00000144)

# Class: obo:ONTOAVIDA_00000149 (analyze configuration RECALC command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000149 "The analyze configuration RECALC command is an analyze configuration command that performs the same operations as the analyze configuration RECALCULATE command but has a few additional features (e.g., computes phenotypic plasticity). If \"num_trials\" is set to greater than one, random inputs will be used to gather phenotypic plasticity information. Please note that phenotypic plasticity analysis performed by using the analyze configuration RECALC command will reset genome statistics to the values for the most likely phenotype. Implicit phenotypic plasticity analysis (e.g. by not calling RECALC or calling RECALC with \"num_trials 1\") will not re-evaluate the genome statistics in this manner and instead rely on the initial values or those values from a single recalculation."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000149 "analyze configuration RECALC command"@en)
SubClassOf(obo:ONTOAVIDA_00000149 obo:ONTOAVIDA_00000144)

# Class: obo:ONTOAVIDA_00000150 (analyze configuration TRACE command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000150 "The analyze configuration TRACE command is an analyze configuration command that shows step-by-step the status of all of the virtual CPU components and the genome of a digital organism during the course of its execution in analyze mode. The filename used for each trace will be the genotype's name with a \".trace\" appended. Four parameters need to be specified: the name of the folder that will contain the trace files, whether the digital organism uses resources (1) or not (0) when running in analyze mode, the update at which resources will be available (-1 if resources are not used), and whether the environment configuration file provides new random input numbers to the digital organisms (1) or not (0) everytime the analyze mode is called."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000150 "analyze configuration TRACE command"@en)
SubClassOf(obo:ONTOAVIDA_00000150 obo:ONTOAVIDA_00000144)

# Class: obo:ONTOAVIDA_00000151 (digital phenotype)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000151 "A digital phenotype is a unique combination of logic operations that the digital organism performs on 32-bit one- and two-binary input numbers. Any two digital organisms that compute the same logic operations are considered to have the same phenotype."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000151 "digital phenotype"@en)
SubClassOf(obo:ONTOAVIDA_00000151 owl:Thing)

# Class: obo:ONTOAVIDA_00000155 (avida configuration command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000155 "An avida configuration command is a directive included in the avida configuration file that is used for setting up all the basic conditions for performing an experiment in the standard mode of Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000155 "avida configuration command"@en)
SubClassOf(obo:ONTOAVIDA_00000155 obo:ONTOAVIDA_00000011)

# Class: obo:ONTOAVIDA_00000157 (execution thread)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000157 "A thread of execution is the smallest sequence of programmed instructions that can be managed independently by a scheduler, which is typically a part of the operating system."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000157 "execution thread"@en)
SubClassOf(obo:ONTOAVIDA_00000157 owl:Thing)

# Class: obo:ONTOAVIDA_00000162 (analyze configuration PURGE_BATCH command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000162 "The analyze configuration PURGE_BATCH command is an analyze configuration command that remove the genomes of all digital organisms loaded in a batch."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000162 "analyze configuration PURGE_BATCH command"@en)
SubClassOf(obo:ONTOAVIDA_00000162 obo:ONTOAVIDA_00000144)

# Class: obo:ONTOAVIDA_00000163 (environment configuration command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000163 "An environment configuration command is a directive included in the environment configuration file that is used for xxx from an experiment performed in the standard mode of Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000163 "environment configuration command"@en)
SubClassOf(obo:ONTOAVIDA_00000163 obo:ONTOAVIDA_00000011)

# Class: obo:ONTOAVIDA_00000164 (events configuration command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000164 "An events configuration command is a directive included in the events configuration file that is used for controlling the events that need to occur throughout the course of an experiment performed in the standard mode of Avida. An event configuration command will be triggered either a single time or periodically. The format for each command is: 'type' 'timing' 'event' 'arguments'. The type determines what kind of timings the event will be based off of (i.e., immediate 'i', based on update 'u', or based on generation 'g'). The timing should only be included for non-immediate events. If a single number is given for timing, the event occurs at that update/generation. A second number can be included (separated by a colon ':') to indicate how often the event should be repeated. And if a third number is listed (again, colon seperated) this will be the last time the event can occur on. The event is simply the name of the action that should be performed, and the arguments detail exactly how it should work when it is triggered."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000164 "events configuration command"@en)
SubClassOf(obo:ONTOAVIDA_00000164 obo:ONTOAVIDA_00000011)

# Class: obo:ONTOAVIDA_00000165 (environment configuration RESOURCE command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000165 "An environment configuration RESOURCE command is an environment configuration command that allow us to set up a computational quantity (i.e., resource) that can be used to modify the fitness of a digital organism. The resource can be a global quantity or a quantity that vary from cell to cell within the world grid."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000165 "environment configuration RESOURCE command"@en)
SubClassOf(obo:ONTOAVIDA_00000165 obo:ONTOAVIDA_00000163)

# Class: obo:ONTOAVIDA_00000168 (world grid)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000168 "A world grid is the topology of the world where digital organisms live."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000168 "world grid"@en)
SubClassOf(obo:ONTOAVIDA_00000168 owl:Thing)

# Class: obo:ONTOAVIDA_00000169 (world grid cell)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000169 "A world grid cell is a unit that make up the world grid."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000169 "world grid cell"@en)
SubClassOf(obo:ONTOAVIDA_00000169 owl:Thing)

# Class: obo:ONTOAVIDA_00000170 (environment configuration REACTION command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000170 "An environment configuration REACTION command is an environment configuration command that allows us to set up a computational function that can be used by a digital organism to consume or produce resources when it performs certain logic operations. By defining reactions, a digital organism can be rewarded or punished for performing the logic operations that triggers them."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000170 "environment configuration REACTION command"@en)
SubClassOf(obo:ONTOAVIDA_00000170 obo:ONTOAVIDA_00000163)

# Class: obo:ONTOAVIDA_00000171 (events configuration Exit command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000171 "An event configuration Exit command is an event configuration command that allows us to specify the end of an experiment performed in the standard mode of Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000171 "events configuration Exit command"@en)
SubClassOf(obo:ONTOAVIDA_00000171 obo:ONTOAVIDA_00000164)

# Class: obo:ONTOAVIDA_00000172 (events configuration SavePopulation command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000172 "An event configuration SavePopulation command is an event configuration command that allows us to save the state of the entire population of digital organisms to a file at any time during the course of an experiment performed in the standard mode of Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000172 "events configuration SavePopulation command"@en)
SubClassOf(obo:ONTOAVIDA_00000172 obo:ONTOAVIDA_00000164)

# Class: obo:ONTOAVIDA_00000173 (events configuration InjectRange command)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000173 "An event configuration InjectRange command is an event configuration command that allows us to add digital organisms to the world grid at any time during the course of an experiment performed in the standard mode of Avida."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000173 "events configuration InjectRange command"@en)
SubClassOf(obo:ONTOAVIDA_00000173 obo:ONTOAVIDA_00000164)

# Class: obo:ONTOAVIDA_00000174 (complementary template)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000174 "A complementary template is a sequence of 'nop' instructions that are found, in the heads_default and heads_sex instruction sets, by taking each 'nop' instruction that makes up that template, and shifting it to the next in alphabetical order, looping around at the end. Thus, 'nop-A' -> 'nop-B' -> 'nop-C' -> 'nop-A'. In the transsmt instruction set, the complement is the template where each 'Nop' is shifted over in sequence by 2, such that the complement of the complement recovers the original template: 'Nop-A' -> 'Nop-C' -> 'Nop-A' and 'Nop-B' -> 'Nop-D' -> 'Nop-B'."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000174 "complementary template"@en)
SubClassOf(obo:ONTOAVIDA_00000174 owl:Thing)

# Class: obo:ONTOAVIDA_00000190 (multiple-trait digital organism)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00000190 "A multiple-trait digital organism is a digital organism that computes more than one logic operation."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00000190 "multiple-trait digital organism"@en)
EquivalentClasses(obo:ONTOAVIDA_00000190 ObjectIntersectionOf(obo:GSSO_009994 ObjectMinCardinality(2 obo:ONTOAVIDA_00000182 obo:ONTOAVIDA_00000111)))
SubClassOf(obo:ONTOAVIDA_00000190 obo:GSSO_009994)
SubClassOf(obo:ONTOAVIDA_00000190 ObjectSomeValuesFrom(obo:ONTOAVIDA_00000182 obo:ONTOAVIDA_00000111))
DisjointClasses(obo:ONTOAVIDA_00000190 obo:ONTOAVIDA_00001209)
DisjointClasses(obo:ONTOAVIDA_00000190 obo:ONTOAVIDA_00001210)

# Class: obo:ONTOAVIDA_00001201 (logic9)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00001201 "A logic environment where 9 logic operations are listed in the environment configuration file."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00001201 "logic9"@en)
SubClassOf(obo:ONTOAVIDA_00001201 obo:ONTOAVIDA_00000007)

# Class: obo:ONTOAVIDA_00001202 (logic77)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00001202 "A logic environment where 77 logic operations are listed in the environment configuration file."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00001202 "logic77"@en)
SubClassOf(obo:ONTOAVIDA_00001202 obo:ONTOAVIDA_00000007)

# Class: obo:ONTOAVIDA_00001205 (plastic digital organism)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00001205 "A plastic digital organism is a digital organism whose genome encodes distinct phenotypes in different environments (i.e., a digital organism that computes different logic operations in different environments)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00001205 "plastic digital organism"@en)
EquivalentClasses(obo:ONTOAVIDA_00001205 ObjectIntersectionOf(obo:GSSO_009994 ObjectMinCardinality(2 obo:ONTOAVIDA_00000134 obo:ONTOAVIDA_00000151)))
SubClassOf(obo:ONTOAVIDA_00001205 obo:GSSO_009994)
SubClassOf(obo:ONTOAVIDA_00001205 ObjectSomeValuesFrom(obo:ONTOAVIDA_00000134 obo:ONTOAVIDA_00000151))
DisjointClasses(obo:ONTOAVIDA_00001205 obo:ONTOAVIDA_00001206)

# Class: obo:ONTOAVIDA_00001206 (non-plastic digital organism)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00001206 "A non-plastic digital organism is a digital organism whose genome encodes the same phenotype in all environments (i.e., a digital organism that computes the same set of logic operations in all environments)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00001206 "non-plastic digital organism"@en)
EquivalentClasses(obo:ONTOAVIDA_00001206 ObjectIntersectionOf(obo:GSSO_009994 ObjectExactCardinality(1 obo:ONTOAVIDA_00000134 obo:ONTOAVIDA_00000151)))
SubClassOf(obo:ONTOAVIDA_00001206 obo:GSSO_009994)
SubClassOf(obo:ONTOAVIDA_00001206 ObjectSomeValuesFrom(obo:ONTOAVIDA_00000134 obo:ONTOAVIDA_00000151))

# Class: obo:ONTOAVIDA_00001207 (transcriptome-robust digital organism)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00001207 "A transcriptome-robust digital organism is a digital organism that executes the same transcriptome in all environments (i.e., a digital organism that executes the same instruction codes in all environments)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00001207 "transcriptome-robust digital organism"@en)
EquivalentClasses(obo:ONTOAVIDA_00001207 ObjectIntersectionOf(obo:GSSO_009994 ObjectExactCardinality(1 obo:ONTOAVIDA_00000004 obo:ONTOAVIDA_00000124)))
SubClassOf(obo:ONTOAVIDA_00001207 obo:GSSO_009994)
SubClassOf(obo:ONTOAVIDA_00001207 ObjectSomeValuesFrom(obo:ONTOAVIDA_00000004 obo:ONTOAVIDA_00000124))
DisjointClasses(obo:ONTOAVIDA_00001207 obo:ONTOAVIDA_00001208)

# Class: obo:ONTOAVIDA_00001208 (transcriptome-sensitive digital organism)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00001208 "A transcriptome-sensitive digital organism is a digital organism that executes distinct transcriptomes in different environments (i.e., a digital organism that executes different instruction codes in different environments)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00001208 "transcriptome-sensitive digital organism"@en)
EquivalentClasses(obo:ONTOAVIDA_00001208 ObjectIntersectionOf(obo:GSSO_009994 ObjectMinCardinality(2 obo:ONTOAVIDA_00000004 obo:ONTOAVIDA_00000124)))
SubClassOf(obo:ONTOAVIDA_00001208 obo:GSSO_009994)
SubClassOf(obo:ONTOAVIDA_00001208 ObjectSomeValuesFrom(obo:ONTOAVIDA_00000004 obo:ONTOAVIDA_00000124))

# Class: obo:ONTOAVIDA_00001209 (merely-viable digital organism)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00001209 "A merely-viable digital organism is a digital organism that does not compute any logic operation (i.e., it can only produce an offpring)."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00001209 "merely-viable digital organism"@en)
EquivalentClasses(obo:ONTOAVIDA_00001209 ObjectIntersectionOf(obo:GSSO_009994 ObjectExactCardinality(0 obo:ONTOAVIDA_00000182 obo:ONTOAVIDA_00000111)))
SubClassOf(obo:ONTOAVIDA_00001209 obo:GSSO_009994)
DisjointClasses(obo:ONTOAVIDA_00001209 obo:ONTOAVIDA_00001210)

# Class: obo:ONTOAVIDA_00001210 (single-trait digital organism)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00001210 "A single-trait digital organism is a digital organism that computes a single logic operation."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00001210 "single-trait digital organism"@en)
EquivalentClasses(obo:ONTOAVIDA_00001210 ObjectIntersectionOf(obo:GSSO_009994 ObjectExactCardinality(1 obo:ONTOAVIDA_00000182 obo:ONTOAVIDA_00000111)))
SubClassOf(obo:ONTOAVIDA_00001210 obo:GSSO_009994)
SubClassOf(obo:ONTOAVIDA_00001210 ObjectSomeValuesFrom(obo:ONTOAVIDA_00000182 obo:ONTOAVIDA_00000111))

# Class: obo:ONTOAVIDA_00002001 (digital organism phenotype 0)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002001 "The digital phenotype of the logic9 environment that a digital organism that is not capable of computing any logic operation has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002001 "digital organism phenotype 0"@en)
SubClassOf(obo:ONTOAVIDA_00002001 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002002 (digital organism phenotype 1)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002002 "The digital phenotype of the logic9 environment that a digital organism computing the logic operation 'not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002002 "digital organism phenotype 1"@en)
SubClassOf(obo:ONTOAVIDA_00002002 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002003 (digital organism phenotype 2)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002003 "The digital phenotype of the logic9 environment that a digital organism computing the logic operation 'not-and' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002003 "digital organism phenotype 2"@en)
SubClassOf(obo:ONTOAVIDA_00002003 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002004 (digital organism phenotype 3)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002004 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not' and 'not-and' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002004 "digital organism phenotype 3"@en)
SubClassOf(obo:ONTOAVIDA_00002004 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002005 (digital organism phenotype 4)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002005 "The digital phenotype of the logic9 environment that a digital organism computing the logic operation 'and' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002005 "digital organism phenotype 4"@en)
SubClassOf(obo:ONTOAVIDA_00002005 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002006 (digital organism phenotype 5)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002006 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not' and 'and' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002006 "digital organism phenotype 5"@en)
SubClassOf(obo:ONTOAVIDA_00002006 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002007 (digital organism phenotype 6)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002007 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and' and 'and' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002007 "digital organism phenotype 6"@en)
SubClassOf(obo:ONTOAVIDA_00002007 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002008 (digital organism phenotype 7)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002008 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and' and 'and' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002008 "digital organism phenotype 7"@en)
SubClassOf(obo:ONTOAVIDA_00002008 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002009 (digital organism phenotype 8)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002009 "The digital phenotype of the logic9 environment that a digital organism computing the logic operation 'orn-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002009 "digital organism phenotype 8"@en)
SubClassOf(obo:ONTOAVIDA_00002009 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002010 (digital organism phenotype 9)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002010 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not' and 'orn-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002010 "digital organism phenotype 9"@en)
SubClassOf(obo:ONTOAVIDA_00002010 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002011 (digital organism phenotype 10)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002011 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and' and 'orn-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002011 "digital organism phenotype 10"@en)
SubClassOf(obo:ONTOAVIDA_00002011 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002012 (digital organism phenotype 11)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002012 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and' and 'orn-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002012 "digital organism phenotype 11"@en)
SubClassOf(obo:ONTOAVIDA_00002012 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002013 (digital organism phenotype 12)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002013 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and' and 'orn-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002013 "digital organism phenotype 12"@en)
SubClassOf(obo:ONTOAVIDA_00002013 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002014 (digital organism phenotype 13)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002014 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and' and 'orn-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002014 "digital organism phenotype 13"@en)
SubClassOf(obo:ONTOAVIDA_00002014 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002015 (digital organism phenotype 14)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002015 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and' and 'orn-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002015 "digital organism phenotype 14"@en)
SubClassOf(obo:ONTOAVIDA_00002015 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002016 (digital organism phenotype 15)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002016 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and' and 'orn-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002016 "digital organism phenotype 15"@en)
SubClassOf(obo:ONTOAVIDA_00002016 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002017 (digital organism phenotype 16)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002017 "The digital phenotype of the logic9 environment that a digital organism computing the logic operation 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002017 "digital organism phenotype 16"@en)
SubClassOf(obo:ONTOAVIDA_00002017 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002018 (digital organism phenotype 17)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002018 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002018 "digital organism phenotype 17"@en)
SubClassOf(obo:ONTOAVIDA_00002018 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002019 (digital organism phenotype 18)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002019 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002019 "digital organism phenotype 18"@en)
SubClassOf(obo:ONTOAVIDA_00002019 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002020 (digital organism phenotype 19)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002020 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002020 "digital organism phenotype 19"@en)
SubClassOf(obo:ONTOAVIDA_00002020 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002021 (digital organism phenotype 20)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002021 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002021 "digital organism phenotype 20"@en)
SubClassOf(obo:ONTOAVIDA_00002021 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002022 (digital organism phenotype 21)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002022 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002022 "digital organism phenotype 21"@en)
SubClassOf(obo:ONTOAVIDA_00002022 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002023 (digital organism phenotype 22)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002023 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002023 "digital organism phenotype 22"@en)
SubClassOf(obo:ONTOAVIDA_00002023 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002024 (digital organism phenotype 23)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002024 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002024 "digital organism phenotype 23"@en)
SubClassOf(obo:ONTOAVIDA_00002024 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002025 (digital organism phenotype 24)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002025 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002025 "digital organism phenotype 24"@en)
SubClassOf(obo:ONTOAVIDA_00002025 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002026 (digital organism phenotype 25)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002026 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002026 "digital organism phenotype 25"@en)
SubClassOf(obo:ONTOAVIDA_00002026 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002027 (digital organism phenotype 26)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002027 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002027 "digital organism phenotype 26"@en)
SubClassOf(obo:ONTOAVIDA_00002027 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002028 (digital organism phenotype 27)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002028 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002028 "digital organism phenotype 27"@en)
SubClassOf(obo:ONTOAVIDA_00002028 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002029 (digital organism phenotype 28)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002029 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002029 "digital organism phenotype 28"@en)
SubClassOf(obo:ONTOAVIDA_00002029 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002030 (digital organism phenotype 29)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002030 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002030 "digital organism phenotype 29"@en)
SubClassOf(obo:ONTOAVIDA_00002030 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002031 (digital organism phenotype 30)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002031 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002031 "digital organism phenotype 30"@en)
SubClassOf(obo:ONTOAVIDA_00002031 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002032 (digital organism phenotype 31)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002032 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not' and 'or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002032 "digital organism phenotype 31"@en)
SubClassOf(obo:ONTOAVIDA_00002032 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002033 (digital organism phenotype 32)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002033 "The digital phenotype of the logic9 environment that a digital organism computing the logic operation 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002033 "digital organism phenotype 32"@en)
SubClassOf(obo:ONTOAVIDA_00002033 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002034 (digital organism phenotype 33)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002034 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002034 "digital organism phenotype 33"@en)
SubClassOf(obo:ONTOAVIDA_00002034 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002035 (digital organism phenotype 34)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002035 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002035 "digital organism phenotype 34"@en)
SubClassOf(obo:ONTOAVIDA_00002035 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002036 (digital organism phenotype 35)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002036 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002036 "digital organism phenotype 35"@en)
SubClassOf(obo:ONTOAVIDA_00002036 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002037 (digital organism phenotype 36)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002037 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002037 "digital organism phenotype 36"@en)
SubClassOf(obo:ONTOAVIDA_00002037 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002038 (digital organism phenotype 37)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002038 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002038 "digital organism phenotype 37"@en)
SubClassOf(obo:ONTOAVIDA_00002038 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002039 (digital organism phenotype 38)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002039 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002039 "digital organism phenotype 38"@en)
SubClassOf(obo:ONTOAVIDA_00002039 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002040 (digital organism phenotype 39)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002040 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002040 "digital organism phenotype 39"@en)
SubClassOf(obo:ONTOAVIDA_00002040 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002041 (digital organism phenotype 40)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002041 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002041 "digital organism phenotype 40"@en)
SubClassOf(obo:ONTOAVIDA_00002041 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002042 (digital organism phenotype 41)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002042 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002042 "digital organism phenotype 41"@en)
SubClassOf(obo:ONTOAVIDA_00002042 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002043 (digital organism phenotype 42)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002043 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002043 "digital organism phenotype 42"@en)
SubClassOf(obo:ONTOAVIDA_00002043 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002044 (digital organism phenotype 43)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002044 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002044 "digital organism phenotype 43"@en)
SubClassOf(obo:ONTOAVIDA_00002044 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002045 (digital organism phenotype 44)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002045 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002045 "digital organism phenotype 44"@en)
SubClassOf(obo:ONTOAVIDA_00002045 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002046 (digital organism phenotype 45)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002046 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002046 "digital organism phenotype 45"@en)
SubClassOf(obo:ONTOAVIDA_00002046 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002047 (digital organism phenotype 46)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002047 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002047 "digital organism phenotype 46"@en)
SubClassOf(obo:ONTOAVIDA_00002047 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002048 (digital organism phenotype 47)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002048 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002048 "digital organism phenotype 47"@en)
SubClassOf(obo:ONTOAVIDA_00002048 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002049 (digital organism phenotype 48)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002049 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002049 "digital organism phenotype 48"@en)
SubClassOf(obo:ONTOAVIDA_00002049 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002050 (digital organism phenotype 49)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002050 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002050 "digital organism phenotype 49"@en)
SubClassOf(obo:ONTOAVIDA_00002050 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002051 (digital organism phenotype 50)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002051 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002051 "digital organism phenotype 50"@en)
SubClassOf(obo:ONTOAVIDA_00002051 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002052 (digital organism phenotype 51)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002052 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002052 "digital organism phenotype 51"@en)
SubClassOf(obo:ONTOAVIDA_00002052 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002053 (digital organism phenotype 52)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002053 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002053 "digital organism phenotype 52"@en)
SubClassOf(obo:ONTOAVIDA_00002053 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002054 (digital organism phenotype 53)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002054 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002054 "digital organism phenotype 53"@en)
SubClassOf(obo:ONTOAVIDA_00002054 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002055 (digital organism phenotype 54)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002055 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002055 "digital organism phenotype 54"@en)
SubClassOf(obo:ONTOAVIDA_00002055 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002056 (digital organism phenotype 55)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002056 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002056 "digital organism phenotype 55"@en)
SubClassOf(obo:ONTOAVIDA_00002056 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002057 (digital organism phenotype 56)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002057 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002057 "digital organism phenotype 56"@en)
SubClassOf(obo:ONTOAVIDA_00002057 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002058 (digital organism phenotype 57)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002058 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002058 "digital organism phenotype 57"@en)
SubClassOf(obo:ONTOAVIDA_00002058 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002059 (digital organism phenotype 58)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002059 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002059 "digital organism phenotype 58"@en)
SubClassOf(obo:ONTOAVIDA_00002059 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002060 (digital organism phenotype 59)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002060 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002060 "digital organism phenotype 59"@en)
SubClassOf(obo:ONTOAVIDA_00002060 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002061 (digital organism phenotype 60)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002061 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002061 "digital organism phenotype 60"@en)
SubClassOf(obo:ONTOAVIDA_00002061 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002062 (digital organism phenotype 61)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002062 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002062 "digital organism phenotype 61"@en)
SubClassOf(obo:ONTOAVIDA_00002062 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002063 (digital organism phenotype 62)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002063 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002063 "digital organism phenotype 62"@en)
SubClassOf(obo:ONTOAVIDA_00002063 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002064 (digital organism phenotype 63)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002064 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or' and 'and-not' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002064 "digital organism phenotype 63"@en)
SubClassOf(obo:ONTOAVIDA_00002064 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002065 (digital organism phenotype 64)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002065 "The digital phenotype of the logic9 environment that a digital organism computing the logic operation 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002065 "digital organism phenotype 64"@en)
SubClassOf(obo:ONTOAVIDA_00002065 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002066 (digital organism phenotype 65)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002066 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002066 "digital organism phenotype 65"@en)
SubClassOf(obo:ONTOAVIDA_00002066 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002067 (digital organism phenotype 66)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002067 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002067 "digital organism phenotype 66"@en)
SubClassOf(obo:ONTOAVIDA_00002067 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002068 (digital organism phenotype 67)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002068 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002068 "digital organism phenotype 67"@en)
SubClassOf(obo:ONTOAVIDA_00002068 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002069 (digital organism phenotype 68)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002069 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002069 "digital organism phenotype 68"@en)
SubClassOf(obo:ONTOAVIDA_00002069 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002070 (digital organism phenotype 69)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002070 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002070 "digital organism phenotype 69"@en)
SubClassOf(obo:ONTOAVIDA_00002070 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002071 (digital organism phenotype 70)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002071 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002071 "digital organism phenotype 70"@en)
SubClassOf(obo:ONTOAVIDA_00002071 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002072 (digital organism phenotype 71)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002072 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002072 "digital organism phenotype 71"@en)
SubClassOf(obo:ONTOAVIDA_00002072 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002073 (digital organism phenotype 72)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002073 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002073 "digital organism phenotype 72"@en)
SubClassOf(obo:ONTOAVIDA_00002073 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002074 (digital organism phenotype 73)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002074 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002074 "digital organism phenotype 73"@en)
SubClassOf(obo:ONTOAVIDA_00002074 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002075 (digital organism phenotype 74)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002075 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002075 "digital organism phenotype 74"@en)
SubClassOf(obo:ONTOAVIDA_00002075 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002076 (digital organism phenotype 75)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002076 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002076 "digital organism phenotype 75"@en)
SubClassOf(obo:ONTOAVIDA_00002076 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002077 (digital organism phenotype 76)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002077 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002077 "digital organism phenotype 76"@en)
SubClassOf(obo:ONTOAVIDA_00002077 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002078 (digital organism phenotype 77)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002078 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002078 "digital organism phenotype 77"@en)
SubClassOf(obo:ONTOAVIDA_00002078 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002079 (digital organism phenotype 78)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002079 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002079 "digital organism phenotype 78"@en)
SubClassOf(obo:ONTOAVIDA_00002079 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002080 (digital organism phenotype 79)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002080 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002080 "digital organism phenotype 79"@en)
SubClassOf(obo:ONTOAVIDA_00002080 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002081 (digital organism phenotype 80)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002081 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002081 "digital organism phenotype 80"@en)
SubClassOf(obo:ONTOAVIDA_00002081 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002082 (digital organism phenotype 81)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002082 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002082 "digital organism phenotype 81"@en)
SubClassOf(obo:ONTOAVIDA_00002082 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002083 (digital organism phenotype 82)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002083 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002083 "digital organism phenotype 82"@en)
SubClassOf(obo:ONTOAVIDA_00002083 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002084 (digital organism phenotype 83)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002084 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002084 "digital organism phenotype 83"@en)
SubClassOf(obo:ONTOAVIDA_00002084 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002085 (digital organism phenotype 84)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002085 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002085 "digital organism phenotype 84"@en)
SubClassOf(obo:ONTOAVIDA_00002085 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002086 (digital organism phenotype 85)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002086 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002086 "digital organism phenotype 85"@en)
SubClassOf(obo:ONTOAVIDA_00002086 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002087 (digital organism phenotype 86)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002087 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002087 "digital organism phenotype 86"@en)
SubClassOf(obo:ONTOAVIDA_00002087 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002088 (digital organism phenotype 87)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002088 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002088 "digital organism phenotype 87"@en)
SubClassOf(obo:ONTOAVIDA_00002088 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002089 (digital organism phenotype 88)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002089 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002089 "digital organism phenotype 88"@en)
SubClassOf(obo:ONTOAVIDA_00002089 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002090 (digital organism phenotype 89)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002090 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002090 "digital organism phenotype 89"@en)
SubClassOf(obo:ONTOAVIDA_00002090 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002091 (digital organism phenotype 90)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002091 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002091 "digital organism phenotype 90"@en)
SubClassOf(obo:ONTOAVIDA_00002091 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002092 (digital organism phenotype 91)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002092 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002092 "digital organism phenotype 91"@en)
SubClassOf(obo:ONTOAVIDA_00002092 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002093 (digital organism phenotype 92)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002093 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002093 "digital organism phenotype 92"@en)
SubClassOf(obo:ONTOAVIDA_00002093 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002094 (digital organism phenotype 93)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002094 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002094 "digital organism phenotype 93"@en)
SubClassOf(obo:ONTOAVIDA_00002094 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002095 (digital organism phenotype 94)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002095 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002095 "digital organism phenotype 94"@en)
SubClassOf(obo:ONTOAVIDA_00002095 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002096 (digital organism phenotype 95)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002096 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002096 "digital organism phenotype 95"@en)
SubClassOf(obo:ONTOAVIDA_00002096 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002097 (digital organism phenotype 96)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002097 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002097 "digital organism phenotype 96"@en)
SubClassOf(obo:ONTOAVIDA_00002097 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002098 (digital organism phenotype 97)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002098 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002098 "digital organism phenotype 97"@en)
SubClassOf(obo:ONTOAVIDA_00002098 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002099 (digital organism phenotype 98)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002099 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002099 "digital organism phenotype 98"@en)
SubClassOf(obo:ONTOAVIDA_00002099 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002100 (digital organism phenotype 99)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002100 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002100 "digital organism phenotype 99"@en)
SubClassOf(obo:ONTOAVIDA_00002100 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002101 (digital organism phenotype 100)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002101 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002101 "digital organism phenotype 100"@en)
SubClassOf(obo:ONTOAVIDA_00002101 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002102 (digital organism phenotype 101)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002102 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002102 "digital organism phenotype 101"@en)
SubClassOf(obo:ONTOAVIDA_00002102 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002103 (digital organism phenotype 102)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002103 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002103 "digital organism phenotype 102"@en)
SubClassOf(obo:ONTOAVIDA_00002103 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002104 (digital organism phenotype 103)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002104 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002104 "digital organism phenotype 103"@en)
SubClassOf(obo:ONTOAVIDA_00002104 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002105 (digital organism phenotype 104)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002105 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002105 "digital organism phenotype 104"@en)
SubClassOf(obo:ONTOAVIDA_00002105 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002106 (digital organism phenotype 105)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002106 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002106 "digital organism phenotype 105"@en)
SubClassOf(obo:ONTOAVIDA_00002106 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002107 (digital organism phenotype 106)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002107 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002107 "digital organism phenotype 106"@en)
SubClassOf(obo:ONTOAVIDA_00002107 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002108 (digital organism phenotype 107)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002108 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002108 "digital organism phenotype 107"@en)
SubClassOf(obo:ONTOAVIDA_00002108 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002109 (digital organism phenotype 108)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002109 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002109 "digital organism phenotype 108"@en)
SubClassOf(obo:ONTOAVIDA_00002109 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002110 (digital organism phenotype 109)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002110 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002110 "digital organism phenotype 109"@en)
SubClassOf(obo:ONTOAVIDA_00002110 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002111 (digital organism phenotype 110)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002111 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002111 "digital organism phenotype 110"@en)
SubClassOf(obo:ONTOAVIDA_00002111 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002112 (digital organism phenotype 111)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002112 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002112 "digital organism phenotype 111"@en)
SubClassOf(obo:ONTOAVIDA_00002112 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002113 (digital organism phenotype 112)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002113 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002113 "digital organism phenotype 112"@en)
SubClassOf(obo:ONTOAVIDA_00002113 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002114 (digital organism phenotype 113)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002114 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002114 "digital organism phenotype 113"@en)
SubClassOf(obo:ONTOAVIDA_00002114 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002115 (digital organism phenotype 114)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002115 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002115 "digital organism phenotype 114"@en)
SubClassOf(obo:ONTOAVIDA_00002115 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002116 (digital organism phenotype 115)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002116 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002116 "digital organism phenotype 115"@en)
SubClassOf(obo:ONTOAVIDA_00002116 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002117 (digital organism phenotype 116)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002117 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002117 "digital organism phenotype 116"@en)
SubClassOf(obo:ONTOAVIDA_00002117 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002118 (digital organism phenotype 117)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002118 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002118 "digital organism phenotype 117"@en)
SubClassOf(obo:ONTOAVIDA_00002118 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002119 (digital organism phenotype 118)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002119 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002119 "digital organism phenotype 118"@en)
SubClassOf(obo:ONTOAVIDA_00002119 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002120 (digital organism phenotype 119)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002120 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002120 "digital organism phenotype 119"@en)
SubClassOf(obo:ONTOAVIDA_00002120 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002121 (digital organism phenotype 120)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002121 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002121 "digital organism phenotype 120"@en)
SubClassOf(obo:ONTOAVIDA_00002121 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002122 (digital organism phenotype 121)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002122 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002122 "digital organism phenotype 121"@en)
SubClassOf(obo:ONTOAVIDA_00002122 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002123 (digital organism phenotype 122)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002123 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002123 "digital organism phenotype 122"@en)
SubClassOf(obo:ONTOAVIDA_00002123 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002124 (digital organism phenotype 123)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002124 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002124 "digital organism phenotype 123"@en)
SubClassOf(obo:ONTOAVIDA_00002124 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002125 (digital organism phenotype 124)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002125 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002125 "digital organism phenotype 124"@en)
SubClassOf(obo:ONTOAVIDA_00002125 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002126 (digital organism phenotype 125)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002126 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002126 "digital organism phenotype 125"@en)
SubClassOf(obo:ONTOAVIDA_00002126 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002127 (digital organism phenotype 126)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002127 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002127 "digital organism phenotype 126"@en)
SubClassOf(obo:ONTOAVIDA_00002127 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002128 (digital organism phenotype 127)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002128 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or', 'and-not' and 'not-or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002128 "digital organism phenotype 127"@en)
SubClassOf(obo:ONTOAVIDA_00002128 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002129 (digital organism phenotype 128)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002129 "The digital phenotype of the logic9 environment that a digital organism computing the logic operation 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002129 "digital organism phenotype 128"@en)
SubClassOf(obo:ONTOAVIDA_00002129 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002130 (digital organism phenotype 129)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002130 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002130 "digital organism phenotype 129"@en)
SubClassOf(obo:ONTOAVIDA_00002130 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002131 (digital organism phenotype 130)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002131 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002131 "digital organism phenotype 130"@en)
SubClassOf(obo:ONTOAVIDA_00002131 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002132 (digital organism phenotype 131)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002132 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002132 "digital organism phenotype 131"@en)
SubClassOf(obo:ONTOAVIDA_00002132 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002133 (digital organism phenotype 132)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002133 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002133 "digital organism phenotype 132"@en)
SubClassOf(obo:ONTOAVIDA_00002133 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002134 (digital organism phenotype 133)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002134 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002134 "digital organism phenotype 133"@en)
SubClassOf(obo:ONTOAVIDA_00002134 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002135 (digital organism phenotype 134)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002135 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002135 "digital organism phenotype 134"@en)
SubClassOf(obo:ONTOAVIDA_00002135 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002136 (digital organism phenotype 135)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002136 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002136 "digital organism phenotype 135"@en)
SubClassOf(obo:ONTOAVIDA_00002136 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002137 (digital organism phenotype 136)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002137 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002137 "digital organism phenotype 136"@en)
SubClassOf(obo:ONTOAVIDA_00002137 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002138 (digital organism phenotype 137)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002138 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002138 "digital organism phenotype 137"@en)
SubClassOf(obo:ONTOAVIDA_00002138 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002139 (digital organism phenotype 138)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002139 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002139 "digital organism phenotype 138"@en)
SubClassOf(obo:ONTOAVIDA_00002139 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002140 (digital organism phenotype 139)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002140 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002140 "digital organism phenotype 139"@en)
SubClassOf(obo:ONTOAVIDA_00002140 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002141 (digital organism phenotype 140)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002141 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002141 "digital organism phenotype 140"@en)
SubClassOf(obo:ONTOAVIDA_00002141 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002142 (digital organism phenotype 141)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002142 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002142 "digital organism phenotype 141"@en)
SubClassOf(obo:ONTOAVIDA_00002142 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002143 (digital organism phenotype 142)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002143 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002143 "digital organism phenotype 142"@en)
SubClassOf(obo:ONTOAVIDA_00002143 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002144 (digital organism phenotype 143)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002144 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002144 "digital organism phenotype 143"@en)
SubClassOf(obo:ONTOAVIDA_00002144 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002145 (digital organism phenotype 144)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002145 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002145 "digital organism phenotype 144"@en)
SubClassOf(obo:ONTOAVIDA_00002145 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002146 (digital organism phenotype 145)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002146 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002146 "digital organism phenotype 145"@en)
SubClassOf(obo:ONTOAVIDA_00002146 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002147 (digital organism phenotype 146)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002147 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002147 "digital organism phenotype 146"@en)
SubClassOf(obo:ONTOAVIDA_00002147 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002148 (digital organism phenotype 147)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002148 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002148 "digital organism phenotype 147"@en)
SubClassOf(obo:ONTOAVIDA_00002148 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002149 (digital organism phenotype 148)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002149 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002149 "digital organism phenotype 148"@en)
SubClassOf(obo:ONTOAVIDA_00002149 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002150 (digital organism phenotype 149)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002150 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002150 "digital organism phenotype 149"@en)
SubClassOf(obo:ONTOAVIDA_00002150 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002151 (digital organism phenotype 150)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002151 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002151 "digital organism phenotype 150"@en)
SubClassOf(obo:ONTOAVIDA_00002151 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002152 (digital organism phenotype 151)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002152 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002152 "digital organism phenotype 151"@en)
SubClassOf(obo:ONTOAVIDA_00002152 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002153 (digital organism phenotype 152)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002153 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002153 "digital organism phenotype 152"@en)
SubClassOf(obo:ONTOAVIDA_00002153 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002154 (digital organism phenotype 153)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002154 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002154 "digital organism phenotype 153"@en)
SubClassOf(obo:ONTOAVIDA_00002154 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002155 (digital organism phenotype 154)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002155 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002155 "digital organism phenotype 154"@en)
SubClassOf(obo:ONTOAVIDA_00002155 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002156 (digital organism phenotype 155)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002156 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002156 "digital organism phenotype 155"@en)
SubClassOf(obo:ONTOAVIDA_00002156 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002157 (digital organism phenotype 156)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002157 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002157 "digital organism phenotype 156"@en)
SubClassOf(obo:ONTOAVIDA_00002157 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002158 (digital organism phenotype 157)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002158 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002158 "digital organism phenotype 157"@en)
SubClassOf(obo:ONTOAVIDA_00002158 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002159 (digital organism phenotype 158)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002159 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002159 "digital organism phenotype 158"@en)
SubClassOf(obo:ONTOAVIDA_00002159 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002160 (digital organism phenotype 159)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002160 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002160 "digital organism phenotype 159"@en)
SubClassOf(obo:ONTOAVIDA_00002160 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002161 (digital organism phenotype 160)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002161 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002161 "digital organism phenotype 160"@en)
SubClassOf(obo:ONTOAVIDA_00002161 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002162 (digital organism phenotype 161)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002162 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002162 "digital organism phenotype 161"@en)
SubClassOf(obo:ONTOAVIDA_00002162 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002163 (digital organism phenotype 162)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002163 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002163 "digital organism phenotype 162"@en)
SubClassOf(obo:ONTOAVIDA_00002163 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002164 (digital organism phenotype 163)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002164 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002164 "digital organism phenotype 163"@en)
SubClassOf(obo:ONTOAVIDA_00002164 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002165 (digital organism phenotype 164)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002165 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002165 "digital organism phenotype 164"@en)
SubClassOf(obo:ONTOAVIDA_00002165 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002166 (digital organism phenotype 165)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002166 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002166 "digital organism phenotype 165"@en)
SubClassOf(obo:ONTOAVIDA_00002166 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002167 (digital organism phenotype 166)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002167 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002167 "digital organism phenotype 166"@en)
SubClassOf(obo:ONTOAVIDA_00002167 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002168 (digital organism phenotype 167)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002168 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002168 "digital organism phenotype 167"@en)
SubClassOf(obo:ONTOAVIDA_00002168 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002169 (digital organism phenotype 168)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002169 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002169 "digital organism phenotype 168"@en)
SubClassOf(obo:ONTOAVIDA_00002169 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002170 (digital organism phenotype 169)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002170 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002170 "digital organism phenotype 169"@en)
SubClassOf(obo:ONTOAVIDA_00002170 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002171 (digital organism phenotype 170)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002171 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002171 "digital organism phenotype 170"@en)
SubClassOf(obo:ONTOAVIDA_00002171 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002172 (digital organism phenotype 171)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002172 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002172 "digital organism phenotype 171"@en)
SubClassOf(obo:ONTOAVIDA_00002172 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002173 (digital organism phenotype 172)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002173 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002173 "digital organism phenotype 172"@en)
SubClassOf(obo:ONTOAVIDA_00002173 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002174 (digital organism phenotype 173)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002174 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002174 "digital organism phenotype 173"@en)
SubClassOf(obo:ONTOAVIDA_00002174 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002175 (digital organism phenotype 174)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002175 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002175 "digital organism phenotype 174"@en)
SubClassOf(obo:ONTOAVIDA_00002175 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002176 (digital organism phenotype 175)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002176 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002176 "digital organism phenotype 175"@en)
SubClassOf(obo:ONTOAVIDA_00002176 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002177 (digital organism phenotype 176)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002177 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002177 "digital organism phenotype 176"@en)
SubClassOf(obo:ONTOAVIDA_00002177 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002178 (digital organism phenotype 177)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002178 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002178 "digital organism phenotype 177"@en)
SubClassOf(obo:ONTOAVIDA_00002178 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002179 (digital organism phenotype 178)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002179 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002179 "digital organism phenotype 178"@en)
SubClassOf(obo:ONTOAVIDA_00002179 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002180 (digital organism phenotype 179)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002180 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002180 "digital organism phenotype 179"@en)
SubClassOf(obo:ONTOAVIDA_00002180 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002181 (digital organism phenotype 180)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002181 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002181 "digital organism phenotype 180"@en)
SubClassOf(obo:ONTOAVIDA_00002181 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002182 (digital organism phenotype 181)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002182 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002182 "digital organism phenotype 181"@en)
SubClassOf(obo:ONTOAVIDA_00002182 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002183 (digital organism phenotype 182)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002183 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002183 "digital organism phenotype 182"@en)
SubClassOf(obo:ONTOAVIDA_00002183 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002184 (digital organism phenotype 183)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002184 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002184 "digital organism phenotype 183"@en)
SubClassOf(obo:ONTOAVIDA_00002184 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002185 (digital organism phenotype 184)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002185 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002185 "digital organism phenotype 184"@en)
SubClassOf(obo:ONTOAVIDA_00002185 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002186 (digital organism phenotype 185)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002186 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002186 "digital organism phenotype 185"@en)
SubClassOf(obo:ONTOAVIDA_00002186 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002187 (digital organism phenotype 186)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002187 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002187 "digital organism phenotype 186"@en)
SubClassOf(obo:ONTOAVIDA_00002187 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002188 (digital organism phenotype 187)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002188 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002188 "digital organism phenotype 187"@en)
SubClassOf(obo:ONTOAVIDA_00002188 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002189 (digital organism phenotype 188)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002189 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002189 "digital organism phenotype 188"@en)
SubClassOf(obo:ONTOAVIDA_00002189 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002190 (digital organism phenotype 189)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002190 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002190 "digital organism phenotype 189"@en)
SubClassOf(obo:ONTOAVIDA_00002190 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002191 (digital organism phenotype 190)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002191 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002191 "digital organism phenotype 190"@en)
SubClassOf(obo:ONTOAVIDA_00002191 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002192 (digital organism phenotype 191)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002192 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or', 'and-not' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002192 "digital organism phenotype 191"@en)
SubClassOf(obo:ONTOAVIDA_00002192 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002193 (digital organism phenotype 192)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002193 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002193 "digital organism phenotype 192"@en)
SubClassOf(obo:ONTOAVIDA_00002193 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002194 (digital organism phenotype 193)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002194 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002194 "digital organism phenotype 193"@en)
SubClassOf(obo:ONTOAVIDA_00002194 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002195 (digital organism phenotype 194)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002195 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002195 "digital organism phenotype 194"@en)
SubClassOf(obo:ONTOAVIDA_00002195 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002196 (digital organism phenotype 195)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002196 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002196 "digital organism phenotype 195"@en)
SubClassOf(obo:ONTOAVIDA_00002196 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002197 (digital organism phenotype 196)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002197 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002197 "digital organism phenotype 196"@en)
SubClassOf(obo:ONTOAVIDA_00002197 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002198 (digital organism phenotype 197)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002198 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002198 "digital organism phenotype 197"@en)
SubClassOf(obo:ONTOAVIDA_00002198 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002199 (digital organism phenotype 198)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002199 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002199 "digital organism phenotype 198"@en)
SubClassOf(obo:ONTOAVIDA_00002199 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002200 (digital organism phenotype 199)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002200 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002200 "digital organism phenotype 199"@en)
SubClassOf(obo:ONTOAVIDA_00002200 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002201 (digital organism phenotype 200)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002201 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002201 "digital organism phenotype 200"@en)
SubClassOf(obo:ONTOAVIDA_00002201 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002202 (digital organism phenotype 201)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002202 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002202 "digital organism phenotype 201"@en)
SubClassOf(obo:ONTOAVIDA_00002202 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002203 (digital organism phenotype 202)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002203 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002203 "digital organism phenotype 202"@en)
SubClassOf(obo:ONTOAVIDA_00002203 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002204 (digital organism phenotype 203)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002204 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002204 "digital organism phenotype 203"@en)
SubClassOf(obo:ONTOAVIDA_00002204 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002205 (digital organism phenotype 204)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002205 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002205 "digital organism phenotype 204"@en)
SubClassOf(obo:ONTOAVIDA_00002205 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002206 (digital organism phenotype 205)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002206 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002206 "digital organism phenotype 205"@en)
SubClassOf(obo:ONTOAVIDA_00002206 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002207 (digital organism phenotype 206)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002207 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002207 "digital organism phenotype 206"@en)
SubClassOf(obo:ONTOAVIDA_00002207 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002208 (digital organism phenotype 207)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002208 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002208 "digital organism phenotype 207"@en)
SubClassOf(obo:ONTOAVIDA_00002208 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002209 (digital organism phenotype 208)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002209 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002209 "digital organism phenotype 208"@en)
SubClassOf(obo:ONTOAVIDA_00002209 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002210 (digital organism phenotype 209)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002210 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002210 "digital organism phenotype 209"@en)
SubClassOf(obo:ONTOAVIDA_00002210 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002211 (digital organism phenotype 210)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002211 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002211 "digital organism phenotype 210"@en)
SubClassOf(obo:ONTOAVIDA_00002211 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002212 (digital organism phenotype 211)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002212 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002212 "digital organism phenotype 211"@en)
SubClassOf(obo:ONTOAVIDA_00002212 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002213 (digital organism phenotype 212)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002213 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002213 "digital organism phenotype 212"@en)
SubClassOf(obo:ONTOAVIDA_00002213 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002214 (digital organism phenotype 213)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002214 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002214 "digital organism phenotype 213"@en)
SubClassOf(obo:ONTOAVIDA_00002214 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002215 (digital organism phenotype 214)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002215 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002215 "digital organism phenotype 214"@en)
SubClassOf(obo:ONTOAVIDA_00002215 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002216 (digital organism phenotype 215)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002216 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002216 "digital organism phenotype 215"@en)
SubClassOf(obo:ONTOAVIDA_00002216 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002217 (digital organism phenotype 216)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002217 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002217 "digital organism phenotype 216"@en)
SubClassOf(obo:ONTOAVIDA_00002217 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002218 (digital organism phenotype 217)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002218 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002218 "digital organism phenotype 217"@en)
SubClassOf(obo:ONTOAVIDA_00002218 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002219 (digital organism phenotype 218)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002219 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002219 "digital organism phenotype 218"@en)
SubClassOf(obo:ONTOAVIDA_00002219 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002220 (digital organism phenotype 219)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002220 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002220 "digital organism phenotype 219"@en)
SubClassOf(obo:ONTOAVIDA_00002220 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002221 (digital organism phenotype 220)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002221 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002221 "digital organism phenotype 220"@en)
SubClassOf(obo:ONTOAVIDA_00002221 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002222 (digital organism phenotype 221)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002222 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002222 "digital organism phenotype 221"@en)
SubClassOf(obo:ONTOAVIDA_00002222 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002223 (digital organism phenotype 222)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002223 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002223 "digital organism phenotype 222"@en)
SubClassOf(obo:ONTOAVIDA_00002223 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002224 (digital organism phenotype 223)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002224 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002224 "digital organism phenotype 223"@en)
SubClassOf(obo:ONTOAVIDA_00002224 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002225 (digital organism phenotype 224)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002225 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002225 "digital organism phenotype 224"@en)
SubClassOf(obo:ONTOAVIDA_00002225 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002226 (digital organism phenotype 225)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002226 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002226 "digital organism phenotype 225"@en)
SubClassOf(obo:ONTOAVIDA_00002226 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002227 (digital organism phenotype 226)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002227 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002227 "digital organism phenotype 226"@en)
SubClassOf(obo:ONTOAVIDA_00002227 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002228 (digital organism phenotype 227)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002228 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002228 "digital organism phenotype 227"@en)
SubClassOf(obo:ONTOAVIDA_00002228 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002229 (digital organism phenotype 228)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002229 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002229 "digital organism phenotype 228"@en)
SubClassOf(obo:ONTOAVIDA_00002229 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002230 (digital organism phenotype 229)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002230 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002230 "digital organism phenotype 229"@en)
SubClassOf(obo:ONTOAVIDA_00002230 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002231 (digital organism phenotype 230)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002231 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002231 "digital organism phenotype 230"@en)
SubClassOf(obo:ONTOAVIDA_00002231 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002232 (digital organism phenotype 231)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002232 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002232 "digital organism phenotype 231"@en)
SubClassOf(obo:ONTOAVIDA_00002232 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002233 (digital organism phenotype 232)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002233 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002233 "digital organism phenotype 232"@en)
SubClassOf(obo:ONTOAVIDA_00002233 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002234 (digital organism phenotype 233)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002234 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002234 "digital organism phenotype 233"@en)
SubClassOf(obo:ONTOAVIDA_00002234 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002235 (digital organism phenotype 234)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002235 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002235 "digital organism phenotype 234"@en)
SubClassOf(obo:ONTOAVIDA_00002235 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002236 (digital organism phenotype 235)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002236 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002236 "digital organism phenotype 235"@en)
SubClassOf(obo:ONTOAVIDA_00002236 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002237 (digital organism phenotype 236)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002237 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002237 "digital organism phenotype 236"@en)
SubClassOf(obo:ONTOAVIDA_00002237 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002238 (digital organism phenotype 237)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002238 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002238 "digital organism phenotype 237"@en)
SubClassOf(obo:ONTOAVIDA_00002238 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002239 (digital organism phenotype 238)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002239 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002239 "digital organism phenotype 238"@en)
SubClassOf(obo:ONTOAVIDA_00002239 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002240 (digital organism phenotype 239)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002240 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002240 "digital organism phenotype 239"@en)
SubClassOf(obo:ONTOAVIDA_00002240 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002241 (digital organism phenotype 240)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002241 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002241 "digital organism phenotype 240"@en)
SubClassOf(obo:ONTOAVIDA_00002241 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002242 (digital organism phenotype 241)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002242 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002242 "digital organism phenotype 241"@en)
SubClassOf(obo:ONTOAVIDA_00002242 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002243 (digital organism phenotype 242)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002243 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002243 "digital organism phenotype 242"@en)
SubClassOf(obo:ONTOAVIDA_00002243 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002244 (digital organism phenotype 243)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002244 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002244 "digital organism phenotype 243"@en)
SubClassOf(obo:ONTOAVIDA_00002244 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002245 (digital organism phenotype 244)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002245 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002245 "digital organism phenotype 244"@en)
SubClassOf(obo:ONTOAVIDA_00002245 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002246 (digital organism phenotype 245)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002246 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002246 "digital organism phenotype 245"@en)
SubClassOf(obo:ONTOAVIDA_00002246 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002247 (digital organism phenotype 246)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002247 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002247 "digital organism phenotype 246"@en)
SubClassOf(obo:ONTOAVIDA_00002247 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002248 (digital organism phenotype 247)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002248 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002248 "digital organism phenotype 247"@en)
SubClassOf(obo:ONTOAVIDA_00002248 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002249 (digital organism phenotype 248)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002249 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002249 "digital organism phenotype 248"@en)
SubClassOf(obo:ONTOAVIDA_00002249 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002250 (digital organism phenotype 249)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002250 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002250 "digital organism phenotype 249"@en)
SubClassOf(obo:ONTOAVIDA_00002250 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002251 (digital organism phenotype 250)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002251 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002251 "digital organism phenotype 250"@en)
SubClassOf(obo:ONTOAVIDA_00002251 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002252 (digital organism phenotype 251)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002252 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002252 "digital organism phenotype 251"@en)
SubClassOf(obo:ONTOAVIDA_00002252 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002253 (digital organism phenotype 252)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002253 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002253 "digital organism phenotype 252"@en)
SubClassOf(obo:ONTOAVIDA_00002253 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002254 (digital organism phenotype 253)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002254 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002254 "digital organism phenotype 253"@en)
SubClassOf(obo:ONTOAVIDA_00002254 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002255 (digital organism phenotype 254)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002255 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002255 "digital organism phenotype 254"@en)
SubClassOf(obo:ONTOAVIDA_00002255 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002256 (digital organism phenotype 255)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002256 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or', 'and-not', 'not-or' and 'exclusive or' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002256 "digital organism phenotype 255"@en)
SubClassOf(obo:ONTOAVIDA_00002256 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002257 (digital organism phenotype 256)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002257 "The digital phenotype of the logic9 environment that a digital organism computing the logic operation 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002257 "digital organism phenotype 256"@en)
SubClassOf(obo:ONTOAVIDA_00002257 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002258 (digital organism phenotype 257)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002258 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002258 "digital organism phenotype 257"@en)
SubClassOf(obo:ONTOAVIDA_00002258 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002259 (digital organism phenotype 258)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002259 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002259 "digital organism phenotype 258"@en)
SubClassOf(obo:ONTOAVIDA_00002259 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002260 (digital organism phenotype 259)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002260 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002260 "digital organism phenotype 259"@en)
SubClassOf(obo:ONTOAVIDA_00002260 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002261 (digital organism phenotype 260)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002261 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002261 "digital organism phenotype 260"@en)
SubClassOf(obo:ONTOAVIDA_00002261 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002262 (digital organism phenotype 261)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002262 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002262 "digital organism phenotype 261"@en)
SubClassOf(obo:ONTOAVIDA_00002262 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002263 (digital organism phenotype 262)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002263 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002263 "digital organism phenotype 262"@en)
SubClassOf(obo:ONTOAVIDA_00002263 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002264 (digital organism phenotype 263)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002264 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002264 "digital organism phenotype 263"@en)
SubClassOf(obo:ONTOAVIDA_00002264 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002265 (digital organism phenotype 264)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002265 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002265 "digital organism phenotype 264"@en)
SubClassOf(obo:ONTOAVIDA_00002265 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002266 (digital organism phenotype 265)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002266 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002266 "digital organism phenotype 265"@en)
SubClassOf(obo:ONTOAVIDA_00002266 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002267 (digital organism phenotype 266)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002267 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002267 "digital organism phenotype 266"@en)
SubClassOf(obo:ONTOAVIDA_00002267 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002268 (digital organism phenotype 267)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002268 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002268 "digital organism phenotype 267"@en)
SubClassOf(obo:ONTOAVIDA_00002268 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002269 (digital organism phenotype 268)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002269 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002269 "digital organism phenotype 268"@en)
SubClassOf(obo:ONTOAVIDA_00002269 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002270 (digital organism phenotype 269)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002270 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002270 "digital organism phenotype 269"@en)
SubClassOf(obo:ONTOAVIDA_00002270 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002271 (digital organism phenotype 270)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002271 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002271 "digital organism phenotype 270"@en)
SubClassOf(obo:ONTOAVIDA_00002271 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002272 (digital organism phenotype 271)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002272 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002272 "digital organism phenotype 271"@en)
SubClassOf(obo:ONTOAVIDA_00002272 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002273 (digital organism phenotype 272)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002273 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002273 "digital organism phenotype 272"@en)
SubClassOf(obo:ONTOAVIDA_00002273 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002274 (digital organism phenotype 273)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002274 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002274 "digital organism phenotype 273"@en)
SubClassOf(obo:ONTOAVIDA_00002274 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002275 (digital organism phenotype 274)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002275 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002275 "digital organism phenotype 274"@en)
SubClassOf(obo:ONTOAVIDA_00002275 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002276 (digital organism phenotype 275)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002276 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002276 "digital organism phenotype 275"@en)
SubClassOf(obo:ONTOAVIDA_00002276 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002277 (digital organism phenotype 276)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002277 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002277 "digital organism phenotype 276"@en)
SubClassOf(obo:ONTOAVIDA_00002277 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002278 (digital organism phenotype 277)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002278 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002278 "digital organism phenotype 277"@en)
SubClassOf(obo:ONTOAVIDA_00002278 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002279 (digital organism phenotype 278)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002279 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002279 "digital organism phenotype 278"@en)
SubClassOf(obo:ONTOAVIDA_00002279 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002280 (digital organism phenotype 279)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002280 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002280 "digital organism phenotype 279"@en)
SubClassOf(obo:ONTOAVIDA_00002280 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002281 (digital organism phenotype 280)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002281 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002281 "digital organism phenotype 280"@en)
SubClassOf(obo:ONTOAVIDA_00002281 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002282 (digital organism phenotype 281)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002282 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002282 "digital organism phenotype 281"@en)
SubClassOf(obo:ONTOAVIDA_00002282 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002283 (digital organism phenotype 282)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002283 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002283 "digital organism phenotype 282"@en)
SubClassOf(obo:ONTOAVIDA_00002283 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002284 (digital organism phenotype 283)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002284 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002284 "digital organism phenotype 283"@en)
SubClassOf(obo:ONTOAVIDA_00002284 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002285 (digital organism phenotype 284)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002285 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002285 "digital organism phenotype 284"@en)
SubClassOf(obo:ONTOAVIDA_00002285 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002286 (digital organism phenotype 285)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002286 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002286 "digital organism phenotype 285"@en)
SubClassOf(obo:ONTOAVIDA_00002286 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002287 (digital organism phenotype 286)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002287 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002287 "digital organism phenotype 286"@en)
SubClassOf(obo:ONTOAVIDA_00002287 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002288 (digital organism phenotype 287)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002288 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002288 "digital organism phenotype 287"@en)
SubClassOf(obo:ONTOAVIDA_00002288 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002289 (digital organism phenotype 288)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002289 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002289 "digital organism phenotype 288"@en)
SubClassOf(obo:ONTOAVIDA_00002289 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002290 (digital organism phenotype 289)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002290 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002290 "digital organism phenotype 289"@en)
SubClassOf(obo:ONTOAVIDA_00002290 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002291 (digital organism phenotype 290)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002291 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002291 "digital organism phenotype 290"@en)
SubClassOf(obo:ONTOAVIDA_00002291 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002292 (digital organism phenotype 291)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002292 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002292 "digital organism phenotype 291"@en)
SubClassOf(obo:ONTOAVIDA_00002292 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002293 (digital organism phenotype 292)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002293 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002293 "digital organism phenotype 292"@en)
SubClassOf(obo:ONTOAVIDA_00002293 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002294 (digital organism phenotype 293)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002294 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002294 "digital organism phenotype 293"@en)
SubClassOf(obo:ONTOAVIDA_00002294 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002295 (digital organism phenotype 294)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002295 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002295 "digital organism phenotype 294"@en)
SubClassOf(obo:ONTOAVIDA_00002295 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002296 (digital organism phenotype 295)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002296 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002296 "digital organism phenotype 295"@en)
SubClassOf(obo:ONTOAVIDA_00002296 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002297 (digital organism phenotype 296)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002297 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002297 "digital organism phenotype 296"@en)
SubClassOf(obo:ONTOAVIDA_00002297 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002298 (digital organism phenotype 297)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002298 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002298 "digital organism phenotype 297"@en)
SubClassOf(obo:ONTOAVIDA_00002298 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002299 (digital organism phenotype 298)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002299 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002299 "digital organism phenotype 298"@en)
SubClassOf(obo:ONTOAVIDA_00002299 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002300 (digital organism phenotype 299)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002300 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002300 "digital organism phenotype 299"@en)
SubClassOf(obo:ONTOAVIDA_00002300 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002301 (digital organism phenotype 300)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002301 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002301 "digital organism phenotype 300"@en)
SubClassOf(obo:ONTOAVIDA_00002301 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002302 (digital organism phenotype 301)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002302 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002302 "digital organism phenotype 301"@en)
SubClassOf(obo:ONTOAVIDA_00002302 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002303 (digital organism phenotype 302)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002303 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002303 "digital organism phenotype 302"@en)
SubClassOf(obo:ONTOAVIDA_00002303 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002304 (digital organism phenotype 303)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002304 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002304 "digital organism phenotype 303"@en)
SubClassOf(obo:ONTOAVIDA_00002304 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002305 (digital organism phenotype 304)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002305 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002305 "digital organism phenotype 304"@en)
SubClassOf(obo:ONTOAVIDA_00002305 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002306 (digital organism phenotype 305)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002306 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002306 "digital organism phenotype 305"@en)
SubClassOf(obo:ONTOAVIDA_00002306 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002307 (digital organism phenotype 306)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002307 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002307 "digital organism phenotype 306"@en)
SubClassOf(obo:ONTOAVIDA_00002307 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002308 (digital organism phenotype 307)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002308 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002308 "digital organism phenotype 307"@en)
SubClassOf(obo:ONTOAVIDA_00002308 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002309 (digital organism phenotype 308)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002309 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002309 "digital organism phenotype 308"@en)
SubClassOf(obo:ONTOAVIDA_00002309 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002310 (digital organism phenotype 309)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002310 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002310 "digital organism phenotype 309"@en)
SubClassOf(obo:ONTOAVIDA_00002310 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002311 (digital organism phenotype 310)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002311 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002311 "digital organism phenotype 310"@en)
SubClassOf(obo:ONTOAVIDA_00002311 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002312 (digital organism phenotype 311)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002312 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002312 "digital organism phenotype 311"@en)
SubClassOf(obo:ONTOAVIDA_00002312 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002313 (digital organism phenotype 312)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002313 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002313 "digital organism phenotype 312"@en)
SubClassOf(obo:ONTOAVIDA_00002313 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002314 (digital organism phenotype 313)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002314 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002314 "digital organism phenotype 313"@en)
SubClassOf(obo:ONTOAVIDA_00002314 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002315 (digital organism phenotype 314)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002315 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002315 "digital organism phenotype 314"@en)
SubClassOf(obo:ONTOAVIDA_00002315 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002316 (digital organism phenotype 315)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002316 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002316 "digital organism phenotype 315"@en)
SubClassOf(obo:ONTOAVIDA_00002316 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002317 (digital organism phenotype 316)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002317 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002317 "digital organism phenotype 316"@en)
SubClassOf(obo:ONTOAVIDA_00002317 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002318 (digital organism phenotype 317)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002318 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002318 "digital organism phenotype 317"@en)
SubClassOf(obo:ONTOAVIDA_00002318 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002319 (digital organism phenotype 318)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002319 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002319 "digital organism phenotype 318"@en)
SubClassOf(obo:ONTOAVIDA_00002319 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002320 (digital organism phenotype 319)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002320 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or', 'and-not' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002320 "digital organism phenotype 319"@en)
SubClassOf(obo:ONTOAVIDA_00002320 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002321 (digital organism phenotype 320)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002321 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002321 "digital organism phenotype 320"@en)
SubClassOf(obo:ONTOAVIDA_00002321 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002322 (digital organism phenotype 321)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002322 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002322 "digital organism phenotype 321"@en)
SubClassOf(obo:ONTOAVIDA_00002322 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002323 (digital organism phenotype 322)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002323 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002323 "digital organism phenotype 322"@en)
SubClassOf(obo:ONTOAVIDA_00002323 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002324 (digital organism phenotype 323)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002324 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002324 "digital organism phenotype 323"@en)
SubClassOf(obo:ONTOAVIDA_00002324 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002325 (digital organism phenotype 324)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002325 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002325 "digital organism phenotype 324"@en)
SubClassOf(obo:ONTOAVIDA_00002325 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002326 (digital organism phenotype 325)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002326 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002326 "digital organism phenotype 325"@en)
SubClassOf(obo:ONTOAVIDA_00002326 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002327 (digital organism phenotype 326)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002327 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002327 "digital organism phenotype 326"@en)
SubClassOf(obo:ONTOAVIDA_00002327 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002328 (digital organism phenotype 327)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002328 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002328 "digital organism phenotype 327"@en)
SubClassOf(obo:ONTOAVIDA_00002328 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002329 (digital organism phenotype 328)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002329 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002329 "digital organism phenotype 328"@en)
SubClassOf(obo:ONTOAVIDA_00002329 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002330 (digital organism phenotype 329)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002330 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002330 "digital organism phenotype 329"@en)
SubClassOf(obo:ONTOAVIDA_00002330 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002331 (digital organism phenotype 330)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002331 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002331 "digital organism phenotype 330"@en)
SubClassOf(obo:ONTOAVIDA_00002331 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002332 (digital organism phenotype 331)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002332 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002332 "digital organism phenotype 331"@en)
SubClassOf(obo:ONTOAVIDA_00002332 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002333 (digital organism phenotype 332)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002333 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002333 "digital organism phenotype 332"@en)
SubClassOf(obo:ONTOAVIDA_00002333 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002334 (digital organism phenotype 333)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002334 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002334 "digital organism phenotype 333"@en)
SubClassOf(obo:ONTOAVIDA_00002334 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002335 (digital organism phenotype 334)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002335 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002335 "digital organism phenotype 334"@en)
SubClassOf(obo:ONTOAVIDA_00002335 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002336 (digital organism phenotype 335)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002336 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002336 "digital organism phenotype 335"@en)
SubClassOf(obo:ONTOAVIDA_00002336 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002337 (digital organism phenotype 336)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002337 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002337 "digital organism phenotype 336"@en)
SubClassOf(obo:ONTOAVIDA_00002337 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002338 (digital organism phenotype 337)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002338 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002338 "digital organism phenotype 337"@en)
SubClassOf(obo:ONTOAVIDA_00002338 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002339 (digital organism phenotype 338)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002339 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002339 "digital organism phenotype 338"@en)
SubClassOf(obo:ONTOAVIDA_00002339 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002340 (digital organism phenotype 339)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002340 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002340 "digital organism phenotype 339"@en)
SubClassOf(obo:ONTOAVIDA_00002340 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002341 (digital organism phenotype 340)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002341 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002341 "digital organism phenotype 340"@en)
SubClassOf(obo:ONTOAVIDA_00002341 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002342 (digital organism phenotype 341)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002342 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002342 "digital organism phenotype 341"@en)
SubClassOf(obo:ONTOAVIDA_00002342 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002343 (digital organism phenotype 342)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002343 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002343 "digital organism phenotype 342"@en)
SubClassOf(obo:ONTOAVIDA_00002343 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002344 (digital organism phenotype 343)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002344 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002344 "digital organism phenotype 343"@en)
SubClassOf(obo:ONTOAVIDA_00002344 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002345 (digital organism phenotype 344)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002345 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002345 "digital organism phenotype 344"@en)
SubClassOf(obo:ONTOAVIDA_00002345 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002346 (digital organism phenotype 345)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002346 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002346 "digital organism phenotype 345"@en)
SubClassOf(obo:ONTOAVIDA_00002346 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002347 (digital organism phenotype 346)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002347 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002347 "digital organism phenotype 346"@en)
SubClassOf(obo:ONTOAVIDA_00002347 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002348 (digital organism phenotype 347)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002348 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002348 "digital organism phenotype 347"@en)
SubClassOf(obo:ONTOAVIDA_00002348 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002349 (digital organism phenotype 348)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002349 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002349 "digital organism phenotype 348"@en)
SubClassOf(obo:ONTOAVIDA_00002349 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002350 (digital organism phenotype 349)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002350 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002350 "digital organism phenotype 349"@en)
SubClassOf(obo:ONTOAVIDA_00002350 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002351 (digital organism phenotype 350)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002351 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002351 "digital organism phenotype 350"@en)
SubClassOf(obo:ONTOAVIDA_00002351 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002352 (digital organism phenotype 351)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002352 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002352 "digital organism phenotype 351"@en)
SubClassOf(obo:ONTOAVIDA_00002352 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002353 (digital organism phenotype 352)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002353 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002353 "digital organism phenotype 352"@en)
SubClassOf(obo:ONTOAVIDA_00002353 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002354 (digital organism phenotype 353)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002354 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002354 "digital organism phenotype 353"@en)
SubClassOf(obo:ONTOAVIDA_00002354 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002355 (digital organism phenotype 354)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002355 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002355 "digital organism phenotype 354"@en)
SubClassOf(obo:ONTOAVIDA_00002355 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002356 (digital organism phenotype 355)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002356 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002356 "digital organism phenotype 355"@en)
SubClassOf(obo:ONTOAVIDA_00002356 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002357 (digital organism phenotype 356)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002357 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002357 "digital organism phenotype 356"@en)
SubClassOf(obo:ONTOAVIDA_00002357 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002358 (digital organism phenotype 357)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002358 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002358 "digital organism phenotype 357"@en)
SubClassOf(obo:ONTOAVIDA_00002358 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002359 (digital organism phenotype 358)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002359 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002359 "digital organism phenotype 358"@en)
SubClassOf(obo:ONTOAVIDA_00002359 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002360 (digital organism phenotype 359)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002360 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002360 "digital organism phenotype 359"@en)
SubClassOf(obo:ONTOAVIDA_00002360 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002361 (digital organism phenotype 360)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002361 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002361 "digital organism phenotype 360"@en)
SubClassOf(obo:ONTOAVIDA_00002361 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002362 (digital organism phenotype 361)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002362 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002362 "digital organism phenotype 361"@en)
SubClassOf(obo:ONTOAVIDA_00002362 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002363 (digital organism phenotype 362)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002363 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002363 "digital organism phenotype 362"@en)
SubClassOf(obo:ONTOAVIDA_00002363 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002364 (digital organism phenotype 363)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002364 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002364 "digital organism phenotype 363"@en)
SubClassOf(obo:ONTOAVIDA_00002364 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002365 (digital organism phenotype 364)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002365 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002365 "digital organism phenotype 364"@en)
SubClassOf(obo:ONTOAVIDA_00002365 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002366 (digital organism phenotype 365)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002366 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002366 "digital organism phenotype 365"@en)
SubClassOf(obo:ONTOAVIDA_00002366 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002367 (digital organism phenotype 366)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002367 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002367 "digital organism phenotype 366"@en)
SubClassOf(obo:ONTOAVIDA_00002367 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002368 (digital organism phenotype 367)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002368 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002368 "digital organism phenotype 367"@en)
SubClassOf(obo:ONTOAVIDA_00002368 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002369 (digital organism phenotype 368)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002369 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002369 "digital organism phenotype 368"@en)
SubClassOf(obo:ONTOAVIDA_00002369 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002370 (digital organism phenotype 369)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002370 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002370 "digital organism phenotype 369"@en)
SubClassOf(obo:ONTOAVIDA_00002370 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002371 (digital organism phenotype 370)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002371 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002371 "digital organism phenotype 370"@en)
SubClassOf(obo:ONTOAVIDA_00002371 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002372 (digital organism phenotype 371)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002372 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002372 "digital organism phenotype 371"@en)
SubClassOf(obo:ONTOAVIDA_00002372 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002373 (digital organism phenotype 372)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002373 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002373 "digital organism phenotype 372"@en)
SubClassOf(obo:ONTOAVIDA_00002373 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002374 (digital organism phenotype 373)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002374 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002374 "digital organism phenotype 373"@en)
SubClassOf(obo:ONTOAVIDA_00002374 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002375 (digital organism phenotype 374)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002375 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002375 "digital organism phenotype 374"@en)
SubClassOf(obo:ONTOAVIDA_00002375 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002376 (digital organism phenotype 375)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002376 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002376 "digital organism phenotype 375"@en)
SubClassOf(obo:ONTOAVIDA_00002376 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002377 (digital organism phenotype 376)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002377 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002377 "digital organism phenotype 376"@en)
SubClassOf(obo:ONTOAVIDA_00002377 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002378 (digital organism phenotype 377)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002378 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002378 "digital organism phenotype 377"@en)
SubClassOf(obo:ONTOAVIDA_00002378 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002379 (digital organism phenotype 378)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002379 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002379 "digital organism phenotype 378"@en)
SubClassOf(obo:ONTOAVIDA_00002379 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002380 (digital organism phenotype 379)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002380 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002380 "digital organism phenotype 379"@en)
SubClassOf(obo:ONTOAVIDA_00002380 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002381 (digital organism phenotype 380)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002381 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002381 "digital organism phenotype 380"@en)
SubClassOf(obo:ONTOAVIDA_00002381 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002382 (digital organism phenotype 381)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002382 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002382 "digital organism phenotype 381"@en)
SubClassOf(obo:ONTOAVIDA_00002382 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002383 (digital organism phenotype 382)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002383 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002383 "digital organism phenotype 382"@en)
SubClassOf(obo:ONTOAVIDA_00002383 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002384 (digital organism phenotype 383)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002384 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or', 'and-not', 'not-or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002384 "digital organism phenotype 383"@en)
SubClassOf(obo:ONTOAVIDA_00002384 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002385 (digital organism phenotype 384)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002385 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002385 "digital organism phenotype 384"@en)
SubClassOf(obo:ONTOAVIDA_00002385 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002386 (digital organism phenotype 385)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002386 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002386 "digital organism phenotype 385"@en)
SubClassOf(obo:ONTOAVIDA_00002386 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002387 (digital organism phenotype 386)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002387 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002387 "digital organism phenotype 386"@en)
SubClassOf(obo:ONTOAVIDA_00002387 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002388 (digital organism phenotype 387)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002388 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002388 "digital organism phenotype 387"@en)
SubClassOf(obo:ONTOAVIDA_00002388 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002389 (digital organism phenotype 388)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002389 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002389 "digital organism phenotype 388"@en)
SubClassOf(obo:ONTOAVIDA_00002389 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002390 (digital organism phenotype 389)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002390 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002390 "digital organism phenotype 389"@en)
SubClassOf(obo:ONTOAVIDA_00002390 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002391 (digital organism phenotype 390)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002391 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002391 "digital organism phenotype 390"@en)
SubClassOf(obo:ONTOAVIDA_00002391 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002392 (digital organism phenotype 391)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002392 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002392 "digital organism phenotype 391"@en)
SubClassOf(obo:ONTOAVIDA_00002392 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002393 (digital organism phenotype 392)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002393 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002393 "digital organism phenotype 392"@en)
SubClassOf(obo:ONTOAVIDA_00002393 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002394 (digital organism phenotype 393)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002394 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002394 "digital organism phenotype 393"@en)
SubClassOf(obo:ONTOAVIDA_00002394 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002395 (digital organism phenotype 394)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002395 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002395 "digital organism phenotype 394"@en)
SubClassOf(obo:ONTOAVIDA_00002395 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002396 (digital organism phenotype 395)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002396 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002396 "digital organism phenotype 395"@en)
SubClassOf(obo:ONTOAVIDA_00002396 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002397 (digital organism phenotype 396)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002397 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002397 "digital organism phenotype 396"@en)
SubClassOf(obo:ONTOAVIDA_00002397 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002398 (digital organism phenotype 397)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002398 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002398 "digital organism phenotype 397"@en)
SubClassOf(obo:ONTOAVIDA_00002398 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002399 (digital organism phenotype 398)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002399 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002399 "digital organism phenotype 398"@en)
SubClassOf(obo:ONTOAVIDA_00002399 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002400 (digital organism phenotype 399)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002400 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002400 "digital organism phenotype 399"@en)
SubClassOf(obo:ONTOAVIDA_00002400 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002401 (digital organism phenotype 400)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002401 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002401 "digital organism phenotype 400"@en)
SubClassOf(obo:ONTOAVIDA_00002401 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002402 (digital organism phenotype 401)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002402 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002402 "digital organism phenotype 401"@en)
SubClassOf(obo:ONTOAVIDA_00002402 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002403 (digital organism phenotype 402)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002403 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002403 "digital organism phenotype 402"@en)
SubClassOf(obo:ONTOAVIDA_00002403 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002404 (digital organism phenotype 403)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002404 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002404 "digital organism phenotype 403"@en)
SubClassOf(obo:ONTOAVIDA_00002404 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002405 (digital organism phenotype 404)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002405 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002405 "digital organism phenotype 404"@en)
SubClassOf(obo:ONTOAVIDA_00002405 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002406 (digital organism phenotype 405)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002406 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002406 "digital organism phenotype 405"@en)
SubClassOf(obo:ONTOAVIDA_00002406 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002407 (digital organism phenotype 406)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002407 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002407 "digital organism phenotype 406"@en)
SubClassOf(obo:ONTOAVIDA_00002407 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002408 (digital organism phenotype 407)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002408 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002408 "digital organism phenotype 407"@en)
SubClassOf(obo:ONTOAVIDA_00002408 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002409 (digital organism phenotype 408)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002409 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002409 "digital organism phenotype 408"@en)
SubClassOf(obo:ONTOAVIDA_00002409 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002410 (digital organism phenotype 409)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002410 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002410 "digital organism phenotype 409"@en)
SubClassOf(obo:ONTOAVIDA_00002410 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002411 (digital organism phenotype 410)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002411 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002411 "digital organism phenotype 410"@en)
SubClassOf(obo:ONTOAVIDA_00002411 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002412 (digital organism phenotype 411)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002412 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002412 "digital organism phenotype 411"@en)
SubClassOf(obo:ONTOAVIDA_00002412 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002413 (digital organism phenotype 412)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002413 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002413 "digital organism phenotype 412"@en)
SubClassOf(obo:ONTOAVIDA_00002413 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002414 (digital organism phenotype 413)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002414 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002414 "digital organism phenotype 413"@en)
SubClassOf(obo:ONTOAVIDA_00002414 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002415 (digital organism phenotype 414)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002415 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002415 "digital organism phenotype 414"@en)
SubClassOf(obo:ONTOAVIDA_00002415 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002416 (digital organism phenotype 415)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002416 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002416 "digital organism phenotype 415"@en)
SubClassOf(obo:ONTOAVIDA_00002416 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002417 (digital organism phenotype 416)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002417 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002417 "digital organism phenotype 416"@en)
SubClassOf(obo:ONTOAVIDA_00002417 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002418 (digital organism phenotype 417)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002418 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002418 "digital organism phenotype 417"@en)
SubClassOf(obo:ONTOAVIDA_00002418 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002419 (digital organism phenotype 418)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002419 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002419 "digital organism phenotype 418"@en)
SubClassOf(obo:ONTOAVIDA_00002419 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002420 (digital organism phenotype 419)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002420 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002420 "digital organism phenotype 419"@en)
SubClassOf(obo:ONTOAVIDA_00002420 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002421 (digital organism phenotype 420)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002421 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002421 "digital organism phenotype 420"@en)
SubClassOf(obo:ONTOAVIDA_00002421 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002422 (digital organism phenotype 421)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002422 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002422 "digital organism phenotype 421"@en)
SubClassOf(obo:ONTOAVIDA_00002422 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002423 (digital organism phenotype 422)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002423 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002423 "digital organism phenotype 422"@en)
SubClassOf(obo:ONTOAVIDA_00002423 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002424 (digital organism phenotype 423)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002424 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002424 "digital organism phenotype 423"@en)
SubClassOf(obo:ONTOAVIDA_00002424 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002425 (digital organism phenotype 424)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002425 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002425 "digital organism phenotype 424"@en)
SubClassOf(obo:ONTOAVIDA_00002425 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002426 (digital organism phenotype 425)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002426 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002426 "digital organism phenotype 425"@en)
SubClassOf(obo:ONTOAVIDA_00002426 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002427 (digital organism phenotype 426)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002427 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002427 "digital organism phenotype 426"@en)
SubClassOf(obo:ONTOAVIDA_00002427 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002428 (digital organism phenotype 427)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002428 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002428 "digital organism phenotype 427"@en)
SubClassOf(obo:ONTOAVIDA_00002428 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002429 (digital organism phenotype 428)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002429 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002429 "digital organism phenotype 428"@en)
SubClassOf(obo:ONTOAVIDA_00002429 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002430 (digital organism phenotype 429)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002430 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002430 "digital organism phenotype 429"@en)
SubClassOf(obo:ONTOAVIDA_00002430 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002431 (digital organism phenotype 430)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002431 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002431 "digital organism phenotype 430"@en)
SubClassOf(obo:ONTOAVIDA_00002431 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002432 (digital organism phenotype 431)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002432 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002432 "digital organism phenotype 431"@en)
SubClassOf(obo:ONTOAVIDA_00002432 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002433 (digital organism phenotype 432)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002433 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002433 "digital organism phenotype 432"@en)
SubClassOf(obo:ONTOAVIDA_00002433 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002434 (digital organism phenotype 433)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002434 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002434 "digital organism phenotype 433"@en)
SubClassOf(obo:ONTOAVIDA_00002434 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002435 (digital organism phenotype 434)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002435 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002435 "digital organism phenotype 434"@en)
SubClassOf(obo:ONTOAVIDA_00002435 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002436 (digital organism phenotype 435)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002436 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002436 "digital organism phenotype 435"@en)
SubClassOf(obo:ONTOAVIDA_00002436 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002437 (digital organism phenotype 436)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002437 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002437 "digital organism phenotype 436"@en)
SubClassOf(obo:ONTOAVIDA_00002437 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002438 (digital organism phenotype 437)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002438 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002438 "digital organism phenotype 437"@en)
SubClassOf(obo:ONTOAVIDA_00002438 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002439 (digital organism phenotype 438)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002439 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002439 "digital organism phenotype 438"@en)
SubClassOf(obo:ONTOAVIDA_00002439 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002440 (digital organism phenotype 439)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002440 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002440 "digital organism phenotype 439"@en)
SubClassOf(obo:ONTOAVIDA_00002440 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002441 (digital organism phenotype 440)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002441 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002441 "digital organism phenotype 440"@en)
SubClassOf(obo:ONTOAVIDA_00002441 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002442 (digital organism phenotype 441)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002442 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002442 "digital organism phenotype 441"@en)
SubClassOf(obo:ONTOAVIDA_00002442 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002443 (digital organism phenotype 442)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002443 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002443 "digital organism phenotype 442"@en)
SubClassOf(obo:ONTOAVIDA_00002443 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002444 (digital organism phenotype 443)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002444 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002444 "digital organism phenotype 443"@en)
SubClassOf(obo:ONTOAVIDA_00002444 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002445 (digital organism phenotype 444)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002445 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002445 "digital organism phenotype 444"@en)
SubClassOf(obo:ONTOAVIDA_00002445 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002446 (digital organism phenotype 445)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002446 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002446 "digital organism phenotype 445"@en)
SubClassOf(obo:ONTOAVIDA_00002446 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002447 (digital organism phenotype 446)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002447 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002447 "digital organism phenotype 446"@en)
SubClassOf(obo:ONTOAVIDA_00002447 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002448 (digital organism phenotype 447)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002448 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or', 'and-not', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002448 "digital organism phenotype 447"@en)
SubClassOf(obo:ONTOAVIDA_00002448 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002449 (digital organism phenotype 448)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002449 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002449 "digital organism phenotype 448"@en)
SubClassOf(obo:ONTOAVIDA_00002449 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002450 (digital organism phenotype 449)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002450 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002450 "digital organism phenotype 449"@en)
SubClassOf(obo:ONTOAVIDA_00002450 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002451 (digital organism phenotype 450)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002451 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002451 "digital organism phenotype 450"@en)
SubClassOf(obo:ONTOAVIDA_00002451 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002452 (digital organism phenotype 451)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002452 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002452 "digital organism phenotype 451"@en)
SubClassOf(obo:ONTOAVIDA_00002452 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002453 (digital organism phenotype 452)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002453 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002453 "digital organism phenotype 452"@en)
SubClassOf(obo:ONTOAVIDA_00002453 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002454 (digital organism phenotype 453)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002454 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002454 "digital organism phenotype 453"@en)
SubClassOf(obo:ONTOAVIDA_00002454 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002455 (digital organism phenotype 454)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002455 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002455 "digital organism phenotype 454"@en)
SubClassOf(obo:ONTOAVIDA_00002455 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002456 (digital organism phenotype 455)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002456 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002456 "digital organism phenotype 455"@en)
SubClassOf(obo:ONTOAVIDA_00002456 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002457 (digital organism phenotype 456)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002457 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002457 "digital organism phenotype 456"@en)
SubClassOf(obo:ONTOAVIDA_00002457 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002458 (digital organism phenotype 457)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002458 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002458 "digital organism phenotype 457"@en)
SubClassOf(obo:ONTOAVIDA_00002458 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002459 (digital organism phenotype 458)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002459 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002459 "digital organism phenotype 458"@en)
SubClassOf(obo:ONTOAVIDA_00002459 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002460 (digital organism phenotype 459)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002460 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002460 "digital organism phenotype 459"@en)
SubClassOf(obo:ONTOAVIDA_00002460 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002461 (digital organism phenotype 460)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002461 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002461 "digital organism phenotype 460"@en)
SubClassOf(obo:ONTOAVIDA_00002461 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002462 (digital organism phenotype 461)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002462 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002462 "digital organism phenotype 461"@en)
SubClassOf(obo:ONTOAVIDA_00002462 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002463 (digital organism phenotype 462)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002463 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002463 "digital organism phenotype 462"@en)
SubClassOf(obo:ONTOAVIDA_00002463 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002464 (digital organism phenotype 463)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002464 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002464 "digital organism phenotype 463"@en)
SubClassOf(obo:ONTOAVIDA_00002464 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002465 (digital organism phenotype 464)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002465 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002465 "digital organism phenotype 464"@en)
SubClassOf(obo:ONTOAVIDA_00002465 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002466 (digital organism phenotype 465)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002466 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002466 "digital organism phenotype 465"@en)
SubClassOf(obo:ONTOAVIDA_00002466 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002467 (digital organism phenotype 466)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002467 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002467 "digital organism phenotype 466"@en)
SubClassOf(obo:ONTOAVIDA_00002467 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002468 (digital organism phenotype 467)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002468 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002468 "digital organism phenotype 467"@en)
SubClassOf(obo:ONTOAVIDA_00002468 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002469 (digital organism phenotype 468)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002469 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002469 "digital organism phenotype 468"@en)
SubClassOf(obo:ONTOAVIDA_00002469 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002470 (digital organism phenotype 469)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002470 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002470 "digital organism phenotype 469"@en)
SubClassOf(obo:ONTOAVIDA_00002470 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002471 (digital organism phenotype 470)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002471 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002471 "digital organism phenotype 470"@en)
SubClassOf(obo:ONTOAVIDA_00002471 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002472 (digital organism phenotype 471)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002472 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002472 "digital organism phenotype 471"@en)
SubClassOf(obo:ONTOAVIDA_00002472 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002473 (digital organism phenotype 472)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002473 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002473 "digital organism phenotype 472"@en)
SubClassOf(obo:ONTOAVIDA_00002473 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002474 (digital organism phenotype 473)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002474 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002474 "digital organism phenotype 473"@en)
SubClassOf(obo:ONTOAVIDA_00002474 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002475 (digital organism phenotype 474)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002475 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002475 "digital organism phenotype 474"@en)
SubClassOf(obo:ONTOAVIDA_00002475 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002476 (digital organism phenotype 475)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002476 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002476 "digital organism phenotype 475"@en)
SubClassOf(obo:ONTOAVIDA_00002476 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002477 (digital organism phenotype 476)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002477 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002477 "digital organism phenotype 476"@en)
SubClassOf(obo:ONTOAVIDA_00002477 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002478 (digital organism phenotype 477)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002478 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002478 "digital organism phenotype 477"@en)
SubClassOf(obo:ONTOAVIDA_00002478 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002479 (digital organism phenotype 478)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002479 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002479 "digital organism phenotype 478"@en)
SubClassOf(obo:ONTOAVIDA_00002479 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002480 (digital organism phenotype 479)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002480 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002480 "digital organism phenotype 479"@en)
SubClassOf(obo:ONTOAVIDA_00002480 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002481 (digital organism phenotype 480)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002481 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002481 "digital organism phenotype 480"@en)
SubClassOf(obo:ONTOAVIDA_00002481 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002482 (digital organism phenotype 481)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002482 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002482 "digital organism phenotype 481"@en)
SubClassOf(obo:ONTOAVIDA_00002482 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002483 (digital organism phenotype 482)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002483 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002483 "digital organism phenotype 482"@en)
SubClassOf(obo:ONTOAVIDA_00002483 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002484 (digital organism phenotype 483)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002484 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002484 "digital organism phenotype 483"@en)
SubClassOf(obo:ONTOAVIDA_00002484 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002485 (digital organism phenotype 484)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002485 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002485 "digital organism phenotype 484"@en)
SubClassOf(obo:ONTOAVIDA_00002485 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002486 (digital organism phenotype 485)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002486 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002486 "digital organism phenotype 485"@en)
SubClassOf(obo:ONTOAVIDA_00002486 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002487 (digital organism phenotype 486)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002487 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002487 "digital organism phenotype 486"@en)
SubClassOf(obo:ONTOAVIDA_00002487 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002488 (digital organism phenotype 487)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002488 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002488 "digital organism phenotype 487"@en)
SubClassOf(obo:ONTOAVIDA_00002488 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002489 (digital organism phenotype 488)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002489 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002489 "digital organism phenotype 488"@en)
SubClassOf(obo:ONTOAVIDA_00002489 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002490 (digital organism phenotype 489)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002490 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002490 "digital organism phenotype 489"@en)
SubClassOf(obo:ONTOAVIDA_00002490 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002491 (digital organism phenotype 490)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002491 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002491 "digital organism phenotype 490"@en)
SubClassOf(obo:ONTOAVIDA_00002491 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002492 (digital organism phenotype 491)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002492 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002492 "digital organism phenotype 491"@en)
SubClassOf(obo:ONTOAVIDA_00002492 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002493 (digital organism phenotype 492)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002493 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002493 "digital organism phenotype 492"@en)
SubClassOf(obo:ONTOAVIDA_00002493 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002494 (digital organism phenotype 493)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002494 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002494 "digital organism phenotype 493"@en)
SubClassOf(obo:ONTOAVIDA_00002494 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002495 (digital organism phenotype 494)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002495 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002495 "digital organism phenotype 494"@en)
SubClassOf(obo:ONTOAVIDA_00002495 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002496 (digital organism phenotype 495)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002496 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002496 "digital organism phenotype 495"@en)
SubClassOf(obo:ONTOAVIDA_00002496 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002497 (digital organism phenotype 496)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002497 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002497 "digital organism phenotype 496"@en)
SubClassOf(obo:ONTOAVIDA_00002497 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002498 (digital organism phenotype 497)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002498 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002498 "digital organism phenotype 497"@en)
SubClassOf(obo:ONTOAVIDA_00002498 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002499 (digital organism phenotype 498)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002499 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002499 "digital organism phenotype 498"@en)
SubClassOf(obo:ONTOAVIDA_00002499 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002500 (digital organism phenotype 499)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002500 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002500 "digital organism phenotype 499"@en)
SubClassOf(obo:ONTOAVIDA_00002500 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002501 (digital organism phenotype 500)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002501 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002501 "digital organism phenotype 500"@en)
SubClassOf(obo:ONTOAVIDA_00002501 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002502 (digital organism phenotype 501)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002502 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002502 "digital organism phenotype 501"@en)
SubClassOf(obo:ONTOAVIDA_00002502 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002503 (digital organism phenotype 502)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002503 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002503 "digital organism phenotype 502"@en)
SubClassOf(obo:ONTOAVIDA_00002503 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002504 (digital organism phenotype 503)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002504 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002504 "digital organism phenotype 503"@en)
SubClassOf(obo:ONTOAVIDA_00002504 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002505 (digital organism phenotype 504)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002505 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'orn-not', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002505 "digital organism phenotype 504"@en)
SubClassOf(obo:ONTOAVIDA_00002505 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002506 (digital organism phenotype 505)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002506 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'orn-not', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002506 "digital organism phenotype 505"@en)
SubClassOf(obo:ONTOAVIDA_00002506 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002507 (digital organism phenotype 506)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002507 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'orn-not', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002507 "digital organism phenotype 506"@en)
SubClassOf(obo:ONTOAVIDA_00002507 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002508 (digital organism phenotype 507)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002508 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'orn-not', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002508 "digital organism phenotype 507"@en)
SubClassOf(obo:ONTOAVIDA_00002508 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002509 (digital organism phenotype 508)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002509 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'and', 'orn-not', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002509 "digital organism phenotype 508"@en)
SubClassOf(obo:ONTOAVIDA_00002509 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002510 (digital organism phenotype 509)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002510 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'and', 'orn-not', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002510 "digital organism phenotype 509"@en)
SubClassOf(obo:ONTOAVIDA_00002510 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002511 (digital organism phenotype 510)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002511 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not-and', 'and', 'orn-not', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002511 "digital organism phenotype 510"@en)
SubClassOf(obo:ONTOAVIDA_00002511 obo:ONTOAVIDA_00000151)

# Class: obo:ONTOAVIDA_00002512 (digital organism phenotype 511)

AnnotationAssertion(obo:IAO_0000115 obo:ONTOAVIDA_00002512 "The digital phenotype of the logic9 environment that a digital organism computing the logic operations 'not', 'not-and', 'and', 'orn-not', 'or', 'and-not', 'not-or', 'exclusive or' and 'equals' has."@en)
AnnotationAssertion(rdfs:label obo:ONTOAVIDA_00002512 "digital organism phenotype 511"@en)
SubClassOf(obo:ONTOAVIDA_00002512 obo:ONTOAVIDA_00000151)

# Class: obo:STATO_0000002 (digital file)

AnnotationAssertion(obo:IAO_0000115 obo:STATO_0000002 "A digital file is an information content entity which conforms to a specificacion or format and which is meant to hold data and information in digital form, accessible to software agents."@en)
AnnotationAssertion(rdfs:label obo:STATO_0000002 "digital file"@en)
SubClassOf(obo:STATO_0000002 owl:Thing)


DisjointClasses(obo:ONTOAVIDA_00000001 obo:ONTOAVIDA_00000002 obo:ONTOAVIDA_00000003 obo:ONTOAVIDA_00000085)
DisjointClasses(obo:ONTOAVIDA_00000008 obo:ONTOAVIDA_00000009 obo:ONTOAVIDA_00000010 obo:ONTOAVIDA_00000012)
DisjointClasses(obo:ONTOAVIDA_00000086 obo:ONTOAVIDA_00000087 obo:ONTOAVIDA_00000088)
DisjointClasses(obo:ONTOAVIDA_00000112 obo:ONTOAVIDA_00000113 obo:ONTOAVIDA_00000114 obo:ONTOAVIDA_00000115 obo:ONTOAVIDA_00000116 obo:ONTOAVIDA_00000117 obo:ONTOAVIDA_00000118 obo:ONTOAVIDA_00000119 obo:ONTOAVIDA_00000120)
DisjointClasses(obo:ONTOAVIDA_00000131 obo:ONTOAVIDA_00000132 obo:ONTOAVIDA_00000133)
SubObjectPropertyOf(ObjectPropertyChain(obo:ONTOAVIDA_00001198 rdfs:member) obo:ONTOAVIDA_00001197)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002180 obo:ONTOAVIDA_00001197) obo:ONTOAVIDA_00000134)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002180 obo:ONTOAVIDA_00001197 obo:RO_0002507) obo:ONTOAVIDA_00000182)
)