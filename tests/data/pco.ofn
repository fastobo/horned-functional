Prefix(:=<http://purl.obolibrary.org/obo/pco.owl#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(obo:=<http://purl.obolibrary.org/obo/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(foaf:=<http://xmlns.com/foaf/0.1/>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(swrl:=<http://www.w3.org/2003/11/swrl#>)
Prefix(swrla:=<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#>)
Prefix(swrlb:=<http://www.w3.org/2003/11/swrlb#>)
Prefix(terms:=<http://purl.org/dc/terms/>)
Prefix(protege:=<http://protege.stanford.edu/plugins/owl/protege#>)
Prefix(oboInOwl:=<http://www.geneontology.org/formats/oboInOwl#>)
Prefix(ncbitaxon:=<http://purl.obolibrary.org/obo/ncbitaxon#>)


Ontology(<http://purl.obolibrary.org/obo/pco.owl>
<http://purl.obolibrary.org/obo/pco/releases/2021-05-03/pco.owl>
Annotation(dc:contributor "http://orcid.org/0000-0002-4366-3088")
Annotation(dc:contributor "https://orcid.org/0000-0001-8815-0078")
Annotation(dc:creator "David Osumi-Sutherland")
Annotation(dc:creator "Jie Zheng")
Annotation(dc:creator "Pier Luigi Buttigieg")
Annotation(dc:creator "Ramona Walls")
Annotation(dc:description "The Population and Community Ontology (PCO) describes material entities, qualities, and processes related to collections of interacting organisms such as populations and communities. It is taxon neutral, and can be used for any species, including humans. The classes in the PCO are useful for describing evolutionary processes, organismal interactions, and ecological experiments. Practical applications of the PCO include community health care, plant pathology, behavioral studies, sociology, and ecology.")
Annotation(dc:title "Population and Community Ontology")
Annotation(terms:license "http://creativecommons.org/publicdomain/zero/1.0/")
Annotation(rdfs:comment "The Population and Community Ontology (PCO) is licensed under a Creative Commons zero (CC0) license - http://creativecommons.org/publicdomain/zero/1.0/. You can copy, modify, distribute and perform the work, even for commercial purposes, all without asking permission. We ask that anyone using this ontology follow the standards of the scientific ontology community by re-using ontology identifiers whenever possible and properly citing the ontology and its creators.")

Declaration(Class(obo:BFO_0000001))
Declaration(Class(obo:BFO_0000002))
Declaration(Class(obo:BFO_0000003))
Declaration(Class(obo:BFO_0000004))
Declaration(Class(obo:BFO_0000005))
Declaration(Class(obo:BFO_0000006))
Declaration(Class(obo:BFO_0000015))
Declaration(Class(obo:BFO_0000016))
Declaration(Class(obo:BFO_0000017))
Declaration(Class(obo:BFO_0000019))
Declaration(Class(obo:BFO_0000020))
Declaration(Class(obo:BFO_0000023))
Declaration(Class(obo:BFO_0000027))
Declaration(Class(obo:BFO_0000029))
Declaration(Class(obo:BFO_0000031))
Declaration(Class(obo:BFO_0000034))
Declaration(Class(obo:BFO_0000040))
Declaration(Class(obo:BFO_0000141))
Declaration(Class(obo:CARO_0000012))
Declaration(Class(obo:CARO_0001010))
Declaration(Class(obo:CARO_0010004))
Declaration(Class(obo:ECOCORE_00000045))
Declaration(Class(obo:ECOCORE_00000146))
Declaration(Class(obo:ENVO_01000744))
Declaration(Class(obo:ENVO_01001369))
Declaration(Class(obo:GO_0003674))
Declaration(Class(obo:GO_0003824))
Declaration(Class(obo:GO_0007610))
Declaration(Class(obo:GO_0008150))
Declaration(Class(obo:GO_0016301))
Declaration(Class(obo:GO_0016740))
Declaration(Class(obo:GO_0016772))
Declaration(Class(obo:GO_0035176))
Declaration(Class(obo:GO_0044419))
Declaration(Class(obo:GO_0051703))
Declaration(Class(obo:GO_0051704))
Declaration(Class(obo:IAO_0000027))
Declaration(Class(obo:IAO_0000030))
Declaration(Class(obo:IAO_0000078))
Declaration(Class(obo:IAO_0000102))
Declaration(Class(obo:IAO_0000109))
Declaration(Class(obo:IAO_0000225))
Declaration(Class(obo:IAO_0000409))
Declaration(Class(obo:IAO_8000000))
Declaration(Class(obo:IAO_8000001))
Declaration(Class(obo:IAO_8000002))
Declaration(Class(obo:IAO_8000003))
Declaration(Class(obo:IAO_8000004))
Declaration(Class(obo:IAO_8000005))
Declaration(Class(obo:IAO_8000006))
Declaration(Class(obo:IAO_8000007))
Declaration(Class(obo:IAO_8000008))
Declaration(Class(obo:IAO_8000009))
Declaration(Class(obo:IAO_8000010))
Declaration(Class(obo:IAO_8000011))
Declaration(Class(obo:IAO_8000012))
Declaration(Class(obo:IAO_8000013))
Declaration(Class(obo:IAO_8000014))
Declaration(Class(obo:IAO_8000015))
Declaration(Class(obo:IAO_8000016))
Declaration(Class(obo:IAO_8000017))
Declaration(Class(obo:IAO_8000018))
Declaration(Class(obo:IAO_8000019))
Declaration(Class(obo:IAO_8000020))
Declaration(Class(obo:NCBITaxon_10239))
Declaration(Class(obo:NCBITaxon_117570))
Declaration(Class(obo:NCBITaxon_117571))
Declaration(Class(obo:NCBITaxon_131221))
Declaration(Class(obo:NCBITaxon_131567))
Declaration(Class(obo:NCBITaxon_1338369))
Declaration(Class(obo:NCBITaxon_1437010))
Declaration(Class(obo:NCBITaxon_1437180))
Declaration(Class(obo:NCBITaxon_2))
Declaration(Class(obo:NCBITaxon_207598))
Declaration(Class(obo:NCBITaxon_2157))
Declaration(Class(obo:NCBITaxon_2759))
Declaration(Class(obo:NCBITaxon_3041))
Declaration(Class(obo:NCBITaxon_314146))
Declaration(Class(obo:NCBITaxon_314293))
Declaration(Class(obo:NCBITaxon_314295))
Declaration(Class(obo:NCBITaxon_3193))
Declaration(Class(obo:NCBITaxon_32523))
Declaration(Class(obo:NCBITaxon_32524))
Declaration(Class(obo:NCBITaxon_32525))
Declaration(Class(obo:NCBITaxon_33090))
Declaration(Class(obo:NCBITaxon_33154))
Declaration(Class(obo:NCBITaxon_33208))
Declaration(Class(obo:NCBITaxon_33213))
Declaration(Class(obo:NCBITaxon_33511))
Declaration(Class(obo:NCBITaxon_3398))
Declaration(Class(obo:NCBITaxon_35493))
Declaration(Class(obo:NCBITaxon_376913))
Declaration(Class(obo:NCBITaxon_40674))
Declaration(Class(obo:NCBITaxon_4751))
Declaration(Class(obo:NCBITaxon_58023))
Declaration(Class(obo:NCBITaxon_58024))
Declaration(Class(obo:NCBITaxon_6072))
Declaration(Class(obo:NCBITaxon_7711))
Declaration(Class(obo:NCBITaxon_7742))
Declaration(Class(obo:NCBITaxon_7776))
Declaration(Class(obo:NCBITaxon_78536))
Declaration(Class(obo:NCBITaxon_8287))
Declaration(Class(obo:NCBITaxon_89593))
Declaration(Class(obo:NCBITaxon_9347))
Declaration(Class(obo:NCBITaxon_9443))
Declaration(Class(obo:NCBITaxon_9526))
Declaration(Class(obo:NCBITaxon_9604))
Declaration(Class(obo:NCBITaxon_9605))
Declaration(Class(obo:NCBITaxon_9606))
Declaration(Class(obo:PATO_0000001))
Declaration(Class(obo:PATO_0000068))
Declaration(Class(obo:PATO_0000069))
Declaration(Class(obo:PATO_0000070))
Declaration(Class(obo:PATO_0000161))
Declaration(Class(obo:PATO_0000461))
Declaration(Class(obo:PATO_0000467))
Declaration(Class(obo:PATO_0000470))
Declaration(Class(obo:PATO_0000911))
Declaration(Class(obo:PATO_0000912))
Declaration(Class(obo:PATO_0001018))
Declaration(Class(obo:PATO_0001019))
Declaration(Class(obo:PATO_0001164))
Declaration(Class(obo:PATO_0001236))
Declaration(Class(obo:PATO_0001241))
Declaration(Class(obo:PATO_0001338))
Declaration(Class(obo:PATO_0001415))
Declaration(Class(obo:PATO_0001555))
Declaration(Class(obo:PATO_0001788))
Declaration(Class(obo:PATO_0001790))
Declaration(Class(obo:PATO_0001997))
Declaration(Class(obo:PATO_0002003))
Declaration(Class(obo:PATO_0002062))
Declaration(Class(obo:PATO_0002300))
Declaration(Class(obo:PATO_0002301))
Declaration(Class(obo:PATO_0002302))
Declaration(Class(obo:PATO_0002303))
Declaration(Class(obo:PATO_0002304))
Declaration(Class(obo:PATO_0002305))
Declaration(Class(obo:PCO_0000000))
Declaration(Class(obo:PCO_0000001))
Declaration(Class(obo:PCO_0000002))
Declaration(Class(obo:PCO_0000003))
Declaration(Class(obo:PCO_0000004))
Declaration(Class(obo:PCO_0000005))
Declaration(Class(obo:PCO_0000006))
Declaration(Class(obo:PCO_0000007))
Declaration(Class(obo:PCO_0000008))
Declaration(Class(obo:PCO_0000009))
Declaration(Class(obo:PCO_0000010))
Declaration(Class(obo:PCO_0000011))
Declaration(Class(obo:PCO_0000012))
Declaration(Class(obo:PCO_0000013))
Declaration(Class(obo:PCO_0000014))
Declaration(Class(obo:PCO_0000015))
Declaration(Class(obo:PCO_0000016))
Declaration(Class(obo:PCO_0000017))
Declaration(Class(obo:PCO_0000018))
Declaration(Class(obo:PCO_0000019))
Declaration(Class(obo:PCO_0000020))
Declaration(Class(obo:PCO_0000021))
Declaration(Class(obo:PCO_0000022))
Declaration(Class(obo:PCO_0000023))
Declaration(Class(obo:PCO_0000024))
Declaration(Class(obo:PCO_0000025))
Declaration(Class(obo:PCO_0000026))
Declaration(Class(obo:PCO_0000027))
Declaration(Class(obo:PCO_0000028))
Declaration(Class(obo:PCO_0000029))
Declaration(Class(obo:PCO_0000030))
Declaration(Class(obo:PCO_0000031))
Declaration(Class(obo:PCO_0000032))
Declaration(Class(obo:PCO_0000033))
Declaration(Class(obo:PCO_0000034))
Declaration(Class(obo:PCO_0000035))
Declaration(Class(obo:PCO_0000037))
Declaration(Class(obo:PCO_0000038))
Declaration(Class(obo:PCO_0000039))
Declaration(Class(obo:PCO_0000047))
Declaration(Class(obo:PCO_0000048))
Declaration(Class(obo:PCO_0000049))
Declaration(Class(obo:PCO_0000050))
Declaration(Class(obo:PCO_0000051))
Declaration(Class(obo:PCO_0000052))
Declaration(Class(obo:PCO_0000053))
Declaration(Class(obo:PCO_0000054))
Declaration(Class(obo:PCO_0000057))
Declaration(Class(obo:PCO_0000058))
Declaration(Class(obo:PCO_0000059))
Declaration(Class(obo:PCO_0000060))
Declaration(Class(obo:PCO_0000061))
Declaration(Class(obo:PCO_0000062))
Declaration(Class(obo:PCO_0000063))
Declaration(Class(obo:PCO_0000064))
Declaration(Class(obo:PCO_0000073))
Declaration(Class(obo:PCO_0000074))
Declaration(Class(obo:PCO_0000075))
Declaration(Class(obo:PCO_0000076))
Declaration(Class(obo:PCO_0000077))
Declaration(Class(obo:PCO_0000078))
Declaration(Class(obo:PCO_0000079))
Declaration(Class(obo:PCO_0000080))
Declaration(Class(obo:PCO_0000081))
Declaration(Class(obo:PCO_0000082))
Declaration(Class(obo:PCO_0001000))
Declaration(Class(obo:PCO_0001001))
Declaration(Class(obo:PCO_1000000))
Declaration(Class(obo:PCO_1000001))
Declaration(Class(obo:PCO_1000002))
Declaration(Class(obo:PCO_1000003))
Declaration(Class(obo:PCO_1000004))
Declaration(Class(obo:STATO_0000047))
Declaration(Class(<http://purl.obolibrary.org/obo/pco.owl/PCO_0000030>))
Declaration(Class(oboInOwl:ObsoleteClass))
Declaration(Class(<https://purl.obolibrary.org/obo/PCO_0000040>))
Declaration(Class(<https://purl.obolibrary.org/obo/PCO_0000041>))
Declaration(Class(<https://purl.obolibrary.org/obo/PCO_0000042>))
Declaration(Class(<https://purl.obolibrary.org/obo/PCO_0000043>))
Declaration(Class(<https://purl.obolibrary.org/obo/PCO_0000044>))
Declaration(Class(<https://purl.obolibrary.org/obo/PCO_0000045>))
Declaration(Class(<https://purl.obolibrary.org/obo/PCO_0000046>))
Declaration(ObjectProperty(obo:BFO_0000050))
Declaration(ObjectProperty(obo:BFO_0000051))
Declaration(ObjectProperty(obo:BFO_0000054))
Declaration(ObjectProperty(obo:BFO_0000055))
Declaration(ObjectProperty(obo:BFO_0000062))
Declaration(ObjectProperty(obo:BFO_0000063))
Declaration(ObjectProperty(obo:BFO_0000066))
Declaration(ObjectProperty(obo:BFO_0000067))
Declaration(ObjectProperty(obo:IAO_0000136))
Declaration(ObjectProperty(obo:PCO_0000055))
Declaration(ObjectProperty(obo:RO_0000052))
Declaration(ObjectProperty(obo:RO_0000053))
Declaration(ObjectProperty(obo:RO_0000056))
Declaration(ObjectProperty(obo:RO_0000057))
Declaration(ObjectProperty(obo:RO_0000058))
Declaration(ObjectProperty(obo:RO_0000059))
Declaration(ObjectProperty(obo:RO_0000079))
Declaration(ObjectProperty(obo:RO_0000080))
Declaration(ObjectProperty(obo:RO_0000081))
Declaration(ObjectProperty(obo:RO_0000085))
Declaration(ObjectProperty(obo:RO_0000086))
Declaration(ObjectProperty(obo:RO_0000087))
Declaration(ObjectProperty(obo:RO_0000091))
Declaration(ObjectProperty(obo:RO_0000092))
Declaration(ObjectProperty(obo:RO_0001000))
Declaration(ObjectProperty(obo:RO_0001001))
Declaration(ObjectProperty(obo:RO_0001015))
Declaration(ObjectProperty(obo:RO_0001025))
Declaration(ObjectProperty(obo:RO_0002000))
Declaration(ObjectProperty(obo:RO_0002002))
Declaration(ObjectProperty(obo:RO_0002022))
Declaration(ObjectProperty(obo:RO_0002023))
Declaration(ObjectProperty(obo:RO_0002024))
Declaration(ObjectProperty(obo:RO_0002086))
Declaration(ObjectProperty(obo:RO_0002087))
Declaration(ObjectProperty(obo:RO_0002090))
Declaration(ObjectProperty(obo:RO_0002131))
Declaration(ObjectProperty(obo:RO_0002211))
Declaration(ObjectProperty(obo:RO_0002212))
Declaration(ObjectProperty(obo:RO_0002213))
Declaration(ObjectProperty(obo:RO_0002215))
Declaration(ObjectProperty(obo:RO_0002216))
Declaration(ObjectProperty(obo:RO_0002222))
Declaration(ObjectProperty(obo:RO_0002233))
Declaration(ObjectProperty(obo:RO_0002263))
Declaration(ObjectProperty(obo:RO_0002264))
Declaration(ObjectProperty(obo:RO_0002304))
Declaration(ObjectProperty(obo:RO_0002305))
Declaration(ObjectProperty(obo:RO_0002321))
Declaration(ObjectProperty(obo:RO_0002323))
Declaration(ObjectProperty(obo:RO_0002327))
Declaration(ObjectProperty(obo:RO_0002328))
Declaration(ObjectProperty(obo:RO_0002329))
Declaration(ObjectProperty(obo:RO_0002331))
Declaration(ObjectProperty(obo:RO_0002333))
Declaration(ObjectProperty(obo:RO_0002334))
Declaration(ObjectProperty(obo:RO_0002335))
Declaration(ObjectProperty(obo:RO_0002336))
Declaration(ObjectProperty(obo:RO_0002350))
Declaration(ObjectProperty(obo:RO_0002351))
Declaration(ObjectProperty(obo:RO_0002352))
Declaration(ObjectProperty(obo:RO_0002404))
Declaration(ObjectProperty(obo:RO_0002405))
Declaration(ObjectProperty(obo:RO_0002410))
Declaration(ObjectProperty(obo:RO_0002411))
Declaration(ObjectProperty(obo:RO_0002412))
Declaration(ObjectProperty(obo:RO_0002418))
Declaration(ObjectProperty(obo:RO_0002427))
Declaration(ObjectProperty(obo:RO_0002428))
Declaration(ObjectProperty(obo:RO_0002429))
Declaration(ObjectProperty(obo:RO_0002430))
Declaration(ObjectProperty(obo:RO_0002431))
Declaration(ObjectProperty(obo:RO_0002432))
Declaration(ObjectProperty(obo:RO_0002434))
Declaration(ObjectProperty(obo:RO_0002436))
Declaration(ObjectProperty(obo:RO_0002447))
Declaration(ObjectProperty(obo:RO_0002448))
Declaration(ObjectProperty(obo:RO_0002449))
Declaration(ObjectProperty(obo:RO_0002450))
Declaration(ObjectProperty(obo:RO_0002464))
Declaration(ObjectProperty(obo:RO_0002479))
Declaration(ObjectProperty(obo:RO_0002481))
Declaration(ObjectProperty(obo:RO_0002500))
Declaration(ObjectProperty(obo:RO_0002501))
Declaration(ObjectProperty(obo:RO_0002506))
Declaration(ObjectProperty(obo:RO_0002559))
Declaration(ObjectProperty(obo:RO_0002563))
Declaration(ObjectProperty(obo:RO_0002564))
Declaration(ObjectProperty(obo:RO_0002566))
Declaration(ObjectProperty(obo:RO_0002578))
Declaration(ObjectProperty(obo:RO_0002584))
Declaration(ObjectProperty(obo:RO_0002595))
Declaration(ObjectProperty(obo:RO_0002596))
Declaration(ObjectProperty(obo:RO_0002597))
Declaration(ObjectProperty(obo:RO_0002598))
Declaration(ObjectProperty(obo:RO_0002608))
Declaration(ObjectProperty(obo:RO_0002629))
Declaration(ObjectProperty(obo:RO_0002630))
Declaration(ObjectProperty(obo:RO_0004031))
Declaration(ObjectProperty(obo:RO_0004032))
Declaration(ObjectProperty(obo:RO_0004033))
Declaration(ObjectProperty(obo:RO_0004034))
Declaration(ObjectProperty(obo:RO_0004035))
Declaration(ObjectProperty(obo:RO_0004046))
Declaration(ObjectProperty(obo:RO_0004047))
Declaration(ObjectProperty(obo:RO_0011002))
Declaration(ObjectProperty(<http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to>))
Declaration(ObjectProperty(<http://purl.obolibrary.org/obo/pato#different_in_magnitude_relative_to>))
Declaration(ObjectProperty(<http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to>))
Declaration(ObjectProperty(<http://purl.obolibrary.org/obo/pato#reciprocal_of>))
Declaration(NamedIndividual(obo:IAO_0000002))
Declaration(NamedIndividual(obo:IAO_0000103))
Declaration(NamedIndividual(obo:IAO_0000120))
Declaration(NamedIndividual(obo:IAO_0000121))
Declaration(NamedIndividual(obo:IAO_0000122))
Declaration(NamedIndividual(obo:IAO_0000123))
Declaration(NamedIndividual(obo:IAO_0000124))
Declaration(NamedIndividual(obo:IAO_0000125))
Declaration(NamedIndividual(obo:IAO_0000224))
Declaration(NamedIndividual(obo:IAO_0000226))
Declaration(NamedIndividual(obo:IAO_0000227))
Declaration(NamedIndividual(obo:IAO_0000228))
Declaration(NamedIndividual(obo:IAO_0000229))
Declaration(NamedIndividual(obo:IAO_0000410))
Declaration(NamedIndividual(obo:IAO_0000420))
Declaration(NamedIndividual(obo:IAO_0000421))
Declaration(NamedIndividual(obo:IAO_0000423))
Declaration(NamedIndividual(obo:IAO_0000428))
Declaration(AnnotationProperty(protege:defaultLanguage))
Declaration(AnnotationProperty(obo:BFO_0000179))
Declaration(AnnotationProperty(obo:BFO_0000180))
Declaration(AnnotationProperty(obo:IAO_0000111))
Declaration(AnnotationProperty(obo:IAO_0000112))
Declaration(AnnotationProperty(obo:IAO_0000113))
Declaration(AnnotationProperty(obo:IAO_0000114))
Declaration(AnnotationProperty(obo:IAO_0000115))
Declaration(AnnotationProperty(obo:IAO_0000116))
Declaration(AnnotationProperty(obo:IAO_0000117))
Declaration(AnnotationProperty(obo:IAO_0000118))
Declaration(AnnotationProperty(obo:IAO_0000119))
Declaration(AnnotationProperty(obo:IAO_0000231))
Declaration(AnnotationProperty(obo:IAO_0000232))
Declaration(AnnotationProperty(obo:IAO_0000233))
Declaration(AnnotationProperty(obo:IAO_0000234))
Declaration(AnnotationProperty(obo:IAO_0000411))
Declaration(AnnotationProperty(obo:IAO_0000412))
Declaration(AnnotationProperty(obo:IAO_0000424))
Declaration(AnnotationProperty(obo:IAO_0000425))
Declaration(AnnotationProperty(obo:IAO_0000426))
Declaration(AnnotationProperty(obo:IAO_0000427))
Declaration(AnnotationProperty(obo:IAO_0000589))
Declaration(AnnotationProperty(obo:IAO_0000596))
Declaration(AnnotationProperty(obo:IAO_0000597))
Declaration(AnnotationProperty(obo:IAO_0000598))
Declaration(AnnotationProperty(obo:IAO_0000599))
Declaration(AnnotationProperty(obo:IAO_0000600))
Declaration(AnnotationProperty(obo:IAO_0000601))
Declaration(AnnotationProperty(obo:IAO_0000602))
Declaration(AnnotationProperty(obo:IAO_0000603))
Declaration(AnnotationProperty(obo:IAO_0000700))
Declaration(AnnotationProperty(obo:IAO_0006011))
Declaration(AnnotationProperty(obo:IAO_0006012))
Declaration(AnnotationProperty(obo:IAO_0010000))
Declaration(AnnotationProperty(obo:IAO_0100001))
Declaration(AnnotationProperty(obo:IAO_created_by))
Declaration(AnnotationProperty(obo:IAO_creation_date))
Declaration(AnnotationProperty(obo:RO_0001900))
Declaration(AnnotationProperty(obo:RO_0002161))
Declaration(AnnotationProperty(obo:RO_0002575))
Declaration(AnnotationProperty(obo:RO_0002581))
Declaration(AnnotationProperty(obo:RO_0002582))
Declaration(AnnotationProperty(obo:RO_0002604))
Declaration(AnnotationProperty(obo:RO_0004049))
Declaration(AnnotationProperty(obo:RO_0004050))
Declaration(AnnotationProperty(obo:RO_0040042))
Declaration(AnnotationProperty(obo:STATO_0000032))
Declaration(AnnotationProperty(ncbitaxon:has_rank))
Declaration(AnnotationProperty(dc:contributor))
Declaration(AnnotationProperty(dc:coverage))
Declaration(AnnotationProperty(dc:creator))
Declaration(AnnotationProperty(dc:date))
Declaration(AnnotationProperty(dc:description))
Declaration(AnnotationProperty(dc:format))
Declaration(AnnotationProperty(dc:identifier))
Declaration(AnnotationProperty(dc:language))
Declaration(AnnotationProperty(dc:license))
Declaration(AnnotationProperty(dc:publisher))
Declaration(AnnotationProperty(dc:relation))
Declaration(AnnotationProperty(dc:rights))
Declaration(AnnotationProperty(dc:source))
Declaration(AnnotationProperty(dc:subject))
Declaration(AnnotationProperty(dc:title))
Declaration(AnnotationProperty(dc:type))
Declaration(AnnotationProperty(terms:creator))
Declaration(AnnotationProperty(terms:license))
Declaration(AnnotationProperty(terms:source))
Declaration(AnnotationProperty(swrla:isRuleEnabled))
Declaration(AnnotationProperty(oboInOwl:created_by))
Declaration(AnnotationProperty(oboInOwl:creation_date))
Declaration(AnnotationProperty(oboInOwl:hasAlternativeId))
Declaration(AnnotationProperty(oboInOwl:hasBroadSynonym))
Declaration(AnnotationProperty(oboInOwl:hasDbXref))
Declaration(AnnotationProperty(oboInOwl:hasExactSynonym))
Declaration(AnnotationProperty(oboInOwl:hasNarrowSynonym))
Declaration(AnnotationProperty(oboInOwl:hasOBONamespace))
Declaration(AnnotationProperty(oboInOwl:hasRelatedSynonym))
Declaration(AnnotationProperty(oboInOwl:hasSynonymType))
Declaration(AnnotationProperty(oboInOwl:id))
Declaration(AnnotationProperty(oboInOwl:inSubset))
Declaration(AnnotationProperty(oboInOwl:is_metadata_tag))
Declaration(AnnotationProperty(oboInOwl:shorthand))
Declaration(AnnotationProperty(rdfs:comment))
Declaration(AnnotationProperty(rdfs:isDefinedBy))
Declaration(AnnotationProperty(rdfs:label))
Declaration(AnnotationProperty(foaf:page))
############################
#   Annotation Properties
############################

# Annotation Property: obo:BFO_0000179 (obo:BFO_0000179)

AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000179 obo:bfo.owl)

# Annotation Property: obo:BFO_0000180 (obo:BFO_0000180)

AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000180 obo:bfo.owl)

# Annotation Property: obo:IAO_0000111 (editor preferred label)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000111 "editor preferred label")
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000111 "editor preferred label"@en)
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000111 "editor preferred term")
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000111 "editor preferred term"@en)
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000111 "editor preferred term~editor preferred label")
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000111 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000111 "The concise, meaningful, and human-friendly name for a class or property preferred by the ontology developers. (US-English)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000111 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000111 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000111 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000111 "editor preferred label")
AnnotationAssertion(rdfs:label obo:IAO_0000111 "editor preferred label"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000111 "editor preferred term")
AnnotationAssertion(rdfs:label obo:IAO_0000111 "editor preferred term"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000111 "editor preferred term~editor preferred label")

# Annotation Property: obo:IAO_0000112 (example of usage)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000112 "example"@en)
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000112 "example of usage"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000112 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000112 "A phrase describing how a term should be used and/or a citation to a work which uses it. May also include other kinds of examples that facilitate immediate understanding, such as widely know prototypes or instances of a class, or cases where a relation is said to hold."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000112 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000112 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000112 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000112 "example of usage"@en)

# Annotation Property: obo:IAO_0000113 (in branch)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000113 "in branch"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000113 "An annotation property indicating which module the terms belong to. This is currently experimental and not implemented yet."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000113 "GROUP:OBI"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000113 "OBI_0000277"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000113 "in branch"@en)

# Annotation Property: obo:IAO_0000114 (has curation status)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000114 "has curation status"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000114 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000114 "PERSON:Bill Bug"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000114 "PERSON:Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000114 "OBI_0000281"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000114 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000114 "has curation status")
AnnotationAssertion(rdfs:label obo:IAO_0000114 "has curation status"@en)

# Annotation Property: obo:IAO_0000115 (textual definition)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000115 "definition")
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000115 "definition"@en)
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000115 "textual definition")
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000115 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000115 "The official OBI definition, explaining the meaning of a class or property. Shall be Aristotelian, formalized and normalized. Can be augmented with colloquial definitions."@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000115 "The official definition, explaining the meaning of a class or property. Shall be Aristotelian, formalized and normalized. Can be augmented with colloquial definitions."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000115 "2012-04-05: 
Barry Smith

The official OBI definition, explaining the meaning of a class or property: 'Shall be Aristotelian, formalized and normalized. Can be augmented with colloquial definitions'  is terrible.

Can you fix to something like:

A statement of necessary and sufficient conditions explaining the meaning of an expression referring to a class or property.

Alan Ruttenberg

Your proposed definition is a reasonable candidate, except that it is very common that necessary and sufficient conditions are not given. Mostly they are necessary, occasionally they are necessary and sufficient or just sufficient. Often they use terms that are not themselves defined and so they effectively can't be evaluated by those criteria. 

On the specifics of the proposed definition:

We don't have definitions of 'meaning' or 'expression' or 'property'. For 'reference' in the intended sense I think we use the term 'denotation'. For 'expression', I think we you mean symbol, or identifier. For 'meaning' it differs for class and property. For class we want documentation that let's the intended reader determine whether an entity is instance of the class, or not. For property we want documentation that let's the intended reader determine, given a pair of potential relata, whether the assertion that the relation holds is true. The 'intended reader' part suggests that we also specify who, we expect, would be able to understand the definition, and also generalizes over human and computer reader to include textual and logical definition. 

Personally, I am more comfortable weakening definition to documentation, with instructions as to what is desirable. 

We also have the outstanding issue of how to aim different definitions to different audiences. A clinical audience reading chebi wants a different sort of definition documentation/definition from a chemistry trained audience, and similarly there is a need for a definition that is adequate for an ontologist to work with.  "@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000115 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000115 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000115 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition")
AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000115 "textual definition")

# Annotation Property: obo:IAO_0000116 (editor note)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000116 "editor note"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000116 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000116 "An administrative note intended for its editor. It may not be included in the publication version of the ontology, so it should contain nothing necessary for end users to understand the ontology."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000116 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000116 "GROUP:OBI:<http://purl.obfoundry.org/obo/obi>"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000116 "GROUP:OBI:<http://purl.obofoundry.org/obo/obi>"@en)
AnnotationAssertion(oboInOwl:hasDbXref obo:IAO_0000116 "IAO:0000116")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:IAO_0000116 "uberon")
AnnotationAssertion(oboInOwl:id obo:IAO_0000116 "editor_note")
AnnotationAssertion(oboInOwl:is_metadata_tag obo:IAO_0000116 "true"^^xsd:boolean)
AnnotationAssertion(oboInOwl:shorthand obo:IAO_0000116 "editor_note")
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000116 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000116 "editor note")
AnnotationAssertion(rdfs:label obo:IAO_0000116 "editor note"@en)

# Annotation Property: obo:IAO_0000117 (term editor)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000117 "term editor"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000117 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000117 "Name of editor entering the term in the file. The term editor is a point of contact for information regarding the term. The term editor may be, but is not always, the author of the definition, which may have been worked upon by several people"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000117 "20110707, MC: label update to term editor and definition modified accordingly. See https://github.com/information-artifact-ontology/IAO/issues/115."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000117 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000117 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000117 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000117 "term editor")
AnnotationAssertion(rdfs:label obo:IAO_0000117 "term editor"@en)

# Annotation Property: obo:IAO_0000118 (alternative term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000118 "alternative term"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000118 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000118 "An alternative name for a class or property which means the same thing as the preferred name (semantically equivalent)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000118 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000118 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000118 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000118 "alternative term"@en)

# Annotation Property: obo:IAO_0000119 (definition source)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000119 "definition source"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000119 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000119 "Formal citation, e.g. identifier in external database to indicate / attribute source(s) for the definition. Free text indicate / attribute source(s) for the definition. EXAMPLE: Author Name, URI, MeSH Term C04, PUBMED ID, Wiki uri on 31.01.2007"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000119 "formal citation, e.g. identifier in external database to indicate / attribute source(s) for the definition. Free text indicate / attribute source(s) for the definition. EXAMPLE: Author Name, URI, MeSH Term C04, PUBMED ID, Wiki uri on 31.01.2007"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000119 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000119 "Discussion on obo-discuss mailing-list, see http://bit.ly/hgm99w")
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000119 "Discussion on obo-discuss mailing-list, see http://bit.ly/hgm99w"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000119 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000119 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000119 "definition source")
AnnotationAssertion(rdfs:label obo:IAO_0000119 "definition source"@en)

# Annotation Property: obo:IAO_0000231 (has obsolescence reason)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000231 "has obsolescence reason"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000231 "Relates an annotation property to an obsolescence reason. The values of obsolescence reasons come from a list of predefined terms, instances of the class obsolescence reason specification."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000231 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000231 "PERSON:Melanie Courtot"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000231 "has obsolescence reason"@en)

# Annotation Property: obo:IAO_0000232 (curator note)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000232 "curator note"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000232 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000232 "An administrative note of use for a curator but of no use for a user"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000232 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000232 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000232 "curator note"@en)

# Annotation Property: obo:IAO_0000233 (term tracker item)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000233 "term tracker item"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000233 "the URI for an OBI Terms ticket at sourceforge, such as https://sourceforge.net/p/obi/obi-terms/772/"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000233 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000233 "An IRI or similar locator for a request or discussion of an ontology term."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000233 "Person: Jie Zheng, Chris Stoeckert, Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000233 "Person: Jie Zheng, Chris Stoeckert, Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:comment obo:IAO_0000233 "The 'tracker item' can associate a tracker with a specific ontology term."@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000233 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000233 "term tracker item"@en)

# Annotation Property: obo:IAO_0000234 (ontology term requester)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000234 "ontology term requester"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000234 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000234 "The name of the person, project, or organization that motivated inclusion of an ontology term by requesting its addition."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000234 "Person: Jie Zheng, Chris Stoeckert, Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000234 "Person: Jie Zheng, Chris Stoeckert, Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:comment obo:IAO_0000234 "The 'term requester' can credit the person, organization or project who request the ontology term.")
AnnotationAssertion(rdfs:label obo:IAO_0000234 "ontology term requester"@en)

# Annotation Property: obo:IAO_0000411 (is denotator type)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000411 "is denotator type"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000411 "Relates an class defined in an ontology, to the type of it's denotator"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000411 "In OWL 2 add AnnotationPropertyRange('is denotator type' 'denotator type')"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000411 "Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000411 "is denotator type"@en)

# Annotation Property: obo:IAO_0000412 (imported from)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000412 "imported from"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000412 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000412 "For external terms/classes, the ontology from which the term was imported"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000412 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000412 "PERSON:Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000412 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000412 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000412 "imported from"@en)

# Annotation Property: obo:IAO_0000424 (expand expression to)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000424 "expand expression to"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000424 "ObjectProperty: RO_0002104
Label: has plasma membrane part
Annotations: IAO_0000424 \"http://purl.obolibrary.org/obo/BFO_0000051 some (http://purl.org/obo/owl/GO#GO_0005886 and http://purl.obolibrary.org/obo/BFO_0000051 some ?Y)\"
"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000424 "A macro expansion tag applied to an object property (or possibly a data property)  which can be used by a macro-expansion engine to generate more complex expressions from simpler ones"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000424 "Chris Mungall"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000424 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000424 "expand expression to"@en)

# Annotation Property: obo:IAO_0000425 (expand assertion to)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000425 "expand assertion to"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000425 "ObjectProperty: RO???
Label: spatially disjoint from
Annotations: expand_assertion_to \"DisjointClasses: (http://purl.obolibrary.org/obo/BFO_0000051 some ?X)  (http://purl.obolibrary.org/obo/BFO_0000051 some ?Y)\"
"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000425 "A macro expansion tag applied to an annotation property which can be expanded into a more detailed axiom."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000425 "Chris Mungall"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000425 "expand assertion to"@en)

# Annotation Property: obo:IAO_0000426 (first order logic expression)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000426 "first order logic expression"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000426 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000426 "first order logic expression"@en)

# Annotation Property: obo:IAO_0000427 (antisymmetric property)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000427 "antisymmetric property"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000427 "part_of antisymmetric property xsd:true"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000427 "Use boolean value xsd:true to indicate that the property is an antisymmetric property"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000427 "Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000427 "antisymmetric property"@en)

# Annotation Property: obo:IAO_0000589 (OBO foundry unique label)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000589 "OBO foundry unique label"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000589 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000589 "An alternative name for a class or property which is unique across the OBO Foundry."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000589 "The intended usage of that property is as follow: OBO foundry unique labels are automatically generated based on regular expressions provided by each ontology, so that SO could specify unique label = 'sequence ' + [label], etc. , MA could specify 'mouse + [label]' etc. Upon importing terms, ontology developers can choose to use the 'OBO foundry unique label' for an imported term or not. The same applies to tools ."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000589 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000589 "PERSON:Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000589 "PERSON:Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000589 "PERSON:Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000589 "GROUP:OBO Foundry <http://obofoundry.org/>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000589 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000589 "OBO foundry unique label"@en)

# Annotation Property: obo:IAO_0000596 (has ID digit count)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000596 "has ID digit count"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000596 "Ontology: <http://purl.obolibrary.org/obo/ro/idrange/>
  Annotations: 
     'has ID prefix': \"http://purl.obolibrary.org/obo/RO_\"
     'has ID digit count' : 7,
     rdfs:label \"RO id policy\"
     'has ID policy for': \"RO\""@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000596 "Relates an ontology used to record id policy to the number of digits in the URI. The URI is: the 'has ID prefix\" annotation property value concatenated with an integer in the id range (left padded with \"0\"s to make this many digits)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000596 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000596 "has ID digit count"@en)

# Annotation Property: obo:IAO_0000597 (has ID range allocated to)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000597 "has ID range allocated"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000597 "Datatype: idrange:1
Annotations: 'has ID range allocated to': \"Chris Mungall\"
EquivalentTo: xsd:integer[> 2151 , <= 2300]
"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000597 "Relates a datatype that encodes a range of integers to the name of the person or organization who can use those ids constructed in that range to define new terms"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000597 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000597 "has ID range allocated to"@en)

# Annotation Property: obo:IAO_0000598 (has ID policy for)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000598 "has ID policy for"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000598 "Ontology: <http://purl.obolibrary.org/obo/ro/idrange/>
  Annotations: 
     'has ID prefix': \"http://purl.obolibrary.org/obo/RO_\"
     'has ID digit count' : 7,
     rdfs:label \"RO id policy\"
     'has ID policy for': \"RO\""@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000598 "Relating an ontology used to record id policy to the ontology namespace whose policy it manages"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000598 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000598 "has ID policy for"@en)

# Annotation Property: obo:IAO_0000599 (has ID prefix)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000599 "has ID prefix"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000599 "Ontology: <http://purl.obolibrary.org/obo/ro/idrange/>
  Annotations: 
     'has ID prefix': \"http://purl.obolibrary.org/obo/RO_\"
     'has ID digit count' : 7,
     rdfs:label \"RO id policy\"
     'has ID policy for': \"RO\""@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000599 "Relates an ontology used to record id policy to a prefix concatenated with an integer in the id range (left padded with \"0\"s to make this many digits) to construct an ID for a term being created."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000599 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000599 "has ID prefix"@en)

# Annotation Property: obo:IAO_0000600 (elucidation)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000600 "elucidation"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000600 "person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000600 "Person:Barry Smith"@en)
AnnotationAssertion(obo:IAO_0000600 obo:IAO_0000600 "Primitive terms in a highest-level ontology such as BFO are terms which are so basic to our understanding of reality that there is no way of defining them in a non-circular fashion. For these, therefore, we can provide only elucidations, supplemented by examples and by axioms"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000600 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000600 "elucidation"@en)

# Annotation Property: obo:IAO_0000601 (has associated axiom(nl))

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000601 "has associated axiom(nl)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000601 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000601 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000600 obo:IAO_0000601 "An axiom associated with a term expressed using natural language"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000601 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000601 "has associated axiom(nl)"@en)

# Annotation Property: obo:IAO_0000602 (has associated axiom(fol))

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000602 "has associated axiom(fol)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000602 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000602 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000600 obo:IAO_0000602 "An axiom expressed in first order logic using CLIF syntax"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000602 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000602 "has associated axiom(fol)"@en)

# Annotation Property: obo:IAO_0000603 (is allocated id range)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000603 "is allocated id range"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000603 "Relates an ontology IRI to an (inclusive) range of IRIs in an OBO name space. The range is give as, e.g. \"IAO_0020000-IAO_0020999\""@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000603 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:comment obo:IAO_0000603 "Add as annotation triples in the granting ontology"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000603 "is allocated id range"@en)

# Annotation Property: obo:IAO_0000700 (has ontology root term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000700 "has ontology root term"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000700 "Ontology annotation property. Relates an ontology to a term that is a designated root term of the ontology. Display tools like OLS can use terms annotated with this property as the starting point for rendering the ontology class hierarchy. There can be more than one root."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000700 "Nicolas Matentzoglu"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000700 "has ontology root term"@en)

# Annotation Property: obo:IAO_0006011 (may be identical to)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0006011 "may be identical to"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0006011 "A annotation relationship between two terms in an ontology that may refer to the same (natural) type but where more evidence is required before terms are merged."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0006011 "David Osumi-Sutherland"@en)
AnnotationAssertion(obo:IAO_0000233 obo:IAO_0006011 "#40"@en)
AnnotationAssertion(obo:IAO_0000234 obo:IAO_0006011 "VFB"@en)
AnnotationAssertion(rdfs:comment obo:IAO_0006011 "Edges asserting this should be annotated with to record evidence supporting the assertion and its provenance."@en)
AnnotationAssertion(rdfs:label obo:IAO_0006011 "may be identical to"@en)

# Annotation Property: obo:IAO_0006012 (scheduled for obsoletion on or after)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0006012 "scheduled for obsoletion on or after"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0006012 "Used when the class or object is scheduled for obsoletion/deprecation on or after a particular date."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0006012 "Chris Mungall, Jie Zheng"@en)
AnnotationAssertion(obo:IAO_0000233 obo:IAO_0006012 "https://github.com/geneontology/go-ontology/issues/15532"@en)
AnnotationAssertion(obo:IAO_0000233 obo:IAO_0006012 "https://github.com/information-artifact-ontology/ontology-metadata/issues/32"@en)
AnnotationAssertion(obo:IAO_0000234 obo:IAO_0006012 "GO ontology"@en)
AnnotationAssertion(rdfs:label obo:IAO_0006012 "scheduled for obsoletion on or after"@en)
AnnotationPropertyRange(obo:IAO_0006012 xsd:dateTime)

# Annotation Property: obo:IAO_0010000 (has axiom label)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0010000 "has axiom id"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0010000 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0010000 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000600 obo:IAO_0010000 "A URI that is intended to be unique label for an axiom used for tracking change to the ontology. For an axiom expressed in different languages, each expression is given the same URI"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0010000 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0010000 "has axiom label"@en)

# Annotation Property: obo:IAO_0100001 (term replaced by)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0100001 "term replaced by"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0100001 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0100001 "Use on obsolete terms, relating the term to another term that can be used as a substitute"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0100001 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0100001 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:comment obo:IAO_0100001 "Add as annotation triples in the granting ontology"@en)
AnnotationAssertion(rdfs:label obo:IAO_0100001 "term replaced by"@en)

# Annotation Property: obo:RO_0001900 (obo:RO_0001900)

AnnotationAssertion(rdfs:isDefinedBy obo:RO_0001900 obo:ro.owl)

# Annotation Property: obo:RO_0002161 (obo:RO_0002161)

AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002161 obo:ro.owl)

# Annotation Property: obo:RO_0002575 (obo:RO_0002575)

AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002575 obo:ro.owl)

# Annotation Property: obo:RO_0002581 (is a defining property chain axiom)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002581 "If R <- P o Q is a defining property chain axiom, then it also holds that R -> P o Q. Note that this cannot be expressed directly in OWL")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002581 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002581 "is a defining property chain axiom")

# Annotation Property: obo:RO_0002582 (is a defining property chain axiom where second argument is reflexive)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002582 "If R <- P o Q is a defining property chain axiom, then (1) R -> P o Q holds and (2) Q is either reflexive or locally reflexive. A corollary of this is that P SubPropertyOf R.")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002582 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002582 "is a defining property chain axiom where second argument is reflexive")

# Annotation Property: obo:RO_0002604 (obo:RO_0002604)

AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002604 obo:ro.owl)

# Annotation Property: obo:RO_0004049 (obo:RO_0004049)

AnnotationAssertion(rdfs:isDefinedBy obo:RO_0004049 obo:ro.owl)

# Annotation Property: obo:RO_0004050 (obo:RO_0004050)

AnnotationAssertion(rdfs:isDefinedBy obo:RO_0004050 obo:ro.owl)

# Annotation Property: obo:RO_0040042 (obo:RO_0040042)

AnnotationAssertion(rdfs:isDefinedBy obo:RO_0040042 obo:ro.owl)

# Annotation Property: obo:STATO_0000032 (STATO alternative term)

AnnotationAssertion(obo:IAO_0000115 obo:STATO_0000032 "an alternative term used for STATO statistical ontology and ISA team"@en)
AnnotationAssertion(obo:IAO_0000117 obo:STATO_0000032 "Alejandra Gonzalez-Beltran"@en)
AnnotationAssertion(obo:IAO_0000117 obo:STATO_0000032 "Orlaith Burke")
AnnotationAssertion(obo:IAO_0000117 obo:STATO_0000032 "Philippe Rocca-Serra"@en)
AnnotationAssertion(rdfs:label obo:STATO_0000032 "STATO alternative term"@en)

# Annotation Property: ncbitaxon:has_rank (ncbitaxon:has_rank)

AnnotationAssertion(rdfs:isDefinedBy ncbitaxon:has_rank obo:ncbitaxon.owl)

# Annotation Property: dc:source (dc:source)

AnnotationAssertion(rdfs:isDefinedBy dc:source <http://purl.org/dc/elements/1.1.owl>)

# Annotation Property: terms:creator (terms:creator)

AnnotationAssertion(rdfs:isDefinedBy terms:creator <http://purl.org/dc/terms.owl>)

# Annotation Property: terms:source (terms:source)

AnnotationAssertion(rdfs:isDefinedBy terms:source <http://purl.org/dc/terms.owl>)

# Annotation Property: swrla:isRuleEnabled (swrla:isRuleEnabled)

AnnotationAssertion(rdfs:isDefinedBy swrla:isRuleEnabled <http://swrl.stanford.edu/ontologies/3.3/swrla.owl>)

# Annotation Property: oboInOwl:created_by (oboInOwl:created_by)

AnnotationAssertion(rdfs:isDefinedBy oboInOwl:created_by <http://www.geneontology.org/formats/oboinowl.owl>)

# Annotation Property: oboInOwl:creation_date (oboInOwl:creation_date)

AnnotationAssertion(rdfs:isDefinedBy oboInOwl:creation_date <http://www.geneontology.org/formats/oboinowl.owl>)

# Annotation Property: oboInOwl:hasAlternativeId (has_alternative_id)

AnnotationAssertion(rdfs:isDefinedBy oboInOwl:hasAlternativeId <http://www.geneontology.org/formats/oboinowl.owl>)
AnnotationAssertion(rdfs:label oboInOwl:hasAlternativeId "has_alternative_id")

# Annotation Property: oboInOwl:hasDbXref (database_cross_reference)

AnnotationAssertion(rdfs:isDefinedBy oboInOwl:hasDbXref <http://www.geneontology.org/formats/oboinowl.owl>)
AnnotationAssertion(rdfs:label oboInOwl:hasDbXref "database_cross_reference")

# Annotation Property: oboInOwl:hasExactSynonym (has_exact_synonym)

AnnotationAssertion(rdfs:isDefinedBy oboInOwl:hasExactSynonym <http://www.geneontology.org/formats/oboinowl.owl>)
AnnotationAssertion(rdfs:label oboInOwl:hasExactSynonym "has_exact_synonym")

# Annotation Property: oboInOwl:hasNarrowSynonym (oboInOwl:hasNarrowSynonym)

AnnotationAssertion(rdfs:isDefinedBy oboInOwl:hasNarrowSynonym <http://www.geneontology.org/formats/oboinowl.owl>)

# Annotation Property: oboInOwl:hasOBONamespace (oboInOwl:hasOBONamespace)

AnnotationAssertion(rdfs:isDefinedBy oboInOwl:hasOBONamespace <http://www.geneontology.org/formats/oboinowl.owl>)

# Annotation Property: oboInOwl:hasRelatedSynonym (has_related_synonym)

AnnotationAssertion(rdfs:isDefinedBy oboInOwl:hasRelatedSynonym <http://www.geneontology.org/formats/oboinowl.owl>)
AnnotationAssertion(rdfs:label oboInOwl:hasRelatedSynonym "has_related_synonym")

# Annotation Property: oboInOwl:hasSynonymType (oboInOwl:hasSynonymType)

AnnotationAssertion(rdfs:isDefinedBy oboInOwl:hasSynonymType <http://www.geneontology.org/formats/oboinowl.owl>)

# Annotation Property: oboInOwl:id (oboInOwl:id)

AnnotationAssertion(rdfs:isDefinedBy oboInOwl:id <http://www.geneontology.org/formats/oboinowl.owl>)

# Annotation Property: oboInOwl:inSubset (in_subset)

AnnotationAssertion(rdfs:isDefinedBy oboInOwl:inSubset <http://www.geneontology.org/formats/oboinowl.owl>)
AnnotationAssertion(rdfs:label oboInOwl:inSubset "in_subset")

# Annotation Property: oboInOwl:shorthand (oboInOwl:shorthand)

AnnotationAssertion(rdfs:isDefinedBy oboInOwl:shorthand <http://www.geneontology.org/formats/oboinowl.owl>)

# Annotation Property: rdfs:comment (rdfs:comment)

AnnotationAssertion(rdfs:isDefinedBy rdfs:comment <http://www.w3.org/2000/01/rdf-schema.owl>)

# Annotation Property: rdfs:isDefinedBy (rdfs:isDefinedBy)

AnnotationAssertion(rdfs:isDefinedBy rdfs:isDefinedBy <http://www.w3.org/2000/01/rdf-schema.owl>)

# Annotation Property: rdfs:label (label)

AnnotationAssertion(obo:IAO_0000111 rdfs:label "label")
AnnotationAssertion(rdfs:isDefinedBy rdfs:label <http://www.w3.org/2000/01/rdf-schema.owl>)
AnnotationAssertion(rdfs:label rdfs:label "label")

# Annotation Property: rdfs:seeAlso (rdfs:seeAlso)

AnnotationAssertion(rdfs:isDefinedBy rdfs:seeAlso <http://www.w3.org/2000/01/rdf-schema.owl>)

# Annotation Property: foaf:page (foaf:page)

AnnotationAssertion(rdfs:isDefinedBy foaf:page <http://xmlns.com/foaf/0.1.owl>)


############################
#   Object Properties
############################

# Object Property: obo:BFO_0000050 (part of)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000050 "is part of"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "my brain is part of my body (continuant parthood, two material entities)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "my stomach cavity is part of my stomach (continuant parthood, immaterial entity is part of material entity)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "this day is part of this year (occurrent parthood)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000050 "a core relation that holds between a part and its whole"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Everything is part of itself. Any part of any part of a thing is itself part of that thing. Two distinct things cannot be part of each other."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Parthood requires the part and the whole to have compatible classes: only an occurrent can be part of an occurrent; only a process can be part of a process; only a continuant can be part of a continuant; only an independent continuant can be part of an independent continuant; only an immaterial entity can be part of an immaterial entity; only a specifically dependent continuant can be part of a specifically dependent continuant; only a generically dependent continuant can be part of a generically dependent continuant. (This list is not exhaustive.)

A continuant cannot be part of an occurrent: use 'participates in'. An occurrent cannot be part of a continuant: use 'has participant'. A material entity cannot be part of an immaterial entity: use 'has location'. A specifically dependent continuant cannot be part of an independent continuant: use 'inheres in'. An independent continuant cannot be part of a specifically dependent continuant: use 'bearer of'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000050 "part_of"@en)
AnnotationAssertion(obo:RO_0001900 obo:BFO_0000050 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:BFO_0000050 "part of"@en)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000050 "http://www.obofoundry.org/ro/#OBO_REL:part_of")
InverseObjectProperties(obo:BFO_0000050 obo:BFO_0000051)
TransitiveObjectProperty(obo:BFO_0000050)

# Object Property: obo:BFO_0000051 (has part)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000051 "has part"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "my body has part my brain (continuant parthood, two material entities)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "my stomach has part my stomach cavity (continuant parthood, material entity has part immaterial entity)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "this year has part this day (occurrent parthood)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000051 "a core relation that holds between a whole and its part"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Everything has itself as a part. Any part of any part of a thing is itself part of that thing. Two distinct things cannot have each other as a part."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Parthood requires the part and the whole to have compatible classes: only an occurrent have an occurrent as part; only a process can have a process as part; only a continuant can have a continuant as part; only an independent continuant can have an independent continuant as part; only a specifically dependent continuant can have a specifically dependent continuant as part; only a generically dependent continuant can have a generically dependent continuant as part. (This list is not exhaustive.)

A continuant cannot have an occurrent as part: use 'participates in'. An occurrent cannot have a continuant as part: use 'has participant'. An immaterial entity cannot have a material entity as part: use 'location of'. An independent continuant cannot have a specifically dependent continuant as part: use 'bearer of'. A specifically dependent continuant cannot have an independent continuant as part: use 'inheres in'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000051 "has_part"@en)
AnnotationAssertion(obo:RO_0001900 obo:BFO_0000051 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:BFO_0000051 "has part"@en)
TransitiveObjectProperty(obo:BFO_0000051)

# Object Property: obo:BFO_0000054 (realized in)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000054 "realized in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this disease is realized in this disease course"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this fragility is realized in this shattering"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this investigator role is realized in this investigation"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000054 "is realized by"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000054 "realized_in"@en)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000054 "[copied from inverse property 'realizes'] to say that b realizes c at t is to assert that there is some material entity d & b is a process which has participant d at t & c is a disposition or role of which d is bearer_of at t& the type instantiated by b is correlated with the type instantiated by c. (axiom label in BFO2 Reference: [059-003])"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000054 "Paraphrase of elucidation: a relation between a realizable entity and a process, where there is some material entity that is bearer of the realizable entity and participates in the process, and the realizable entity comes to be realized in the course of the process")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000054 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000054 "realized in"@en)
InverseObjectProperties(obo:BFO_0000054 obo:BFO_0000055)
ObjectPropertyDomain(obo:BFO_0000054 obo:BFO_0000017)
ObjectPropertyRange(obo:BFO_0000054 obo:BFO_0000015)

# Object Property: obo:BFO_0000055 (realizes)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000055 "realizes"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this disease course realizes this disease"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this investigation realizes this investigator role"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this shattering realizes this fragility"@en)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000055 "to say that b realizes c at t is to assert that there is some material entity d & b is a process which has participant d at t & c is a disposition or role of which d is bearer_of at t& the type instantiated by b is correlated with the type instantiated by c. (axiom label in BFO2 Reference: [059-003])"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000055 "Paraphrase of elucidation: a relation between a process and a realizable entity, where there is some material entity that is bearer of the realizable entity and participates in the process, and the realizable entity comes to be realized in the course of the process")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000055 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000055 "realizes"@en)
ObjectPropertyDomain(obo:BFO_0000055 obo:BFO_0000015)
ObjectPropertyRange(obo:BFO_0000055 obo:BFO_0000017)

# Object Property: obo:BFO_0000062 (preceded by)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000062 "preceded by"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000062 "x is preceded by y if and only if the time point at which y ends is before or equivalent to the time point at which x starts. Formally: x preceded by y iff ω(y) <= α(x), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000062 "An example is: translation preceded_by transcription; aging preceded_by development (not however death preceded_by aging). Where derives_from links classes of continuants, preceded_by links classes of processes. Clearly, however, these two relations are not independent of each other. Thus if cells of type C1 derive_from cells of type C, then any cell division involving an instance of C1 in a given lineage is preceded_by cellular processes involving an instance of C.    The assertion P preceded_by P1 tells us something about Ps in general: that is, it tells us something about what happened earlier, given what we know about what happened later. Thus it does not provide information pointing in the opposite direction, concerning instances of P1 in general; that is, that each is such as to be succeeded by some instance of P. Note that an assertion to the effect that P preceded_by P1 is rather weak; it tells us little about the relations between the underlying instances in virtue of which the preceded_by relation obtains. Typically we will be interested in stronger relations, for example in the relation immediately_preceded_by, or in relations which combine preceded_by with a condition to the effect that the corresponding instances of P and P1 share participants, or that their participants are connected by relations of derivation, or (as a first step along the road to a treatment of causality) that the one process in some way affects (for example, initiates or regulates) the other."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000062 "is preceded by"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000062 "preceded_by"@en)
AnnotationAssertion(dc:source obo:BFO_0000062 "http://www.obofoundry.org/ro/#OBO_REL:preceded_by")
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000062 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000062 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000062 "preceded by"@en)
SubObjectPropertyOf(obo:BFO_0000062 obo:RO_0002086)
InverseObjectProperties(obo:BFO_0000062 obo:BFO_0000063)
TransitiveObjectProperty(obo:BFO_0000062)
ObjectPropertyDomain(obo:BFO_0000062 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000062 obo:BFO_0000003)

# Object Property: obo:BFO_0000063 (precedes)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000063 "precedes"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000063 "x precedes y if and only if the time point at which x ends is before or equivalent to the time point at which y starts. Formally: x precedes y iff ω(x) <= α(y), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point."@en)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000063 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000063 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000063 "precedes"@en)
SubObjectPropertyOf(obo:BFO_0000063 obo:RO_0002222)
TransitiveObjectProperty(obo:BFO_0000063)
ObjectPropertyDomain(obo:BFO_0000063 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000063 obo:BFO_0000003)

# Object Property: obo:BFO_0000066 (occurs in)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000066 "occurs in"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000066 "b occurs_in c =def b is a process and c is a material entity or immaterial entity& there exists a spatiotemporal region r and b occupies_spatiotemporal_region r.& forall(t) if b exists_at t then c exists_at t & there exist spatial regions s and s’ where & b spatially_projects_onto s at t& c is occupies_spatial_region s’ at t& s is a proper_continuant_part_of s’ at t"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000066 "occurs_in"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000066 "unfolds in"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000066 "unfolds_in"@en)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000066 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000066 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000066 obo:valid_for_gocam)
AnnotationAssertion(rdfs:comment obo:BFO_0000066 "Paraphrase of definition: a relation between a process and an independent continuant, in which the process takes place entirely within the independent continuant")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000066 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000066 "occurs in"@en)
InverseObjectProperties(obo:BFO_0000066 obo:BFO_0000067)
ObjectPropertyDomain(obo:BFO_0000066 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000066 obo:BFO_0000004)

# Object Property: obo:BFO_0000067 (contains process)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000067 "site of"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000067 "[copied from inverse property 'occurs in'] b occurs_in c =def b is a process and c is a material entity or immaterial entity& there exists a spatiotemporal region r and b occupies_spatiotemporal_region r.& forall(t) if b exists_at t then c exists_at t & there exist spatial regions s and s’ where & b spatially_projects_onto s at t& c is occupies_spatial_region s’ at t& s is a proper_continuant_part_of s’ at t"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000067 "Paraphrase of definition: a relation between an independent continuant and a process, in which the process takes place entirely within the independent continuant")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000067 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000067 "contains process"@en)

# Object Property: obo:IAO_0000136 (is about)

AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000136 "This document is about information artifacts and their representations"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000136 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000136 "A (currently) primitive relation that relates an information artifact to an entity."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000136 "7/6/2009 Alan Ruttenberg. Following discussion with Jonathan Rees, and introduction of \"mentions\" relation. Weaken the is_about relationship to be primitive. 

We will try to build it back up by elaborating the various subproperties that are more precisely defined.

Some currently missing phenomena that should be considered \"about\" are predications - \"The only person who knows the answer is sitting beside me\" , Allegory, Satire, and other literary forms that can be topical without explicitly mentioning the topic."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000136 "person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000136 "Smith, Ceusters, Ruttenberg, 2000 years of philosophy"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000136 "is about"@en)

# Object Property: obo:PCO_0000055 (obsolete has member of)

AnnotationAssertion(obo:IAO_0000231 obo:PCO_0000055 obo:IAO_0000103)
AnnotationAssertion(rdfs:label obo:PCO_0000055 "obsolete has member of"@en)
AnnotationAssertion(owl:deprecated obo:PCO_0000055 "true"^^xsd:boolean)

# Object Property: obo:RO_0000052 (inheres in)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000052 "inheres in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000052 "this fragility inheres in this vase"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000052 "this red color inheres in this apple"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000052 "a relation between a specifically dependent continuant (the dependent) and an independent continuant (the bearer), in which the dependent specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000052 "A dependent inheres in its bearer at all times for which the dependent exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000052 "inheres_in"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000052 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0000052 "inheres in"@en)
InverseObjectProperties(obo:RO_0000052 obo:RO_0000053)

# Object Property: obo:RO_0000053 (bearer of)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000053 "bearer of"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000053 "this apple is bearer of this red color"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000053 "this vase is bearer of this fragility"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000053 "a relation between an independent continuant (the bearer) and a specifically dependent continuant (the dependent), in which the dependent specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000053 "A bearer can have many dependents, and its dependents can exist for different periods of time, but none of its dependents can exist when the bearer does not exist."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "bearer_of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "is bearer of"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000053 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0000053 "bearer of"@en)
ObjectPropertyRange(obo:RO_0000053 obo:BFO_0000020)

# Object Property: obo:RO_0000056 (participates in)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000056 "participates in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this blood clot participates in this blood coagulation"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this input material (or this output material) participates in this process"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this investigator participates in this investigation"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000056 "a relation between a continuant and a process, in which the continuant is somehow involved in the process"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000056 "participates_in"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0000056 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0000056 "participates in"@en)
InverseObjectProperties(obo:RO_0000056 obo:RO_0000057)
ObjectPropertyDomain(obo:RO_0000056 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0000056 obo:BFO_0000003)

# Object Property: obo:RO_0000057 (has participant)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000057 "has participant"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this blood coagulation has participant this blood clot"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this investigation has participant this investigator"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this process has participant this input material (or this output material)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000057 "a relation between a process and a continuant, in which the continuant is somehow involved in the process"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000057 "Has_participant is a primitive instance-level relation between a process, a continuant, and a time at which the continuant participates in some way in the process. The relation obtains, for example, when this particular process of oxygen exchange across this particular alveolar membrane has_participant this particular sample of hemoglobin at this particular time."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000057 "has_participant"@en)
AnnotationAssertion(dc:source obo:RO_0000057 "http://www.obofoundry.org/ro/#OBO_REL:has_participant")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0000057 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0000057 "has participant"@en)
ObjectPropertyDomain(obo:RO_0000057 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0000057 obo:BFO_0000002)

# Object Property: obo:RO_0000058 (is concretized as)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000058 "A journal article is an information artifact that inheres in some number of printed journals. For each copy of the printed journal there is some quality that carries the journal article, such as a pattern of ink. The journal article (a generically dependent continuant) is concretized as the quality (a specifically dependent continuant), and both depend on that copy of the printed journal (an independent continuant)."@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000058 "An investigator reads a protocol and forms a plan to carry out an assay. The plan is a realizable entity (a specifically dependent continuant) that concretizes the protocol (a generically dependent continuant), and both depend on the investigator (an independent continuant). The plan is then realized by the assay (a process)."@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000058 "A relationship between a generically dependent continuant and a specifically dependent continuant, in which the generically dependent continuant depends on some independent continuant in virtue of the fact that the specifically dependent continuant also depends on that same independent continuant. A generically dependent continuant may be concretized as multiple specifically dependent continuants."@en)
AnnotationAssertion(rdfs:label obo:RO_0000058 "is concretized as"@en)
InverseObjectProperties(obo:RO_0000058 obo:RO_0000059)
ObjectPropertyDomain(obo:RO_0000058 obo:BFO_0000031)
ObjectPropertyRange(obo:RO_0000058 obo:BFO_0000020)

# Object Property: obo:RO_0000059 (concretizes)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000059 "A journal article is an information artifact that inheres in some number of printed journals. For each copy of the printed journal there is some quality that carries the journal article, such as a pattern of ink. The quality (a specifically dependent continuant) concretizes the journal article (a generically dependent continuant), and both depend on that copy of the printed journal (an independent continuant)."@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000059 "An investigator reads a protocol and forms a plan to carry out an assay. The plan is a realizable entity (a specifically dependent continuant) that concretizes the protocol (a generically dependent continuant), and both depend on the investigator (an independent continuant). The plan is then realized by the assay (a process)."@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000059 "A relationship between a specifically dependent continuant and a generically dependent continuant, in which the generically dependent continuant depends on some independent continuant in virtue of the fact that the specifically dependent continuant also depends on that same independent continuant. Multiple specifically dependent continuants can concretize the same generically dependent continuant."@en)
AnnotationAssertion(rdfs:label obo:RO_0000059 "concretizes"@en)
ObjectPropertyDomain(obo:RO_0000059 obo:BFO_0000020)
ObjectPropertyRange(obo:RO_0000059 obo:BFO_0000031)

# Object Property: obo:RO_0000079 (function of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000079 "this catalysis function is a function of this enzyme"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000079 "a relation between a function and an independent continuant (the bearer), in which the function specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000079 "A function inheres in its bearer at all times for which the function exists, however the function need not be realized at all the times that the function exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000079 "function_of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000079 "is function of"@en)
AnnotationAssertion(rdfs:label obo:RO_0000079 "function of"@en)
SubObjectPropertyOf(obo:RO_0000079 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000079 obo:RO_0000085)
ObjectPropertyDomain(obo:RO_0000079 obo:BFO_0000034)

# Object Property: obo:RO_0000080 (quality of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000080 "this red color is a quality of this apple"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000080 "a relation between a quality and an independent continuant (the bearer), in which the quality specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000080 "A quality inheres in its bearer at all times for which the quality exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000080 "is quality of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000080 "quality_of"@en)
AnnotationAssertion(rdfs:label obo:RO_0000080 "quality of"@en)
SubObjectPropertyOf(obo:RO_0000080 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000080 obo:RO_0000086)

# Object Property: obo:RO_0000081 (role of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000081 "this investigator role is a role of this person"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000081 "a relation between a role and an independent continuant (the bearer), in which the role specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000081 "A role inheres in its bearer at all times for which the role exists, however the role need not be realized at all the times that the role exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000081 "is role of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000081 "role_of"@en)
AnnotationAssertion(rdfs:label obo:RO_0000081 "role of"@en)
SubObjectPropertyOf(obo:RO_0000081 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000081 obo:RO_0000087)

# Object Property: obo:RO_0000085 (has function)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000085 "this enzyme has function this catalysis function (more colloquially: this enzyme has this catalysis function)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000085 "a relation between an independent continuant (the bearer) and a function, in which the function specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000085 "A bearer can have many functions, and its functions can exist for different periods of time, but none of its functions can exist when the bearer does not exist. A function need not be realized at all the times that the function exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000085 "has_function"@en)
AnnotationAssertion(rdfs:label obo:RO_0000085 "has function"@en)
SubObjectPropertyOf(obo:RO_0000085 obo:RO_0000053)
ObjectPropertyDomain(obo:RO_0000085 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000085 obo:BFO_0000034)

# Object Property: obo:RO_0000086 (has quality)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000086 "this apple has quality this red color"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000086 "a relation between an independent continuant (the bearer) and a quality, in which the quality specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000086 "A bearer can have many qualities, and its qualities can exist for different periods of time, but none of its qualities can exist when the bearer does not exist."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000086 "has_quality"@en)
AnnotationAssertion(rdfs:label obo:RO_0000086 "has quality"@en)
SubObjectPropertyOf(obo:RO_0000086 obo:RO_0000053)
ObjectPropertyRange(obo:RO_0000086 obo:BFO_0000019)

# Object Property: obo:RO_0000087 (has role)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000087 "this person has role this investigator role (more colloquially: this person has this role of investigator)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000087 "a relation between an independent continuant (the bearer) and a role, in which the role specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000087 "A bearer can have many roles, and its roles can exist for different periods of time, but none of its roles can exist when the bearer does not exist. A role need not be realized at all the times that the role exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000087 "has_role"@en)
AnnotationAssertion(rdfs:label obo:RO_0000087 "has role"@en)
SubObjectPropertyOf(obo:RO_0000087 obo:RO_0000053)
ObjectPropertyDomain(obo:RO_0000087 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000087 obo:BFO_0000023)

# Object Property: obo:RO_0000091 (has disposition)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0000091 "a relation between an independent continuant (the bearer) and a disposition, in which the disposition specifically depends on the bearer for its existence"@en)
AnnotationAssertion(rdfs:label obo:RO_0000091 "has disposition"@en)
SubObjectPropertyOf(obo:RO_0000091 obo:RO_0000053)
InverseObjectProperties(obo:RO_0000091 obo:RO_0000092)
ObjectPropertyDomain(obo:RO_0000091 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000091 obo:BFO_0000016)

# Object Property: obo:RO_0000092 (disposition of)

AnnotationAssertion(rdfs:label obo:RO_0000092 "disposition of"@en)
SubObjectPropertyOf(obo:RO_0000092 obo:RO_0000052)

# Object Property: obo:RO_0001000 (derives from)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0001000 "this cell derives from this parent cell (cell division)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001000 "this nucleus derives from this parent nucleus (nuclear division)"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0001000 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001000 "a relation between two distinct material entities, the new entity and the old entity, in which the new entity begins to exist when the old entity ceases to exist, and the new entity inherits the significant portion of the matter of the old entity"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001000 "This is a very general relation. More specific relations are preferred when applicable, such as 'directly develops from'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0001000 "derives_from"@en)
AnnotationAssertion(rdfs:label obo:RO_0001000 "derives from"@en)
InverseObjectProperties(obo:RO_0001000 obo:RO_0001001)

# Object Property: obo:RO_0001001 (derives into)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0001001 "this parent cell derives into this cell (cell division)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001001 "this parent nucleus derives into this nucleus (nuclear division)"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0001001 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001001 "a relation between two distinct material entities, the old entity and the new entity, in which the new entity begins to exist when the old entity ceases to exist, and the new entity inherits the significant portion of the matter of the old entity"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001001 "This is a very general relation. More specific relations are preferred when applicable, such as 'directly develops into'. To avoid making statements about a future that may not come to pass, it is often better to use the backward-looking 'derives from' rather than the forward-looking 'derives into'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0001001 "derives_into"@en)
AnnotationAssertion(rdfs:label obo:RO_0001001 "derives into"@en)

# Object Property: obo:RO_0001015 (location of)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0001015 "is location of"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001015 "my head is the location of my brain"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001015 "this cage is the location of this rat"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001015 "a relation between two independent continuants, the location and the target, in which the target is entirely within the location"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001015 "Most location relations will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0001015 "location_of"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0001015 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0001015 "location of"@en)
InverseObjectProperties(obo:RO_0001015 obo:RO_0001025)
TransitiveObjectProperty(obo:RO_0001015)

# Object Property: obo:RO_0001025 (located in)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0001025 "located in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001025 "my brain is located in my head"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001025 "this rat is located in this cage"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001025 "a relation between two independent continuants, the target and the location, in which the target is entirely within the location"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001025 "Location as a relation between instances: The primitive instance-level relation c located_in r at t reflects the fact that each continuant is at any given time associated with exactly one spatial region, namely its exact location. Following we can use this relation to define a further instance-level location relation - not between a continuant and the region which it exactly occupies, but rather between one continuant and another. c is located in c1, in this sense, whenever the spatial region occupied by c is part_of the spatial region occupied by c1.    Note that this relation comprehends both the relation of exact location between one continuant and another which obtains when r and r1 are identical (for example, when a portion of fluid exactly fills a cavity), as well as those sorts of inexact location relations which obtain, for example, between brain and head or between ovum and uterus"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001025 "Most location relations will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0001025 "located_in"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0001025 obo:RO_0001901)
AnnotationAssertion(dc:source obo:RO_0001025 "http://www.obofoundry.org/ro/#OBO_REL:located_in")
AnnotationAssertion(rdfs:label obo:RO_0001025 "located in"@en)
TransitiveObjectProperty(obo:RO_0001025)
ObjectPropertyDomain(Annotation(obo:IAO_0000116 "This is redundant with the more specific 'independent and not spatial region' constraint. We leave in the redundant axiom for use with reasoners that do not use negation.") obo:RO_0001025 obo:BFO_0000004)
ObjectPropertyDomain(obo:RO_0001025 ObjectIntersectionOf(obo:BFO_0000004 ObjectComplementOf(obo:BFO_0000006)))
ObjectPropertyRange(Annotation(obo:IAO_0000116 "This is redundant with the more specific 'independent and not spatial region' constraint. We leave in the redundant axiom for use with reasoners that do not use negation.") obo:RO_0001025 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0001025 ObjectIntersectionOf(obo:BFO_0000004 ObjectComplementOf(obo:BFO_0000006)))

# Object Property: obo:RO_0002000 (2D boundary of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002000 "the surface of my skin is a 2D boundary of my body"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002000 "a relation between a 2D immaterial entity (the boundary) and a material entity, in which the boundary delimits the material entity"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002000 "A 2D boundary may have holes and gaps, but it must be a single connected entity, not an aggregate of several disconnected parts."@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002000 "Although the boundary is two-dimensional, it exists in three-dimensional space and thus has a 3D shape."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002000 "2D_boundary_of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002000 "boundary of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002000 "is 2D boundary of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002000 "is boundary of"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002000 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002000 "2D boundary of"@en)
InverseObjectProperties(obo:RO_0002000 obo:RO_0002002)

# Object Property: obo:RO_0002002 (has 2D boundary)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002002 "my body has 2D boundary the surface of my skin"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002002 "a relation between a material entity and a 2D immaterial entity (the boundary), in which the boundary delimits the material entity"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002002 "A 2D boundary may have holes and gaps, but it must be a single connected entity, not an aggregate of several disconnected parts."@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002002 "Although the boundary is two-dimensional, it exists in three-dimensional space and thus has a 3D shape."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002002 "has boundary"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002002 "has_2D_boundary"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002002 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002002 "has 2D boundary"@en)
ObjectPropertyDomain(obo:RO_0002002 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002002 obo:BFO_0000141)

# Object Property: obo:RO_0002022 (directly regulated by)

AnnotationAssertion(oboInOwl:created_by obo:RO_0002022 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002022 "2017-09-17T13:52:24Z"^^xsd:dateTime)
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") rdfs:comment obo:RO_0002022 "Process(P2) is directly regulated by process(P1) iff: P1 regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding  regulates the kinase activity (P2) of protein B then P1 directly regulates P2.")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002022 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002022 "directly regulated by")
SubObjectPropertyOf(obo:RO_0002022 obo:RO_0002334)
InverseObjectProperties(obo:RO_0002022 obo:RO_0002578)

# Object Property: obo:RO_0002023 (directly negatively regulated by)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") obo:IAO_0000115 obo:RO_0002023 "Process(P2) is directly negatively regulated by process(P1) iff: P1 negatively regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding  negatively regulates the kinase activity (P2) of protein B then P2 directly negatively regulated by P1.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002023 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002023 "2017-09-17T13:52:38Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002023 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002023 "directly negatively regulated by")
SubObjectPropertyOf(obo:RO_0002023 obo:RO_0002022)
InverseObjectProperties(obo:RO_0002023 obo:RO_0002630)

# Object Property: obo:RO_0002024 (directly positively regulated by)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") obo:IAO_0000115 obo:RO_0002024 "Process(P2) is directly postively regulated by process(P1) iff: P1 positively regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding positively regulates the kinase activity (P2) of protein B then P2 is directly postively regulated by P1.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002024 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002024 "2017-09-17T13:52:47Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002024 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002024 "directly positively regulated by")
SubObjectPropertyOf(obo:RO_0002024 obo:RO_0002022)
InverseObjectProperties(obo:RO_0002024 obo:RO_0002629)

# Object Property: obo:RO_0002086 (ends after)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002086 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002086 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:comment obo:RO_0002086 "X ends_after Y iff: end(Y) before_or_simultaneous_with end(X)"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002086 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002086 "ends after"@en)
SubObjectPropertyOf(obo:RO_0002086 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002086)

# Object Property: obo:RO_0002087 (immediately preceded by)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002087 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002087 "starts_at_end_of")
AnnotationAssertion(rdfs:comment obo:RO_0002087 "X immediately_preceded_by Y iff: end(X) simultaneous_with start(Y)"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002087 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002087 "immediately preceded by"@en)
SubObjectPropertyOf(obo:RO_0002087 obo:BFO_0000062)
InverseObjectProperties(obo:RO_0002087 obo:RO_0002090)

# Object Property: obo:RO_0002090 (immediately precedes)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002090 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002090 "ends_at_start_of")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002090 "meets")
AnnotationAssertion(obo:RO_0002575 obo:RO_0002090 obo:BFO_0000063)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002090 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:comment obo:RO_0002090 "X immediately_precedes_Y iff: end(X) simultaneous_with start(Y)"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002090 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002090 "immediately precedes"@en)
SubObjectPropertyOf(obo:RO_0002090 obo:BFO_0000063)

# Object Property: obo:RO_0002131 (overlaps)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002131 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002131 "x overlaps y if and only if there exists some z such that x has part z and z part of y")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002131 "http://purl.obolibrary.org/obo/BFO_0000051 some (http://purl.obolibrary.org/obo/BFO_0000050 some ?Y)")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002131 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002131 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002131 obo:valid_for_gocam)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002131 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002131 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002131 "overlaps"@en)
SubObjectPropertyOf(obo:RO_0002131 obo:RO_0002323)

# Object Property: obo:RO_0002211 (regulates)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002211 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002211 "process(P1) regulates process(P2) iff: P1 results in the initiation or termination of P2 OR affects the frequency of its initiation or termination OR affects the magnitude or rate of output of P2.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002211 "We use 'regulates' here to specifically imply control. However, many colloquial usages of the term correctly correspond to the weaker relation of 'causally upstream of or within' (aka influences). Consider relabeling to make things more explicit")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002211 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002211 "David Hill")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002211 "Tanya Berardini")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002211 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002211 "GO")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002211 "Regulation precludes parthood; the regulatory process may not be within the regulated process.")
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002211 "regulates (processual)")
AnnotationAssertion(obo:IAO_0000600 obo:RO_0002211 "false"^^xsd:boolean)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002211 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002211 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002211 obo:valid_for_gocam)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002211 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002211 "regulates"@en)
SubObjectPropertyOf(obo:RO_0002211 obo:RO_0002411)
InverseObjectProperties(obo:RO_0002211 obo:RO_0002334)
TransitiveObjectProperty(obo:RO_0002211)
ObjectPropertyDomain(obo:RO_0002211 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002211 obo:BFO_0000015)

# Object Property: obo:RO_0002212 (negatively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002212 "Process(P1) negatively regulates process(P2) iff: P1 terminates P2, or P1 descreases the the frequency of initiation of P2 or the magnitude or rate of output of P2.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002212 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002212 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002212 "negatively regulates (process to process)")
AnnotationAssertion(obo:RO_0004050 obo:RO_0002212 obo:RO_0002211)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002212 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002212 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002212 obo:valid_for_gocam)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002212 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002212 "negatively regulates"@en)
SubObjectPropertyOf(obo:RO_0002212 obo:RO_0002211)
SubObjectPropertyOf(obo:RO_0002212 obo:RO_0002305)
InverseObjectProperties(obo:RO_0002212 obo:RO_0002335)

# Object Property: obo:RO_0002213 (positively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002213 "Process(P1) postively regulates process(P2) iff: P1 initiates P2, or P1 increases the the frequency of initiation of P2 or the magnitude or rate of output of P2.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002213 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002213 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002213 "positively regulates (process to process)")
AnnotationAssertion(obo:RO_0004049 obo:RO_0002213 obo:RO_0002211)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002213 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002213 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002213 obo:valid_for_gocam)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002213 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002213 "positively regulates"@en)
SubObjectPropertyOf(obo:RO_0002213 obo:RO_0002211)
SubObjectPropertyOf(obo:RO_0002213 obo:RO_0002304)
InverseObjectProperties(obo:RO_0002213 obo:RO_0002336)
TransitiveObjectProperty(obo:RO_0002213)

# Object Property: obo:RO_0002215 (capable of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002215 "mechanosensory neuron capable of detection of mechanical stimulus involved in sensory perception (GO:0050974)")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002215 "osteoclast SubClassOf 'capable of' some 'bone resorption'")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002215 "A relation between a material entity (such as a cell) and a process, in which the material entity has the ability to carry out the process. ")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002215 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002215 "has function realized in")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002215 <http://www.ncbi.nlm.nih.gov/pubmed/20123131>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002215 <http://www.ncbi.nlm.nih.gov/pubmed/21208450>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002215 "For compatibility with BFO, this relation has a shortcut definition in which the expression \"capable of some P\" expands to \"bearer_of (some realized_by only P)\".")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002215 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002215 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002215 "capable of"@en)
SubObjectPropertyOf(obo:RO_0002215 obo:RO_0002216)
ObjectPropertyDomain(obo:RO_0002215 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0002215 obo:BFO_0000015)

# Object Property: obo:RO_0002216 (capable of part of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002216 "c stands in this relationship to p if and only if there exists some p' such that c is capable_of p', and p' is part_of p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002216 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002216 "has function in")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002216 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002216 "capable of part of"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002216 <https://github.com/oborel/obo-relations/wiki/ROGuide#defining-property-chains-involving-reflexivity>)
SubObjectPropertyOf(obo:RO_0002216 obo:RO_0002328)
SubObjectPropertyOf(obo:RO_0002216 obo:RO_0002500)

# Object Property: obo:RO_0002222 (temporally related to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002222 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002222 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002222 <https://en.wikipedia.org/wiki/Allen%27s_interval_algebra>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002222 "Do not use this relation directly. It is ended as a grouping for relations between occurrents involving the relative timing of their starts and ends.")
AnnotationAssertion(terms:source obo:RO_0002222 "https://docs.google.com/document/d/1kBv1ep_9g3sTR-SD3jqzFqhuwo9TPNF-l-9fUDbO6rM/edit?pli=1"^^xsd:anyURI)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002222 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:comment obo:RO_0002222 "A relation that holds between two occurrents. This is a grouping relation that collects together all the Allen relations.")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002222 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002222 "temporally related to"@en)
ObjectPropertyDomain(obo:RO_0002222 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002222 obo:BFO_0000003)

# Object Property: obo:RO_0002233 (has input)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002233 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002233 "p has input c iff: p is a process, c is a material entity, c is a participant in p, c is present at the start of p, and the state of c is modified during p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002233 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002233 "consumes")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 obo:valid_for_gocam)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002233 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002233 "has input"@en)
SubObjectPropertyOf(obo:RO_0002233 obo:RO_0000057)
InverseObjectProperties(obo:RO_0002233 obo:RO_0002352)
ObjectPropertyDomain(obo:RO_0002233 obo:BFO_0000015)

# Object Property: obo:RO_0002263 (acts upstream of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002263 "A faulty traffic light (material entity) whose malfunctioning (a process) is causally upstream of a traffic collision (a process): the traffic light acts upstream of the collision.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002263 "c acts upstream of p if and only if c enables some f that is involved in p' and p' occurs chronologically before p, is not part of p, and affects the execution of p. c is a material entity and f, p, p' are processes.")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002263 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002263 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002263 "acts upstream of")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002263 <http://wiki.geneontology.org/index.php/Acts_upstream_of>)
SubObjectPropertyOf(obo:RO_0002263 obo:RO_0002264)

# Object Property: obo:RO_0002264 (acts upstream of or within)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002264 "A gene product that has some activity, where that activity may be a part of a pathway or upstream of the pathway.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002264 "c acts upstream of or within p if c is enables f, and f is causally upstream of or within p. c is a material entity and p is an process.")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002264 "affects")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002264 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002264 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002264 "acts upstream of or within")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002264 <http://wiki.geneontology.org/index.php/Acts_upstream_of_or_within>)
SubObjectPropertyOf(obo:RO_0002264 obo:RO_0002500)

# Object Property: obo:RO_0002304 (causally upstream of, positive effect)

AnnotationAssertion(obo:RO_0004049 obo:RO_0002304 obo:RO_0002411)
AnnotationAssertion(terms:creator obo:RO_0002304 "cjm")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002304 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002304 obo:valid_for_gocam)
AnnotationAssertion(rdfs:comment obo:RO_0002304 "holds between x and y if and only if x is causally upstream of y and the progression of x increases the frequency, rate or extent of y")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002304 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002304 "causally upstream of, positive effect")
SubObjectPropertyOf(obo:RO_0002304 obo:RO_0002411)
SubObjectPropertyOf(obo:RO_0002304 obo:RO_0004047)

# Object Property: obo:RO_0002305 (causally upstream of, negative effect)

AnnotationAssertion(obo:RO_0004050 obo:RO_0002305 obo:RO_0002411)
AnnotationAssertion(terms:creator obo:RO_0002305 "cjm")
AnnotationAssertion(rdfs:comment obo:RO_0002305 "holds between x and y if and only if x is causally upstream of y and the progression of x decreases the frequency, rate or extent of y")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002305 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002305 "causally upstream of, negative effect")
SubObjectPropertyOf(obo:RO_0002305 obo:RO_0002411)
SubObjectPropertyOf(obo:RO_0002305 obo:RO_0004046)

# Object Property: obo:RO_0002321 (ecologically related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002321 "A relationship that is mediated in some way by the environment or environmental feature (ENVO:00002297)")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002321 "Awaiting class for domain/range constraint, see: https://github.com/OBOFoundry/Experimental-OBO-Core/issues/6")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002321 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002321 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving ecological interactions")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002321 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:label obo:RO_0002321 "ecologically related to"@en)

# Object Property: obo:RO_0002323 (mereotopologically related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002323 "A mereological relationship or a topological relationship")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002323 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002323 "Do not use this relation directly. It is ended as a grouping for a diverse set of relations, all involving parthood or connectivity relationships")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002323 obo:RO_0001901)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002323 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002323 "mereotopologically related to"@en)

# Object Property: obo:RO_0002327 (enables)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002327 "a particular instances of akt-2 enables some instance of protein kinase activity")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002327 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "catalyzes")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "executes")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "has")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "is catalyzing")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "is executing")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002327 "This relation differs from the parent relation 'capable of' in that the parent is weaker and only expresses a capability that may not be actually realized, whereas this relation is always realized.")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002327 "This relation is currently used experimentally by the Gene Ontology Consortium. It may not be stable and may be obsoleted at some future time.")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002327 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002327 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002327 "enables"@en)
SubObjectPropertyOf(obo:RO_0002327 obo:RO_0002215)
InverseObjectProperties(obo:RO_0002327 obo:RO_0002333)

# Object Property: obo:RO_0002328 (functionally related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002328 "A grouping relationship for any relationship directly involving a function, or that holds because of a function of one of the related entities.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002328 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002328 "This is a grouping relation that collects relations used for the purpose of connecting structure and function")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002328 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002328 "functionally related to"@en)

# Object Property: obo:RO_0002329 (part of structure that is capable of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002329 "this relation holds between c and p when c is part of some c', and c' is capable of p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002329 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002329 "false"^^xsd:boolean)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002329 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002329 "part of structure that is capable of"@en)
SubObjectPropertyOf(obo:RO_0002329 obo:RO_0002328)

# Object Property: obo:RO_0002331 (involved in)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002331 "c involved_in p if and only if c enables some process p', and p' is part of p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002331 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002331 "actively involved in")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002331 "enables part of")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002331 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002331 "involved in"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002331 <http://wiki.geneontology.org/index.php/Involved_in>)
SubObjectPropertyOf(obo:RO_0002331 obo:RO_0000056)
SubObjectPropertyOf(obo:RO_0002331 obo:RO_0002431)

# Object Property: obo:RO_0002333 (enabled by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002333 "inverse of enables")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002333 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002333 obo:valid_for_gocam)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002333 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002333 "enabled by"@en)
SubObjectPropertyOf(obo:RO_0002333 obo:RO_0000057)
SubObjectPropertyOf(obo:RO_0002333 obo:RO_0002328)

# Object Property: obo:RO_0002334 (regulated by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002334 "inverse of regulates")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002334 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002334 "regulated by (processual)")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002334 obo:RO_0002259)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002334 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002334 "regulated by"@en)
SubObjectPropertyOf(obo:RO_0002334 obo:RO_0002427)
TransitiveObjectProperty(obo:RO_0002334)
ObjectPropertyDomain(obo:RO_0002334 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002334 obo:BFO_0000015)

# Object Property: obo:RO_0002335 (negatively regulated by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002335 "inverse of negatively regulates")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002335 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002335 obo:RO_0002259)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002335 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002335 "negatively regulated by"@en)
SubObjectPropertyOf(obo:RO_0002335 obo:RO_0002334)

# Object Property: obo:RO_0002336 (positively regulated by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002336 "inverse of positively regulates")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002336 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002336 obo:RO_0002259)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002336 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002336 "positively regulated by"@en)
SubObjectPropertyOf(obo:RO_0002336 obo:RO_0002334)

# Object Property: obo:RO_0002350 (member of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002350 "An organism that is a member of a population of organisms")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002350 "is member of is a mereological relation between a item and a collection.")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002350 "is member of")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002350 "member part of")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002350 "SIO")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002350 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002350 "member of"@en)
SubObjectPropertyOf(obo:RO_0002350 obo:BFO_0000050)
InverseObjectProperties(obo:RO_0002350 obo:RO_0002351)

# Object Property: obo:RO_0002351 (has member)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002351 "has member is a mereological relation between a collection and an item.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002351 "SIO")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002351 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002351 "has member"@en)
SubObjectPropertyOf(obo:RO_0002351 obo:BFO_0000051)
IrreflexiveObjectProperty(obo:RO_0002351)

# Object Property: obo:RO_0002352 (input of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002352 "inverse of has input")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002352 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002352 obo:RO_0002259)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002352 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002352 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002352 "input of"@en)
SubObjectPropertyOf(obo:RO_0002352 obo:RO_0000056)
SubObjectPropertyOf(obo:RO_0002352 obo:RO_0002328)

# Object Property: obo:RO_0002404 (causally downstream of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002404 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002404 "inverse of upstream of")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002404 "Chris Mungall")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002404 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002404 "causally downstream of"@en)
SubObjectPropertyOf(obo:RO_0002404 obo:BFO_0000062)
SubObjectPropertyOf(obo:RO_0002404 obo:RO_0002427)
InverseObjectProperties(obo:RO_0002404 obo:RO_0002411)

# Object Property: obo:RO_0002405 (immediately causally downstream of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002405 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002405 "Chris Mungall")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002405 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002405 "immediately causally downstream of"@en)
SubObjectPropertyOf(obo:RO_0002405 obo:RO_0002087)
SubObjectPropertyOf(obo:RO_0002405 obo:RO_0002404)
InverseObjectProperties(obo:RO_0002405 obo:RO_0002412)

# Object Property: obo:RO_0002410 (causally related to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002410 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002410 "This relation groups causal relations between material entities and causal relations between processes")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002410 "This branch of the ontology deals with causal relations between entities. It is divided into two branches: causal relations between occurrents/processes, and causal relations between material entities. We take an 'activity flow-centric approach', with the former as primary, and define causal relations between material entities in terms of causal relations between occurrents.

To define causal relations in an activity-flow type network, we make use of 3 primitives:

 * Temporal: how do the intervals of the two occurrents relate? 
 * Is the causal relation regulatory?
 * Is the influence positive or negative

The first of these can be formalized in terms of the Allen Interval Algebra. Informally, the 3 bins we care about are 'direct', 'indirect' or overlapping. Note that all causal relations should be classified under a RO temporal relation (see the branch under 'temporally related to'). Note that all causal relations are temporal, but not all temporal relations are causal. Two occurrents can be related in time without being causally connected. We take causal influence to be primitive, elucidated as being such that has the upstream changed, some qualities of the donwstream would necessarily be modified.

For the second, we consider a relationship to be regulatory if the system in which the activities occur is capable of altering the relationship to achieve some objective. This could include changing the rate of production of a molecule.

For the third, we consider the effect of the upstream process on the output(s) of the downstream process. If the level of output is increased, or the rate of production of the output is increased, then the direction is increased. Direction can be positive, negative or neutral or capable of either direction. Two positives in succession yield a positive, two negatives in succession yield a positive, otherwise the default assumption is that the net effect is canceled and the influence is neutral.

Each of these 3 primitives can be composed to yield a cross-product of different relation types.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002410 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002410 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002410 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002410 "causally related to"@en)

# Object Property: obo:RO_0002411 (causally upstream of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002411 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002411 "p is causally upstream of q if and only if p precedes q and p and q are linked in a causal chain")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002411 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002411 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002411 obo:valid_for_gocam)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002411 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002411 "causally upstream of"@en)
SubObjectPropertyOf(obo:RO_0002411 obo:BFO_0000063)
SubObjectPropertyOf(obo:RO_0002411 obo:RO_0002418)
TransitiveObjectProperty(obo:RO_0002411)

# Object Property: obo:RO_0002412 (immediately causally upstream of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002412 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002412 "p is immediately causally upstream of q iff both (a) p immediately precedes q and (b) p is causally upstream of q. In addition, the output of p  must be an input of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002412 "Chris Mungall")
AnnotationAssertion(obo:RO_0002575 obo:RO_0002412 obo:RO_0002411)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002412 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002412 "immediately causally upstream of"@en)
SubObjectPropertyOf(obo:RO_0002412 obo:RO_0002090)
SubObjectPropertyOf(obo:RO_0002412 obo:RO_0002411)

# Object Property: obo:RO_0002418 (causally upstream of or within)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002418 "p 'causally upstream or within' q iff (1) the end of p is before the end of q and (2) the execution of p exerts some causal influence over the outputs of q; i.e. if p was abolished or the outputs of p were to be modified, this would necessarily affect q.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002418 "We would like to make this disjoint with 'preceded by', but this is prohibited in OWL2")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002418 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002418 "influences (processual)")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002418 "affects")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002418 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002418 "causally upstream of or within")
SubObjectPropertyOf(obo:RO_0002418 obo:RO_0002501)
InverseObjectProperties(obo:RO_0002418 obo:RO_0002427)
TransitiveObjectProperty(obo:RO_0002418)

# Object Property: obo:RO_0002427 (causally downstream of or within)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002427 "inverse of causally upstream of or within")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002427 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002427 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002427 obo:RO_0002259)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002427 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002427 "causally downstream of or within")
SubObjectPropertyOf(obo:RO_0002427 obo:RO_0002501)
TransitiveObjectProperty(obo:RO_0002427)

# Object Property: obo:RO_0002428 (involved in regulation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002428 "c involved in regulation of p if c is involved in some p' and p' regulates some p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002428 "Chris Mungall")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002428 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002428 "involved in regulation of")
SubObjectPropertyOf(obo:RO_0002428 obo:RO_0002263)
SubObjectPropertyOf(obo:RO_0002428 obo:RO_0002431)

# Object Property: obo:RO_0002429 (involved in positive regulation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002429 "c involved in regulation of p if c is involved in some p' and p' positively regulates some p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002429 "Chris Mungall")
AnnotationAssertion(obo:RO_0004049 obo:RO_0002429 obo:RO_0002428)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002429 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002429 "involved in positive regulation of")
SubObjectPropertyOf(obo:RO_0002429 obo:RO_0002428)

# Object Property: obo:RO_0002430 (involved in negative regulation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002430 "c involved in regulation of p if c is involved in some p' and p' negatively regulates some p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002430 "Chris Mungall")
AnnotationAssertion(obo:RO_0004050 obo:RO_0002430 obo:RO_0002428)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002430 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002430 "involved in negative regulation of")
SubObjectPropertyOf(obo:RO_0002430 obo:RO_0002428)

# Object Property: obo:RO_0002431 (involved in or involved in regulation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002431 "c involved in or regulates p if and only if either (i) c is involved in p or (ii) c is involved in regulation of p")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002431 "OWL does not allow defining object properties via a Union")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002431 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002431 "involved in or reguates")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002431 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002431 "involved in or involved in regulation of")
SubObjectPropertyOf(obo:RO_0002431 obo:RO_0002264)
SubObjectPropertyOf(obo:RO_0002431 obo:RO_0002328)
SubObjectPropertyOf(obo:RO_0002431 obo:RO_0002500)

# Object Property: obo:RO_0002432 (is active in)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002432 "A protein that enables activity in a cytosol.")
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:cjm") Annotation(oboInOwl:hasDbXref "GOC:dos") obo:IAO_0000115 obo:RO_0002432 "c executes activity in d if and only if c enables p and p occurs_in d.  Assuming no action at a distance by gene products, if a gene product enables (is capable of) a process that occurs in some structure, it must have at least some part in that structure.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002432 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002432 "executes activity in")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002432 "enables activity in")
AnnotationAssertion(rdfs:comment obo:RO_0002432 "")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002432 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002432 "is active in")
SubObjectPropertyOf(obo:RO_0002432 obo:RO_0002131)
SubObjectPropertyOf(obo:RO_0002432 obo:RO_0002328)

# Object Property: obo:RO_0002434 (interacts with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002434 "A relationship that holds between two entities in which the processes executed by the two entities are causally connected.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002434 "This relation and all sub-relations can be applied to either (1) pairs of entities that are interacting at any moment of time (2) populations or species of entity whose members have the disposition to interact (3) classes whose members have the disposition to interact.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002434 "Considering relabeling as 'pairwise interacts with'"^^xsd:anyURI)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002434 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002434 "Note that this relationship type, and sub-relationship types may be redundant with process terms from other ontologies. For example, the symbiotic relationship hierarchy parallels GO. The relations are provided as a convenient shortcut. Consider using the more expressive processual form to capture your data. In the future, these relations will be linked to their cognate processes through rules.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002434 "in pairwise interaction with")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002434 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002434 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002434 "interacts with")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002434 "http://purl.obolibrary.org/obo/MI_0914"^^xsd:anyURI)
AnnotationAssertion(foaf:page obo:RO_0002434 "https://github.com/oborel/obo-relations/wiki/InteractionRelations"^^xsd:anyURI)
SymmetricObjectProperty(obo:RO_0002434)
ObjectPropertyDomain(obo:RO_0002434 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002434 obo:BFO_0000040)

# Object Property: obo:RO_0002436 (molecularly interacts with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002436 "An interaction relationship in which the two partners are molecular entities that directly physically interact with each other for example via a stable binding interaction or a brief interaction during which one modifies the other.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002436 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002436 "binds")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002436 "molecularly binds with")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002436 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002436 "molecularly interacts with")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002436 obo:ECO_0000353)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002436 "http://purl.obolibrary.org/obo/MI_0915"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002436 obo:RO_0002434)
SymmetricObjectProperty(obo:RO_0002436)

# Object Property: obo:RO_0002447 (phosphorylates)

AnnotationAssertion(obo:IAO_0000116 obo:RO_0002447 "Axiomatization to GO to be added later")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002447 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002447 "An interaction relation between x and y in which x catalyzes a reaction in which a phosphate group is added to y.")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002447 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002447 "phosphorylates")
SubObjectPropertyOf(obo:RO_0002447 obo:RO_0002436)

# Object Property: obo:RO_0002448 (directly regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002448 "The entity A, immediately upstream of the entity B, has an activity that regulates an activity performed by B. For example, A and B may be gene products and binding of B by A regulates the kinase activity of B.

A and B can be physically interacting but not necessarily. Immediately upstream means there are no intermediate entity between A and B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002448 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002448 "Vasundra Touré")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002448 "molecularly controls")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002448 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002448 "directly regulates activity of")
SubObjectPropertyOf(obo:RO_0002448 obo:RO_0002436)
SubObjectPropertyOf(obo:RO_0002448 obo:RO_0011002)
ObjectPropertyDomain(obo:RO_0002448 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002448 obo:BFO_0000040)

# Object Property: obo:RO_0002449 (directly negatively regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002449 "The entity A, immediately upstream of the entity B, has an activity that negatively regulates an activity performed by B. 
For example, A and B may be gene products and binding of B by A negatively regulates the kinase activity of B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002449 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002449 "Vasundra Touré")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002449 "directly inhibits")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002449 "molecularly decreases activity of")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002449 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002449 "directly negatively regulates activity of")
SubObjectPropertyOf(obo:RO_0002449 obo:RO_0002448)
ObjectPropertyDomain(obo:RO_0002449 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002449 obo:BFO_0000040)

# Object Property: obo:RO_0002450 (directly positively regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002450 "The entity A, immediately upstream of the entity B, has an activity that positively regulates an activity performed by B. 
For example, A and B may be gene products and binding of B by A positively regulates the kinase activity of B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002450 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002450 "Vasundra Touré")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002450 "directly activates")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002450 "molecularly increases activity of")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002450 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002450 "directly positively regulates activity of")
SubObjectPropertyOf(obo:RO_0002450 obo:RO_0002448)
ObjectPropertyDomain(obo:RO_0002450 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002450 obo:BFO_0000040)

# Object Property: obo:RO_0002464 (helper property (not for use in curation))

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002464 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002464 "This property or its subproperties is not to be used directly. These properties exist as helper properties that are used to support OWL reasoning.")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002464 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002464 "helper property (not for use in curation)")

# Object Property: obo:RO_0002479 (has part that occurs in)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002479 "p has part that occurs in c if and only if there exists some p1, such that p has_part p1, and p1 occurs in c.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002479 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002479 <http://purl.obolibrary.org/obo/ro/subsets#ro-eco>)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002479 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002479 "has part that occurs in")
ObjectPropertyDomain(obo:RO_0002479 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002479 obo:BFO_0000004)

# Object Property: obo:RO_0002481 (is kinase activity)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002481 "Chris Mungall")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002481 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002481 "is kinase activity")
SubObjectPropertyOf(obo:RO_0002481 obo:RO_0002564)

# Object Property: obo:RO_0002500 (causal agent in process)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002500 "A relationship between a material entity and a process where the material entity has some causal role that influences the process")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002500 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002500 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002500 "causal agent in process")
SubObjectPropertyOf(obo:RO_0002500 obo:RO_0002595)
InverseObjectProperties(obo:RO_0002500 obo:RO_0002608)

# Object Property: obo:RO_0002501 (causal relation between processes)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002501 "p is causally related to q if and only if p or any part of p and q or any part of q are linked by a chain of events where each event pair is one of direct activation or direct inhibition. p may be upstream, downstream, part of or a container of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002501 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002501 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002501 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002501 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002501 "causal relation between processes")
SubObjectPropertyOf(obo:RO_0002501 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0002501 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002501 obo:BFO_0000003)

# Object Property: obo:RO_0002506 (causal relation between entities)

AnnotationAssertion(obo:IAO_0000116 obo:RO_0002506 "The intent is that the process branch of the causal property hierarchy is primary (causal relations hold between occurrents/processes), and that the material branch is defined in terms of the process branch")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002506 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002506 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002506 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002506 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002506 "causal relation between entities")
SubObjectPropertyOf(obo:RO_0002506 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0002506 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0002506 obo:BFO_0000002)

# Object Property: obo:RO_0002559 (causally influenced by)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002559 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002559 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002559 "causally influenced by (entity-centric)")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002559 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002559 "causally influenced by")
SubObjectPropertyOf(obo:RO_0002559 obo:RO_0002506)
InverseObjectProperties(obo:RO_0002559 obo:RO_0002566)

# Object Property: obo:RO_0002563 (interaction relation helper property)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002563 "Chris Mungall")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002563 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002563 "interaction relation helper property")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002563 <http://ontologydesignpatterns.org/wiki/Submissions:N-Ary_Relation_Pattern_%28OWL_2%29>)
AnnotationAssertion(foaf:page obo:RO_0002563 "https://github.com/oborel/obo-relations/wiki/InteractionRelations"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002563 obo:RO_0002464)

# Object Property: obo:RO_0002564 (molecular interaction relation helper property)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002564 "Chris Mungall")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002564 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002564 "molecular interaction relation helper property")
SubObjectPropertyOf(obo:RO_0002564 obo:RO_0002563)

# Object Property: obo:RO_0002566 (causally influences)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002566 "The entity or characteristic A is causally upstream of the entity or characteristic B, A having an effect on B. An entity corresponds to any biological type of entity as long as a mass is measurable. A characteristic corresponds to a particular specificity of an entity (e.g., phenotype, shape, size).")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002566 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002566 "Vasundra Touré")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002566 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002566 "causally influences (entity-centric)")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002566 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002566 "causally influences")
SubObjectPropertyOf(obo:RO_0002566 obo:RO_0002506)
ObjectPropertyDomain(obo:RO_0002566 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0002566 obo:BFO_0000002)

# Object Property: obo:RO_0002578 (directly regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002578 "Process(P1) directly regulates process(P2) iff: P1 regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding  regulates the kinase activity (P2) of protein B then P1 directly regulates P2.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002578 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002578 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002578 "directly regulates (processual)")
AnnotationAssertion(obo:RO_0002575 obo:RO_0002578 obo:RO_0002211)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002578 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002578 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002578 obo:valid_for_gocam)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002578 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002578 "directly regulates")
SubObjectPropertyOf(obo:RO_0002578 obo:RO_0002211)
SubObjectPropertyOf(obo:RO_0002578 obo:RO_0002412)

# Object Property: obo:RO_0002584 (has part structure that is capable of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002584 "gland SubClassOf 'has part structure that is capable of' some 'secretion by cell'")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002584 "s 'has part structure that is capable of' p if and only if there exists some part x such that s 'has part' x and x 'capable of' p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002584 "Chris Mungall")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002584 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002584 "has part structure that is capable of")
SubObjectPropertyOf(obo:RO_0002584 obo:RO_0002328)
SubObjectPropertyOf(obo:RO_0002584 obo:RO_0002595)

# Object Property: obo:RO_0002595 (causal relation between material entity and a process)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002595 "A relationship that holds between a material entity and a process in which causality is involved, with either the material entity or some part of the material entity exerting some influence over the process, or the process influencing some aspect of the material entity.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002595 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002595 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002595 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002595 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002595 "causal relation between material entity and a process")
SubObjectPropertyOf(obo:RO_0002595 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0002595 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002595 obo:BFO_0000015)

# Object Property: obo:RO_0002596 (capable of regulating)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002596 "pyrethroid -> growth")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002596 "Holds between c and p if and only if c is capable of some activity a, and a regulates p.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002596 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002596 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002596 "capable of regulating")
SubObjectPropertyOf(obo:RO_0002596 obo:RO_0002500)

# Object Property: obo:RO_0002597 (capable of negatively regulating)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002597 "Holds between c and p if and only if c is capable of some activity a, and a negatively regulates p.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002597 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002597 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002597 "capable of negatively regulating")
SubObjectPropertyOf(obo:RO_0002597 obo:RO_0002596)

# Object Property: obo:RO_0002598 (capable of positively regulating)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002598 "renin -> arteriolar smooth muscle contraction")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002598 "Holds between c and p if and only if c is capable of some activity a, and a positively regulates p.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002598 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002598 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002598 "capable of positively regulating")
SubObjectPropertyOf(obo:RO_0002598 obo:RO_0002596)

# Object Property: obo:RO_0002608 (process has causal agent)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002608 "Inverse of 'causal agent in process'")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002608 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002608 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002608 "process has causal agent")
SubObjectPropertyOf(obo:RO_0002608 obo:RO_0002410)

# Object Property: obo:RO_0002629 (directly positively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002629 "Process(P1) directly postively regulates process(P2) iff: P1 positively regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding positively regulates the kinase activity (P2) of protein B then P1 directly positively regulates P2.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002629 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002629 "directly positively regulates (process to process)")
AnnotationAssertion(obo:RO_0004049 obo:RO_0002629 obo:RO_0002578)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002629 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002629 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002629 obo:valid_for_gocam)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002629 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002629 "directly positively regulates")
SubObjectPropertyOf(obo:RO_0002629 obo:RO_0002213)
SubObjectPropertyOf(obo:RO_0002629 obo:RO_0002578)

# Object Property: obo:RO_0002630 (directly negatively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002630 "Process(P1) directly negatively regulates process(P2) iff: P1 negatively regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding  negatively regulates the kinase activity (P2) of protein B then P1 directly negatively regulates P2.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002630 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002630 "directly negatively regulates (process to process)")
AnnotationAssertion(obo:RO_0004050 obo:RO_0002630 obo:RO_0002578)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002630 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002630 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002630 obo:valid_for_gocam)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0002630 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002630 "directly negatively regulates")
SubObjectPropertyOf(obo:RO_0002630 obo:RO_0002212)
SubObjectPropertyOf(obo:RO_0002630 obo:RO_0002578)

# Object Property: obo:RO_0004031 (enables subfunction)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0004031 "Holds between an entity and an process P where the entity enables some larger compound process, and that larger process has-part P.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0004031 "cjm")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004031 "2018-01-25T23:20:13Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0004031 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0004031 "enables subfunction")
SubObjectPropertyOf(obo:RO_0004031 obo:RO_0002328)

# Object Property: obo:RO_0004032 (acts upstream of or within, positive effect)

AnnotationAssertion(obo:RO_0004049 obo:RO_0004032 obo:RO_0002264)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004032 "cjm")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004032 "2018-01-26T23:49:30Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0004032 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0004032 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0004032 "acts upstream of or within, positive effect")
AnnotationAssertion(rdfs:seeAlso obo:RO_0004032 <http://wiki.geneontology.org/index.php/Acts_upstream_of_or_within,_positive_effect>)
SubObjectPropertyOf(obo:RO_0004032 obo:RO_0002264)

# Object Property: obo:RO_0004033 (acts upstream of or within, negative effect)

AnnotationAssertion(obo:RO_0004050 obo:RO_0004033 obo:RO_0002264)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004033 "cjm")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004033 "2018-01-26T23:49:51Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0004033 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0004033 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0004033 "acts upstream of or within, negative effect")
SubObjectPropertyOf(obo:RO_0004033 obo:RO_0002264)

# Object Property: obo:RO_0004034 (acts upstream of, positive effect)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0004034 "c 'acts upstream of, positive effect' p if c is enables f, and f is causally upstream of p, and the direction of f is positive")
AnnotationAssertion(obo:RO_0004049 obo:RO_0004034 obo:RO_0002263)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004034 "cjm")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004034 "2018-01-26T23:53:14Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0004034 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0004034 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0004034 "acts upstream of, positive effect")
AnnotationAssertion(rdfs:seeAlso obo:RO_0004034 <http://wiki.geneontology.org/index.php/Acts_upstream_of,_positive_effect>)
SubObjectPropertyOf(obo:RO_0004034 obo:RO_0002263)
SubObjectPropertyOf(obo:RO_0004034 obo:RO_0004032)

# Object Property: obo:RO_0004035 (acts upstream of, negative effect)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0004035 "c 'acts upstream of, negative effect' p if c is enables f, and f is causally upstream of p, and the direction of f is negative")
AnnotationAssertion(obo:RO_0004050 obo:RO_0004035 obo:RO_0002263)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004035 "cjm")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004035 "2018-01-26T23:53:22Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0004035 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0004035 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0004035 "acts upstream of, negative effect")
AnnotationAssertion(rdfs:seeAlso obo:RO_0004035 <http://wiki.geneontology.org/index.php/Acts_upstream_of,_negative_effect>)
SubObjectPropertyOf(obo:RO_0004035 obo:RO_0002263)
SubObjectPropertyOf(obo:RO_0004035 obo:RO_0004033)

# Object Property: obo:RO_0004046 (causally upstream of or within, negative effect)

AnnotationAssertion(obo:RO_0004050 obo:RO_0004046 obo:RO_0002418)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004046 "cjm")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004046 "2018-03-13T23:55:05Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0004046 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0004046 "causally upstream of or within, negative effect")
SubObjectPropertyOf(obo:RO_0004046 obo:RO_0002418)

# Object Property: obo:RO_0004047 (causally upstream of or within, positive effect)

AnnotationAssertion(obo:RO_0004049 obo:RO_0004047 obo:RO_0002418)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004047 "cjm")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004047 "2018-03-13T23:55:19Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0004047 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0004047 "causally upstream of or within, positive effect")
SubObjectPropertyOf(obo:RO_0004047 obo:RO_0002418)

# Object Property: obo:RO_0011002 (regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0011002 "The entity A has an activity that regulates an activity of the entity B. For example, A and B are gene products where the catalytic activity of A regulates the kinase activity of B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0011002 "Vasundra Touré")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0011002 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0011002 "regulates activity of")
SubObjectPropertyOf(obo:RO_0011002 obo:RO_0002566)
ObjectPropertyDomain(obo:RO_0011002 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0011002 obo:BFO_0000040)

# Object Property: <http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> (decreased_in_magnitude_relative_to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:CJM") obo:IAO_0000115 <http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> "q1 decreased_in_magnitude_relative_to q2 if and only if magnitude(q1) < magnitude(q2). Here, magnitude(q) is a function that maps a quality to a unit-invariant scale.")
AnnotationAssertion(oboInOwl:hasOBONamespace <http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> "quality")
AnnotationAssertion(oboInOwl:id <http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> "decreased_in_magnitude_relative_to")
AnnotationAssertion(rdfs:comment <http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> "This relation is used to determine the 'directionality' of relative qualities such as 'decreased strength', relative to the parent type, 'strength'.")
AnnotationAssertion(rdfs:isDefinedBy <http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> obo:pato.owl)
AnnotationAssertion(rdfs:label <http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> "decreased_in_magnitude_relative_to")
SubObjectPropertyOf(<http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> <http://purl.obolibrary.org/obo/pato#different_in_magnitude_relative_to>)
TransitiveObjectProperty(<http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to>)
ObjectPropertyDomain(<http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> obo:PATO_0000001)
ObjectPropertyRange(<http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> obo:PATO_0000001)

# Object Property: <http://purl.obolibrary.org/obo/pato#different_in_magnitude_relative_to> (different_in_magnitude_relative_to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:CJM") obo:IAO_0000115 <http://purl.obolibrary.org/obo/pato#different_in_magnitude_relative_to> "q1 different_in_magnitude_relative_to q2 if and only if magnitude(q1) NOT =~ magnitude(q2). Here, magnitude(q) is a function that maps a quality to a unit-invariant scale.")
AnnotationAssertion(oboInOwl:hasOBONamespace <http://purl.obolibrary.org/obo/pato#different_in_magnitude_relative_to> "quality")
AnnotationAssertion(oboInOwl:id <http://purl.obolibrary.org/obo/pato#different_in_magnitude_relative_to> "different_in_magnitude_relative_to")
AnnotationAssertion(rdfs:isDefinedBy <http://purl.obolibrary.org/obo/pato#different_in_magnitude_relative_to> obo:pato.owl)
AnnotationAssertion(rdfs:label <http://purl.obolibrary.org/obo/pato#different_in_magnitude_relative_to> "different_in_magnitude_relative_to")
ObjectPropertyDomain(<http://purl.obolibrary.org/obo/pato#different_in_magnitude_relative_to> obo:PATO_0000001)
ObjectPropertyRange(<http://purl.obolibrary.org/obo/pato#different_in_magnitude_relative_to> obo:PATO_0000001)

# Object Property: <http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> (increased_in_magnitude_relative_to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:CJM") obo:IAO_0000115 <http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> "q1 increased_in_magnitude_relative_to q2 if and only if magnitude(q1) > magnitude(q2). Here, magnitude(q) is a function that maps a quality to a unit-invariant scale.")
AnnotationAssertion(oboInOwl:hasOBONamespace <http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> "quality")
AnnotationAssertion(oboInOwl:id <http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> "increased_in_magnitude_relative_to")
AnnotationAssertion(rdfs:comment <http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> "This relation is used to determine the 'directionality' of relative qualities such as 'increased strength', relative to the parent type, 'strength'.")
AnnotationAssertion(rdfs:isDefinedBy <http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> obo:pato.owl)
AnnotationAssertion(rdfs:label <http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> "increased_in_magnitude_relative_to")
SubObjectPropertyOf(<http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> <http://purl.obolibrary.org/obo/pato#different_in_magnitude_relative_to>)
TransitiveObjectProperty(<http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to>)
ObjectPropertyDomain(<http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> obo:PATO_0000001)
ObjectPropertyRange(<http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> obo:PATO_0000001)

# Object Property: <http://purl.obolibrary.org/obo/pato#reciprocal_of> (reciprocal_of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:CJM") obo:IAO_0000115 <http://purl.obolibrary.org/obo/pato#reciprocal_of> "q1 reciprocal_of q2 if and only if : q1 and q2 are relational qualities and a phenotype e q1 e2 mutually implies a phenotype e2 q2 e.")
AnnotationAssertion(oboInOwl:hasOBONamespace <http://purl.obolibrary.org/obo/pato#reciprocal_of> "quality")
AnnotationAssertion(oboInOwl:id <http://purl.obolibrary.org/obo/pato#reciprocal_of> "reciprocal_of")
AnnotationAssertion(rdfs:comment <http://purl.obolibrary.org/obo/pato#reciprocal_of> "There are frequently two ways to state the same thing: we can say 'spermatocyte lacks asters' or 'asters absent from spermatocyte'. In this case the quality is 'lacking all parts of type' - it is a (relational) quality of the spermatocyte, and it is with respect to instances of 'aster'. One of the popular requirements of PATO is that it continue to support 'absent', so we need to relate statements which use this quality to the 'lacking all parts of type' quality.")
AnnotationAssertion(rdfs:isDefinedBy <http://purl.obolibrary.org/obo/pato#reciprocal_of> obo:pato.owl)
AnnotationAssertion(rdfs:label <http://purl.obolibrary.org/obo/pato#reciprocal_of> "reciprocal_of")


############################
#   Datatypes
############################

# Datatype: rdf:PlainLiteral (rdf:PlainLiteral)

AnnotationAssertion(rdfs:isDefinedBy rdf:PlainLiteral <http://www.w3.org/1999/02/22-rdf-syntax-ns.owl>)

# Datatype: xsd:anyURI (xsd:anyURI)

AnnotationAssertion(rdfs:isDefinedBy xsd:anyURI <http://www.w3.org/2001/xmlschema.owl>)

# Datatype: xsd:boolean (xsd:boolean)

AnnotationAssertion(rdfs:isDefinedBy xsd:boolean <http://www.w3.org/2001/xmlschema.owl>)

# Datatype: xsd:dateTime (xsd:dateTime)

AnnotationAssertion(rdfs:isDefinedBy xsd:dateTime <http://www.w3.org/2001/xmlschema.owl>)

# Datatype: xsd:string (xsd:string)

AnnotationAssertion(rdfs:isDefinedBy xsd:string <http://www.w3.org/2001/xmlschema.owl>)


############################
#   Classes
############################

# Class: obo:BFO_0000001 (entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000001 "entity")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000001 "Entity")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "Julius Caesar"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "Verdi’s Requiem"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "the Second World War"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "your body mass index"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000001 "BFO 2 Reference: In all areas of empirical inquiry we encounter general terms of two sorts. First are general terms which refer to universals or types:animaltuberculosissurgical procedurediseaseSecond, are general terms used to refer to groups of entities which instantiate a given universal but do not correspond to the extension of any subuniversal of that universal because there is nothing intrinsic to the entities in question by virtue of which they – and only they – are counted as belonging to the given group. Examples are: animal purchased by the Emperortuberculosis diagnosed on a Wednesdaysurgical procedure performed on a patient from Stockholmperson identified as candidate for clinical trial #2056-555person who is signatory of Form 656-PPVpainting by Leonardo da VinciSuch terms, which represent what are called ‘specializations’ in [81"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000004>) Annotation(rdfs:comment "per discussion with Barry Smith") Annotation(rdfs:seeAlso <http://www.referent-tracking.com/_RTU/papers/CeustersICbookRevised.pdf>) obo:IAO_0000116 obo:BFO_0000001 "Entity doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. For example Werner Ceusters 'portions of reality' include 4 sorts, entities (as BFO construes them), universals, configurations, and relations. It is an open question as to whether entities as construed in BFO will at some point also include these other portions of reality. See, for example, 'How to track absolutely everything' at http://www.referent-tracking.com/_RTU/papers/CeustersICbookRevised.pdf"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/001-001>) obo:IAO_0000600 obo:BFO_0000001 "An entity is anything that exists or has existed or will exist. (axiom label in BFO2 Reference: [001-001])"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000001 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000001 "entity"@en)

# Class: obo:BFO_0000002 (continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000002 "continuant")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000002 "Continuant")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000002 "An entity that exists in full at any time in which it exists at all, persists through time while maintaining its identity and has no temporal parts."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000002 "BFO 2 Reference: Continuant entities are entities which can be sliced to yield parts only along the spatial dimension, yielding for example the parts of your table which we call its legs, its top, its nails. ‘My desk stretches from the window to the door. It has spatial parts, and can be sliced (in space) in two. With respect to time, however, a thing is a continuant.’ [60, p. 240"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000007>) obo:IAO_0000116 obo:BFO_0000002 "Continuant doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. For example, in an expansion involving bringing in some of Ceuster's other portions of reality, questions are raised as to whether universals are continuants"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/008-002>) obo:IAO_0000600 obo:BFO_0000002 "A continuant is an entity that persists, endures, or continues to exist through time while maintaining its identity. (axiom label in BFO2 Reference: [008-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/126-001>) obo:IAO_0000601 obo:BFO_0000002 "if b is a continuant and if, for some t, c has_continuant_part b at t, then c is a continuant. (axiom label in BFO2 Reference: [126-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/009-002>) obo:IAO_0000601 obo:BFO_0000002 "if b is a continuant and if, for some t, cis continuant_part of b at t, then c is a continuant. (axiom label in BFO2 Reference: [009-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/011-002>) obo:IAO_0000601 obo:BFO_0000002 "if b is a material entity, then there is some temporal interval (referred to below as a one-dimensional temporal region) during which b exists. (axiom label in BFO2 Reference: [011-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/009-002>) obo:IAO_0000602 obo:BFO_0000002 "(forall (x y) (if (and (Continuant x) (exists (t) (continuantPartOfAt y x t))) (Continuant y))) // axiom label in BFO2 CLIF: [009-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/126-001>) obo:IAO_0000602 obo:BFO_0000002 "(forall (x y) (if (and (Continuant x) (exists (t) (hasContinuantPartOfAt y x t))) (Continuant y))) // axiom label in BFO2 CLIF: [126-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/008-002>) obo:IAO_0000602 obo:BFO_0000002 "(forall (x) (if (Continuant x) (Entity x))) // axiom label in BFO2 CLIF: [008-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/011-002>) obo:IAO_0000602 obo:BFO_0000002 "(forall (x) (if (Material Entity x) (exists (t) (and (TemporalRegion t) (existsAt x t))))) // axiom label in BFO2 CLIF: [011-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000002 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000002 "continuant"@en)
SubClassOf(obo:BFO_0000002 obo:BFO_0000001)
DisjointClasses(obo:BFO_0000002 obo:BFO_0000003)
DisjointClasses(obo:BFO_0000002 ObjectSomeValuesFrom(obo:BFO_0000050 obo:BFO_0000003))

# Class: obo:BFO_0000003 (occurrent)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000003 "occurrent")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000003 "Occurrent")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000003 "An entity that has temporal parts and that happens, unfolds or develops through time."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000003 "BFO 2 Reference: every occurrent that is not a temporal or spatiotemporal region is s-dependent on some independent continuant that is not a spatial region"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000003 "BFO 2 Reference: s-dependence obtains between every process and its participants in the sense that, as a matter of necessity, this process could not have existed unless these or those participants existed also. A process may have a succession of participants at different phases of its unfolding. Thus there may be different players on the field at different times during the course of a football game; but the process which is the entire game s-depends_on all of these players nonetheless. Some temporal parts of this process will s-depend_on on only some of the players."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000006>) Annotation(rdfs:comment "per discussion with Barry Smith") obo:IAO_0000116 obo:BFO_0000003 "Occurrent doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. An example would be the sum of a process and the process boundary of another process."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000012>) obo:IAO_0000116 obo:BFO_0000003 "Simons uses different terminology for relations of occurrents to regions: Denote the spatio-temporal location of a given occurrent e by 'spn[e]' and call this region its span. We may say an occurrent is at its span, in any larger region, and covers any smaller region. Now suppose we have fixed a frame of reference so that we can speak not merely of spatio-temporal but also of spatial regions (places) and temporal regions (times). The spread of an occurrent, (relative to a frame of reference) is the space it exactly occupies, and its spell is likewise the time it exactly occupies. We write 'spr[e]' and `spl[e]' respectively for the spread and spell of e, omitting mention of the frame.")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/077-002>) obo:IAO_0000600 obo:BFO_0000003 "An occurrent is an entity that unfolds itself in time or it is the instantaneous boundary of such an entity (for example a beginning or an ending) or it is a temporal or spatiotemporal region which such an entity occupies_temporal_region or occupies_spatiotemporal_region. (axiom label in BFO2 Reference: [077-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/108-001>) obo:IAO_0000601 obo:BFO_0000003 "Every occurrent occupies_spatiotemporal_region some spatiotemporal region. (axiom label in BFO2 Reference: [108-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/079-001>) obo:IAO_0000601 obo:BFO_0000003 "b is an occurrent entity iff b is an entity that has temporal parts. (axiom label in BFO2 Reference: [079-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/108-001>) obo:IAO_0000602 obo:BFO_0000003 "(forall (x) (if (Occurrent x) (exists (r) (and (SpatioTemporalRegion r) (occupiesSpatioTemporalRegion x r))))) // axiom label in BFO2 CLIF: [108-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/079-001>) obo:IAO_0000602 obo:BFO_0000003 "(forall (x) (iff (Occurrent x) (and (Entity x) (exists (y) (temporalPartOf y x))))) // axiom label in BFO2 CLIF: [079-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000003 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000003 "occurrent"@en)
SubClassOf(obo:BFO_0000003 obo:BFO_0000001)
DisjointClasses(obo:BFO_0000003 ObjectSomeValuesFrom(obo:BFO_0000050 obo:BFO_0000002))

# Class: obo:BFO_0000004 (independent continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000004 "ic")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000004 "IndependentContinuant")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a chair"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a heart"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a leg"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a molecule"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a spatial region"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "an atom"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "an orchestra."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "an organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "the bottom right portion of a human torso"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "the interior of your mouth"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000004 "A continuant that is a bearer of quality and realizable entity entities, in which other entities inhere and which itself cannot inhere in anything."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/017-002>) obo:IAO_0000115 obo:BFO_0000004 "b is an independent continuant = Def. b is a continuant which is such that there is no c and no t such that b s-depends_on c at t. (axiom label in BFO2 Reference: [017-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/134-001>) obo:IAO_0000601 obo:BFO_0000004 "For any independent continuant b and any time t there is some spatial region r such that b is located_in r at t. (axiom label in BFO2 Reference: [134-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/018-002>) obo:IAO_0000601 obo:BFO_0000004 "For every independent continuant b and time t during the region of time spanned by its life, there are entities which s-depends_on b during t. (axiom label in BFO2 Reference: [018-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/134-001>) obo:IAO_0000602 obo:BFO_0000004 "(forall (x t) (if (IndependentContinuant x) (exists (r) (and (SpatialRegion r) (locatedInAt x r t))))) // axiom label in BFO2 CLIF: [134-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/018-002>) obo:IAO_0000602 obo:BFO_0000004 "(forall (x t) (if (and (IndependentContinuant x) (existsAt x t)) (exists (y) (and (Entity y) (specificallyDependsOnAt y x t))))) // axiom label in BFO2 CLIF: [018-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/017-002>) obo:IAO_0000602 obo:BFO_0000004 "(iff (IndependentContinuant a) (and (Continuant a) (not (exists (b t) (specificallyDependsOnAt a b t))))) // axiom label in BFO2 CLIF: [017-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000004 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000004 "independent continuant"@en)
SubClassOf(obo:BFO_0000004 obo:BFO_0000002)
DisjointClasses(obo:BFO_0000004 obo:BFO_0000020)
DisjointClasses(obo:BFO_0000004 obo:BFO_0000031)

# Class: obo:BFO_0000005 (obsolete dependent continuant)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000005 "A continuant  that is either dependent on one or other independent continuant  bearers or inheres in or is borne by other entities."@en)
AnnotationAssertion(rdfs:label obo:BFO_0000005 "obsolete dependent continuant"@en)
AnnotationAssertion(owl:deprecated obo:BFO_0000005 "true"^^xsd:boolean)
SubClassOf(obo:BFO_0000005 oboInOwl:ObsoleteClass)

# Class: obo:BFO_0000006 (spatial region)

AnnotationAssertion(rdfs:label obo:BFO_0000006 "spatial region"@en)
SubClassOf(obo:BFO_0000006 obo:BFO_0000141)

# Class: obo:BFO_0000015 (process)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000015 "process")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000015 "Process")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "a process of cell-division, \\ a beating of the heart"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "a process of meiosis"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "a process of sleeping"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "the course of a disease"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "the flight of a bird"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "the life of an organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "your process of aging."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000015 "An occurrent that has temporal proper parts and for some time t, p s-depends_on some material entity at t."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/083-003>) obo:IAO_0000115 obo:BFO_0000015 "p is a process = Def. p is an occurrent that has temporal proper parts and for some time t, p s-depends_on some material entity at t. (axiom label in BFO2 Reference: [083-003])"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000015 "BFO 2 Reference: The realm of occurrents is less pervasively marked by the presence of natural units than is the case in the realm of independent continuants. Thus there is here no counterpart of ‘object’. In BFO 1.0 ‘process’ served as such a counterpart. In BFO 2.0 ‘process’ is, rather, the occurrent counterpart of ‘material entity’. Those natural – as contrasted with engineered, which here means: deliberately executed – units which do exist in the realm of occurrents are typically either parasitic on the existence of natural units on the continuant side, or they are fiat in nature. Thus we can count lives; we can count football games; we can count chemical reactions performed in experiments or in chemical manufacturing. We cannot count the processes taking place, for instance, in an episode of insect mating behavior.Even where natural units are identifiable, for example cycles in a cyclical process such as the beating of a heart or an organism’s sleep/wake cycle, the processes in question form a sequence with no discontinuities (temporal gaps) of the sort that we find for instance where billiard balls or zebrafish or planets are separated by clear spatial gaps. Lives of organisms are process units, but they too unfold in a continuous series from other, prior processes such as fertilization, and they unfold in turn in continuous series of post-life processes such as post-mortem decay. Clear examples of boundaries of processes are almost always of the fiat sort (midnight, a time of death as declared in an operating theater or on a death certificate, the initiation of a state of war)"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/083-003>) obo:IAO_0000602 obo:BFO_0000015 "(iff (Process a) (and (Occurrent a) (exists (b) (properTemporalPartOf b a)) (exists (c t) (and (MaterialEntity c) (specificallyDependsOnAt a c t))))) // axiom label in BFO2 CLIF: [083-003] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000015 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000015 "process"@en)
SubClassOf(obo:BFO_0000015 obo:BFO_0000003)

# Class: obo:BFO_0000016 (disposition)

AnnotationAssertion(rdfs:label obo:BFO_0000016 "disposition"@en)
SubClassOf(obo:BFO_0000016 obo:BFO_0000017)
DisjointClasses(obo:BFO_0000016 obo:BFO_0000023)

# Class: obo:BFO_0000017 (realizable entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000017 "realizable")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000017 "RealizableEntity")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the disposition of this piece of metal to conduct electricity."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the disposition of your blood to coagulate"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the function of your reproductive organs"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the role of being a doctor"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the role of this boundary to delineate where Utah and Colorado meet"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000017 "A specifically dependent continuant  that inheres in continuant  entities and are not exhibited in full at every time in which it inheres in an entity or group of entities. The exhibition or actualization of a realizable entity is a particular manifestation, functioning or process that occurs under certain circumstances."@en)
AnnotationAssertion(obo:IAO_0000117 obo:BFO_0000017 "https://orcid.org/0000-0001-8815-0078")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/058-002>) obo:IAO_0000600 obo:BFO_0000017 "To say that b is a realizable entity is to say that b is a specifically dependent continuant that inheres in some independent continuant which is not a spatial region and is of a type instances of which are realized in processes of a correlated type. (axiom label in BFO2 Reference: [058-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/060-002>) obo:IAO_0000601 obo:BFO_0000017 "All realizable dependent continuants have independent continuants that are not spatial regions as their bearers. (axiom label in BFO2 Reference: [060-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/060-002>) obo:IAO_0000602 obo:BFO_0000017 "(forall (x t) (if (RealizableEntity x) (exists (y) (and (IndependentContinuant y) (not (SpatialRegion y)) (bearerOfAt y x t))))) // axiom label in BFO2 CLIF: [060-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/058-002>) obo:IAO_0000602 obo:BFO_0000017 "(forall (x) (if (RealizableEntity x) (and (SpecificallyDependentContinuant x) (exists (y) (and (IndependentContinuant y) (not (SpatialRegion y)) (inheresIn x y)))))) // axiom label in BFO2 CLIF: [058-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000017 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000017 "realizable entity"@en)
SubClassOf(obo:BFO_0000017 obo:BFO_0000020)
DisjointClasses(obo:BFO_0000017 obo:BFO_0000019)

# Class: obo:BFO_0000019 (quality)

AnnotationAssertion(rdfs:label obo:BFO_0000019 "quality"@en)
SubClassOf(obo:BFO_0000019 obo:BFO_0000020)

# Class: obo:BFO_0000020 (specifically dependent continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000020 "sdc")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000020 "SpecificallyDependentContinuant")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "Reciprocal specifically dependent continuants: the function of this key to open this lock and the mutually dependent disposition of this lock: to be opened by this key"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "of one-sided specifically dependent continuants: the mass of this tomato"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "of relational dependent continuants (multiple bearers): John’s love for Mary, the ownership relation between John and this statue, the relation of authority between John and his subordinates."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the disposition of this fish to decay"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the function of this heart: to pump blood"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the mutual dependence of proton donors and acceptors in chemical reactions [79"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the mutual dependence of the role predator and the role prey as played by two organisms in a given interaction"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the pink color of a medium rare piece of grilled filet mignon at its center"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the role of being a doctor"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the shape of this hole."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the smell of this portion of mozzarella"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000020 "A continuant that inheres in or is borne by other entities. Every instance of A requires some specific instance of B which must always be the same."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/050-003>) obo:IAO_0000115 obo:BFO_0000020 "b is a specifically dependent continuant = Def. b is a continuant & there is some independent continuant c which is not a spatial region and which is such that b s-depends_on c at every time t during the course of b’s existence. (axiom label in BFO2 Reference: [050-003])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000005>) Annotation(rdfs:comment "per discussion with Barry Smith") obo:IAO_0000116 obo:BFO_0000020 "Specifically dependent continuant doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. We're not sure what else will develop here, but for example there are questions such as what are promises, obligation, etc."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/050-003>) obo:IAO_0000602 obo:BFO_0000020 "(iff (SpecificallyDependentContinuant a) (and (Continuant a) (forall (t) (if (existsAt a t) (exists (b) (and (IndependentContinuant b) (not (SpatialRegion b)) (specificallyDependsOnAt a b t))))))) // axiom label in BFO2 CLIF: [050-003] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000020 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000020 "specifically dependent continuant"@en)
SubClassOf(obo:BFO_0000020 obo:BFO_0000002)
DisjointClasses(obo:BFO_0000020 obo:BFO_0000031)

# Class: obo:BFO_0000023 (role)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000023 "role")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000023 "Role")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "John’s role of husband to Mary is dependent on Mary’s role of wife to John, and both are dependent on the object aggregate comprising John and Mary as member parts joined together through the relational quality of being married."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the priest role"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of a boundary to demarcate two neighboring administrative territories"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of a building in serving as a military target"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of a stone in marking a property boundary"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of subject in a clinical trial"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the student role"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000023 "A realizable entity  the manifestation of which brings about some result or end that is not essential to a continuant  in virtue of the kind of thing that it is but that can be served or participated in by that kind of continuant  in some kinds of natural, social or institutional contexts."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000023 "BFO 2 Reference: One major family of examples of non-rigid universals involves roles, and ontologies developed for corresponding administrative purposes may consist entirely of representatives of entities of this sort. Thus ‘professor’, defined as follows,b instance_of professor at t =Def. there is some c, c instance_of professor role & c inheres_in b at t.denotes a non-rigid universal and so also do ‘nurse’, ‘student’, ‘colonel’, ‘taxpayer’, and so forth. (These terms are all, in the jargon of philosophy, phase sortals.) By using role terms in definitions, we can create a BFO conformant treatment of such entities drawing on the fact that, while an instance of professor may be simultaneously an instance of trade union member, no instance of the type professor role is also (at any time) an instance of the type trade union member role (any more than any instance of the type color is at any time an instance of the type length).If an ontology of employment positions should be defined in terms of roles following the above pattern, this enables the ontology to do justice to the fact that individuals instantiate the corresponding universals –  professor, sergeant, nurse – only during certain phases in their lives."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/061-001>) obo:IAO_0000600 obo:BFO_0000023 "b is a role means: b is a realizable entity & b exists because there is some single bearer that is in some special physical, social, or institutional set of circumstances in which this bearer does not have to be& b is not such that, if it ceases to exist, then the physical make-up of the bearer is thereby changed. (axiom label in BFO2 Reference: [061-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/061-001>) obo:IAO_0000602 obo:BFO_0000023 "(forall (x) (if (Role x) (RealizableEntity x))) // axiom label in BFO2 CLIF: [061-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000023 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000023 "role"@en)
SubClassOf(obo:BFO_0000023 obo:BFO_0000017)

# Class: obo:BFO_0000027 (object aggregate)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000027 "object-aggregate")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000027 "ObjectAggregate")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "a collection of cells in a blood biobank."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "a swarm of bees is an aggregate of members who are linked together through natural bonds"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "a symphony orchestra"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "an organization is an aggregate whose member parts have roles of specific types (for example in a jazz band, a chess club, a football team)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "defined by fiat: the aggregate of members of an organization"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "defined through physical attachment: the aggregate of atoms in a lump of granite"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "defined through physical containment: the aggregate of molecules of carbon dioxide in a sealed container"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "defined via attributive delimitations such as: the patients in this hospital"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "the aggregate of bearings in a constant velocity axle joint"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "the aggregate of blood cells in your body"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "the nitrogen atoms in the atmosphere"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "the restaurants in Palo Alto"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "your collection of Meissen ceramic plates."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000011>) obo:IAO_0000116 obo:BFO_0000027 "An entity a is an object aggregate if and only if there is a mutually exhaustive and pairwise disjoint partition of a into objects ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000301>) obo:IAO_0000116 obo:BFO_0000027 "An entity a is an object aggregate if and only if there is a mutually exhaustive and pairwise disjoint partition of a into objects ")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000027 "BFO 2 Reference: object aggregates may gain and lose parts while remaining numerically identical (one and the same individual) over time. This holds both for aggregates whose membership is determined naturally (the aggregate of cells in your body) and aggregates determined by fiat (a baseball team, a congressional committee)."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000300>) obo:IAO_0000119 obo:BFO_0000027 "ISBN:978-3-938793-98-5pp124-158#Thomas Bittner and Barry Smith, 'A Theory of Granular Partitions', in K. Munn and B. Smith (eds.), Applied Ontology: An Introduction, Frankfurt/Lancaster: ontos, 2008, 125-158.")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/025-004>) obo:IAO_0000600 obo:BFO_0000027 "b is an object aggregate means: b is a material entity consisting exactly of a plurality of objects as member_parts at all times at which b exists. (axiom label in BFO2 Reference: [025-004])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/025-004>) obo:IAO_0000602 obo:BFO_0000027 "(forall (x) (if (ObjectAggregate x) (and (MaterialEntity x) (forall (t) (if (existsAt x t) (exists (y z) (and (Object y) (Object z) (memberPartOfAt y x t) (memberPartOfAt z x t) (not (= y z)))))) (not (exists (w t_1) (and (memberPartOfAt w x t_1) (not (Object w)))))))) // axiom label in BFO2 CLIF: [025-004] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000027 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000027 "object aggregate"@en)
SubClassOf(obo:BFO_0000027 obo:BFO_0000040)

# Class: obo:BFO_0000029 (site)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000029 "site")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000029 "Site")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "Manhattan Canyon)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "a hole in the interior of a portion of cheese"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "a rabbit hole"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "an air traffic control region defined in the airspace above an airport"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the Grand Canyon"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the Piazza San Marco"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the cockpit of an aircraft"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the hold of a ship"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the interior of a kangaroo pouch"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the interior of the trunk of your car"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the interior of your bedroom"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the interior of your office"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the interior of your refrigerator"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the lumen of your gut"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "your left nostril (a fiat part – the opening – of your left nasal cavity)"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/034-002>) obo:IAO_0000600 obo:BFO_0000029 "b is a site means: b is a three-dimensional immaterial entity that is (partially or wholly) bounded by a material entity or it is a three-dimensional immaterial part thereof. (axiom label in BFO2 Reference: [034-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/034-002>) obo:IAO_0000602 obo:BFO_0000029 "(forall (x) (if (Site x) (ImmaterialEntity x))) // axiom label in BFO2 CLIF: [034-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000029 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000029 "site"@en)
SubClassOf(obo:BFO_0000029 obo:BFO_0000141)

# Class: obo:BFO_0000031 (generically dependent continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000031 "gdc")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000031 "GenericallyDependentContinuant")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000031 "The entries in your database are patterns instantiated as quality instances in your hard drive. The database itself is an aggregate of such patterns. When you create the database you create a particular instance of the generically dependent continuant type database. Each entry in the database is an instance of the generically dependent continuant type IAO: information content entity."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000031 "the pdf file on your laptop, the pdf file that is a copy thereof on my laptop"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000031 "the sequence of this protein molecule; the sequence that is a copy thereof in that protein molecule."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000031 "A continuant that is dependent on one or other independent continuant bearers. For every instance of A requires some instance of (an independent continuant type) B but which instance of B serves can change from time to time."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/074-001>) obo:IAO_0000115 obo:BFO_0000031 "b is a generically dependent continuant = Def. b is a continuant that g-depends_on one or more other entities. (axiom label in BFO2 Reference: [074-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/074-001>) obo:IAO_0000602 obo:BFO_0000031 "(iff (GenericallyDependentContinuant a) (and (Continuant a) (exists (b t) (genericallyDependsOnAt a b t)))) // axiom label in BFO2 CLIF: [074-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000031 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000031 "generically dependent continuant"@en)
SubClassOf(obo:BFO_0000031 obo:BFO_0000002)

# Class: obo:BFO_0000034 (function)

AnnotationAssertion(rdfs:label obo:BFO_0000034 "function"@en)
SubClassOf(obo:BFO_0000034 obo:BFO_0000016)

# Class: obo:BFO_0000040 (material entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000040 "material")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000040 "MaterialEntity")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a flame"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a forest fire"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a human being"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a hurricane"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a photon"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a puff of smoke"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a sea wave"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a tornado"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "an aggregate of human beings."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "an energy wave"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "an epidemic"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "the undetached arm of a human being"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000040 "An independent continuant that is spatially extended whose identity is independent of that of other entities and can be maintained through time."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000040 "BFO 2 Reference: Material entities (continuants) can preserve their identity even while gaining and losing material parts. Continuants are contrasted with occurrents, which unfold themselves in successive temporal parts or phases [60"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000040 "BFO 2 Reference: Object, Fiat Object Part and Object Aggregate are not intended to be exhaustive of Material Entity. Users are invited to propose new subcategories of Material Entity."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000040 "BFO 2 Reference: ‘Matter’ is intended to encompass both mass and energy (we will address the ontological treatment of portions of energy in a later version of BFO). A portion of matter is anything that includes elementary particles among its proper or improper parts: quarks and leptons, including electrons, as the smallest particles thus far discovered; baryons (including protons and neutrons) at a higher level of granularity; atoms and molecules at still higher levels, forming the cells, organs, organisms and other material entities studied by biologists, the portions of rock studied by geologists, the fossils studied by paleontologists, and so on.Material entities are three-dimensional entities (entities extended in three spatial dimensions), as contrasted with the processes in which they participate, which are four-dimensional entities (entities extended also along the dimension of time).According to the FMA, material entities may have immaterial entities as parts – including the entities identified below as sites; for example the interior (or ‘lumen’) of your small intestine is a part of your body. BFO 2.0 embodies a decision to follow the FMA here."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/019-002>) obo:IAO_0000600 obo:BFO_0000040 "A material entity is an independent continuant that has some portion of matter as proper or improper continuant part. (axiom label in BFO2 Reference: [019-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/020-002>) obo:IAO_0000601 obo:BFO_0000040 "Every entity which has a material entity as continuant part is a material entity. (axiom label in BFO2 Reference: [020-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/021-002>) obo:IAO_0000601 obo:BFO_0000040 "every entity of which a material entity is continuant part is also a material entity. (axiom label in BFO2 Reference: [021-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/019-002>) obo:IAO_0000602 obo:BFO_0000040 "(forall (x) (if (MaterialEntity x) (IndependentContinuant x))) // axiom label in BFO2 CLIF: [019-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/021-002>) obo:IAO_0000602 obo:BFO_0000040 "(forall (x) (if (and (Entity x) (exists (y t) (and (MaterialEntity y) (continuantPartOfAt x y t)))) (MaterialEntity x))) // axiom label in BFO2 CLIF: [021-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/020-002>) obo:IAO_0000602 obo:BFO_0000040 "(forall (x) (if (and (Entity x) (exists (y t) (and (MaterialEntity y) (continuantPartOfAt y x t)))) (MaterialEntity x))) // axiom label in BFO2 CLIF: [020-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000040 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000040 "material entity"@en)
SubClassOf(obo:BFO_0000040 obo:BFO_0000004)
DisjointClasses(obo:BFO_0000040 obo:BFO_0000141)

# Class: obo:BFO_0000141 (immaterial entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000141 "immaterial")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000141 "ImmaterialEntity")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000141 "BFO 2 Reference: Immaterial entities are divided into two subgroups:boundaries and sites, which bound, or are demarcated in relation, to material entities, and which can thus change location, shape and size and as their material hosts move or change shape or size (for example: your nasal passage; the hold of a ship; the boundary of Wales (which moves with the rotation of the Earth) [38, 7, 10"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000141 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000141 "immaterial entity"@en)
SubClassOf(obo:BFO_0000141 obo:BFO_0000004)

# Class: obo:CARO_0000012 (multicellular organism)

AnnotationAssertion(obo:IAO_0000115 obo:CARO_0000012 "Anatomical structure that is an individual member of a clade and, at some point in its life-cycle, consists of more than one cell.")
AnnotationAssertion(obo:IAO_0000589 obo:CARO_0000012 "multicellular organism"@en)
AnnotationAssertion(obo:IAO_created_by obo:CARO_0000012 "Melissa Haendel")
AnnotationAssertion(obo:IAO_creation_date obo:CARO_0000012 "9/18/11")
AnnotationAssertion(rdfs:comment obo:CARO_0000012 "MH: Can't define this class based on 2 or more cells because most multi cellular organisms (if not all) have only a single cell at some point in life history.")
AnnotationAssertion(rdfs:comment obo:CARO_0000012 "MH: sexual subtypes should probably be logically defined based on sexual processes or sex qualities.")
AnnotationAssertion(rdfs:label obo:CARO_0000012 "multicellular organism")
SubClassOf(obo:CARO_0000012 obo:CARO_0010004)

# Class: obo:CARO_0001010 (organism or virus or viroid)

AnnotationAssertion(obo:IAO_0000115 obo:CARO_0001010 "Material anatomical entity that is a member of an individual species or is a viral or viroid particle.")
AnnotationAssertion(obo:IAO_0000589 obo:CARO_0001010 "organism or virus"@en)
AnnotationAssertion(obo:IAO_created_by obo:CARO_0001010 "Melissa Haendel")
AnnotationAssertion(obo:IAO_creation_date obo:CARO_0001010 "9/18/11")
AnnotationAssertion(rdfs:label obo:CARO_0001010 "organism or virus or viroid")
SubClassOf(obo:CARO_0001010 obo:PCO_0000031)

# Class: obo:CARO_0010004 (organism)

AnnotationAssertion(obo:IAO_0000115 obo:CARO_0010004 "An individual member of a clade.")
AnnotationAssertion(obo:IAO_0000589 obo:CARO_0010004 "organism"@en)
AnnotationAssertion(obo:IAO_created_by obo:CARO_0010004 "mah")
AnnotationAssertion(obo:IAO_creation_date obo:CARO_0010004 "7.16.2011")
AnnotationAssertion(rdfs:comment obo:CARO_0010004 "A general term for organism that is agnostic about single cell vs multi-cellular.  Note that this is a subclass of 'anatomical structure', meaning that an organism must be a connected structure.  So, if I take one plant and make a rooted cutting from a it, I now have two (clonally related) organisms.")
AnnotationAssertion(rdfs:label obo:CARO_0010004 "organism")
SubClassOf(obo:CARO_0010004 obo:CARO_0001010)

# Class: obo:ECOCORE_00000045 (symbiotroph)

AnnotationAssertion(obo:IAO_0000115 obo:ECOCORE_00000045 "heterotroph that acquires nutrition from a symbiont")
AnnotationAssertion(obo:IAO_0000117 obo:ECOCORE_00000045 "http://orcid.org/0000-0002-2908-3327")
AnnotationAssertion(rdfs:label obo:ECOCORE_00000045 "symbiotroph")
SubClassOf(obo:ECOCORE_00000045 obo:CARO_0001010)

# Class: obo:ECOCORE_00000146 (parasite)

AnnotationAssertion(obo:IAO_0000115 obo:ECOCORE_00000146 "A symbiotroph that reduces the fitness, survival, or growth of its symbiont, often called a host")
AnnotationAssertion(obo:IAO_0000117 obo:ECOCORE_00000146 "http://orcid.org/0000-0002-2908-3327")
AnnotationAssertion(oboInOwl:hasDbXref obo:ECOCORE_00000146 "https://www.wikidata.org/entity/Q10253316")
AnnotationAssertion(rdfs:label obo:ECOCORE_00000146 "parasite")
SubClassOf(obo:ECOCORE_00000146 obo:ECOCORE_00000045)

# Class: obo:ENVO_01000744 (human dwelling)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "https://en.wikipedia.org/wiki/Dwelling accessed 11/25/2015") obo:IAO_0000115 obo:ENVO_01000744 "A self-contained constructed feature used by one or more households as a home, such as a house, apartment, mobile home, houseboat or other 'substantial' structure. A dwelling typically includes nearby outbuildings, sheds etc. within the curtilage of the property, excluding any 'open fields beyond'. It has significance in relation to search and seizure, conveyancing of real property, burglary, trespass, and land use planning.")
AnnotationAssertion(obo:IAO_0000116 obo:ENVO_01000744 "See https://github.com/EnvironmentOntology/envo/issues/264 for discussion. This definition needs a lot of clean up and links to household and related classes must be made to form logical definitions for inference to work.")
AnnotationAssertion(obo:IAO_0000116 obo:ENVO_01000744 "Subclasses will be added by inference.")
AnnotationAssertion(rdfs:label obo:ENVO_01000744 "human dwelling"@en)
SubClassOf(obo:ENVO_01000744 obo:BFO_0000040)

# Class: obo:ENVO_01001369 (tidal mangrove shrubland)

AnnotationAssertion(obo:IAO_0000115 obo:ENVO_01001369 "A shrubland biome which is densely vegetated by dwarf or short mangroves (and associates) that are generally less than 6 meters in height, is tidally influenced,  is located in tropical or subtropical areas.")
AnnotationAssertion(oboInOwl:created_by obo:ENVO_01001369 <http://orcid.org/0000-0002-4366-3088>)
AnnotationAssertion(oboInOwl:hasAlternativeId obo:ENVO_01001369 "CMECS:577")
AnnotationAssertion(oboInOwl:hasDbXref obo:ENVO_01001369 "https://cmecscatalog.org/cmecs/classification/unit/577.html")
AnnotationAssertion(oboInOwl:inSubset obo:ENVO_01001369 "envoCmecs")
AnnotationAssertion(oboInOwl:inSubset obo:ENVO_01001369 "envoMarine")
AnnotationAssertion(rdfs:comment obo:ENVO_01001369 "This class aligns to the Coastal and Marine Ecological Classification Standard (CMECS). In ENVO, we may adapt the definition for consistency, but the semantics (meaning) of the term should be unaffected. Please consult the CMECS catalogue (https://cmecscatalog.org/) for authoritative and semantically unconstrained definitions. CMECS provides the following notes: \"Commonly found on intertidal mud flats along the shores of estuaries. Tidal mangrove shrublands may include immature stands or stunted mature trees that indicate a harsh growing environment. Areas characterized by tall mangroves (> 6 meters) are placed in the Tidal Mangrove Forest Biotic Group. Where tidal amplitude is relatively low, the vegetation forms narrow bands along the coastal plains, and it rarely penetrates inland more than several kilometers along rivers. Where tidal amplitude is greater, mangroves extend further inland along river courses, forming extensive stands in the major river deltas. Also, mangrove cays may occur within the lagoon complex of barrier reefs. The list of biotic communities for this group is long: a few examples are provided below, and the complete list is available in Appendix F\"")
AnnotationAssertion(rdfs:label obo:ENVO_01001369 "tidal mangrove shrubland"@en)
SubClassOf(obo:ENVO_01001369 obo:BFO_0000040)

# Class: obo:GO_0003674 (molecular_function)

AnnotationAssertion(obo:IAO_0000589 obo:GO_0003674 "molecular process")
AnnotationAssertion(rdfs:isDefinedBy obo:GO_0003674 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0003674 "molecular_function")
SubClassOf(obo:GO_0003674 obo:BFO_0000015)

# Class: obo:GO_0003824 (catalytic activity)

AnnotationAssertion(rdfs:isDefinedBy obo:GO_0003824 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0003824 "catalytic activity")
SubClassOf(obo:GO_0003824 obo:GO_0003674)

# Class: obo:GO_0007610 (behavior)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:ems") Annotation(oboInOwl:hasDbXref "GOC:jl") Annotation(oboInOwl:hasDbXref "ISBN:0395448956") Annotation(oboInOwl:hasDbXref "PMID:20160973") obo:IAO_0000115 obo:GO_0007610 "The internally coordinated responses (actions or inactions) of animals (individuals or groups) to internal or external stimuli, via a mechanism that involves nervous system activity.")
AnnotationAssertion(oboInOwl:created_by obo:GO_0007610 "jl")
AnnotationAssertion(oboInOwl:creation_date obo:GO_0007610 "2012-09-20T14:06:08Z")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:GO_0007610 "GO:0023032")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:GO_0007610 "GO:0044708")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:GO_0007610 "GO:0044709")
AnnotationAssertion(oboInOwl:hasDbXref obo:GO_0007610 "Wikipedia:Behavior")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0007610 "behavioral response to stimulus")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0007610 "behaviour")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0007610 "behavioural response to stimulus")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:GO_0007610 "biological_process")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:GO_0007610 "single-organism behavior")
AnnotationAssertion(oboInOwl:id obo:GO_0007610 "GO:0007610")
AnnotationAssertion(oboInOwl:inSubset obo:GO_0007610 <http://purl.obolibrary.org/obo/go#gocheck_do_not_manually_annotate>)
AnnotationAssertion(oboInOwl:inSubset obo:GO_0007610 <http://purl.obolibrary.org/obo/go#goslim_agr>)
AnnotationAssertion(oboInOwl:inSubset obo:GO_0007610 <http://purl.obolibrary.org/obo/go#goslim_flybase_ribbon>)
AnnotationAssertion(rdfs:comment obo:GO_0007610 "1. Note that this term is in the subset of terms that should not be used for direct gene product annotation. Instead, select a child term or, if no appropriate child term exists, please request a new term. Direct annotations to this term may be amended during annotation reviews.
2. While a broader definition of behavior encompassing plants and single cell organisms would be justified on the basis of some usage (see PMID:20160973 for discussion), GO uses a tight definition that limits behavior to animals and to responses involving the nervous system, excluding plant responses that GO classifies under development, and responses of unicellular organisms that has general classifications for covering the responses of cells in multicellular organisms (e.g. cell chemotaxis).")
AnnotationAssertion(rdfs:isDefinedBy obo:GO_0007610 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0007610 "behavior")
SubClassOf(obo:GO_0007610 obo:GO_0008150)

# Class: obo:GO_0008150 (biological_process)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:pdt") obo:IAO_0000115 obo:GO_0008150 "A biological process represents a specific objective that the organism is genetically programmed to achieve. Biological processes are often described by their outcome or ending state, e.g., the biological process of cell division results in the creation of two daughter cells (a divided cell) from a single parent cell. A biological process is accomplished by a particular set of molecular functions carried out by specific gene products (or macromolecular complexes), often in a highly regulated manner and in a particular temporal sequence.")
AnnotationAssertion(oboInOwl:created_by obo:GO_0008150 "jl")
AnnotationAssertion(oboInOwl:creation_date obo:GO_0008150 "2012-09-19T15:05:24Z")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:GO_0008150 "GO:0000004")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:GO_0008150 "GO:0007582")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:GO_0008150 "GO:0044699")
AnnotationAssertion(oboInOwl:hasDbXref obo:GO_0008150 "Wikipedia:Biological_process")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0008150 "biological process")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0008150 "physiological process")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:GO_0008150 "biological_process")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:GO_0008150 "single organism process")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:GO_0008150 "single-organism process")
AnnotationAssertion(oboInOwl:id obo:GO_0008150 "GO:0008150")
AnnotationAssertion(oboInOwl:inSubset obo:GO_0008150 <http://purl.obolibrary.org/obo/go#goslim_aspergillus>)
AnnotationAssertion(oboInOwl:inSubset obo:GO_0008150 <http://purl.obolibrary.org/obo/go#goslim_candida>)
AnnotationAssertion(oboInOwl:inSubset obo:GO_0008150 <http://purl.obolibrary.org/obo/go#goslim_chembl>)
AnnotationAssertion(oboInOwl:inSubset obo:GO_0008150 <http://purl.obolibrary.org/obo/go#goslim_generic>)
AnnotationAssertion(oboInOwl:inSubset obo:GO_0008150 <http://purl.obolibrary.org/obo/go#goslim_metagenomics>)
AnnotationAssertion(oboInOwl:inSubset obo:GO_0008150 <http://purl.obolibrary.org/obo/go#goslim_pir>)
AnnotationAssertion(oboInOwl:inSubset obo:GO_0008150 <http://purl.obolibrary.org/obo/go#goslim_plant>)
AnnotationAssertion(oboInOwl:inSubset obo:GO_0008150 <http://purl.obolibrary.org/obo/go#goslim_pombe>)
AnnotationAssertion(oboInOwl:inSubset obo:GO_0008150 <http://purl.obolibrary.org/obo/go#goslim_yeast>)
AnnotationAssertion(rdfs:comment obo:GO_0008150 "Note that, in addition to forming the root of the biological process ontology, this term is recommended for use for the annotation of gene products whose biological process is unknown. When this term is used for annotation, it indicates that no information was available about the biological process of the gene product annotated as of the date the annotation was made; the evidence code 'no data' (ND), is used to indicate this.")
AnnotationAssertion(rdfs:isDefinedBy obo:GO_0008150 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0008150 "biological_process")
SubClassOf(obo:GO_0008150 obo:BFO_0000015)

# Class: obo:GO_0016301 (kinase activity)

AnnotationAssertion(rdfs:isDefinedBy obo:GO_0016301 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0016301 "kinase activity")
SubClassOf(obo:GO_0016301 obo:GO_0016772)
SubClassOf(obo:GO_0016301 ObjectHasSelf(obo:RO_0002481))

# Class: obo:GO_0016740 (transferase activity)

AnnotationAssertion(rdfs:isDefinedBy obo:GO_0016740 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0016740 "transferase activity")
SubClassOf(obo:GO_0016740 obo:GO_0003824)

# Class: obo:GO_0016772 (transferase activity, transferring phosphorus-containing groups)

AnnotationAssertion(rdfs:isDefinedBy obo:GO_0016772 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0016772 "transferase activity, transferring phosphorus-containing groups")
SubClassOf(obo:GO_0016772 obo:GO_0016740)

# Class: obo:GO_0035176 (social behavior)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:jh2") Annotation(oboInOwl:hasDbXref "PMID:12848939") Annotation(oboInOwl:hasDbXref "Wikipedia:Social_behavior") obo:IAO_0000115 obo:GO_0035176 "Behavior directed towards society, or taking place between members of the same species. Occurs predominantly, or only, in individuals that are part of a group.")
AnnotationAssertion(oboInOwl:hasDbXref obo:GO_0035176 "Wikipedia:Social_behavior")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0035176 "social behaviour")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:GO_0035176 "biological_process")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:GO_0035176 "cooperative behavior")
AnnotationAssertion(oboInOwl:id obo:GO_0035176 "GO:0035176")
AnnotationAssertion(rdfs:comment obo:GO_0035176 "Behavior such as predation which involves members of different species is not social. Communication between members of different species is also not social behavior.")
AnnotationAssertion(rdfs:isDefinedBy obo:GO_0035176 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0035176 "social behavior")
SubClassOf(obo:GO_0035176 obo:GO_0007610)
SubClassOf(obo:GO_0035176 obo:GO_0051703)

# Class: obo:GO_0044419 (biological process involved in interspecies interaction between organisms)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:cc") obo:IAO_0000115 obo:GO_0044419 "Any process evolved to enable an interaction with an organism of a different species.")
AnnotationAssertion(obo:IAO_0000233 obo:GO_0044419 "https://github.com/geneontology/go-ontology/issues/20191"^^xsd:anyURI)
AnnotationAssertion(obo:RO_0002161 obo:GO_0044419 obo:NCBITaxon_4895)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0044419 "interaction with another species")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0044419 "interspecies interaction")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0044419 "interspecies interaction between organisms")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0044419 "interspecies interaction with other organisms")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:GO_0044419 "biological_process")
AnnotationAssertion(oboInOwl:id obo:GO_0044419 "GO:0044419")
AnnotationAssertion(oboInOwl:inSubset obo:GO_0044419 <http://purl.obolibrary.org/obo/go#gocheck_do_not_annotate>)
AnnotationAssertion(oboInOwl:inSubset obo:GO_0044419 <http://purl.obolibrary.org/obo/go#goslim_candida>)
AnnotationAssertion(oboInOwl:inSubset obo:GO_0044419 <http://purl.obolibrary.org/obo/go#goslim_pir>)
AnnotationAssertion(rdfs:isDefinedBy obo:GO_0044419 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0044419 "biological process involved in interspecies interaction between organisms")
SubClassOf(obo:GO_0044419 obo:GO_0008150)

# Class: obo:GO_0051703 (biological process involved in intraspecies interaction between organisms)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:ai") obo:IAO_0000115 obo:GO_0051703 "Any process in which an organism has an effect on an organism of the same species.")
AnnotationAssertion(obo:IAO_0000233 obo:GO_0051703 "https://github.com/geneontology/go-ontology/issues/20191"^^xsd:anyURI)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0051703 "intraspecies interaction between organisms")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0051703 "intraspecies interaction with other organisms")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:GO_0051703 "biological_process")
AnnotationAssertion(oboInOwl:id obo:GO_0051703 "GO:0051703")
AnnotationAssertion(oboInOwl:inSubset obo:GO_0051703 <http://purl.obolibrary.org/obo/go#gocheck_do_not_annotate>)
AnnotationAssertion(oboInOwl:inSubset obo:GO_0051703 <http://purl.obolibrary.org/obo/go#goslim_pir>)
AnnotationAssertion(rdfs:isDefinedBy obo:GO_0051703 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0051703 "biological process involved in intraspecies interaction between organisms")
SubClassOf(obo:GO_0051703 obo:GO_0008150)

# Class: obo:GO_0051704 (multi-organism process)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:jl") obo:IAO_0000115 obo:GO_0051704 "A biological process which involves another organism of the same or different species.")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:GO_0051704 "GO:0051706")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0051704 "interaction between organisms")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0051704 "physiological interaction between organisms")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0051704 "physiological interaction with other organism")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:GO_0051704 "biological_process")
AnnotationAssertion(oboInOwl:id obo:GO_0051704 "GO:0051704")
AnnotationAssertion(oboInOwl:inSubset obo:GO_0051704 <http://purl.obolibrary.org/obo/go#gocheck_do_not_annotate>)
AnnotationAssertion(oboInOwl:inSubset obo:GO_0051704 <http://purl.obolibrary.org/obo/go#goslim_pir>)
AnnotationAssertion(rdfs:isDefinedBy obo:GO_0051704 obo:go.owl)
AnnotationAssertion(rdfs:label obo:GO_0051704 "multi-organism process")
SubClassOf(obo:GO_0051704 obo:GO_0008150)

# Class: obo:IAO_0000027 (data item)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000027 "data item"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000027 "Data items include counts of things, analyte concentrations, and statistical summaries."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000027 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000027 "a data item is an information content entity that is intended to be a truthful statement about something (modulo, e.g., measurement precision or other systematic errors) and is constructed/acquired by a method which reliably tends to produce (approximately) truthful statements."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2/2/2009 Alan and Bjoern discussing FACS run output data. This is a data item because it is about the cell population. Each element records an event and is typically further composed a set of measurment data items that record the fluorescent intensity stimulated by one of the lasers."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2009-03-16: data item deliberatly ambiguous: we merged data set and datum to be one entity, not knowing how to define singular versus plural. So data item is more general than datum."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2009-03-16: removed datum as alternative term as datum specifically refers to singular form, and is thus not an exact synonym."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2014-03-31: See discussion at http://odontomachus.wordpress.com/2014/03/30/aboutness-objects-propositions/")
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "JAR: datum     -- well, this will be very tricky to define, but maybe some 
information-like stuff that might be put into a computer and that is 
meant, by someone, to denote and/or to be interpreted by some 
process... I would include lists, tables, sentences... I think I might 
defer to Barry, or to Brian Cantwell Smith

JAR: A data item is an approximately justified approximately true approximate belief"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000027 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000027 "PERSON: Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000027 "PERSON: Jonathan Rees"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000027 "data"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000027 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000027 "data item"@en)
SubClassOf(obo:IAO_0000027 obo:IAO_0000030)

# Class: obo:IAO_0000030 (information content entity)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000030 "information content entity"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000030 "information content entity"@en)
SubClassOf(obo:IAO_0000030 obo:BFO_0000031)

# Class: obo:IAO_0000078 (curation status specification)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000078 "curation status specification"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000078 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000078 "The curation status of the term. The allowed values come from an enumerated list of predefined terms. See the specification of these instances for more detailed definitions of each enumerated value."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000078 "Better to represent curation as a process with parts and then relate labels to that process (in IAO meeting)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000078 "PERSON:Bill Bug"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000078 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000078 "OBI_0000266"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000078 "curation status specification"@en)
EquivalentClasses(obo:IAO_0000078 ObjectOneOf(obo:IAO_0000002 obo:IAO_0000120 obo:IAO_0000121 obo:IAO_0000122 obo:IAO_0000123 obo:IAO_0000124 obo:IAO_0000125 obo:IAO_0000423 obo:IAO_0000428))
SubClassOf(obo:IAO_0000078 obo:IAO_0000102)

# Class: obo:IAO_0000102 (data about an ontology part)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000102 "data about an ontology part"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000102 "Data about an ontology part is a data item about a part of an ontology, for example a term"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000102 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000102 "data about an ontology part"@en)
SubClassOf(obo:IAO_0000102 obo:IAO_0000027)

# Class: obo:IAO_0000109 (measurement datum)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000109 "measurement datum"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000109 "Examples of measurement data are the recoding of the weight of a mouse as {40,mass,\"grams\"}, the recording of an observation of the behavior of the mouse {,process,\"agitated\"}, the recording of the expression level of a gene as measured through the process of microarray experiment {3.4,luminosity,}."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000109 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000109 "A measurement datum is an information content entity that is a recording of the output of a measurement such as produced by a device."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000109 "2/2/2009 is_specified_output of some assay?"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000109 "person:Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000109 "OBI_0000305"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000109 "group:OBI"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000109 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000109 "measurement datum"@en)
SubClassOf(obo:IAO_0000109 obo:IAO_0000027)

# Class: obo:IAO_0000225 (obsolescence reason specification)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000225 "obsolescence reason specification"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000225 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000225 "The reason for which a term has been deprecated. The allowed values come from an enumerated list of predefined terms. See the specification of these instances for more detailed definitions of each enumerated value."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000225 "The creation of this class has been inspired in part by Werner Ceusters' paper, Applying evolutionary terminology auditing to the Gene Ontology."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000225 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000225 "PERSON: Melanie Courtot"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000225 "obsolescence reason specification"@en)
EquivalentClasses(obo:IAO_0000225 ObjectOneOf(obo:IAO_0000103 obo:IAO_0000226 obo:IAO_0000227 obo:IAO_0000228 obo:IAO_0000229))
SubClassOf(obo:IAO_0000225 obo:IAO_0000102)

# Class: obo:IAO_0000409 (denotator type)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000409 "denotator type"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000409 "The Basic Formal Ontology ontology makes a distinction between Universals and defined classes, where the formal are \"natural kinds\" and the latter arbitrary collections of entities."@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000409 "A denotator type indicates how a term should be interpreted from an ontological perspective."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000409 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000409 "Barry Smith, Werner Ceusters"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000409 "denotator type"@en)
EquivalentClasses(obo:IAO_0000409 ObjectOneOf(obo:IAO_0000410 obo:IAO_0000420 obo:IAO_0000421))
SubClassOf(obo:IAO_0000409 obo:IAO_0000102)

# Class: obo:IAO_8000000 (ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000000 "ontology module"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_8000000 "I have placed this under 'data about an ontology part', but this can be discussed. I think this is OK if 'part' is interpreted reflexively, as an ontology module is the whole ontology rather than part of it."@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_8000000 "ontology file"@en)
AnnotationAssertion(obo:IAO_0000232 obo:IAO_8000000 "This class and it's subclasses are applied to OWL ontologies. Using an rdf:type triple will result in problems with OWL-DL. I propose that dcterms:type is instead used to connect an ontology URI with a class from this hierarchy. The class hierarchy is not disjoint, so multiple assertions can be made about a single ontology."@en)
AnnotationAssertion(rdfs:label obo:IAO_8000000 "ontology module"@en)
SubClassOf(obo:IAO_8000000 obo:IAO_0000102)

# Class: obo:IAO_8000001 (base ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000001 "base ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000001 "An ontology module that comprises only of asserted axioms local to the ontology, excludes import directives, and excludes axioms or declarations from external ontologies."@en)
AnnotationAssertion(rdfs:label obo:IAO_8000001 "base ontology module"@en)
AnnotationAssertion(rdfs:seeAlso obo:IAO_8000001 <https://github.com/INCATools/ontology-starter-kit/issues/50>)
SubClassOf(obo:IAO_8000001 obo:IAO_8000000)

# Class: obo:IAO_8000002 (editors ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000002 "editors ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000002 "An ontology module that is intended to be directly edited, typically managed in source control, and typically not intended for direct consumption by end-users."@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_8000002 "source ontology module"@en)
AnnotationAssertion(rdfs:label obo:IAO_8000002 "editors ontology module"@en)
SubClassOf(obo:IAO_8000002 obo:IAO_8000000)

# Class: obo:IAO_8000003 (main release ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000003 "main release ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000003 "An ontology module that is intended to be the primary release product and the one consumed by the majority of tools."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_8000003 "TODO: Add logical axioms that state that a main release ontology module is derived from (directly or indirectly) an editors module"@en)
AnnotationAssertion(rdfs:label obo:IAO_8000003 "main release ontology module"@en)
SubClassOf(obo:IAO_8000003 obo:IAO_8000000)

# Class: obo:IAO_8000004 (bridge ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000004 "bridge ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000004 "An ontology module that consists entirely of axioms that connect or bridge two distinct ontology modules. For example, the Uberon-to-ZFA bridge module."@en)
AnnotationAssertion(rdfs:label obo:IAO_8000004 "bridge ontology module"@en)
AnnotationAssertion(rdfs:seeAlso obo:IAO_8000004 <https://github.com/obophenotype/uberon/wiki/inter-anatomy-ontology-bridge-ontologies>)
SubClassOf(obo:IAO_8000004 obo:IAO_8000000)

# Class: obo:IAO_8000005 (import ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000005 "import ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000005 "A subset ontology module that is intended to be imported from another ontology."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_8000005 "TODO: add axioms that indicate this is the output of a module extraction process."@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_8000005 "import file"@en)
AnnotationAssertion(rdfs:label obo:IAO_8000005 "import ontology module"@en)
AnnotationAssertion(rdfs:seeAlso obo:IAO_8000005 <http://robot.obolibrary.org/extract>)
SubClassOf(obo:IAO_8000005 obo:IAO_8000006)

# Class: obo:IAO_8000006 (subset ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000006 "subset ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000006 "An ontology module that is extracted from a main ontology module and includes only a subset of entities or axioms."@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_8000006 "ontology slim"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_8000006 "subset ontology"@en)
AnnotationAssertion(rdfs:label obo:IAO_8000006 "subset ontology module"@en)
AnnotationAssertion(rdfs:seeAlso obo:IAO_8000006 <http://robot.obolibrary.org/filter>)
AnnotationAssertion(rdfs:seeAlso obo:IAO_8000006 <http://www.geneontology.org/page/go-slim-and-subset-guide>)
SubClassOf(obo:IAO_8000006 obo:IAO_8000000)

# Class: obo:IAO_8000007 (curation subset ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000007 "curation subset ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000007 "A subset ontology that is intended as a whitelist for curators using the ontology. Such a subset will exclude classes that curators should not use for curation."@en)
AnnotationAssertion(rdfs:label obo:IAO_8000007 "curation subset ontology module"@en)
SubClassOf(obo:IAO_8000007 obo:IAO_8000006)

# Class: obo:IAO_8000008 (analysis subset ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000008 "analysis ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000008 "An ontology module that is intended for usage in analysis or discovery applications."@en)
AnnotationAssertion(rdfs:label obo:IAO_8000008 "analysis subset ontology module"@en)
SubClassOf(obo:IAO_8000008 obo:IAO_8000006)

# Class: obo:IAO_8000009 (single layer subset ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000009 "single layer ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000009 "A subset ontology that is largely comprised of a single layer or strata in an ontology class hierarchy. The purpose is typically for rolling up for visualization. The classes in the layer need not be disjoint."@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_8000009 "ribbon subset"@en)
AnnotationAssertion(rdfs:label obo:IAO_8000009 "single layer subset ontology module"@en)
SubClassOf(obo:IAO_8000009 obo:IAO_8000006)

# Class: obo:IAO_8000010 (exclusion subset ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000010 "exclusion subset ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000010 "A subset of an ontology that is intended to be excluded for some purpose. For example, a blacklist of classes."@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_8000010 "antislim"@en)
AnnotationAssertion(rdfs:label obo:IAO_8000010 "exclusion subset ontology module"@en)
SubClassOf(obo:IAO_8000010 obo:IAO_8000006)

# Class: obo:IAO_8000011 (external import ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000011 "external import ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000011 "An imported ontology module that is derived from an external ontology. Derivation methods include the OWLAPI SLME approach."@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_8000011 "external import"@en)
AnnotationAssertion(rdfs:label obo:IAO_8000011 "external import ontology module"@en)
SubClassOf(obo:IAO_8000011 obo:IAO_8000005)

# Class: obo:IAO_8000012 (species subset ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000012 "species subset ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000012 "A subset ontology that is crafted to either include or exclude a taxonomic grouping of species."@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_8000012 "taxon subset"@en)
AnnotationAssertion(rdfs:label obo:IAO_8000012 "species subset ontology module"@en)
AnnotationAssertion(rdfs:seeAlso obo:IAO_8000012 <https://github.com/obophenotype/uberon/wiki/Taxon-constraints>)
SubClassOf(obo:IAO_8000012 obo:IAO_8000006)

# Class: obo:IAO_8000013 (reasoned ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000013 "reasoned ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000013 "An ontology module that contains axioms generated by a reasoner. The generated axioms are typically direct SubClassOf axioms, but other possibilities are available."@en)
AnnotationAssertion(rdfs:label obo:IAO_8000013 "reasoned ontology module"@en)
AnnotationAssertion(rdfs:seeAlso obo:IAO_8000013 <http://robot.obolibrary.org/reason>)
SubClassOf(obo:IAO_8000013 obo:IAO_8000000)

# Class: obo:IAO_8000014 (generated ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000014 "generated ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000014 "An ontology module that is automatically generated, for example via a SPARQL query or via template and a CSV."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_8000014 "TODO: Add axioms (using PROV-O?) that indicate this is the output-of some reasoning process"@en)
AnnotationAssertion(rdfs:label obo:IAO_8000014 "generated ontology module"@en)
SubClassOf(obo:IAO_8000014 obo:IAO_8000000)

# Class: obo:IAO_8000015 (template generated ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000015 "template generated ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000015 "An ontology module that is automatically generated from a template specification and fillers for slots in that template."@en)
AnnotationAssertion(rdfs:label obo:IAO_8000015 "template generated ontology module"@en)
AnnotationAssertion(rdfs:seeAlso obo:IAO_8000015 <http://robot.obolibrary.org/template>)
AnnotationAssertion(rdfs:seeAlso obo:IAO_8000015 <https://doi.org/10.1186/s13326-017-0126-0>)
AnnotationAssertion(rdfs:seeAlso obo:IAO_8000015 <https://github.com/dosumis/dead_simple_owl_design_patterns/>)
SubClassOf(obo:IAO_8000015 obo:IAO_8000014)

# Class: obo:IAO_8000016 (taxonomic bridge ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000016 "taxonomic bridge ontology module"@en)
AnnotationAssertion(rdfs:label obo:IAO_8000016 "taxonomic bridge ontology module"@en)
SubClassOf(obo:IAO_8000016 obo:IAO_8000004)

# Class: obo:IAO_8000017 (ontology module subsetted by expressivity)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000017 "ontology module subsetted by expressivity"@en)
AnnotationAssertion(rdfs:label obo:IAO_8000017 "ontology module subsetted by expressivity"@en)
SubClassOf(obo:IAO_8000017 obo:IAO_8000006)

# Class: obo:IAO_8000018 (obo basic subset ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000018 "obo basic subset ontology module"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_8000018 "A subset ontology that is designed for basic applications to continue to make certain simplifying assumptions; many of these simplifying assumptions were based on the initial version of the Gene Ontology, and have become enshrined in many popular and useful tools such as term enrichment tools.

Examples of such assumptions include: traversing the ontology graph ignoring relationship types using a naive algorithm will not lead to cycles (i.e. the ontology is a DAG); every referenced term is declared in the ontology (i.e. there are no dangling clauses).

An ontology is OBO Basic if and only if it has the following characteristics:
DAG
Unidirectional
No Dangling Clauses
Fully Asserted
Fully Labeled
No equivalence axioms
Singly labeled edges
No qualifier lists
No disjointness axioms
No owl-axioms header
No imports"@en)
AnnotationAssertion(rdfs:label obo:IAO_8000018 "obo basic subset ontology module"@en)
AnnotationAssertion(rdfs:seeAlso obo:IAO_8000018 <http://owlcollab.github.io/oboformat/doc/obo-syntax.html#6.2>)
SubClassOf(obo:IAO_8000018 obo:IAO_8000017)

# Class: obo:IAO_8000019 (ontology module subsetted by OWL profile)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000019 "ontology module subsetted by OWL profile"@en)
AnnotationAssertion(rdfs:label obo:IAO_8000019 "ontology module subsetted by OWL profile"@en)
SubClassOf(obo:IAO_8000019 obo:IAO_8000017)

# Class: obo:IAO_8000020 (EL++ ontology module)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_8000020 "EL++ ontology module"@en)
AnnotationAssertion(rdfs:label obo:IAO_8000020 "EL++ ontology module"@en)
SubClassOf(obo:IAO_8000020 obo:IAO_8000019)

# Class: obo:NCBITaxon_10239 (Viruses)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_10239 obo:NCBITaxon_superkingdom)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_10239 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_10239 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_10239 "Vira")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_10239 "Viridae")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_10239 "viruses")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_10239 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_10239 "Viruses")

# Class: obo:NCBITaxon_117570 (Teleostomi)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_117570 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_117570 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_117570 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_117570 "Teleostomi")
SubClassOf(obo:NCBITaxon_117570 obo:NCBITaxon_7776)

# Class: obo:NCBITaxon_117571 (Euteleostomi)

AnnotationAssertion(oboInOwl:hasAlternativeId obo:NCBITaxon_117571 "NCBITaxon:40673")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_117571 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_117571 "bony vertebrates")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_117571 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_117571 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_117571 "Euteleostomi")
SubClassOf(obo:NCBITaxon_117571 obo:NCBITaxon_117570)

# Class: obo:NCBITaxon_131221 (Streptophytina)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_131221 obo:NCBITaxon_subphylum)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_131221 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:equivalent_name) oboInOwl:hasExactSynonym obo:NCBITaxon_131221 "charophyte/embryophyte group")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_131221 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_131221 "Charophyta/Embryophyta group")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_131221 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_131221 "Streptophytina")
SubClassOf(obo:NCBITaxon_131221 obo:NCBITaxon_35493)

# Class: obo:NCBITaxon_131567 (cellular organisms)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_131567 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_131567 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_131567 "biota")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_131567 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_131567 "cellular organisms")

# Class: obo:NCBITaxon_1338369 (Dipnotetrapodomorpha)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_1338369 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_1338369 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_1338369 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_1338369 "Dipnotetrapodomorpha")
SubClassOf(obo:NCBITaxon_1338369 obo:NCBITaxon_8287)

# Class: obo:NCBITaxon_1437010 (Boreoeutheria)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_1437010 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_1437010 "PMID:11743200")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_1437010 "PMID:11791233")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_1437010 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_1437010 "Boreotheria")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_1437010 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_1437010 "Boreoeutheria")
SubClassOf(obo:NCBITaxon_1437010 obo:NCBITaxon_9347)

# Class: obo:NCBITaxon_1437180 (Acrogymnospermae)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_1437180 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_1437180 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_1437180 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_1437180 "Acrogymnospermae")
SubClassOf(obo:NCBITaxon_1437180 obo:NCBITaxon_58024)

# Class: obo:NCBITaxon_2 (Bacteria)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_2 obo:NCBITaxon_superkingdom)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "GC_ID:11")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10425795")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10425796")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10425797")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10490293")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10843050")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10939651")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10939673")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10939677")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11211268")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11321083")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11321113")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11411719")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11540071")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11542017")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11542087")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11760965")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:12054223")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:2112744")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:270744")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:7520741")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:8123559")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:8186100")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:8590690")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:9103655")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:9336922")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_2 "eubacteria")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_2 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:in_part) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "Monera")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:in_part) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "Procaryotae")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:in_part) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "Prokaryota")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:in_part) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "Prokaryotae")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "bacteria")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:in_part) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "prokaryote")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:in_part) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "prokaryotes")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_2 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_2 "Bacteria")
SubClassOf(obo:NCBITaxon_2 obo:NCBITaxon_131567)

# Class: obo:NCBITaxon_207598 (Homininae)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_207598 obo:NCBITaxon_subfamily)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_207598 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_207598 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_207598 "Homo/Pan/Gorilla group")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_207598 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_207598 "Homininae")
SubClassOf(obo:NCBITaxon_207598 obo:NCBITaxon_9604)

# Class: obo:NCBITaxon_2157 (Archaea)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_2157 obo:NCBITaxon_superkingdom)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "GC_ID:11")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:10425795")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:10425796")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:10425797")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:10490293")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:10843050")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:10939651")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:10939673")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:10939677")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:11211268")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:11321083")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:11321113")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:11411719")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:11540071")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:11541975")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:11542064")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:11542149")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:11760965")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:12054223")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:2112744")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:25527841")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:270744")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:8123559")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:8590690")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:9103655")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2157 "PMID:9336922")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_2157 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2157 "Archaebacteria")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2157 "Mendosicutes")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2157 "Metabacteria")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:in_part) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2157 "Monera")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:in_part) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2157 "Procaryotae")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:in_part) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2157 "Prokaryota")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:in_part) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2157 "Prokaryotae")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2157 "archaea")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:in_part) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2157 "prokaryote")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:in_part) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2157 "prokaryotes")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_2157 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_2157 "Archaea")
SubClassOf(obo:NCBITaxon_2157 obo:NCBITaxon_131567)

# Class: obo:NCBITaxon_2759 (Eukaryota)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_2759 obo:NCBITaxon_superkingdom)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2759 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2759 "PMID:23020233")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2759 "PMID:30257078")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_2759 "eucaryotes")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_2759 "eukaryotes")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_2759 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2759 "Eucarya")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2759 "Eucaryotae")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2759 "Eukarya")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2759 "Eukaryotae")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_2759 "eukaryotes")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_2759 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_2759 "Eukaryota")
SubClassOf(obo:NCBITaxon_2759 obo:NCBITaxon_131567)

# Class: obo:NCBITaxon_3041 (Chlorophyta)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_3041 obo:NCBITaxon_phylum)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_3041 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_3041 "PMID:23020233")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_3041 "green algae")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_3041 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_3041 "Chlorophycota")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_3041 "Chlorophyta sensu Bremer 1985")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:in_part) oboInOwl:hasRelatedSynonym obo:NCBITaxon_3041 "algae")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_3041 "green algae")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_3041 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_3041 "Chlorophyta")
SubClassOf(obo:NCBITaxon_3041 obo:NCBITaxon_33090)

# Class: obo:NCBITaxon_314146 (Euarchontoglires)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_314146 obo:NCBITaxon_superorder)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_314146 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_314146 "PMID:11214319")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_314146 "PMID:12082125")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_314146 "PMID:12878460")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_314146 "PMID:15522813")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_314146 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_314146 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_314146 "Euarchontoglires")
SubClassOf(obo:NCBITaxon_314146 obo:NCBITaxon_1437010)

# Class: obo:NCBITaxon_314293 (Simiiformes)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_314293 obo:NCBITaxon_infraorder)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_314293 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_314293 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_314293 "Anthropoidea")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_314293 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_314293 "Simiiformes")
SubClassOf(obo:NCBITaxon_314293 obo:NCBITaxon_376913)

# Class: obo:NCBITaxon_314295 (Hominoidea)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_314295 obo:NCBITaxon_superfamily)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_314295 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_314295 "ape")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_314295 "apes")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_314295 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_314295 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_314295 "Hominoidea")
SubClassOf(obo:NCBITaxon_314295 obo:NCBITaxon_9526)

# Class: obo:NCBITaxon_3193 (Embryophyta)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_3193 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_3193 "higher plants")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_3193 "land plants")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_3193 "plants")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_3193 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_3193 "land plants")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_3193 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_3193 "Embryophyta")
SubClassOf(obo:NCBITaxon_3193 obo:NCBITaxon_131221)

# Class: obo:NCBITaxon_32523 (Tetrapoda)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_32523 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_32523 "tetrapods")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_32523 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_32523 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_32523 "Tetrapoda")
SubClassOf(obo:NCBITaxon_32523 obo:NCBITaxon_1338369)

# Class: obo:NCBITaxon_32524 (Amniota)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_32524 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_32524 "amniotes")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_32524 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_32524 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_32524 "Amniota")
SubClassOf(obo:NCBITaxon_32524 obo:NCBITaxon_32523)

# Class: obo:NCBITaxon_32525 (Theria <mammals>)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_32525 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:scientific_name) oboInOwl:hasExactSynonym obo:NCBITaxon_32525 "Theria")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_32525 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_32525 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_32525 "Theria <mammals>")
SubClassOf(obo:NCBITaxon_32525 obo:NCBITaxon_40674)

# Class: obo:NCBITaxon_33090 (Viridiplantae)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_33090 obo:NCBITaxon_kingdom)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_33090 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_33090 "PMID:16248873")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_33090 "PMID:30257078")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:equivalent_name) oboInOwl:hasExactSynonym obo:NCBITaxon_33090 "Chlorophyta/Embryophyta group")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:equivalent_name) oboInOwl:hasExactSynonym obo:NCBITaxon_33090 "chlorophyte/embryophyte group")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_33090 "green plants")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_33090 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_33090 "Chlorobionta")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_33090 "Chloroplastida")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_33090 "green plants")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_33090 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_33090 "Viridiplantae")
SubClassOf(obo:NCBITaxon_33090 obo:NCBITaxon_2759)

# Class: obo:NCBITaxon_33154 (Opisthokonta)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_33154 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_33154 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_33154 "Fungi/Metazoa group")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_33154 "opisthokonts")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_33154 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_33154 "Opisthokonta")
SubClassOf(obo:NCBITaxon_33154 obo:NCBITaxon_2759)

# Class: obo:NCBITaxon_33208 (Metazoa)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_33208 obo:NCBITaxon_kingdom)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_33208 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_33208 "metazoans")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_33208 "multicellular animals")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_33208 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_33208 "Animalia")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_33208 "animals")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_33208 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_33208 "Metazoa")
SubClassOf(obo:NCBITaxon_33208 obo:NCBITaxon_33154)

# Class: obo:NCBITaxon_33213 (Bilateria)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_33213 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_33213 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_33213 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_33213 "Bilateria")
SubClassOf(obo:NCBITaxon_33213 obo:NCBITaxon_6072)

# Class: obo:NCBITaxon_33511 (Deuterostomia)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_33511 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_33511 "deuterostomes")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_33511 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_33511 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_33511 "Deuterostomia")
SubClassOf(obo:NCBITaxon_33511 obo:NCBITaxon_33213)

# Class: obo:NCBITaxon_3398 (Magnoliopsida)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_3398 obo:NCBITaxon_class)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_3398 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_3398 "PMID:25249442")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_3398 "angiosperms")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_3398 "flowering plants")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_3398 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_3398 "Angiospermae")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_3398 "Magnoliophyta")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_3398 "flowering plants")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_3398 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_3398 "Magnoliopsida")
SubClassOf(obo:NCBITaxon_3398 obo:NCBITaxon_58024)

# Class: obo:NCBITaxon_35493 (Streptophyta)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_35493 obo:NCBITaxon_phylum)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_35493 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_35493 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_35493 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_35493 "Streptophyta")
SubClassOf(obo:NCBITaxon_35493 obo:NCBITaxon_33090)

# Class: obo:NCBITaxon_376913 (Haplorrhini)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_376913 obo:NCBITaxon_suborder)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_376913 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_376913 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_376913 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_376913 "Haplorrhini")
SubClassOf(obo:NCBITaxon_376913 obo:NCBITaxon_9443)

# Class: obo:NCBITaxon_40674 (Mammalia)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_40674 obo:NCBITaxon_class)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_40674 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_40674 "mammals")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_40674 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_40674 "mammals")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_40674 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_40674 "Mammalia")
SubClassOf(obo:NCBITaxon_40674 obo:NCBITaxon_32524)

# Class: obo:NCBITaxon_4751 (Fungi)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_4751 obo:NCBITaxon_kingdom)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_4751 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_4751 "PMID:11062127")
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_4751 "PMID:12684019")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_4751 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_4751 "Mycota")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_4751 "fungi")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:in_part) oboInOwl:hasRelatedSynonym obo:NCBITaxon_4751 "fungi")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_4751 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_4751 "Fungi")
SubClassOf(obo:NCBITaxon_4751 obo:NCBITaxon_33154)

# Class: obo:NCBITaxon_58023 (Tracheophyta)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_58023 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_58023 "vascular plants")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_58023 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_58023 "vascular plants")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_58023 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_58023 "Tracheophyta")
SubClassOf(obo:NCBITaxon_58023 obo:NCBITaxon_3193)

# Class: obo:NCBITaxon_58024 (Spermatophyta)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_58024 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_58024 "seed plants")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_58024 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_58024 "seed plants")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_58024 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_58024 "Spermatophyta")
SubClassOf(obo:NCBITaxon_58024 obo:NCBITaxon_78536)

# Class: obo:NCBITaxon_6072 (Eumetazoa)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_6072 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_6072 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_6072 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_6072 "Eumetazoa")
SubClassOf(obo:NCBITaxon_6072 obo:NCBITaxon_33208)

# Class: obo:NCBITaxon_7711 (Chordata)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_7711 obo:NCBITaxon_phylum)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_7711 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_7711 "chordates")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_7711 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_7711 "chordates")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_7711 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_7711 "Chordata")
SubClassOf(obo:NCBITaxon_7711 obo:NCBITaxon_33511)

# Class: obo:NCBITaxon_7742 (Vertebrata <vertebrates>)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_7742 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:scientific_name) oboInOwl:hasExactSynonym obo:NCBITaxon_7742 "Vertebrata")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_7742 "vertebrates")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_7742 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_7742 "vertebrates")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_7742 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_7742 "Vertebrata <vertebrates>")
SubClassOf(obo:NCBITaxon_7742 obo:NCBITaxon_89593)

# Class: obo:NCBITaxon_7776 (Gnathostomata <vertebrates>)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_7776 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:scientific_name) oboInOwl:hasExactSynonym obo:NCBITaxon_7776 "Gnathostomata")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_7776 "jawed vertebrates")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_7776 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_7776 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_7776 "Gnathostomata <vertebrates>")
SubClassOf(obo:NCBITaxon_7776 obo:NCBITaxon_7742)

# Class: obo:NCBITaxon_78536 (Euphyllophyta)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_78536 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:equivalent_name) oboInOwl:hasExactSynonym obo:NCBITaxon_78536 "euphyllophytes")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_78536 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_78536 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_78536 "Euphyllophyta")
SubClassOf(obo:NCBITaxon_78536 obo:NCBITaxon_58023)

# Class: obo:NCBITaxon_8287 (Sarcopterygii)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_8287 obo:NCBITaxon_superclass)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_8287 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_8287 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_8287 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_8287 "Sarcopterygii")
SubClassOf(obo:NCBITaxon_8287 obo:NCBITaxon_117571)

# Class: obo:NCBITaxon_89593 (Craniata <chordates>)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_89593 obo:NCBITaxon_subphylum)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_89593 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:scientific_name) oboInOwl:hasExactSynonym obo:NCBITaxon_89593 "Craniata")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_89593 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_89593 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_89593 "Craniata <chordates>")
SubClassOf(obo:NCBITaxon_89593 obo:NCBITaxon_7711)

# Class: obo:NCBITaxon_9347 (Eutheria)

AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_9347 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_9347 "eutherian mammals")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_9347 "placental mammals")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_9347 "placentals")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_9347 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_9347 "Placentalia")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_9347 "placentals")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_9347 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_9347 "Eutheria")
SubClassOf(obo:NCBITaxon_9347 obo:NCBITaxon_32525)

# Class: obo:NCBITaxon_9443 (Primates)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_9443 obo:NCBITaxon_order)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_9443 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:equivalent_name) oboInOwl:hasExactSynonym obo:NCBITaxon_9443 "primate")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_9443 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_9443 "Primata")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:blast_name) oboInOwl:hasRelatedSynonym obo:NCBITaxon_9443 "primates")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_9443 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_9443 "Primates")
SubClassOf(obo:NCBITaxon_9443 obo:NCBITaxon_314146)

# Class: obo:NCBITaxon_9526 (Catarrhini)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_9526 obo:NCBITaxon_parvorder)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_9526 "GC_ID:1")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_9526 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_9526 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_9526 "Catarrhini")
SubClassOf(obo:NCBITaxon_9526 obo:NCBITaxon_314293)

# Class: obo:NCBITaxon_9604 (Hominidae)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_9604 obo:NCBITaxon_family)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_9604 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_9604 "great apes")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_9604 "ncbi_taxonomy")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:synonym) oboInOwl:hasRelatedSynonym obo:NCBITaxon_9604 "Pongidae")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_9604 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_9604 "Hominidae")
SubClassOf(obo:NCBITaxon_9604 obo:NCBITaxon_314295)

# Class: obo:NCBITaxon_9605 (Homo)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_9605 obo:NCBITaxon_genus)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_9605 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_9605 "humans")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_9605 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_9605 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_9605 "Homo")
SubClassOf(obo:NCBITaxon_9605 obo:NCBITaxon_207598)

# Class: obo:NCBITaxon_9606 (Homo sapiens)

AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_9606 obo:NCBITaxon_species)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_9606 "GC_ID:1")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:genbank_common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_9606 "human")
AnnotationAssertion(Annotation(oboInOwl:hasSynonymType ncbitaxon:common_name) oboInOwl:hasExactSynonym obo:NCBITaxon_9606 "man")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_9606 "ncbi_taxonomy")
AnnotationAssertion(rdfs:isDefinedBy obo:NCBITaxon_9606 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_9606 "Homo sapiens")
SubClassOf(obo:NCBITaxon_9606 obo:NCBITaxon_9605)

# Class: obo:PATO_0000001 (quality)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0000001 "A dependent entity that inheres in a bearer by virtue of how the bearer is related to other entities")
AnnotationAssertion(obo:IAO_0000589 obo:PATO_0000001 "quality (PATO)")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PATO_0000001 "PATO:0000072")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0000001 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0000001 "PATO:0000001")
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0000001 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000001 "quality")
SubClassOf(obo:PATO_0000001 obo:BFO_0000020)

# Class: obo:PATO_0000068 (qualitative)

AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0000068 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0000068 "PATO:0000068")
AnnotationAssertion(rdfs:comment obo:PATO_0000068 "TODO: define this or obsolete it and move children somewhere else.")
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0000068 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000068 "qualitative")
SubClassOf(obo:PATO_0000068 obo:PATO_0000001)

# Class: obo:PATO_0000069 (deviation (from_normal))

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0000069 "A quality inhering in a bearer by virtue of the whether the bearer differs from normal or average.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0000069 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0000069 "PATO:0000069")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0000069 <http://purl.obolibrary.org/obo/pato#attribute_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0000069 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000069 "deviation (from_normal)")
SubClassOf(obo:PATO_0000069 obo:PATO_0000068)

# Class: obo:PATO_0000070 (amount)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0000070 "The number of entities of this type that are part of the whole organism.")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PATO_0000070 "PATO:0000053")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PATO_0000070 "PATO:0000071")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PATO_0000070 "PATO:0001169")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PATO_0000070 "PATO:0001226")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0000070 "presence or absence in organism")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0000070 "quantitative")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0000070 "quality")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PATO_0000070 "count in organism")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PATO_0000070 "number")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PATO_0000070 "presence")
AnnotationAssertion(oboInOwl:id obo:PATO_0000070 "PATO:0000070")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0000070 <http://purl.obolibrary.org/obo/pato#attribute_slim>)
AnnotationAssertion(rdfs:comment obo:PATO_0000070 "This term was originally named \"presence\". It has been renamed to reduce ambiguity. Consider annotating with the reciprocal relation,PATO:0001555, has_number_of. For example, rather than E=fin ray Q=count in organism C=10, say E=organism Q=has number of E2= fin ray C=10.")
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0000070 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000070 "amount")
SubClassOf(obo:PATO_0000070 obo:PATO_0000068)
SubClassOf(obo:PATO_0000070 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#reciprocal_of> obo:PATO_0001555))

# Class: obo:PATO_0000161 (rate)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:melissa") obo:IAO_0000115 obo:PATO_0000161 "A quality of a single process inhering in a bearer by virtue of the bearer's occurrence per unit time.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0000161 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0000161 "PATO:0000161")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0000161 <http://purl.obolibrary.org/obo/pato#attribute_slim>)
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0000161 <http://purl.obolibrary.org/obo/pato#scalar_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0000161 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000161 "rate")
SubClassOf(obo:PATO_0000161 obo:PATO_0002062)

# Class: obo:PATO_0000461 (normal)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0000461 "A quality inhering in a bearer by virtue of the bearer's exhibiting no deviation from normal or average.")
AnnotationAssertion(obo:RO_0002604 obo:PATO_0000461 obo:PATO_0000460)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0000461 "quality")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PATO_0000461 "average")
AnnotationAssertion(oboInOwl:id obo:PATO_0000461 "PATO:0000461")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0000461 <http://purl.obolibrary.org/obo/pato#abnormal_slim>)
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0000461 <http://purl.obolibrary.org/obo/pato#mpath_slim>)
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0000461 <http://purl.obolibrary.org/obo/pato#value_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0000461 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000461 "normal")
SubClassOf(obo:PATO_0000461 obo:PATO_0000068)

# Class: obo:PATO_0000467 (present)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0000467 "A quality inhering in a bearer by virtue of the bearer's existence.")
AnnotationAssertion(obo:RO_0002604 obo:PATO_0000467 obo:PATO_0000462)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0000467 "quality")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PATO_0000467 "present in organism")
AnnotationAssertion(oboInOwl:id obo:PATO_0000467 "PATO:0000467")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0000467 <http://purl.obolibrary.org/obo/pato#absent_slim>)
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0000467 <http://purl.obolibrary.org/obo/pato#value_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0000467 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000467 "present")
SubClassOf(obo:PATO_0000467 obo:PATO_0000070)

# Class: obo:PATO_0000470 (increased amount)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0000470 "An amount which is relatively high.")
AnnotationAssertion(obo:RO_0002604 obo:PATO_0000470 obo:PATO_0001997)
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PATO_0000470 "PATO:0000420")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PATO_0000470 "PATO:0000650")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0000470 "increased number")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0000470 "present in greater numbers in organism")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0000470 "supernumerary")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0000470 "quality")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PATO_0000470 "accessory")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PATO_0000470 "increased")
AnnotationAssertion(oboInOwl:id obo:PATO_0000470 "PATO:0000470")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0000470 <http://purl.obolibrary.org/obo/pato#value_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0000470 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000470 "increased amount")
EquivalentClasses(obo:PATO_0000470 ObjectIntersectionOf(obo:PATO_0000070 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> obo:PATO_0000461)))
SubClassOf(obo:PATO_0000470 obo:PATO_0000467)
SubClassOf(obo:PATO_0000470 obo:PATO_0002300)

# Class: obo:PATO_0000911 (decreased rate)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATO:GVG") obo:IAO_0000115 obo:PATO_0000911 "A rate which is relatively low.")
AnnotationAssertion(obo:RO_0002604 obo:PATO_0000911 obo:PATO_0000912)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0000911 "slow rate")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0000911 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0000911 "PATO:0000911")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0000911 <http://purl.obolibrary.org/obo/pato#mpath_slim>)
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0000911 <http://purl.obolibrary.org/obo/pato#value_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0000911 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000911 "decreased rate")
EquivalentClasses(obo:PATO_0000911 ObjectIntersectionOf(obo:PATO_0000161 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> obo:PATO_0000461)))
SubClassOf(obo:PATO_0000911 obo:PATO_0000161)
SubClassOf(obo:PATO_0000911 obo:PATO_0002302)

# Class: obo:PATO_0000912 (increased rate)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATO:GVG") obo:IAO_0000115 obo:PATO_0000912 "A rate which is relatively high.")
AnnotationAssertion(obo:RO_0002604 obo:PATO_0000912 obo:PATO_0000911)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0000912 "fast rate")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0000912 "high rate")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0000912 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0000912 "PATO:0000912")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0000912 <http://purl.obolibrary.org/obo/pato#mpath_slim>)
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0000912 <http://purl.obolibrary.org/obo/pato#value_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0000912 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000912 "increased rate")
EquivalentClasses(obo:PATO_0000912 ObjectIntersectionOf(obo:PATO_0000161 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> obo:PATO_0000461)))
SubClassOf(obo:PATO_0000912 obo:PATO_0000161)
SubClassOf(obo:PATO_0000912 obo:PATO_0002304)

# Class: obo:PATO_0001018 (physical quality)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0001018 "A quality of a physical entity that exists through action of continuants at the physical level of organisation in relation to other entities.")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PATO_0001018 "PATO:0002079")
AnnotationAssertion(oboInOwl:hasDbXref obo:PATO_0001018 "Wikipedia:Physical_property")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001018 "relational physical quality")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0001018 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0001018 "PATO:0001018")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0001018 <http://purl.obolibrary.org/obo/pato#attribute_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0001018 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001018 "physical quality")
SubClassOf(obo:PATO_0001018 obo:PATO_0001241)

# Class: obo:PATO_0001019 (mass density)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "WordNet:WordNet") obo:IAO_0000115 obo:PATO_0001019 "A physical quality which inheres in a bearer by virtue of some influence is exerted by the bearer's mass per unit size.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0001019 "quality")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PATO_0001019 "density")
AnnotationAssertion(oboInOwl:id obo:PATO_0001019 "PATO:0001019")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0001019 <http://purl.obolibrary.org/obo/pato#attribute_slim>)
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0001019 <http://purl.obolibrary.org/obo/pato#scalar_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0001019 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001019 "mass density")
SubClassOf(obo:PATO_0001019 obo:PATO_0001018)

# Class: obo:PATO_0001164 (dense)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0001164 "A physical quality which inheres in a bearer by virtue of the bearer's exhibiting density.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0001164 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0001164 "PATO:0001164")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0001164 <http://purl.obolibrary.org/obo/pato#mpath_slim>)
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0001164 <http://purl.obolibrary.org/obo/pato#value_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0001164 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001164 "dense")
SubClassOf(obo:PATO_0001164 obo:PATO_0001019)

# Class: obo:PATO_0001236 (process quality)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0001236 "A quality which inheres in an process.")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PATO_0001236 "PATO:0001239")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PATO_0001236 "PATO:0001240")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001236 "quality of a process")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001236 "quality of occurrent")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001236 "quality of process")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001236 "relational quality of occurrent")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0001236 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0001236 "PATO:0001236")
AnnotationAssertion(rdfs:comment obo:PATO_0001236 "See comments of relational quality of a physical entity.")
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0001236 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001236 "process quality")
SubClassOf(obo:PATO_0001236 obo:PATO_0000001)
DisjointClasses(obo:PATO_0001236 obo:PATO_0001241)

# Class: obo:PATO_0001241 (physical object quality)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0001241 "A quality which inheres in a continuant.")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PATO_0001241 "PATO:0001237")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PATO_0001241 "PATO:0001238")
AnnotationAssertion(oboInOwl:hasDbXref obo:PATO_0001241 "snap:Quality")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001241 "monadic quality of a continuant")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001241 "multiply inhering quality of a physical entity")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001241 "quality of a continuant")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001241 "quality of a single physical entity")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001241 "quality of an object")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001241 "quality of continuant")
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:PATO_0001241 "monadic quality of an object")
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:PATO_0001241 "monadic quality of continuant")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0001241 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0001241 "PATO:0001241")
AnnotationAssertion(rdfs:comment obo:PATO_0001241 "Relational qualities are qualities that hold between multiple entities. Normal (monadic) qualities such as the shape of a eyeball exist purely as a quality of that eyeball. A relational quality such as sensitivity to light is a quality of that eyeball (and connecting nervous system) as it relates to incoming light waves/particles.")
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0001241 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001241 "physical object quality")
SubClassOf(obo:PATO_0001241 obo:PATO_0000001)

# Class: obo:PATO_0001338 (mixed sex)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "MGED:MGED") obo:IAO_0000115 obo:PATO_0001338 "A biological sex quality inhering in a population of multiple sexes.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0001338 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0001338 "PATO:0001338")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0001338 <http://purl.obolibrary.org/obo/pato#value_slim>)
AnnotationAssertion(rdfs:comment obo:PATO_0001338 "For example a mixture of females and male or males and hermaphrodites.")
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0001338 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001338 "mixed sex")
SubClassOf(obo:PATO_0001338 obo:PATO_0002003)

# Class: obo:PATO_0001415 (morbidity)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0001415 "A quality inhering in a population by virtue of the proportion of its members that are ill at a given time.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0001415 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0001415 "PATO:0001415")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0001415 <http://purl.obolibrary.org/obo/pato#attribute_slim>)
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0001415 <http://purl.obolibrary.org/obo/pato#scalar_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0001415 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001415 "morbidity")
SubClassOf(obo:PATO_0001415 obo:PATO_0002003)

# Class: obo:PATO_0001555 (has number of)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:CJM") obo:IAO_0000115 obo:PATO_0001555 "The number of parts of a particular type that the bearer entity has. This is a relational quality, and thus holds between two entities: the bearer of the quality, and the type of parts.")
AnnotationAssertion(oboInOwl:hasDbXref obo:PATO_0001555 "OBO_REL:has_part")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001555 "extra or missing physical or functional parts")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001555 "has or lacks parts of type")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001555 "mereological quality")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001555 "number of")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0001555 "quality")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PATO_0001555 "cardinality")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PATO_0001555 "number")
AnnotationAssertion(oboInOwl:id obo:PATO_0001555 "PATO:0001555")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0001555 <http://purl.obolibrary.org/obo/pato#attribute_slim>)
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0001555 <http://purl.obolibrary.org/obo/pato#relational_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0001555 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001555 "has number of")
SubClassOf(obo:PATO_0001555 obo:PATO_0001241)
SubClassOf(obo:PATO_0001555 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#reciprocal_of> obo:PATO_0000070))

# Class: obo:PATO_0001788 (increased mass density)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0001788 "A density which is higher relative to the normal or average.")
AnnotationAssertion(obo:RO_0002604 obo:PATO_0001788 obo:PATO_0001790)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001788 "high density")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0001788 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0001788 "PATO:0001788")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0001788 <http://purl.obolibrary.org/obo/pato#value_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0001788 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001788 "increased mass density")
EquivalentClasses(obo:PATO_0001788 ObjectIntersectionOf(obo:PATO_0001164 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> obo:PATO_0000461)))
SubClassOf(obo:PATO_0001788 obo:PATO_0001164)
SubClassOf(obo:PATO_0001788 obo:PATO_0002305)

# Class: obo:PATO_0001790 (decreased mass density)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0001790 "A density which is lower relative to the normal or average.")
AnnotationAssertion(obo:RO_0002604 obo:PATO_0001790 obo:PATO_0001788)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001790 "low density")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0001790 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0001790 "PATO:0001790")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0001790 <http://purl.obolibrary.org/obo/pato#value_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0001790 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001790 "decreased mass density")
EquivalentClasses(obo:PATO_0001790 ObjectIntersectionOf(obo:PATO_0001164 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> obo:PATO_0000461)))
SubClassOf(obo:PATO_0001790 obo:PATO_0001164)
SubClassOf(obo:PATO_0001790 obo:PATO_0002303)

# Class: obo:PATO_0001997 (decreased amount)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0001997 "An amount which is relatively low.")
AnnotationAssertion(obo:RO_0002604 obo:PATO_0001997 obo:PATO_0000470)
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PATO_0001997 "PATO:0000419")
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PATO_0001997 "PATO:0000468")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001997 "decreased number")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PATO_0001997 "present in fewer numbers in organism")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0001997 "quality")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PATO_0001997 "decreased")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PATO_0001997 "reduced")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PATO_0001997 "subnumerary")
AnnotationAssertion(oboInOwl:id obo:PATO_0001997 "PATO:0001997")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0001997 <http://purl.obolibrary.org/obo/pato#value_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0001997 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001997 "decreased amount")
EquivalentClasses(obo:PATO_0001997 ObjectIntersectionOf(obo:PATO_0000070 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> obo:PATO_0000461)))
SubClassOf(obo:PATO_0001997 obo:PATO_0000467)
SubClassOf(obo:PATO_0001997 obo:PATO_0002301)

# Class: obo:PATO_0002003 (population quality)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0002003 "A quality that inheres in an entire population or part of a population.")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0002003 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0002003 "PATO:0002003")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0002003 <http://purl.obolibrary.org/obo/pato#attribute_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0002003 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0002003 "population quality")
SubClassOf(obo:PATO_0002003 obo:PATO_0001241)

# Class: obo:PATO_0002062 (physical quality of a process)

AnnotationAssertion(oboInOwl:created_by obo:PATO_0002062 "george")
AnnotationAssertion(oboInOwl:creation_date obo:PATO_0002062 "2009-06-05T09:16:46Z")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0002062 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0002062 "PATO:0002062")
AnnotationAssertion(oboInOwl:inSubset obo:PATO_0002062 <http://purl.obolibrary.org/obo/pato#attribute_slim>)
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0002062 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0002062 "physical quality of a process")
SubClassOf(obo:PATO_0002062 obo:PATO_0001236)

# Class: obo:PATO_0002300 (increased quality)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0002300 "A quality that has a value that is increased compared to normal or average.")
AnnotationAssertion(obo:RO_0002604 obo:PATO_0002300 obo:PATO_0002301)
AnnotationAssertion(oboInOwl:created_by obo:PATO_0002300 "George Gkoutos")
AnnotationAssertion(oboInOwl:creation_date obo:PATO_0002300 "2011-06-16T06:39:43Z")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0002300 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0002300 "PATO:0002300")
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0002300 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0002300 "increased quality")
EquivalentClasses(obo:PATO_0002300 ObjectIntersectionOf(obo:PATO_0000001 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> obo:PATO_0000461)))
SubClassOf(obo:PATO_0002300 obo:PATO_0000069)
SubClassOf(obo:PATO_0002300 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> obo:PATO_0000461))

# Class: obo:PATO_0002301 (decreased quality)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0002301 "A quality that has a value that is decreased compared to normal or average.")
AnnotationAssertion(obo:RO_0002604 obo:PATO_0002301 obo:PATO_0002300)
AnnotationAssertion(oboInOwl:created_by obo:PATO_0002301 "George Gkoutos")
AnnotationAssertion(oboInOwl:creation_date obo:PATO_0002301 "2011-06-16T06:40:15Z")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0002301 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0002301 "PATO:0002301")
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0002301 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0002301 "decreased quality")
EquivalentClasses(obo:PATO_0002301 ObjectIntersectionOf(obo:PATO_0000001 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> obo:PATO_0000461)))
SubClassOf(obo:PATO_0002301 obo:PATO_0000069)
SubClassOf(obo:PATO_0002301 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> obo:PATO_0000461))

# Class: obo:PATO_0002302 (decreased process quality)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0002302 "A quality of a process that has a value that is decreased compared to normal or average.")
AnnotationAssertion(obo:RO_0002604 obo:PATO_0002302 obo:PATO_0002304)
AnnotationAssertion(oboInOwl:created_by obo:PATO_0002302 "George Gkoutos")
AnnotationAssertion(oboInOwl:creation_date obo:PATO_0002302 "2011-06-16T06:50:59Z")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0002302 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0002302 "PATO:0002302")
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0002302 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0002302 "decreased process quality")
EquivalentClasses(obo:PATO_0002302 ObjectIntersectionOf(obo:PATO_0001236 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> obo:PATO_0000461)))
SubClassOf(obo:PATO_0002302 obo:PATO_0001236)
SubClassOf(obo:PATO_0002302 obo:PATO_0002301)

# Class: obo:PATO_0002303 (decreased object quality)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0002303 "A quality of an object that has a value that is decreased compared to normal or average.")
AnnotationAssertion(obo:RO_0002604 obo:PATO_0002303 obo:PATO_0002305)
AnnotationAssertion(oboInOwl:created_by obo:PATO_0002303 "George Gkoutos")
AnnotationAssertion(oboInOwl:creation_date obo:PATO_0002303 "2011-06-16T06:51:54Z")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0002303 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0002303 "PATO:0002303")
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0002303 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0002303 "decreased object quality")
EquivalentClasses(obo:PATO_0002303 ObjectIntersectionOf(obo:PATO_0001241 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#decreased_in_magnitude_relative_to> obo:PATO_0000461)))
SubClassOf(obo:PATO_0002303 obo:PATO_0001241)
SubClassOf(obo:PATO_0002303 obo:PATO_0002301)

# Class: obo:PATO_0002304 (increased process quality)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0002304 "A quality of a process that has a value that is increased compared to normal or average.")
AnnotationAssertion(obo:RO_0002604 obo:PATO_0002304 obo:PATO_0002302)
AnnotationAssertion(oboInOwl:created_by obo:PATO_0002304 "George Gkoutos")
AnnotationAssertion(oboInOwl:creation_date obo:PATO_0002304 "2011-06-16T06:53:08Z")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0002304 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0002304 "PATO:0002304")
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0002304 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0002304 "increased process quality")
EquivalentClasses(obo:PATO_0002304 ObjectIntersectionOf(obo:PATO_0001236 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> obo:PATO_0000461)))
SubClassOf(obo:PATO_0002304 obo:PATO_0001236)
SubClassOf(obo:PATO_0002304 obo:PATO_0002300)

# Class: obo:PATO_0002305 (increased object quality)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0002305 "A quality of an object that has a value that is increased compared to normal or average.")
AnnotationAssertion(obo:RO_0002604 obo:PATO_0002305 obo:PATO_0002303)
AnnotationAssertion(oboInOwl:created_by obo:PATO_0002305 "George Gkoutos")
AnnotationAssertion(oboInOwl:creation_date obo:PATO_0002305 "2011-06-16T06:54:01Z")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PATO_0002305 "quality")
AnnotationAssertion(oboInOwl:id obo:PATO_0002305 "PATO:0002305")
AnnotationAssertion(rdfs:isDefinedBy obo:PATO_0002305 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0002305 "increased object quality")
EquivalentClasses(obo:PATO_0002305 ObjectIntersectionOf(obo:PATO_0001241 ObjectSomeValuesFrom(<http://purl.obolibrary.org/obo/pato#increased_in_magnitude_relative_to> obo:PATO_0000461)))
SubClassOf(obo:PATO_0002305 obo:PATO_0001241)
SubClassOf(obo:PATO_0002305 obo:PATO_0002300)

# Class: obo:PCO_0000000 (collection of organisms)

AnnotationAssertion(obo:IAO_0000112 obo:PCO_0000000 "Examples include: population, community, species (meaning the collection of organisms that makes up a species, not the taxonomic rank), and family.")
AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000000 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000000 "A material entity that consists of two or more organisms, viruses, or viroids."@en)
AnnotationAssertion(obo:IAO_0000118 obo:PCO_0000000 "group of organism")
AnnotationAssertion(obo:IAO_0000118 obo:PCO_0000000 "organism collection")
AnnotationAssertion(rdfs:comment obo:PCO_0000000 "May be of the same or different species.")
AnnotationAssertion(rdfs:label obo:PCO_0000000 "collection of organisms"@en)
EquivalentClasses(obo:PCO_0000000 ObjectIntersectionOf(obo:BFO_0000027 ObjectAllValuesFrom(obo:RO_0002351 obo:CARO_0001010) ObjectMinCardinality(2 obo:RO_0002351 obo:CARO_0001010)))
SubClassOf(obo:PCO_0000000 obo:BFO_0000027)
SubClassOf(obo:PCO_0000000 obo:PCO_0000031)
SubClassOf(obo:PCO_0000000 ObjectSomeValuesFrom(obo:RO_0002351 obo:CARO_0001010))
SubClassOf(obo:PCO_0000000 ObjectAllValuesFrom(obo:RO_0002351 obo:CARO_0001010))

# Class: obo:PCO_0000001 (population of organisms)

AnnotationAssertion(obo:IAO_0000112 obo:PCO_0000001 ""@en)
AnnotationAssertion(obo:IAO_0000112 obo:PCO_0000001 "This a general term that can include every organism of a species living in an area or any subset of them.  Subclasses can be more specific as needed."@en)
AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000001 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000001 "A collection of organisms, all of the same species, that live in the same place."@en)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000001 "ISBN:0878932739")
AnnotationAssertion(rdfs:comment obo:PCO_0000001 "It is sometimes difficult to define the physical boundaries of a population. In the case of sexually reproducing organisms, the individuals within a population have the potential to reproduce with one another during the course of their lifetimes. 'Community', as often used to describe a group of humans, is a type of population of organisms. 

Classes for population already  exist in IDO ('organism population', IDO_0000509) and OBI ('population', OBI_0000181). The definitions should be standardized across OBO Foundry ontologies and only one term used."@en)
AnnotationAssertion(rdfs:label obo:PCO_0000001 "population of organisms"@en)
SubClassOf(obo:PCO_0000001 obo:PCO_0000018)

# Class: obo:PCO_0000002 (ecological community)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000002 "A multi-species collection of organisms of at least two different species, living in a particular area. Must have at least two populations of different species as members."@en)
AnnotationAssertion(obo:IAO_0000118 obo:PCO_0000002 "multispecies community"@en)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000002 "ISBN:0865423504")
AnnotationAssertion(rdfs:comment obo:PCO_0000002 "Ecological community is defined broadly here, but includes both ecological interactions (inherited from parent term community) and spatial co-existence. It may be used to describe every organisms living in an area, but is often used to refer only to organisms of a particular taxon or guild (e.g., the plant community, the insect community, the herbivore community). The word community, as it often used to describe a group of humans living together, is a type of single-species collection of organisms, not an ecological community."@en)
AnnotationAssertion(rdfs:label obo:PCO_0000002 "ecological community"@en)
SubClassOf(obo:PCO_0000002 obo:PCO_0000029)

# Class: obo:PCO_0000003 (quality of a population)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000003 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000003 "A quality that inheres in a population of organisms."@en)
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000003 "See Chris's comments on population qualities at: http://code.google.com/p/popcomm-ontology/issues/detail?id=4. These may not belong under BFO:quality. May be better to call them population characteristics, and classify as specifically dependent continuants. Need to look at process profiles in BFO2."@en)
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000003 "This class is used only for qualities of PCO:population of organsism, while PATO:population quality can inhere in either a population of organisms or an ecological community.")
AnnotationAssertion(rdfs:comment obo:PCO_0000003 "Includes qualities like population size, population growth rate, carrying capacity, immigration rate, emigration rate, fecundity, and death rate. A population quality may depend on the qualities of individual organisms in the population, but cannot be measured or described for a single organism. This term may be replaced by a PATO term."@en)
AnnotationAssertion(rdfs:label obo:PCO_0000003 "quality of a population"@en)
EquivalentClasses(obo:PCO_0000003 ObjectIntersectionOf(obo:PATO_0002003 ObjectSomeValuesFrom(obo:RO_0000052 obo:PCO_0000001)))
SubClassOf(obo:PCO_0000003 obo:PATO_0002003)
SubClassOf(obo:PCO_0000003 ObjectSomeValuesFrom(obo:RO_0000052 obo:PCO_0000001))

# Class: obo:PCO_0000004 (quality of an ecological community)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000004 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000004 "A quality that inheres in a community."@en)
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000004 "These may not belong under BFO:quality. May be better to call them community characteristics, and classify as specifically dependent continuants. Need to look at process profiles in BFO2."@en)
AnnotationAssertion(rdfs:comment obo:PCO_0000004 "Includes qualities like diversity, species richness, stability, resilience, community structure, number of trophic levels. A community quality may depend on the qualities of individual organism in the community, but cannot be measured or described for a single individual."@en)
AnnotationAssertion(rdfs:label obo:PCO_0000004 "quality of an ecological community"@en)
EquivalentClasses(obo:PCO_0000004 ObjectIntersectionOf(obo:PATO_0002003 ObjectSomeValuesFrom(obo:RO_0000052 obo:PCO_0000002)))
SubClassOf(obo:PCO_0000004 obo:PATO_0002003)
SubClassOf(obo:PCO_0000004 ObjectSomeValuesFrom(obo:RO_0000052 obo:PCO_0000002))

# Class: obo:PCO_0000005 (population process)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000005 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000005 "A process that has as primary participant a population. Includes processes such as population growth, extinction, evolution, selection, and adaptation. Population processes may depend on the processes of individual organisms {e.g., population growth reflects the cumulative multicellular organism reproduction (GO:0032504) and death (GO:0016265) of all individuals in a population}, but cannot be described for an individual organism. Some of these processes (e.g., evolution, extinction) can also occur at the species level, so PCO distinguishes between, for example, population extinction and species extinction."@en)
AnnotationAssertion(rdfs:comment obo:PCO_0000005 "The GO has the terms 'multi-organism process' (GO:0051704) and 'intraspecies interactions between organisms' (GO:0051703), but these categories are only defined for interactions between two individuals. It is unclear at this point if 'biological process' (GO:0008150) encompasses population processes."@en)
AnnotationAssertion(rdfs:label obo:PCO_0000005 "population process"@en)
SubClassOf(obo:PCO_0000005 obo:BFO_0000015)
SubClassOf(obo:PCO_0000005 ObjectSomeValuesFrom(obo:RO_0000057 obo:PCO_0000001))

# Class: obo:PCO_0000006 (population birth rate)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000006 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000006 "The rate of birth of a population of organisms.")
AnnotationAssertion(rdfs:label obo:PCO_0000006 "population birth rate"@en)
SubClassOf(obo:PCO_0000006 obo:PATO_0000161)

# Class: obo:PCO_0000007 (population death rate)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000007 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000007 "The rate of death of a population of organsisms.")
AnnotationAssertion(rdfs:label obo:PCO_0000007 "population death rate"@en)
SubClassOf(obo:PCO_0000007 obo:PATO_0000161)

# Class: obo:PCO_0000008 (population growth rate)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000008 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000008 "The rate of growth of a population.")
AnnotationAssertion(rdfs:label obo:PCO_0000008 "population growth rate"@en)
SubClassOf(obo:PCO_0000008 obo:PATO_0000161)

# Class: obo:PCO_0000009 (obsolete carrying capacity)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000009 "The maximum number of individuals that can be supported in  a population that is growing according to logistic growth.")
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000009 "Carrying capacity is better defined as a quality of the environment in which a population lives. This term will be deprecated from PCO and moved to ecoCORE."@en)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000009 "ISBN:0878932739")
AnnotationAssertion(obo:IAO_0000231 obo:PCO_0000009 obo:IAO_0000423)
AnnotationAssertion(rdfs:label obo:PCO_0000009 "obsolete carrying capacity"@en)
AnnotationAssertion(owl:deprecated obo:PCO_0000009 "true"^^xsd:boolean)
SubClassOf(obo:PCO_0000009 oboInOwl:ObsoleteClass)

# Class: obo:PCO_0000010 (community species richness)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000010 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000010 "The number of different species represented in an ecological community."@en)
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000010 "This is a quality of an ecological community (PCO_0000002). If your metric includes the abundances of species (evenness) as well as the number, you should use community species diversity (PCO_0000019)."@en)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000010 "adapted from http://en.wikipedia.org/wiki/Species_richness")
AnnotationAssertion(rdfs:label obo:PCO_0000010 "community species richness"@en)
SubClassOf(obo:PCO_0000010 obo:PCO_0000004)

# Class: obo:PCO_0000011 (population growth)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000011 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000011 "A process that leads to a change in the number of individuals (positive or negative) in a population.")
AnnotationAssertion(rdfs:label obo:PCO_0000011 "population growth")
SubClassOf(obo:PCO_0000011 obo:PCO_0000005)

# Class: obo:PCO_0000012 (logistic population growth)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000012 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000012 "A population process that leads to an increase in the numbers of individuals in a population following a logistic (S-shaped) curve. Generally occurs when the population has a carrying capacity in a particular habitat.")
AnnotationAssertion(rdfs:label obo:PCO_0000012 "logistic population growth")
SubClassOf(obo:PCO_0000012 obo:PCO_0000011)

# Class: obo:PCO_0000013 (exponential population growth)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000013 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000013 "A population growth process that leads to an exponential increase in the number of individuals in a population.")
AnnotationAssertion(rdfs:label obo:PCO_0000013 "exponential population growth")
SubClassOf(obo:PCO_0000013 obo:PCO_0000011)

# Class: obo:PCO_0000014 (obsolete predator role)

AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000014 "Interactions are now covered in EcoCore ontology.")
AnnotationAssertion(rdfs:label obo:PCO_0000014 "obsolete predator role"@en)
AnnotationAssertion(Annotation(obo:IAO_0000231 obo:IAO_0000103) owl:deprecated obo:PCO_0000014 "true"^^xsd:boolean)
SubClassOf(obo:PCO_0000014 oboInOwl:ObsoleteClass)

# Class: obo:PCO_0000015 (obsolete prey role)

AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000015 "Interactions are now covered in EcoCore ontology.")
AnnotationAssertion(rdfs:label obo:PCO_0000015 "obsolete prey role"@en)
AnnotationAssertion(Annotation(obo:IAO_0000231 obo:IAO_0000103) owl:deprecated obo:PCO_0000015 "true"^^xsd:boolean)
SubClassOf(obo:PCO_0000015 oboInOwl:ObsoleteClass)

# Class: obo:PCO_0000016 (obsolete symbiont role)

AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000016 "Interactions are now covered in EcoCore ontology.")
AnnotationAssertion(rdfs:label obo:PCO_0000016 "obsolete symbiont role"@en)
AnnotationAssertion(Annotation(obo:IAO_0000231 obo:IAO_0000103) owl:deprecated obo:PCO_0000016 "true"^^xsd:boolean)
SubClassOf(obo:PCO_0000016 oboInOwl:ObsoleteClass)

# Class: obo:PCO_0000017 (species as a collection of organisms)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000017 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000017 "A collection of organisms that has as members every organism of given species and no organisms of any other species."@en)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000017 "A collection of organisms that has as parts every organism of a species and no organisms of any other species."@en)
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000017 "At the moment there is no way to specify in an OWL axiom that the collection includes every individual of a species. This should be added, if possible."@en)
AnnotationAssertion(oboInOwl:hasDbXref obo:PCO_0000017 obo:GENO_0000113)
AnnotationAssertion(oboInOwl:hasDbXref obo:PCO_0000017 obo:TAXRANK_0000006)
AnnotationAssertion(oboInOwl:hasDbXref obo:PCO_0000017 <http://rs.tdwg.org/ontology/voc/TaxonRank#Species>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PCO_0000017 "taxonomic group")
AnnotationAssertion(rdfs:comment obo:PCO_0000017 "This term is neutral with respect to which organisms are included in a species. Membership will depend on the species concept and the taxonomic assertions used to define the species. These criteria must be specified by the user."@en)
AnnotationAssertion(rdfs:label obo:PCO_0000017 "species as a collection of organisms"@en)
SubClassOf(obo:PCO_0000017 obo:PCO_0000018)
SubClassOf(obo:PCO_0000017 obo:PCO_0000059)

# Class: obo:PCO_0000018 (single-species collection of organisms)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000018 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000018 "A material entity that has as parts two or more organisms, viruses, or viroids of the same species and no members of any other species."@en)
AnnotationAssertion(obo:IAO_0000118 obo:PCO_0000018 "collection of organisms of the same species"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000018 "single-species collection of organisms"@en)
SubClassOf(obo:PCO_0000018 obo:PCO_0000000)

# Class: obo:PCO_0000019 (community species diversity)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000019 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000019 "The number of different species that are represented in a given community, weighted by their abundance. Community species diversity can be calculated in different ways, but consists of two components: species richness and species evenness."@en)
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000019 "If your metric does not include the abundances of different species, but rather just the numer of species, you should use community species richness (PCO_0000010). More specific subclasses or instances of this class may be created to describe specific ways of measuring diversity.")
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000019 "adapted from http://en.wikipedia.org/wiki/Species_diversity")
AnnotationAssertion(rdfs:comment obo:PCO_0000019 "The Shannon Index and Simpson Index are examples of ways in which species diversity is quantified."@en)
AnnotationAssertion(rdfs:label obo:PCO_0000019 "community species diversity"@en)
SubClassOf(obo:PCO_0000019 obo:PCO_0000004)

# Class: obo:PCO_0000020 (family)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000020 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000020 "A domestic group, or a number of domestic groups linked through descent (demonstrated or stipulated) from a common ancestor, marriage, or adoption."@en)
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000020 "Needs axioms for family relationships."@en)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000020 "http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#C25173"@en)
AnnotationAssertion(rdfs:comment obo:PCO_0000020 "Family membership through marriage or adoption apply primarily to human families. In most species, family membership is defined by common anscestry.")
AnnotationAssertion(rdfs:label obo:PCO_0000020 "family"@en)
SubClassOf(obo:PCO_0000020 obo:PCO_0000018)

# Class: obo:PCO_0000021 (population extinction)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000021 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000021 "A population process that ultimately leads to the death of all individuals in a population."@en)
AnnotationAssertion(rdfs:label obo:PCO_0000021 "population extinction"@en)
SubClassOf(obo:PCO_0000021 obo:PCO_0000005)

# Class: obo:PCO_0000022 (species extinction)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000022 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000022 "A process that ultimately leads to the death of all individuals in a population."@en)
AnnotationAssertion(rdfs:label obo:PCO_0000022 "species extinction"@en)
SubClassOf(obo:PCO_0000022 obo:BFO_0000015)

# Class: obo:PCO_0000023 (community species evenness)

AnnotationAssertion(obo:IAO_0000112 obo:PCO_0000023 "If there are 40 foxes, and 1000 dogs, the community is not very even, but if there are 40 foxes and 42 dogs, the community is quite even."@en)
AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000023 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000023 "A quality of an ecological community that reflects how close in abundance all species in a community are."@en)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000023 "adapted from http://en.wikipedia.org/wiki/Species_evenness"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000023 "community species evenness"@en)
SubClassOf(obo:PCO_0000023 obo:PCO_0000004)

# Class: obo:PCO_0000024 (household)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000024 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000024 "An organismal entity that consists of one or more people who live in the same dwelling and also share at meals or living accommodation, and may consist of a single family or some other grouping of people.")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000024 <https://orcid.org/0000-0002-2999-0103>)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000024 "WEB: http://en.wikipedia.org/wiki/Household")
AnnotationAssertion(rdfs:label obo:PCO_0000024 "household"@en)
SubClassOf(obo:PCO_0000024 obo:PCO_0000031)
SubClassOf(obo:PCO_0000024 ObjectIntersectionOf(ObjectAllValuesFrom(obo:RO_0002351 obo:NCBITaxon_9606) ObjectMinCardinality(1 obo:RO_0002351 obo:NCBITaxon_9606)))
SubClassOf(obo:PCO_0000024 ObjectSomeValuesFrom(obo:RO_0002321 obo:ENVO_01000744))

# Class: obo:PCO_0000025 (obsolete red population)

AnnotationAssertion(obo:IAO_0000231 obo:PCO_0000025 obo:IAO_0000002)
AnnotationAssertion(rdfs:comment obo:PCO_0000025 "This is an example population added to demonstrate the modeling pattern for collections of organisms.")
AnnotationAssertion(rdfs:label obo:PCO_0000025 "obsolete red population"@en)
AnnotationAssertion(owl:deprecated obo:PCO_0000025 "true"^^xsd:boolean)
SubClassOf(obo:PCO_0000025 oboInOwl:ObsoleteClass)

# Class: obo:PCO_0000026 (obsolete red organism)

AnnotationAssertion(obo:IAO_0000231 obo:PCO_0000026 obo:IAO_0000002)
AnnotationAssertion(rdfs:comment obo:PCO_0000026 "An example class added to demonstrate the design pattern for collections of organism. Red organism should be automatically classified as a member of red population when the reasoner is synchronized using a DL query.")
AnnotationAssertion(rdfs:label obo:PCO_0000026 "obsolete red organism"@en)
AnnotationAssertion(owl:deprecated obo:PCO_0000026 "true"^^xsd:boolean)
SubClassOf(obo:PCO_0000026 oboInOwl:ObsoleteClass)

# Class: obo:PCO_0000027 (collection of humans)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000027 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000027 "A collection of organisms of the same species that has as members only humans.")
AnnotationAssertion(obo:IAO_0000118 obo:PCO_0000027 "human community"@en)
AnnotationAssertion(obo:IAO_0000118 obo:PCO_0000027 "human population"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000027 "collection of humans"@en)
EquivalentClasses(obo:PCO_0000027 ObjectIntersectionOf(obo:PCO_0000018 ObjectAllValuesFrom(obo:RO_0002351 obo:NCBITaxon_9606) ObjectMinCardinality(2 obo:RO_0002351 obo:NCBITaxon_9606)))
SubClassOf(obo:PCO_0000027 obo:PCO_0000018)
SubClassOf(obo:PCO_0000027 ObjectSomeValuesFrom(obo:RO_0002351 obo:NCBITaxon_9606))

# Class: obo:PCO_0000028 (obsolete community)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000028 "A collection of organisms of the same species whose members are all either genealogically related to each other or have mated with each other.")
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000028 "Biological or social relations are covered by RO_0002437 (biotically interacts with), but that relations does provide an easy way to specify that two entities are interacting with each other (participating in the same interaction). Until that axiom is specified, the logical definition of this term is incomplete."@en)
AnnotationAssertion(obo:IAO_0000231 obo:PCO_0000028 obo:IAO_0000103)
AnnotationAssertion(rdfs:comment obo:PCO_0000028 "These relations can include shared values, occupying the same spatial regkion. A community be be a single species collection of organsisms (as in a  human community, which is also a type of population) or a  or multi-species collection of organisms (as in an ecological community)."@en)
AnnotationAssertion(rdfs:label obo:PCO_0000028 "obsolete community"@en)
AnnotationAssertion(owl:deprecated obo:PCO_0000028 "true"^^xsd:boolean)
SubClassOf(obo:PCO_0000028 oboInOwl:ObsoleteClass)

# Class: obo:PCO_0000029 (multi-species collection of organisms)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000029 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000029 "A collection of organisms that consists of two or more organisms from at least two species."@en)
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000029 "Need to add axiom to specify that it has at a mimum members of two different species, but not sure how to specify that. Can't say \"('has member' only ('member of' min 2 'species as a collection of organisms'))\"."@en)
AnnotationAssertion(rdfs:comment obo:PCO_0000029 ""@en)
AnnotationAssertion(rdfs:label obo:PCO_0000029 "multi-species collection of organisms"@en)
SubClassOf(obo:PCO_0000029 obo:PCO_0000000)
SubClassOf(obo:PCO_0000029 ObjectMinCardinality(2 obo:RO_0002351 obo:PCO_0000001))

# Class: obo:PCO_0000030 (agricultural household)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000030 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000030 "A household in which the majority of the income of its members is derived from agricultural activities.")
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000030 "This is a more narrow definition in which the majority of income of a house comes from agricultural activities, as opposed to the broad definition in which any income comes from agricultural activities. The narrow definition was chosen to be consistent with the SDGIO (UN Sustainable Development Goals) which requested this term.")
AnnotationAssertion(rdfs:label obo:PCO_0000030 "agricultural household"@en)
SubClassOf(obo:PCO_0000030 obo:PCO_0000024)

# Class: obo:PCO_0000031 (organismal entity)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000031 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000031 "A material entity that is one or more organisms, viruses or viroids.")
AnnotationAssertion(rdfs:label obo:PCO_0000031 "organismal entity"@en)
EquivalentClasses(obo:PCO_0000031 ObjectUnionOf(obo:CARO_0001010 obo:PCO_0000000))
SubClassOf(obo:PCO_0000031 obo:BFO_0000040)

# Class: obo:PCO_0000032 (biological family)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000032 "A collection of organisms of the same species whose members are all either genealogically related to each other or have mated with each other.")
AnnotationAssertion(obo:IAO_0000118 obo:PCO_0000032 "genealogical family")
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000032 "Matthew Brush, as part of http://datamodel.clinicalgenome.org/interpretation/")
AnnotationAssertion(rdfs:label obo:PCO_0000032 "biological family"@en)
SubClassOf(obo:PCO_0000032 obo:PCO_0000020)

# Class: obo:PCO_0000033 (human social gathering activity)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000033 "A type of social behavior in which a collection of humans intentionally gathers together on a temporary basis to engage socially."@en)
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000033 "Intented to replace http://purl.obolibrary.org/obo/GENEPIO_0001029"@en)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000033 "GenEpiO curators"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000033 "human social gathering activity"@en)
SubClassOf(obo:PCO_0000033 obo:GO_0035176)
SubClassOf(obo:PCO_0000033 ObjectSomeValuesFrom(obo:RO_0000057 obo:PCO_0000027))

# Class: obo:PCO_0000034 (human community event)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000034 "A human social event in which humans living in the same area or neighborhood gather to carry out activiites relevent to the people living in the area."@en)
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000034 "Intended to replace http://purl.obolibrary.org/obo/GENEPIO_0001034"@en)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000034 "GenEpio curators"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000034 "human community event"@en)
SubClassOf(obo:PCO_0000034 obo:PCO_0000033)

# Class: obo:PCO_0000035 (party)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000035 "A human social gathering in which the intention is to have a good time. Often the intention is to celebrate something like a birthday, anniversary, or holiday, but there is not always a purpose."@en)
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000035 "Intended to replace http://purl.obolibrary.org/obo/GENEPIO_0001030"@en)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000035 "GenEpiO curators"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000035 "party"@en)
SubClassOf(obo:PCO_0000035 obo:PCO_0000033)

# Class: obo:PCO_0000037 (potluck)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000037 "A human social gathering at which each participant is expected to bring food to share. A potluck also can be party, a social meal, or some other type of social gathering."@en)
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000037 "Intended to replace http://purl.obolibrary.org/obo/GENEPIO_0001033"@en)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000037 "GenEpio curators"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000037 "potluck"@en)
SubClassOf(obo:PCO_0000037 obo:PCO_0000033)

# Class: obo:PCO_0000038 (wedding)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000038 "A human social gathering at which two people are married. May include a legal or social ceremony."@en)
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000038 "Intended to replace http://purl.obolibrary.org/obo/GENEPIO_0001031"@en)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000038 "GenEpio curators"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000038 "wedding"@en)
SubClassOf(obo:PCO_0000038 obo:PCO_0000033)

# Class: obo:PCO_0000039 (baby shower)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000039 "A human social gathering at which the key participant is an expectant parent and other guests bring presents for the soon to be born baby."@en)
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000039 "Intended to replace http://purl.obolibrary.org/obo/GENEPIO_0001032"@en)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000039 "GenEpiO curators"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000039 "baby shower"@en)
SubClassOf(obo:PCO_0000039 obo:PCO_0000033)

# Class: obo:PCO_0000047 (tidal mangrove shrubland community)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000047 "An ecological community which is composed primarily of dwarf or short mangroves, often populations of Laguncularia racemosa, Avicennia germinans, Sarcocornia pacifica, or Batis maritima."@en)
AnnotationAssertion(dc:contributor obo:PCO_0000047 "https://orcid.org/0000-0002-4366-3088"@en)
AnnotationAssertion(oboInOwl:hasDbXref obo:PCO_0000047 "https://cmecscatalog.org/cmecs/classification/unit/577.html")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PCO_0000047 "mangrove community"@en)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PCO_0000047 "tidal shrubland community"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000047 "tidal mangrove shrubland community"@en)
SubClassOf(obo:PCO_0000047 obo:PCO_0000002)
SubClassOf(obo:PCO_0000047 ObjectSomeValuesFrom(obo:BFO_0000050 obo:ENVO_01001369))

# Class: obo:PCO_0000048 (invisible to unaided eye)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000048 "A physical object quality that is inhered in a material entity that is too small to be viewed by the unaided eye."@en)
AnnotationAssertion(rdfs:comment obo:PCO_0000048 "should move to PATO"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000048 "invisible to unaided eye"@en)
SubClassOf(obo:PCO_0000048 obo:PATO_0001241)

# Class: obo:PCO_0000049 (microbe)

AnnotationAssertion(oboInOwl:hasExactSynonym obo:PCO_0000049 "microbial organism"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000049 "microbe"@en)
SubClassOf(obo:PCO_0000049 obo:CARO_0001010)

# Class: obo:PCO_0000050 (collection of microbial organisms)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000050 "A collection of organisms consisting of two or more microbes."@en)
AnnotationAssertion(dc:creator obo:PCO_0000050 "https://orcid.org/0000-0001-8815-0078"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000050 "collection of microbial organisms"@en)
EquivalentClasses(obo:PCO_0000050 ObjectIntersectionOf(ObjectAllValuesFrom(obo:RO_0002351 obo:PCO_0000049) ObjectMinCardinality(2 obo:RO_0002351 obo:PCO_0000049)))
SubClassOf(obo:PCO_0000050 ObjectSomeValuesFrom(obo:RO_0002351 obo:PCO_0000049))

# Class: obo:PCO_0000051 (multi-species collection of microbes)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000051 "A multi-species collection of organisms that consists of two or more microbes from at least two species."@en)
AnnotationAssertion(dc:creator obo:PCO_0000051 "https://orcid.org/0000-0001-8815-0078"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000051 "multi-species collection of microbes"@en)
SubClassOf(obo:PCO_0000051 obo:PCO_0000029)

# Class: obo:PCO_0000052 (single species collection of microbes)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000052 "A single-species collection of organisms that consists of two or more microbes of the same species and no members of any other species."@en)
AnnotationAssertion(dc:creator obo:PCO_0000052 "https://orcid.org/0000-0001-8815-0078"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000052 "single species collection of microbes"@en)
EquivalentClasses(obo:PCO_0000052 ObjectIntersectionOf(ObjectAllValuesFrom(obo:RO_0002351 obo:PCO_0000049) ObjectAllValuesFrom(obo:RO_0002351 ObjectExactCardinality(1 obo:RO_0002350 obo:PCO_0000017)) ObjectMinCardinality(2 obo:RO_0002351 obo:PCO_0000049)))
SubClassOf(obo:PCO_0000052 obo:PCO_0000050)

# Class: obo:PCO_0000053 (microbial population)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000053 "A population of organisms consisting of only microbes of the same species, that live in the same place."@en)
AnnotationAssertion(dc:creator obo:PCO_0000053 "https://orcid.org/0000-0001-8815-0078"@en)
AnnotationAssertion(oboInOwl:hasBroadSynonym obo:PCO_0000053 "microbiota"@en)
AnnotationAssertion(rdfs:label obo:PCO_0000053 "microbial population"@en)
SubClassOf(obo:PCO_0000053 obo:PCO_0000001)

# Class: obo:PCO_0000054 (number of generations of multicellular organism)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000054 obo:IAO_0000125)
AnnotationAssertion(Annotation(rdfs:comment obo:NCIT_C88214) Annotation(rdfs:comment <http://www.ebi.ac.uk/efo/EFO_0000507>) obo:IAO_0000115 obo:PCO_0000054 "A count data item of the number of steps in the line of descent from a common ancestor for a multicellular organism.")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000054 <https://orcid.org/0000-0002-2999-0103>)
AnnotationAssertion(oboInOwl:hasBroadSynonym obo:PCO_0000054 "number of generations")
AnnotationAssertion(rdfs:label obo:PCO_0000054 "number of generations of multicellular organism"@en)
SubClassOf(obo:PCO_0000054 obo:STATO_0000047)
SubClassOf(obo:PCO_0000054 ObjectAllValuesFrom(obo:IAO_0000136 obo:CARO_0000012))

# Class: obo:PCO_0000057 (overcrowded population)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000057 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000057 "An increased mass density of a population of organisms such that the density of organisms in an area is increased beyond sustainable levels.")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000057 <https://orcid.org/0000-0001-8815-0078>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PCO_0000057 "increased density of population")
AnnotationAssertion(rdfs:label obo:PCO_0000057 "overcrowded population"@en)
SubClassOf(obo:PCO_0000057 obo:PCO_0000003)
SubClassOf(obo:PCO_0000057 ObjectIntersectionOf(obo:PATO_0001788 ObjectSomeValuesFrom(obo:RO_0000052 obo:PCO_0000001)))

# Class: obo:PCO_0000058 (overcrowded human population)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000058 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000058 "A quality of a human population such that the density humans in an area is increased beyond sustainable levels.")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000058 <https://orcid.org/0000-0001-8815-0078>)
AnnotationAssertion(rdfs:label obo:PCO_0000058 "overcrowded human population"@en)
EquivalentClasses(obo:PCO_0000058 ObjectIntersectionOf(obo:PCO_0000057 ObjectSomeValuesFrom(obo:RO_0000052 obo:PCO_0000027)))
SubClassOf(obo:PCO_0000058 obo:PCO_0000057)
SubClassOf(obo:PCO_0000058 ObjectSomeValuesFrom(obo:RO_0000052 obo:PCO_0000027))

# Class: obo:PCO_0000059 (taxon as collection of organisms)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000059 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000059 "A collection of organisms that has as members every organism of a taxon and no organisms of any other equal or higher ranked taxon. The taxon may be at any level. If the taxon is species, then this is the same as the class species as a collection of organisms. When defining a taxon, it is generally understood that members include both living organisms and dead organisms that are known through specimens or observations.")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000059 <https://orcid.org/0000-0001-8815-0078>)
AnnotationAssertion(oboInOwl:hasDbXref obo:PCO_0000059 <http://edamontology.org/data_1868>)
AnnotationAssertion(rdfs:comment obo:PCO_0000059 "This term is neutral with respect to which organisms are included in a taxon. Membership will depend on the taxon concept and the assertions used to define the taxon. These criteria must be specified by the user. The best practice is to refer to a formal taxon description, rather than informal names \"Genus species\" without an authority.")
AnnotationAssertion(rdfs:label obo:PCO_0000059 "taxon as collection of organisms"@en)
SubClassOf(obo:PCO_0000059 obo:PCO_0000000)

# Class: obo:PCO_0000060 (microbial parasite)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000060 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000060 "An organism or virus or viroid that is a microbe and a parasite.")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000060 <https://orcid.org/0000-0001-8815-0078>)
AnnotationAssertion(rdfs:label obo:PCO_0000060 "microbial parasite"@en)
SubClassOf(obo:PCO_0000060 obo:ECOCORE_00000146)
SubClassOf(obo:PCO_0000060 obo:PCO_0000049)

# Class: obo:PCO_0000061 (parasite isolate population)

AnnotationAssertion(obo:IAO_0000112 obo:PCO_0000061 <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4811772/>)
AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000061 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000061 "A microbial population of parasites that is defined by shared features such as genetic markers reflecting a common origin and distinguishing the population from other related parasite populations.")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000061 <https://orcid.org/0000-0001-8815-0078>)
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000061 "VEuPathDB")
AnnotationAssertion(rdfs:label obo:PCO_0000061 "parasite isolate population"@en)
SubClassOf(obo:PCO_0000061 obo:PCO_0000050)
SubClassOf(obo:PCO_0000061 obo:PCO_0000053)
SubClassOf(obo:PCO_0000061 ObjectAllValuesFrom(obo:RO_0002351 obo:PCO_0000060))

# Class: obo:PCO_0000062 (Shannon diversity index)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000062 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000062 "A community species diversity metric that accounts for both the abundance and evenness of the species present quantified via the following formula: the negative sum of, the product of the proportion of species i relative to the total number of species (pi) multiplied by the natural logarithm of this proportion (ln pi).")
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000062 <http://www.tiem.utk.edu/~gross/bioed/bealsmodules/shannonDI.html>)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000062 <https://en.wikipedia.org/wiki/Diversity_index#Shannon_index>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PCO_0000062 "Shannon entropy")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PCO_0000062 "Shannon's diversity index")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PCO_0000062 "Shannon-Wiener index")
AnnotationAssertion(rdfs:label obo:PCO_0000062 "Shannon diversity index"@en)
SubClassOf(obo:PCO_0000062 obo:PCO_0000019)

# Class: obo:PCO_0000063 (Simpson diversity index)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000063 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000063 "A community species diversity metric that is quantified via the following formula: the reciprocal of the sum of squared proportion of species i relative to the total number of species (pi).")
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000063 <http://www.tiem.utk.edu/~gross/bioed/bealsmodules/simpsonDI.html>)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000063 <https://en.wikipedia.org/wiki/Diversity_index#Simpson_index>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PCO_0000063 "Simpson index")
AnnotationAssertion(rdfs:label obo:PCO_0000063 "Simpson diversity index"@en)
SubClassOf(obo:PCO_0000063 obo:PCO_0000019)

# Class: obo:PCO_0000064 (inverse Simpson diversity index)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0000064 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000064 "A community species diversity metric that is quantified via the following formula: the sum of squared proportion of species i relative to the total number of species (pi).")
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000064 <http://www.tiem.utk.edu/~gross/bioed/bealsmodules/simpsonDI.html>)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000064 <https://en.wikipedia.org/wiki/Diversity_index#Inverse_Simpson_index>)
AnnotationAssertion(rdfs:label obo:PCO_0000064 "inverse Simpson diversity index"@en)
SubClassOf(obo:PCO_0000064 obo:PCO_0000019)

# Class: obo:PCO_0000073 (alga excluding Cyanobacteria)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000073 "An organism that is part of a polyphyletic group of mostly photosynthetic Eukaryotes  encompassing green plants excluding Embriophyta (land plants). Included organisms range from unicellular microalgae, such as Chlorella and diatoms to multicellular forms such as giant kelp.")
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000073 <https://en.wikipedia.org/wiki/Algae>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PCO_0000073 "alga")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PCO_0000073 "algae")
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:PCO_0000073 "seaweed")
AnnotationAssertion(rdfs:label obo:PCO_0000073 "alga excluding Cyanobacteria"@en)
SubClassOf(obo:PCO_0000073 obo:CARO_0010004)

# Class: obo:PCO_0000074 (alpha diversity)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000074 "A community species diversity that is the mean species diversity at a site or within a specific habitat.")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000074 <https://orcid.org/0000-0001-8815-0078>)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000074 <https://en.wikipedia.org/wiki/Alpha_diversity>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PCO_0000074 "α-diversity")
AnnotationAssertion(rdfs:label obo:PCO_0000074 "alpha diversity"@en)
SubClassOf(obo:PCO_0000074 obo:PCO_0000019)

# Class: obo:PCO_0000075 (beta diversity)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000075 "A community species diversity that is the ratio between regional and local species diversity.")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000075 <https://orcid.org/0000-0001-8815-0078>)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000075 <https://en.wikipedia.org/wiki/Beta_diversity>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PCO_0000075 "true beta diversity")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PCO_0000075 "β-diversity")
AnnotationAssertion(rdfs:label obo:PCO_0000075 "beta diversity"@en)
SubClassOf(obo:PCO_0000075 obo:PCO_0000019)

# Class: obo:PCO_0000076 (gamma diversity)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000076 "A community species diversity that is the total species diversity in a landscape. The area or landscape of interest may be of very different sizes in different situations, but it should encompass multiple sites or habitats as measured by alpha diversity.")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000076 <https://orcid.org/0000-0001-8815-0078>)
AnnotationAssertion(obo:IAO_0000119 obo:PCO_0000076 <https://en.wikipedia.org/wiki/Gamma_diversity>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PCO_0000076 "γ-diversity")
AnnotationAssertion(rdfs:label obo:PCO_0000076 "gamma diversity"@en)
SubClassOf(obo:PCO_0000076 obo:PCO_0000019)

# Class: obo:PCO_0000077 (plant density)

AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000077 "TBD: add logical definition")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000077 <https://orcid.org/0000-0001-6284-4821>)
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000077 <https://orcid.org/0000-0001-8815-0078>)
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000077 "The density of plants in an ecological community or population, often measured as the number of plants per area.")
AnnotationAssertion(rdfs:label obo:PCO_0000077 "plant density"@en)
SubClassOf(obo:PCO_0000077 obo:PATO_0001019)

# Class: obo:PCO_0000078 (seedling density)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000078 "The density of seedlings in an ecological community or population, often measured as the number of seedlings per area.")
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000078 "TBD: add logical definition")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000078 <https://orcid.org/0000-0001-6284-4821>)
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000078 <https://orcid.org/0000-0001-8815-0078>)
AnnotationAssertion(rdfs:label obo:PCO_0000078 "seedling density"@en)
SubClassOf(obo:PCO_0000078 obo:PCO_0000077)

# Class: obo:PCO_0000079 (plant density of a population)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000079 "The density of plants in a population or organisms (a single species), often measured as the number of plants per area.")
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000079 "TBD: add logical definition")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000079 <https://orcid.org/0000-0001-6284-4821>)
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000079 <https://orcid.org/0000-0001-8815-0078>)
AnnotationAssertion(rdfs:label obo:PCO_0000079 "plant density of a population"@en)
SubClassOf(obo:PCO_0000079 obo:PCO_0000003)
SubClassOf(obo:PCO_0000079 obo:PCO_0000077)

# Class: obo:PCO_0000080 (plant density of an ecological community)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000080 "The density of plants in an ecological community (multiple species), often measured as the number of plants per area.")
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000080 "TBD: add logical definition")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000080 <https://orcid.org/0000-0001-6284-4821>)
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000080 <https://orcid.org/0000-0001-8815-0078>)
AnnotationAssertion(rdfs:label obo:PCO_0000080 "plant density of an ecological community"@en)
SubClassOf(obo:PCO_0000080 obo:PCO_0000004)
SubClassOf(obo:PCO_0000080 obo:PCO_0000077)

# Class: obo:PCO_0000081 (seedling density of a population)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000081 "The density of seedlings in a population or organisms (a single species), often measured as the number of seedlings per area.")
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000081 "TBD: add logical definition")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000081 <https://orcid.org/0000-0001-6284-4821>)
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000081 <https://orcid.org/0000-0001-8815-0078>)
AnnotationAssertion(rdfs:label obo:PCO_0000081 "seedling density of a population"@en)
SubClassOf(obo:PCO_0000081 obo:PCO_0000003)
SubClassOf(obo:PCO_0000081 obo:PCO_0000078)

# Class: obo:PCO_0000082 (seedling density of an ecological community)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0000082 "The density of seedlings in an ecological community (multiple species), often measured as the number of plants per area.")
AnnotationAssertion(obo:IAO_0000116 obo:PCO_0000082 "TBD: add logical definition")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000082 <https://orcid.org/0000-0001-6284-4821>)
AnnotationAssertion(obo:IAO_0000117 obo:PCO_0000082 <https://orcid.org/0000-0001-8815-0078>)
AnnotationAssertion(rdfs:label obo:PCO_0000082 "seedling density of an ecological community"@en)
SubClassOf(obo:PCO_0000082 obo:PCO_0000004)
SubClassOf(obo:PCO_0000082 obo:PCO_0000078)

# Class: obo:PCO_0001000 (pair of interacting organisms)

AnnotationAssertion(obo:IAO_0000115 obo:PCO_0001000 "A collection of organisms that consists of exactly two organism, viruses, or viroids that are interacting with each other."@en)
AnnotationAssertion(rdfs:label obo:PCO_0001000 "pair of interacting organisms"@en)
EquivalentClasses(obo:PCO_0001000 ObjectIntersectionOf(obo:PCO_0000000 ObjectExactCardinality(2 obo:RO_0002351 obo:CARO_0001010)))
SubClassOf(obo:PCO_0001000 obo:PCO_0000000)

# Class: obo:PCO_0001001 (pair of interacting organisms of the same species)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_0001001 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_0001001 "A pair of interacting  organisms that consists of exactly two organism, viruses, or viroids of the same species that are interacting with each other.")
AnnotationAssertion(rdfs:label obo:PCO_0001001 "pair of interacting organisms of the same species"@en)
SubClassOf(obo:PCO_0001001 obo:PCO_0000018)
SubClassOf(obo:PCO_0001001 obo:PCO_0001000)

# Class: obo:PCO_1000000 (migratory population)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_1000000 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_1000000 "A population which is participating in a migration process.")
AnnotationAssertion(rdfs:label obo:PCO_1000000 "migratory population"@en)
SubClassOf(obo:PCO_1000000 obo:PCO_0000001)
SubClassOf(obo:PCO_1000000 ObjectSomeValuesFrom(obo:RO_0000056 obo:PCO_1000001))

# Class: obo:PCO_1000001 (population migration)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_1000001 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_1000001 "A population process during which a population moves from one area to another.")
AnnotationAssertion(obo:IAO_0000119 obo:PCO_1000001 "https://en.wikipedia.org/wiki/Migration")
AnnotationAssertion(rdfs:comment obo:PCO_1000001 "The distance between the areas is not specified here, nor is the minimum distance required for such movements to be considered migrations.")
AnnotationAssertion(rdfs:label obo:PCO_1000001 "population migration"@en)
SubClassOf(obo:PCO_1000001 obo:PCO_0000005)

# Class: obo:PCO_1000002 (human population migration)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_1000002 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_1000002 "A population migration during which a population of humans moves from one area to another with the intention of settling permanently in the new location.")
AnnotationAssertion(obo:IAO_0000119 obo:PCO_1000002 "https://en.wikipedia.org/wiki/Human_migration")
AnnotationAssertion(rdfs:comment obo:PCO_1000002 "The distance between the areas is not specified here, nor is the minimum distance required for such movements to be considered migrations. \"Nomadic movements are normally not regarded as migrations as there is no intention to settle in the new place and because the movement is generally seasonal. Only a few nomadic people have retained this form of lifestyle in modern times. Also, the temporary movement of people for the purpose of travel, tourism, pilgrimages, or the commute is not regarded as migration, in the absence of an intention to live and settle in the visited places.\" - https://en.wikipedia.org/wiki/Human_migration")
AnnotationAssertion(rdfs:label obo:PCO_1000002 "human population migration"@en)
SubClassOf(obo:PCO_1000002 obo:PCO_1000001)
SubClassOf(obo:PCO_1000002 ObjectSomeValuesFrom(obo:RO_0000057 obo:PCO_0000027))

# Class: obo:PCO_1000003 (human migratory population)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_1000003 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_1000003 "A migratory population of humans, travelling with the intention of settling in a new area.")
AnnotationAssertion(obo:IAO_0000119 obo:PCO_1000003 "https://en.wikipedia.org/wiki/Human_migration")
AnnotationAssertion(rdfs:label obo:PCO_1000003 "human migratory population"@en)
SubClassOf(obo:PCO_1000003 obo:PCO_0000027)
SubClassOf(obo:PCO_1000003 ObjectSomeValuesFrom(obo:RO_0000056 obo:PCO_1000002))

# Class: obo:PCO_1000004 (microbial community)

AnnotationAssertion(obo:IAO_0000114 obo:PCO_1000004 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:PCO_1000004 "An ecological community which is composed of co-existing populations of microbial organisms that interact, directly or indirectly, such that they impact one another's ecological fitness.")
AnnotationAssertion(obo:IAO_0000116 obo:PCO_1000004 "A class for a collection of organisms considered \"microbial\" and an accompanying quality in PATO (e.g. \"microscopic\") would be useful to better axiomatise this class. See https://github.com/PopulationAndCommunityOntology/pco/issues/22")
AnnotationAssertion(obo:IAO_0000117 obo:PCO_1000004 "http://orcid.org/0000-0002-4366-3088")
AnnotationAssertion(obo:IAO_0000119 obo:PCO_1000004 "http://dx.doi.org/10.1038/ismej.2009.88")
AnnotationAssertion(oboInOwl:hasBroadSynonym obo:PCO_1000004 "microbiota"@en)
AnnotationAssertion(rdfs:comment obo:PCO_1000004 "The definition of a microbial species is deeply debated, however, units of phylogenetic and functional diversity are recognised with respect to their varying roles in an ecosystem. In turn, there exist multiple operational definitions of microbial community, such as local, phenomenological, and indexical communities. This class seeks to capture microbial communities in a very broad sense, as collections of phylogenetically and functionally divergent microbial organisms co-existing, potentially interacting, and competing for niche space in the same ecosystem over a period of time in which their causal footprints overlap one another.")
AnnotationAssertion(rdfs:label obo:PCO_1000004 "microbial community"@en)
SubClassOf(obo:PCO_1000004 obo:PCO_0000002)
SubClassOf(obo:PCO_1000004 obo:PCO_0000051)

# Class: obo:STATO_0000047 (count)

AnnotationAssertion(obo:IAO_0000112 obo:STATO_0000047 "a count of 4 resulting from counting limbs in humans"@en)
AnnotationAssertion(obo:IAO_0000114 obo:STATO_0000047 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:STATO_0000047 "a count is a data item denoted by an integer and represented the number of instances or occurences of an entity"@en)
AnnotationAssertion(obo:IAO_0000117 obo:STATO_0000047 "Alejandra Gonzalez-Beltran"@en)
AnnotationAssertion(obo:IAO_0000117 obo:STATO_0000047 "Orlaith Burke")
AnnotationAssertion(obo:IAO_0000117 obo:STATO_0000047 "Philippe Rocca-Serra"@en)
AnnotationAssertion(obo:IAO_0000119 obo:STATO_0000047 "STATO"@en)
AnnotationAssertion(obo:STATO_0000032 obo:STATO_0000047 ""@en)
AnnotationAssertion(rdfs:label obo:STATO_0000047 "count"@en)
SubClassOf(obo:STATO_0000047 obo:IAO_0000109)

# Class: <http://purl.obolibrary.org/obo/pco.owl/PCO_0000030> (obsolete organismal entity)

AnnotationAssertion(obo:IAO_0000115 <http://purl.obolibrary.org/obo/pco.owl/PCO_0000030> "A material entity that is one or more organisms, viruses or viroids.")
AnnotationAssertion(obo:IAO_0000231 <http://purl.obolibrary.org/obo/pco.owl/PCO_0000030> "wrong IRI form")
AnnotationAssertion(obo:IAO_0100001 <http://purl.obolibrary.org/obo/pco.owl/PCO_0000030> "http://purl.obolibrary.org/obo/PCO_0000031")
AnnotationAssertion(rdfs:label <http://purl.obolibrary.org/obo/pco.owl/PCO_0000030> "obsolete organismal entity"@en)
AnnotationAssertion(owl:deprecated <http://purl.obolibrary.org/obo/pco.owl/PCO_0000030> "true"^^xsd:boolean)
SubClassOf(<http://purl.obolibrary.org/obo/pco.owl/PCO_0000030> oboInOwl:ObsoleteClass)

# Class: owl:Nothing (owl:Nothing)

AnnotationAssertion(rdfs:isDefinedBy owl:Nothing <http://www.w3.org/2002/07/owl.owl>)

# Class: <https://purl.obolibrary.org/obo/PCO_0000040> (obsolete tidal mangrove shrubland community)

AnnotationAssertion(obo:IAO_0000115 <https://purl.obolibrary.org/obo/PCO_0000040> "An ecological community which is composed primarily of dwarf or short mangroves, often populations of Laguncularia racemosa, Avicennia germinans, Sarcocornia pacifica, or Batis maritima."@en)
AnnotationAssertion(obo:IAO_0000231 <https://purl.obolibrary.org/obo/PCO_0000040> obo:IAO_0000103)
AnnotationAssertion(dc:contributor <https://purl.obolibrary.org/obo/PCO_0000040> "https://orcid.org/0000-0002-4366-3088"@en)
AnnotationAssertion(oboInOwl:hasDbXref <https://purl.obolibrary.org/obo/PCO_0000040> "https://cmecscatalog.org/cmecs/classification/unit/577.html")
AnnotationAssertion(oboInOwl:hasRelatedSynonym <https://purl.obolibrary.org/obo/PCO_0000040> "mangrove community"@en)
AnnotationAssertion(oboInOwl:hasRelatedSynonym <https://purl.obolibrary.org/obo/PCO_0000040> "tidal shrubland community"@en)
AnnotationAssertion(rdfs:label <https://purl.obolibrary.org/obo/PCO_0000040> "obsolete tidal mangrove shrubland community"@en)
AnnotationAssertion(owl:deprecated <https://purl.obolibrary.org/obo/PCO_0000040> "true"^^xsd:boolean)
SubClassOf(<https://purl.obolibrary.org/obo/PCO_0000040> oboInOwl:ObsoleteClass)

# Class: <https://purl.obolibrary.org/obo/PCO_0000041> (obsolete invisible to unaided eye)

AnnotationAssertion(obo:IAO_0000115 <https://purl.obolibrary.org/obo/PCO_0000041> "A physical object quality that is inhered in a material entity that is too small to be viewed by the unaided eye."@en)
AnnotationAssertion(obo:IAO_0000231 <https://purl.obolibrary.org/obo/PCO_0000041> obo:IAO_0000103)
AnnotationAssertion(rdfs:comment <https://purl.obolibrary.org/obo/PCO_0000041> "should move to PATO"@en)
AnnotationAssertion(rdfs:label <https://purl.obolibrary.org/obo/PCO_0000041> "obsolete invisible to unaided eye"@en)
AnnotationAssertion(owl:deprecated <https://purl.obolibrary.org/obo/PCO_0000041> "true"^^xsd:boolean)
SubClassOf(<https://purl.obolibrary.org/obo/PCO_0000041> oboInOwl:ObsoleteClass)

# Class: <https://purl.obolibrary.org/obo/PCO_0000042> (obsolete microbe)

AnnotationAssertion(obo:IAO_0000231 <https://purl.obolibrary.org/obo/PCO_0000042> obo:IAO_0000103)
AnnotationAssertion(oboInOwl:hasExactSynonym <https://purl.obolibrary.org/obo/PCO_0000042> "microbial organism"@en)
AnnotationAssertion(rdfs:label <https://purl.obolibrary.org/obo/PCO_0000042> "obsolete microbe"@en)
AnnotationAssertion(owl:deprecated <https://purl.obolibrary.org/obo/PCO_0000042> "true"^^xsd:boolean)
SubClassOf(<https://purl.obolibrary.org/obo/PCO_0000042> oboInOwl:ObsoleteClass)

# Class: <https://purl.obolibrary.org/obo/PCO_0000043> (obsolete collection of microbial organisms)

AnnotationAssertion(obo:IAO_0000115 <https://purl.obolibrary.org/obo/PCO_0000043> "A collection of organisms consisting of two or more microbes."@en)
AnnotationAssertion(obo:IAO_0000231 <https://purl.obolibrary.org/obo/PCO_0000043> obo:IAO_0000103)
AnnotationAssertion(dc:creator <https://purl.obolibrary.org/obo/PCO_0000043> "https://orcid.org/0000-0001-8815-0078"@en)
AnnotationAssertion(rdfs:label <https://purl.obolibrary.org/obo/PCO_0000043> "obsolete collection of microbial organisms"@en)
AnnotationAssertion(owl:deprecated <https://purl.obolibrary.org/obo/PCO_0000043> "true"^^xsd:boolean)
SubClassOf(<https://purl.obolibrary.org/obo/PCO_0000043> oboInOwl:ObsoleteClass)

# Class: <https://purl.obolibrary.org/obo/PCO_0000044> (obsolete multi-species collection of microbes)

AnnotationAssertion(obo:IAO_0000115 <https://purl.obolibrary.org/obo/PCO_0000044> "A multi-species collection of organisms that consists of two or more microbes from at least two species."@en)
AnnotationAssertion(obo:IAO_0000231 <https://purl.obolibrary.org/obo/PCO_0000044> obo:IAO_0000103)
AnnotationAssertion(dc:creator <https://purl.obolibrary.org/obo/PCO_0000044> "https://orcid.org/0000-0001-8815-0078"@en)
AnnotationAssertion(rdfs:label <https://purl.obolibrary.org/obo/PCO_0000044> "obsolete multi-species collection of microbes"@en)
AnnotationAssertion(owl:deprecated <https://purl.obolibrary.org/obo/PCO_0000044> "true"^^xsd:boolean)
SubClassOf(<https://purl.obolibrary.org/obo/PCO_0000044> oboInOwl:ObsoleteClass)

# Class: <https://purl.obolibrary.org/obo/PCO_0000045> (obsolete single species collection of microbes)

AnnotationAssertion(obo:IAO_0000115 <https://purl.obolibrary.org/obo/PCO_0000045> "A single-species collection of organisms that consists of two or more microbes of the same species and no members of any other species."@en)
AnnotationAssertion(obo:IAO_0000231 <https://purl.obolibrary.org/obo/PCO_0000045> obo:IAO_0000103)
AnnotationAssertion(dc:creator <https://purl.obolibrary.org/obo/PCO_0000045> "https://orcid.org/0000-0001-8815-0078"@en)
AnnotationAssertion(rdfs:label <https://purl.obolibrary.org/obo/PCO_0000045> "obsolete single species collection of microbes"@en)
AnnotationAssertion(owl:deprecated <https://purl.obolibrary.org/obo/PCO_0000045> "true"^^xsd:boolean)
SubClassOf(<https://purl.obolibrary.org/obo/PCO_0000045> oboInOwl:ObsoleteClass)

# Class: <https://purl.obolibrary.org/obo/PCO_0000046> (obsolete microbial population)

AnnotationAssertion(obo:IAO_0000115 <https://purl.obolibrary.org/obo/PCO_0000046> "A population of organisms consisting of only microbes of the same species, that live in the same place."@en)
AnnotationAssertion(obo:IAO_0000231 <https://purl.obolibrary.org/obo/PCO_0000046> obo:IAO_0000103)
AnnotationAssertion(dc:creator <https://purl.obolibrary.org/obo/PCO_0000046> "https://orcid.org/0000-0001-8815-0078"@en)
AnnotationAssertion(oboInOwl:hasBroadSynonym <https://purl.obolibrary.org/obo/PCO_0000046> "microbiota"@en)
AnnotationAssertion(rdfs:label <https://purl.obolibrary.org/obo/PCO_0000046> "obsolete microbial population"@en)
AnnotationAssertion(owl:deprecated <https://purl.obolibrary.org/obo/PCO_0000046> "true"^^xsd:boolean)
SubClassOf(<https://purl.obolibrary.org/obo/PCO_0000046> oboInOwl:ObsoleteClass)


############################
#   Named Individuals
############################

# Individual: obo:IAO_0000002 (example to be eventually removed)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000002 "example to be eventually removed"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000002 "example to be eventually removed"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000002)

# Individual: obo:IAO_0000103 (failed exploratory term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000103 "failed exploratory term"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000103 "The term was used in an attempt to structure part of the ontology but in retrospect failed to do a good job"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000103 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000103 "failed exploratory term"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000103)

# Individual: obo:IAO_0000120 (metadata complete)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000120 "metadata complete"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000120 "Class has all its metadata, but is either not guaranteed to be in its final location in the asserted IS_A hierarchy or refers to another class that is not complete."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000120 "metadata complete"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000120)

# Individual: obo:IAO_0000121 (organizational term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000121 "organizational term"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000121 "Term created to ease viewing/sort terms for development purpose, and will not be included in a release"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000121 "organizational term"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000121)

# Individual: obo:IAO_0000122 (ready for release)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000122 "ready for release"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000122 "Class has undergone final review, is ready for use, and will be included in the next release. Any class lacking \"ready_for_release\" should be considered likely to change place in hierarchy, have its definition refined, or be obsoleted in the next release.  Those classes deemed \"ready_for_release\" will also derived from a chain of ancestor classes that are also \"ready_for_release.\""@en)
AnnotationAssertion(rdfs:label obo:IAO_0000122 "ready for release"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000122)

# Individual: obo:IAO_0000123 (metadata incomplete)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000123 "metadata incomplete"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000123 "Class is being worked on; however, the metadata (including definition) are not complete or sufficiently clear to the branch editors."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000123 "metadata incomplete"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000123)

# Individual: obo:IAO_0000124 (uncurated)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000124 "uncurated"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000124 "Nothing done yet beyond assigning a unique class ID and proposing a preferred term."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000124 "uncurated"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000124)

# Individual: obo:IAO_0000125 (pending final vetting)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000125 "pending final vetting"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000125 "All definitions, placement in the asserted IS_A hierarchy and required minimal metadata are complete. The class is awaiting a final review by someone other than the term editor."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000125 "pending final vetting"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000125)

# Individual: obo:IAO_0000224 (obsolete_core)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000224 "Core is an instance of a grouping of terms from an ontology or ontologies. It is used by the ontology to identify main classes."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000224 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000224 "PERSON: Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000231 obo:IAO_0000224 obo:IAO_0000226)
AnnotationAssertion(rdfs:label obo:IAO_0000224 "obsolete_core"@en)
AnnotationAssertion(owl:deprecated obo:IAO_0000224 "true"^^xsd:boolean)

# Individual: obo:IAO_0000226 (placeholder removed)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000226 "placeholder removed"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000226 "placeholder removed"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000226)

# Individual: obo:IAO_0000227 (terms merged)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000227 "terms merged"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000227 "An editor note should explain what were the merged terms and the reason for the merge."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000227 "terms merged"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000227)

# Individual: obo:IAO_0000228 (term imported)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000228 "term imported"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000228 "This is to be used when the original term has been replaced by a term imported from an other ontology. An editor note should indicate what is the URI of the new term to use."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000228 "term imported"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000228)

# Individual: obo:IAO_0000229 (term split)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000229 "term split"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000229 "This is to be used when a term has been split in two or more new terms. An editor note should indicate the reason for the split and indicate the URIs of the new terms created."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000229 "term split"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000229)

# Individual: obo:IAO_0000410 (universal)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000410 "universal"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000410 "Hard to give a definition for. Intuitively a \"natural kind\" rather than a collection of any old things, which a class is able to be, formally. At the meta level, universals are defined as positives, are disjoint with their siblings, have single asserted parents."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000410 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000410 "A Formal Theory of Substances, Qualities, and Universals, http://ontology.buffalo.edu/bfo/SQU.pdf"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000410 "universal"@en)
ClassAssertion(obo:IAO_0000409 obo:IAO_0000410)

# Individual: obo:IAO_0000420 (defined class)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000420 "defined class"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000420 "A defined class is a class that is defined by a set of logically necessary and sufficient conditions but is not a universal"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000420 "\"definitions\", in some readings, always are given by necessary and sufficient conditions. So one must be careful (and this is difficult sometimes) to distinguish between defined classes and universal."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000420 "Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000420 "defined class"@en)
ClassAssertion(obo:IAO_0000409 obo:IAO_0000420)

# Individual: obo:IAO_0000421 (named class expression)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000421 "named class expression"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000421 "A named class expression is a logical expression that is given a name. The name can be used in place of the expression."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000421 "named class expressions are used in order to have more concise logical definition but their extensions may not be interesting classes on their own. In languages such as OWL, with no provisions for macros, these show up as actuall classes. Tools may with to not show them as such, and to replace uses of the macros with their expansions"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000421 "Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000421 "named class expression"@en)
ClassAssertion(obo:IAO_0000409 obo:IAO_0000421)

# Individual: obo:IAO_0000423 (to be replaced with external ontology term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000423 "to be replaced with external ontology term"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000423 "Terms with this status should eventually replaced with a term from another ontology."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000423 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000423 "group:OBI"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000423 "to be replaced with external ontology term"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000423)

# Individual: obo:IAO_0000428 (requires discussion)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000428 "requires discussion"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000428 "A term that is metadata complete, has been reviewed, and problems have been identified that require discussion before release. Such a term requires editor note(s) to identify the outstanding issues."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000428 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000428 "group:OBI"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000428 "requires discussion"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000428)


SubClassOf(ObjectSomeValuesFrom(obo:RO_0002566 obo:BFO_0000040) ObjectUnionOf(ObjectSomeValuesFrom(obo:RO_0000056 ObjectSomeValuesFrom(obo:RO_0002418 obo:BFO_0000015)) ObjectSomeValuesFrom(obo:RO_0002215 ObjectSomeValuesFrom(obo:RO_0000056 ObjectSomeValuesFrom(obo:RO_0002418 obo:BFO_0000015)))))
DifferentIndividuals(obo:IAO_0000120 obo:IAO_0000121 obo:IAO_0000122 obo:IAO_0000123 obo:IAO_0000124 obo:IAO_0000125 obo:IAO_0000423 obo:IAO_0000428)
DifferentIndividuals(obo:IAO_0000226 obo:IAO_0000227 obo:IAO_0000228 obo:IAO_0000229)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000066) obo:BFO_0000066)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000066 obo:BFO_0000050) obo:BFO_0000066)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002212 obo:RO_0002212) obo:RO_0002213)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002211) obo:RO_0002596)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002212) obo:RO_0002597)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002213) obo:RO_0002598)
SubObjectPropertyOf(Annotation(obo:RO_0002581 "true"^^xsd:boolean) ObjectPropertyChain(obo:RO_0002327 obo:BFO_0000066) obo:RO_0002432)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002211) obo:RO_0002428)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002211 obo:RO_0002333) obo:RO_0002448)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002212) obo:RO_0002430)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002213) obo:RO_0002429)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002304) obo:RO_0004034)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002305) obo:RO_0004035)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002411) obo:RO_0002263)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002411 obo:RO_0002233) obo:RO_0002566)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002411 obo:RO_0002333) obo:RO_0002566)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002418) obo:RO_0002264)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002629 obo:RO_0002333) obo:RO_0002450)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002630 obo:RO_0002333) obo:RO_0002449)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0004046) obo:RO_0004033)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0004047) obo:RO_0004032)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:RO_0002211) obo:RO_0002428)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:RO_0002212) obo:RO_0002430)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:RO_0002213) obo:RO_0002429)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002578 obo:RO_0002578) obo:RO_0002211)
DLSafeRule(Annotation(swrla:isRuleEnabled "true"^^xsd:boolean) Annotation(rdfs:comment "MF(X)-directly_regulates->MF(Y)-enabled_by->GP(Z) => MF(Y)-has_input->GP(Y) e.g. if 'protein kinase activity'(X) directly_regulates 'protein binding activity (Y)and this is enabled by GP(Z) then X has_input Z") Annotation(rdfs:label "infer input from direct reg") Body(ObjectPropertyAtom(obo:RO_0002327 Variable(<http://purl.obolibrary.org/obo/ro.owl#z>) Variable(<http://purl.obolibrary.org/obo/ro.owl#y>)) ObjectPropertyAtom(obo:RO_0002578 Variable(<http://purl.obolibrary.org/obo/ro.owl#x>) Variable(<http://purl.obolibrary.org/obo/ro.owl#y>)) ClassAtom(obo:GO_0003674 Variable(<http://purl.obolibrary.org/obo/ro.owl#x>)) ClassAtom(obo:GO_0003674 Variable(<http://purl.obolibrary.org/obo/ro.owl#y>)))Head(ObjectPropertyAtom(obo:RO_0002233 Variable(<http://purl.obolibrary.org/obo/ro.owl#x>) Variable(<http://purl.obolibrary.org/obo/ro.owl#z>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002578 Variable(<urn:swrl#a1>) Variable(<urn:swrl#a2>)) ClassAtom(obo:GO_0016301 Variable(<urn:swrl#a1>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#a1>) Variable(<urn:swrl#g1>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#a2>) Variable(<urn:swrl#g2>)))Head(ObjectPropertyAtom(obo:RO_0002447 Variable(<urn:swrl#g1>) Variable(<urn:swrl#g2>))))
DLSafeRule(Annotation(rdfs:label "'causally downstream of' and 'overlaps' should be disjoint properties (a SWRL rule is required because these are non-simple properties).") Body(ObjectPropertyAtom(obo:RO_0002404 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:RO_0002131 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ClassAtom(owl:Nothing Variable(<urn:swrl#x>)) ClassAtom(owl:Nothing Variable(<urn:swrl#y>))))
DLSafeRule(Annotation(rdfs:label "'causally upstream of' and 'overlaps' should be disjoint properties (a SWRL rule is required because these are non-simple properties).") Body(ObjectPropertyAtom(obo:RO_0002411 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:RO_0002131 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ClassAtom(owl:Nothing Variable(<urn:swrl#x>)) ClassAtom(owl:Nothing Variable(<urn:swrl#y>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002213 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)) ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002213 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)))Head(ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
)