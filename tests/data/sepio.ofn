Prefix(:=<http://purl.obolibrary.org/obo/sepio.owl#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(eco:=<http://purl.obolibrary.org/obo/eco/>)
Prefix(obo:=<http://purl.obolibrary.org/obo/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(foaf:=<http://xmlns.com/foaf/0.1/>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(skos:=<http://www.w3.org/2004/02/skos/core#>)
Prefix(swrl:=<http://www.w3.org/2003/11/swrl#>)
Prefix(swrla:=<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#>)
Prefix(swrlb:=<http://www.w3.org/2003/11/swrlb#>)
Prefix(terms:=<http://purl.org/dc/terms/>)
Prefix(protege:=<http://protege.stanford.edu/plugins/owl/protege#>)
Prefix(subsets:=<http://purl.obolibrary.org/obo/ro/subsets#>)
Prefix(oboInOwl:=<http://www.geneontology.org/formats/oboInOwl#>)


Ontology(<http://purl.obolibrary.org/obo/sepio.owl>
<http://purl.obolibrary.org/obo/sepio/releases/2023-06-13/sepio.owl>
Annotation(dc:title "Ontology for Scientific Evidence and Provenance Information")
Annotation(terms:contributor <https://orcid.org/0000-0002-1048-5019>)
Annotation(terms:description "The SEPIO ontology is in its early stages of development, undergoing iterative refinement as new requirements emerge and alignment with existing standards is explored.")
Annotation(terms:license <https://creativecommons.org/licenses/by/3.0/>)
Annotation(owl:versionInfo "2023-06-13")

Declaration(Class(obo:BFO_0000001))
Declaration(Class(obo:BFO_0000002))
Declaration(Class(obo:BFO_0000003))
Declaration(Class(obo:BFO_0000004))
Declaration(Class(obo:BFO_0000015))
Declaration(Class(obo:BFO_0000016))
Declaration(Class(obo:BFO_0000017))
Declaration(Class(obo:BFO_0000019))
Declaration(Class(obo:BFO_0000020))
Declaration(Class(obo:BFO_0000023))
Declaration(Class(obo:BFO_0000031))
Declaration(Class(obo:BFO_0000034))
Declaration(Class(obo:BFO_0000040))
Declaration(Class(obo:BFO_0000182))
Declaration(Class(obo:CARO_0000000))
Declaration(Class(obo:COB_0000077))
Declaration(Class(obo:COB_0000082))
Declaration(Class(obo:COB_0000119))
Declaration(Class(obo:COB_0000120))
Declaration(Class(obo:COB_0000121))
Declaration(Class(obo:COB_0000122))
Declaration(Class(obo:ERO_0001716))
Declaration(Class(obo:GO_0003674))
Declaration(Class(obo:GO_0008150))
Declaration(Class(obo:GO_0016301))
Declaration(Class(obo:IAO_0000005))
Declaration(Class(obo:IAO_0000013))
Declaration(Class(obo:IAO_0000027))
Declaration(Class(obo:IAO_0000030))
Declaration(Class(obo:IAO_0000033))
Declaration(Class(obo:IAO_0000064))
Declaration(Class(obo:IAO_0000078))
Declaration(Class(obo:IAO_0000088))
Declaration(Class(obo:IAO_0000100))
Declaration(Class(obo:IAO_0000102))
Declaration(Class(obo:IAO_0000104))
Declaration(Class(obo:IAO_0000109))
Declaration(Class(obo:IAO_0000225))
Declaration(Class(obo:IAO_0000306))
Declaration(Class(obo:IAO_0000308))
Declaration(Class(obo:IAO_0000310))
Declaration(Class(obo:IAO_0000311))
Declaration(Class(obo:IAO_0000313))
Declaration(Class(obo:IAO_0000409))
Declaration(Class(obo:OBI_0000011))
Declaration(Class(obo:OBI_0000066))
Declaration(Class(obo:OBI_0000070))
Declaration(Class(obo:OBI_0000175))
Declaration(Class(obo:OBI_0000235))
Declaration(Class(obo:OBI_0000260))
Declaration(Class(obo:OBI_0000272))
Declaration(Class(obo:OBI_0000338))
Declaration(Class(obo:OBI_0000938))
Declaration(Class(obo:OBI_0001146))
Declaration(Class(obo:OBI_0002165))
Declaration(Class(obo:PATO_0000001))
Declaration(Class(obo:SEPIO_0000000))
Declaration(Class(obo:SEPIO_0000001))
Declaration(Class(obo:SEPIO_0000002))
Declaration(Class(obo:SEPIO_0000003))
Declaration(Class(obo:SEPIO_0000004))
Declaration(Class(obo:SEPIO_0000037))
Declaration(Class(obo:SEPIO_0000048))
Declaration(Class(obo:SEPIO_0000049))
Declaration(Class(obo:SEPIO_0000055))
Declaration(Class(obo:SEPIO_0000056))
Declaration(Class(obo:SEPIO_0000058))
Declaration(Class(obo:SEPIO_0000066))
Declaration(Class(obo:SEPIO_0000067))
Declaration(Class(obo:SEPIO_0000069))
Declaration(Class(obo:SEPIO_0000070))
Declaration(Class(obo:SEPIO_0000071))
Declaration(Class(obo:SEPIO_0000072))
Declaration(Class(obo:SEPIO_0000073))
Declaration(Class(obo:SEPIO_0000074))
Declaration(Class(obo:SEPIO_0000076))
Declaration(Class(obo:SEPIO_0000077))
Declaration(Class(obo:SEPIO_0000078))
Declaration(Class(obo:SEPIO_0000079))
Declaration(Class(obo:SEPIO_0000080))
Declaration(Class(obo:SEPIO_0000081))
Declaration(Class(obo:SEPIO_0000102))
Declaration(Class(obo:SEPIO_0000125))
Declaration(Class(obo:SEPIO_0000127))
Declaration(Class(obo:SEPIO_0000131))
Declaration(Class(obo:SEPIO_0000133))
Declaration(Class(obo:SEPIO_0000143))
Declaration(Class(obo:SEPIO_0000148))
Declaration(Class(obo:SEPIO_0000149))
Declaration(Class(obo:SEPIO_0000153))
Declaration(Class(obo:SEPIO_0000154))
Declaration(Class(obo:SEPIO_0000155))
Declaration(Class(obo:SEPIO_0000156))
Declaration(Class(obo:SEPIO_0000157))
Declaration(Class(obo:SEPIO_0000158))
Declaration(Class(obo:SEPIO_0000173))
Declaration(Class(obo:SEPIO_0000174))
Declaration(Class(obo:SEPIO_0000175))
Declaration(Class(obo:SEPIO_0000180))
Declaration(Class(obo:SEPIO_0000181))
Declaration(Class(obo:SEPIO_0000185))
Declaration(Class(obo:SEPIO_0000186))
Declaration(Class(obo:SEPIO_0000187))
Declaration(Class(obo:SEPIO_0000258))
Declaration(Class(obo:SEPIO_0000340))
Declaration(Class(obo:SEPIO_0000385))
Declaration(Class(obo:SEPIO_0000400))
Declaration(Class(obo:SEPIO_0000401))
Declaration(Class(obo:SEPIO_0000402))
Declaration(Class(obo:SEPIO_0000414))
Declaration(Class(obo:SEPIO_0000431))
Declaration(Class(obo:SEPIO_0000432))
Declaration(Class(obo:SEPIO_000383))
Declaration(Class(obo:STATO_0000039))
Declaration(Class(obo:STATO_0000104))
Declaration(Class(obo:STATO_0000184))
Declaration(Class(<http://purl.org/oban/association>))
Declaration(Class(oboInOwl:ObsoleteClass))
Declaration(Class(skos:Concept))
Declaration(Class(<http://www.w3.org/ns/prov#Activity>))
Declaration(Class(<http://www.w3.org/ns/prov#Agent>))
Declaration(Class(<http://www.w3.org/ns/prov#Organization>))
Declaration(Class(<http://www.w3.org/ns/prov#Person>))
Declaration(Class(<http://www.w3.org/ns/prov#SoftwareAgent>))
Declaration(Class(foaf:Group))
Declaration(ObjectProperty(obo:BFO_0000050))
Declaration(ObjectProperty(obo:BFO_0000051))
Declaration(ObjectProperty(obo:BFO_0000054))
Declaration(ObjectProperty(obo:BFO_0000055))
Declaration(ObjectProperty(obo:BFO_0000062))
Declaration(ObjectProperty(obo:BFO_0000063))
Declaration(ObjectProperty(obo:COB_0000016))
Declaration(ObjectProperty(obo:COB_0000078))
Declaration(ObjectProperty(obo:COB_0000081))
Declaration(ObjectProperty(obo:COB_0000087))
Declaration(ObjectProperty(obo:IAO_0000136))
Declaration(ObjectProperty(obo:OBI_0000293))
Declaration(ObjectProperty(obo:OBI_0000295))
Declaration(ObjectProperty(obo:OBI_0000299))
Declaration(ObjectProperty(obo:OBI_0000312))
Declaration(ObjectProperty(obo:OBI_0000999))
Declaration(ObjectProperty(obo:RO_0000052))
Declaration(ObjectProperty(obo:RO_0000053))
Declaration(ObjectProperty(obo:RO_0000056))
Declaration(ObjectProperty(obo:RO_0000057))
Declaration(ObjectProperty(obo:RO_0000058))
Declaration(ObjectProperty(obo:RO_0000079))
Declaration(ObjectProperty(obo:RO_0000080))
Declaration(ObjectProperty(obo:RO_0000081))
Declaration(ObjectProperty(obo:RO_0000085))
Declaration(ObjectProperty(obo:RO_0000086))
Declaration(ObjectProperty(obo:RO_0000087))
Declaration(ObjectProperty(obo:RO_0000091))
Declaration(ObjectProperty(obo:RO_0000092))
Declaration(ObjectProperty(obo:RO_0002013))
Declaration(ObjectProperty(obo:RO_0002014))
Declaration(ObjectProperty(obo:RO_0002015))
Declaration(ObjectProperty(obo:RO_0002017))
Declaration(ObjectProperty(obo:RO_0002018))
Declaration(ObjectProperty(obo:RO_0002022))
Declaration(ObjectProperty(obo:RO_0002023))
Declaration(ObjectProperty(obo:RO_0002024))
Declaration(ObjectProperty(obo:RO_0002025))
Declaration(ObjectProperty(obo:RO_0002086))
Declaration(ObjectProperty(obo:RO_0002087))
Declaration(ObjectProperty(obo:RO_0002090))
Declaration(ObjectProperty(obo:RO_0002131))
Declaration(ObjectProperty(obo:RO_0002180))
Declaration(ObjectProperty(obo:RO_0002202))
Declaration(ObjectProperty(obo:RO_0002203))
Declaration(ObjectProperty(obo:RO_0002211))
Declaration(ObjectProperty(obo:RO_0002212))
Declaration(ObjectProperty(obo:RO_0002213))
Declaration(ObjectProperty(obo:RO_0002215))
Declaration(ObjectProperty(obo:RO_0002216))
Declaration(ObjectProperty(obo:RO_0002222))
Declaration(ObjectProperty(obo:RO_0002233))
Declaration(ObjectProperty(obo:RO_0002234))
Declaration(ObjectProperty(obo:RO_0002254))
Declaration(ObjectProperty(obo:RO_0002255))
Declaration(ObjectProperty(obo:RO_0002258))
Declaration(ObjectProperty(obo:RO_0002263))
Declaration(ObjectProperty(obo:RO_0002264))
Declaration(ObjectProperty(obo:RO_0002286))
Declaration(ObjectProperty(obo:RO_0002304))
Declaration(ObjectProperty(obo:RO_0002305))
Declaration(ObjectProperty(obo:RO_0002314))
Declaration(ObjectProperty(obo:RO_0002323))
Declaration(ObjectProperty(obo:RO_0002324))
Declaration(ObjectProperty(obo:RO_0002327))
Declaration(ObjectProperty(obo:RO_0002328))
Declaration(ObjectProperty(obo:RO_0002329))
Declaration(ObjectProperty(obo:RO_0002331))
Declaration(ObjectProperty(obo:RO_0002333))
Declaration(ObjectProperty(obo:RO_0002334))
Declaration(ObjectProperty(obo:RO_0002335))
Declaration(ObjectProperty(obo:RO_0002336))
Declaration(ObjectProperty(obo:RO_0002350))
Declaration(ObjectProperty(obo:RO_0002351))
Declaration(ObjectProperty(obo:RO_0002352))
Declaration(ObjectProperty(obo:RO_0002353))
Declaration(ObjectProperty(obo:RO_0002384))
Declaration(ObjectProperty(obo:RO_0002385))
Declaration(ObjectProperty(obo:RO_0002387))
Declaration(ObjectProperty(obo:RO_0002388))
Declaration(ObjectProperty(obo:RO_0002404))
Declaration(ObjectProperty(obo:RO_0002405))
Declaration(ObjectProperty(obo:RO_0002407))
Declaration(ObjectProperty(obo:RO_0002409))
Declaration(ObjectProperty(obo:RO_0002410))
Declaration(ObjectProperty(obo:RO_0002411))
Declaration(ObjectProperty(obo:RO_0002412))
Declaration(ObjectProperty(obo:RO_0002418))
Declaration(ObjectProperty(obo:RO_0002427))
Declaration(ObjectProperty(obo:RO_0002428))
Declaration(ObjectProperty(obo:RO_0002429))
Declaration(ObjectProperty(obo:RO_0002430))
Declaration(ObjectProperty(obo:RO_0002431))
Declaration(ObjectProperty(obo:RO_0002434))
Declaration(ObjectProperty(obo:RO_0002436))
Declaration(ObjectProperty(obo:RO_0002447))
Declaration(ObjectProperty(obo:RO_0002448))
Declaration(ObjectProperty(obo:RO_0002449))
Declaration(ObjectProperty(obo:RO_0002450))
Declaration(ObjectProperty(obo:RO_0002464))
Declaration(ObjectProperty(obo:RO_0002481))
Declaration(ObjectProperty(obo:RO_0002500))
Declaration(ObjectProperty(obo:RO_0002501))
Declaration(ObjectProperty(obo:RO_0002502))
Declaration(ObjectProperty(obo:RO_0002506))
Declaration(ObjectProperty(obo:RO_0002559))
Declaration(ObjectProperty(obo:RO_0002563))
Declaration(ObjectProperty(obo:RO_0002564))
Declaration(ObjectProperty(obo:RO_0002566))
Declaration(ObjectProperty(obo:RO_0002578))
Declaration(ObjectProperty(obo:RO_0002584))
Declaration(ObjectProperty(obo:RO_0002595))
Declaration(ObjectProperty(obo:RO_0002596))
Declaration(ObjectProperty(obo:RO_0002597))
Declaration(ObjectProperty(obo:RO_0002598))
Declaration(ObjectProperty(obo:RO_0002608))
Declaration(ObjectProperty(obo:RO_0002614))
Declaration(ObjectProperty(obo:RO_0002616))
Declaration(ObjectProperty(obo:RO_0002629))
Declaration(ObjectProperty(obo:RO_0002630))
Declaration(ObjectProperty(obo:RO_0004028))
Declaration(ObjectProperty(obo:RO_0004031))
Declaration(ObjectProperty(obo:RO_0004032))
Declaration(ObjectProperty(obo:RO_0004033))
Declaration(ObjectProperty(obo:RO_0004034))
Declaration(ObjectProperty(obo:RO_0004035))
Declaration(ObjectProperty(obo:RO_0004046))
Declaration(ObjectProperty(obo:RO_0004047))
Declaration(ObjectProperty(obo:RO_0009501))
Declaration(ObjectProperty(obo:RO_0011002))
Declaration(ObjectProperty(obo:RO_0012011))
Declaration(ObjectProperty(obo:RO_0012012))
Declaration(ObjectProperty(obo:RO_0017001))
Declaration(ObjectProperty(obo:RO_0019000))
Declaration(ObjectProperty(obo:RO_0019001))
Declaration(ObjectProperty(obo:RO_0019002))
Declaration(ObjectProperty(obo:SEPIO_0000006))
Declaration(ObjectProperty(obo:SEPIO_0000007))
Declaration(ObjectProperty(obo:SEPIO_0000008))
Declaration(ObjectProperty(obo:SEPIO_0000009))
Declaration(ObjectProperty(obo:SEPIO_0000015))
Declaration(ObjectProperty(obo:SEPIO_0000017))
Declaration(ObjectProperty(obo:SEPIO_0000026))
Declaration(ObjectProperty(obo:SEPIO_0000027))
Declaration(ObjectProperty(obo:SEPIO_0000028))
Declaration(ObjectProperty(obo:SEPIO_0000030))
Declaration(ObjectProperty(obo:SEPIO_0000041))
Declaration(ObjectProperty(obo:SEPIO_0000046))
Declaration(ObjectProperty(obo:SEPIO_0000084))
Declaration(ObjectProperty(obo:SEPIO_0000085))
Declaration(ObjectProperty(obo:SEPIO_0000098))
Declaration(ObjectProperty(obo:SEPIO_0000099))
Declaration(ObjectProperty(obo:SEPIO_0000100))
Declaration(ObjectProperty(obo:SEPIO_0000101))
Declaration(ObjectProperty(obo:SEPIO_0000108))
Declaration(ObjectProperty(obo:SEPIO_0000109))
Declaration(ObjectProperty(obo:SEPIO_0000113))
Declaration(ObjectProperty(obo:SEPIO_0000114))
Declaration(ObjectProperty(obo:SEPIO_0000115))
Declaration(ObjectProperty(obo:SEPIO_0000116))
Declaration(ObjectProperty(obo:SEPIO_0000124))
Declaration(ObjectProperty(obo:SEPIO_0000126))
Declaration(ObjectProperty(obo:SEPIO_0000130))
Declaration(ObjectProperty(obo:SEPIO_0000132))
Declaration(ObjectProperty(obo:SEPIO_0000140))
Declaration(ObjectProperty(obo:SEPIO_0000144))
Declaration(ObjectProperty(obo:SEPIO_0000145))
Declaration(ObjectProperty(obo:SEPIO_0000146))
Declaration(ObjectProperty(obo:SEPIO_0000150))
Declaration(ObjectProperty(obo:SEPIO_0000151))
Declaration(ObjectProperty(obo:SEPIO_0000152))
Declaration(ObjectProperty(obo:SEPIO_0000159))
Declaration(ObjectProperty(obo:SEPIO_0000167))
Declaration(ObjectProperty(obo:SEPIO_0000169))
Declaration(ObjectProperty(obo:SEPIO_0000178))
Declaration(ObjectProperty(obo:SEPIO_0000183))
Declaration(ObjectProperty(obo:SEPIO_0000188))
Declaration(ObjectProperty(obo:SEPIO_0000189))
Declaration(ObjectProperty(obo:SEPIO_0000197))
Declaration(ObjectProperty(obo:SEPIO_0000232))
Declaration(ObjectProperty(obo:SEPIO_0000257))
Declaration(ObjectProperty(obo:SEPIO_0000376))
Declaration(ObjectProperty(obo:SEPIO_0000387))
Declaration(ObjectProperty(obo:SEPIO_0000388))
Declaration(ObjectProperty(obo:SEPIO_0000389))
Declaration(ObjectProperty(obo:SEPIO_0000390))
Declaration(ObjectProperty(obo:SEPIO_0000398))
Declaration(ObjectProperty(obo:SEPIO_0000406))
Declaration(ObjectProperty(obo:SEPIO_0000407))
Declaration(ObjectProperty(obo:SEPIO_0000415))
Declaration(ObjectProperty(obo:SEPIO_0000427))
Declaration(ObjectProperty(obo:SEPIO_0000437))
Declaration(ObjectProperty(obo:SEPIO_0000438))
Declaration(ObjectProperty(obo:SEPIO_0000439))
Declaration(ObjectProperty(obo:SEPIO_0000440))
Declaration(ObjectProperty(obo:SEPIO_0000441))
Declaration(ObjectProperty(obo:SEPIO_0000442))
Declaration(ObjectProperty(obo:STATO_0000102))
Declaration(ObjectProperty(terms:source))
Declaration(ObjectProperty(<http://purl.org/oban/association_has_object>))
Declaration(ObjectProperty(<http://purl.org/oban/association_has_predicate>))
Declaration(ObjectProperty(<http://purl.org/oban/association_has_subject>))
Declaration(ObjectProperty(<http://purl.org/pav/authoredBy>))
Declaration(ObjectProperty(<http://purl.org/pav/createdBy>))
Declaration(ObjectProperty(<http://purl.org/pav/curatedBy>))
Declaration(ObjectProperty(<http://purl.org/pav/derivedFrom>))
Declaration(ObjectProperty(<http://purl.org/pav/importedFrom>))
Declaration(ObjectProperty(<http://purl.org/pav/retrievedFrom>))
Declaration(ObjectProperty(<http://purl.org/pav/sourceAccessedAt>))
Declaration(ObjectProperty(oboInOwl:ObsoleteProperty))
Declaration(DataProperty(obo:ERO_0000480))
Declaration(DataProperty(obo:SEPIO_0000021))
Declaration(DataProperty(obo:SEPIO_0000036))
Declaration(DataProperty(obo:SEPIO_0000040))
Declaration(DataProperty(obo:SEPIO_0000051))
Declaration(DataProperty(obo:SEPIO_0000063))
Declaration(DataProperty(obo:SEPIO_0000105))
Declaration(DataProperty(obo:SEPIO_0000123))
Declaration(DataProperty(obo:SEPIO_0000135))
Declaration(DataProperty(obo:SEPIO_0000160))
Declaration(DataProperty(obo:SEPIO_0000161))
Declaration(DataProperty(obo:SEPIO_0000162))
Declaration(DataProperty(obo:SEPIO_0000164))
Declaration(DataProperty(obo:SEPIO_0000165))
Declaration(DataProperty(obo:SEPIO_0000168))
Declaration(DataProperty(obo:SEPIO_0000231))
Declaration(DataProperty(obo:SEPIO_0000346))
Declaration(DataProperty(obo:SEPIO_0000384))
Declaration(DataProperty(obo:SEPIO_0000419))
Declaration(DataProperty(obo:SEPIO_0000429))
Declaration(DataProperty(obo:SEPIO_0000433))
Declaration(DataProperty(obo:SEPIO_0000434))
Declaration(DataProperty(obo:SEPIO_0000435))
Declaration(DataProperty(obo:SEPIO_0000436))
Declaration(DataProperty(obo:STATO_0000129))
Declaration(DataProperty(dc:description))
Declaration(DataProperty(terms:date))
Declaration(DataProperty(terms:identifier))
Declaration(DataProperty(terms:title))
Declaration(DataProperty(<http://purl.org/ontology/bibo/doi>))
Declaration(DataProperty(<http://purl.org/pav/version>))
Declaration(DataProperty(foaf:name))
Declaration(NamedIndividual(obo:IAO_0000002))
Declaration(NamedIndividual(obo:IAO_0000103))
Declaration(NamedIndividual(obo:IAO_0000120))
Declaration(NamedIndividual(obo:IAO_0000121))
Declaration(NamedIndividual(obo:IAO_0000122))
Declaration(NamedIndividual(obo:IAO_0000123))
Declaration(NamedIndividual(obo:IAO_0000124))
Declaration(NamedIndividual(obo:IAO_0000125))
Declaration(NamedIndividual(obo:IAO_0000226))
Declaration(NamedIndividual(obo:IAO_0000227))
Declaration(NamedIndividual(obo:IAO_0000228))
Declaration(NamedIndividual(obo:IAO_0000229))
Declaration(NamedIndividual(obo:IAO_0000410))
Declaration(NamedIndividual(obo:IAO_0000420))
Declaration(NamedIndividual(obo:IAO_0000421))
Declaration(NamedIndividual(obo:IAO_0000423))
Declaration(NamedIndividual(obo:IAO_0000428))
Declaration(NamedIndividual(obo:OMO_0001000))
Declaration(NamedIndividual(obo:SEPIO_0000403))
Declaration(NamedIndividual(obo:SEPIO_0000404))
Declaration(NamedIndividual(obo:SEPIO_0000405))
Declaration(AnnotationProperty(protege:defaultLanguage))
Declaration(AnnotationProperty(obo:BFO_0000179))
Declaration(AnnotationProperty(obo:BFO_0000180))
Declaration(AnnotationProperty(obo:COB_based_on))
Declaration(AnnotationProperty(obo:IAO_0000111))
Declaration(AnnotationProperty(obo:IAO_0000112))
Declaration(AnnotationProperty(obo:IAO_0000114))
Declaration(AnnotationProperty(obo:IAO_0000115))
Declaration(AnnotationProperty(obo:IAO_0000116))
Declaration(AnnotationProperty(obo:IAO_0000117))
Declaration(AnnotationProperty(obo:IAO_0000118))
Declaration(AnnotationProperty(obo:IAO_0000119))
Declaration(AnnotationProperty(obo:IAO_0000231))
Declaration(AnnotationProperty(obo:IAO_0000232))
Declaration(AnnotationProperty(obo:IAO_0000233))
Declaration(AnnotationProperty(obo:IAO_0000234))
Declaration(AnnotationProperty(obo:IAO_0000412))
Declaration(AnnotationProperty(obo:IAO_0000424))
Declaration(AnnotationProperty(obo:IAO_0000589))
Declaration(AnnotationProperty(obo:IAO_0000600))
Declaration(AnnotationProperty(obo:IAO_0000601))
Declaration(AnnotationProperty(obo:IAO_0000602))
Declaration(AnnotationProperty(obo:IAO_0010000))
Declaration(AnnotationProperty(obo:IAO_0100001))
Declaration(AnnotationProperty(obo:RO_0001900))
Declaration(AnnotationProperty(obo:RO_0002259))
Declaration(AnnotationProperty(obo:RO_0002575))
Declaration(AnnotationProperty(obo:RO_0002579))
Declaration(AnnotationProperty(obo:RO_0002581))
Declaration(AnnotationProperty(obo:RO_0002582))
Declaration(AnnotationProperty(obo:RO_0004049))
Declaration(AnnotationProperty(obo:RO_0004050))
Declaration(AnnotationProperty(obo:RO_0040042))
Declaration(AnnotationProperty(obo:SEPIO_0000052))
Declaration(AnnotationProperty(obo:SEPIO_0000061))
Declaration(AnnotationProperty(obo:SEPIO_0000184))
Declaration(AnnotationProperty(obo:SEPIO_0000337))
Declaration(AnnotationProperty(obo:SEPIO_0000386))
Declaration(AnnotationProperty(obo:SEPIO_0000399))
Declaration(AnnotationProperty(obo:valid_for_go_annotation_extension))
Declaration(AnnotationProperty(obo:valid_for_go_gp2term))
Declaration(AnnotationProperty(obo:valid_for_go_ontology))
Declaration(AnnotationProperty(obo:valid_for_gocam))
Declaration(AnnotationProperty(subsets:ro-eco))
Declaration(AnnotationProperty(dc:contributor))
Declaration(AnnotationProperty(dc:description))
Declaration(AnnotationProperty(dc:license))
Declaration(AnnotationProperty(dc:source))
Declaration(AnnotationProperty(dc:title))
Declaration(AnnotationProperty(terms:contributor))
Declaration(AnnotationProperty(terms:creator))
Declaration(AnnotationProperty(terms:description))
Declaration(AnnotationProperty(terms:license))
Declaration(AnnotationProperty(terms:source))
Declaration(AnnotationProperty(terms:title))
Declaration(AnnotationProperty(swrla:isRuleEnabled))
Declaration(AnnotationProperty(oboInOwl:SubsetProperty))
Declaration(AnnotationProperty(oboInOwl:created_by))
Declaration(AnnotationProperty(oboInOwl:creation_date))
Declaration(AnnotationProperty(oboInOwl:hasBroadSynonym))
Declaration(AnnotationProperty(oboInOwl:hasDbXref))
Declaration(AnnotationProperty(oboInOwl:hasExactSynonym))
Declaration(AnnotationProperty(oboInOwl:hasRelatedSynonym))
Declaration(AnnotationProperty(oboInOwl:id))
Declaration(AnnotationProperty(oboInOwl:inSubset))
Declaration(AnnotationProperty(rdfs:comment))
Declaration(AnnotationProperty(rdfs:label))
Declaration(AnnotationProperty(owl:deprecated))
Declaration(AnnotationProperty(skos:closeMatch))
Declaration(AnnotationProperty(foaf:homepage))
Declaration(AnnotationProperty(foaf:mbox))
############################
#   Annotation Properties
############################

# Annotation Property: obo:IAO_0000111 (editor preferred term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000111 "editor preferred term"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000111 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000111 "The concise, meaningful, and human-friendly name for a class or property preferred by the ontology developers. (US-English)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000111 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000111 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000111 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000111 "editor preferred term"@en)

# Annotation Property: obo:IAO_0000112 (example of usage)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000112 "example of usage"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000112 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000112 "A phrase describing how a term should be used and/or a citation to a work which uses it. May also include other kinds of examples that facilitate immediate understanding, such as widely know prototypes or instances of a class, or cases where a relation is said to hold."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000112 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000112 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000112 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000112 "example of usage"@en)

# Annotation Property: obo:IAO_0000114 (has curation status)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000114 "has curation status"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000114 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000114 "PERSON:Bill Bug"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000114 "PERSON:Melanie Courtot"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000114 "has curation status"@en)

# Annotation Property: obo:IAO_0000115 (definition)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000115 "definition"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000115 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000115 "The official definition, explaining the meaning of a class or property. Shall be Aristotelian, formalized and normalized. Can be augmented with colloquial definitions."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000115 "2012-04-05: 
Barry Smith

The official OBI definition, explaining the meaning of a class or property: 'Shall be Aristotelian, formalized and normalized. Can be augmented with colloquial definitions'  is terrible.

Can you fix to something like:

A statement of necessary and sufficient conditions explaining the meaning of an expression referring to a class or property.

Alan Ruttenberg

Your proposed definition is a reasonable candidate, except that it is very common that necessary and sufficient conditions are not given. Mostly they are necessary, occasionally they are necessary and sufficient or just sufficient. Often they use terms that are not themselves defined and so they effectively can't be evaluated by those criteria. 

On the specifics of the proposed definition:

We don't have definitions of 'meaning' or 'expression' or 'property'. For 'reference' in the intended sense I think we use the term 'denotation'. For 'expression', I think we you mean symbol, or identifier. For 'meaning' it differs for class and property. For class we want documentation that let's the intended reader determine whether an entity is instance of the class, or not. For property we want documentation that let's the intended reader determine, given a pair of potential relata, whether the assertion that the relation holds is true. The 'intended reader' part suggests that we also specify who, we expect, would be able to understand the definition, and also generalizes over human and computer reader to include textual and logical definition. 

Personally, I am more comfortable weakening definition to documentation, with instructions as to what is desirable. 

We also have the outstanding issue of how to aim different definitions to different audiences. A clinical audience reading chebi wants a different sort of definition documentation/definition from a chemistry trained audience, and similarly there is a need for a definition that is adequate for an ontologist to work with.  "@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000115 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000115 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000115 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition")
AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition"@en)

# Annotation Property: obo:IAO_0000116 (editor note)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000116 "editor note"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000116 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000116 "An administrative note intended for its editor. It may not be included in the publication version of the ontology, so it should contain nothing necessary for end users to understand the ontology."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000116 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000116 "GROUP:OBI:<http://purl.obofoundry.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000116 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000116 "editor note"@en)

# Annotation Property: obo:IAO_0000117 (term editor)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000117 "term editor"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000117 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000117 "Name of editor entering the term in the file. The term editor is a point of contact for information regarding the term. The term editor may be, but is not always, the author of the definition, which may have been worked upon by several people"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000117 "20110707, MC: label update to term editor and definition modified accordingly. See https://github.com/information-artifact-ontology/IAO/issues/115."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000117 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000117 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000117 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000117 "term editor"@en)

# Annotation Property: obo:IAO_0000118 (alternative label)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000118 "alternative label"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000118 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000118 "A label for a class or property that can be used to refer to the class or property instead of the preferred rdfs:label. Alternative labels should be used to indicate community- or context-specific labels, abbreviations, shorthand forms and the like."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000118 "OBO Operations committee")
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000118 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000118 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:comment obo:IAO_0000118 "Consider re-defing to: An alternative name for a class or property which can mean the same thing as the preferred name (semantically equivalent, narrow, broad or related).")
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000118 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000118 "alternative label"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000118 "alternative term"@en)

# Annotation Property: obo:IAO_0000119 (definition source)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000119 "definition source"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000119 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000119 "Formal citation, e.g. identifier in external database to indicate / attribute source(s) for the definition. Free text indicate / attribute source(s) for the definition. EXAMPLE: Author Name, URI, MeSH Term C04, PUBMED ID, Wiki uri on 31.01.2007"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000119 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000119 "Discussion on obo-discuss mailing-list, see http://bit.ly/hgm99w"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000119 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000119 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000119 "definition source"@en)

# Annotation Property: obo:IAO_0000231 (has obsolescence reason)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000231 "has obsolescence reason"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000231 "Relates an annotation property to an obsolescence reason. The values of obsolescence reasons come from a list of predefined terms, instances of the class obsolescence reason specification."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000231 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000231 "PERSON:Melanie Courtot"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000231 "has obsolescence reason"@en)

# Annotation Property: obo:IAO_0000232 (curator note)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000232 "curator note"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000232 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000232 "An administrative note of use for a curator but of no use for a user"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000232 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000232 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000232 "curator note"@en)

# Annotation Property: obo:IAO_0000412 (imported from)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000412 "imported from"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000412 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000412 "For external terms/classes, the ontology from which the term was imported"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000412 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000412 "PERSON:Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000412 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000412 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000412 "imported from"@en)

# Annotation Property: obo:IAO_0100001 (term replaced by)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0100001 "term replaced by"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0100001 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0100001 "Use on obsolete terms, relating the term to another term that can be used as a substitute"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0100001 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0100001 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:comment obo:IAO_0100001 "Add as annotation triples in the granting ontology"@en)
AnnotationAssertion(rdfs:label obo:IAO_0100001 "term replaced by"@en)

# Annotation Property: obo:RO_0002259 (obo:RO_0002259)

SubAnnotationPropertyOf(obo:RO_0002259 oboInOwl:SubsetProperty)

# Annotation Property: obo:RO_0002581 (is a defining property chain axiom)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002581 "If R <- P o Q is a defining property chain axiom, then it also holds that R -> P o Q. Note that this cannot be expressed directly in OWL")
AnnotationAssertion(rdfs:label obo:RO_0002581 "is a defining property chain axiom")

# Annotation Property: obo:RO_0002582 (is a defining property chain axiom where second argument is reflexive)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002582 "If R <- P o Q is a defining property chain axiom, then (1) R -> P o Q holds and (2) Q is either reflexive or locally reflexive. A corollary of this is that P SubPropertyOf R.")
AnnotationAssertion(rdfs:label obo:RO_0002582 "is a defining property chain axiom where second argument is reflexive")

# Annotation Property: obo:SEPIO_0000052 (consider)

AnnotationAssertion(rdfs:label obo:SEPIO_0000052 "consider"@en)

# Annotation Property: obo:SEPIO_0000061 (SEPIO_editor_note)

AnnotationAssertion(rdfs:comment obo:SEPIO_0000061 "Used to capture development notes and design decisions or questions. All annotations using this property should be removed before publishing / releasing the ontology to the public (but ideally retained in some place as valuable documentation).")
AnnotationAssertion(rdfs:label obo:SEPIO_0000061 "SEPIO_editor_note"@en)

# Annotation Property: obo:SEPIO_0000184 (usage note)

AnnotationAssertion(rdfs:label obo:SEPIO_0000184 "usage note"@en)

# Annotation Property: obo:SEPIO_0000337 (in_value_set)

AnnotationAssertion(rdfs:label obo:SEPIO_0000337 "in_value_set"@en)

# Annotation Property: obo:SEPIO_0000386 (sepio_preferred_label)

AnnotationAssertion(rdfs:label obo:SEPIO_0000386 "sepio_preferred_label"@en)
SubAnnotationPropertyOf(obo:SEPIO_0000386 obo:IAO_0000118)

# Annotation Property: obo:SEPIO_0000399 (is_shortcut)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000399 "Annotation indicating whether a property represents a \"shortcut\" relation that can be used to directly link two objects that are indirectly linked through a longer path of two or more edges.  Shortcut relations can be logically expanded to be expressed in terms of this longer path, e.g. 

has_evidence_from_source = has_evidence_line o has_evidence_item o source.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000399 "is_shortcut"@en)
AnnotationPropertyRange(obo:SEPIO_0000399 xsd:boolean)

# Annotation Property: obo:valid_for_go_annotation_extension (obo:valid_for_go_annotation_extension)

SubAnnotationPropertyOf(obo:valid_for_go_annotation_extension oboInOwl:SubsetProperty)

# Annotation Property: obo:valid_for_go_gp2term (obo:valid_for_go_gp2term)

SubAnnotationPropertyOf(obo:valid_for_go_gp2term oboInOwl:SubsetProperty)

# Annotation Property: obo:valid_for_go_ontology (obo:valid_for_go_ontology)

SubAnnotationPropertyOf(obo:valid_for_go_ontology oboInOwl:SubsetProperty)

# Annotation Property: obo:valid_for_gocam (obo:valid_for_gocam)

SubAnnotationPropertyOf(obo:valid_for_gocam oboInOwl:SubsetProperty)

# Annotation Property: subsets:ro-eco (eco subset)

AnnotationAssertion(rdfs:label subsets:ro-eco "eco subset")
AnnotationAssertion(rdfs:seeAlso subsets:ro-eco <http://purl.obolibrary.org/obo/ro/docs/subsets/>)
SubAnnotationPropertyOf(subsets:ro-eco oboInOwl:SubsetProperty)

# Annotation Property: dc:description (description)

AnnotationAssertion(obo:IAO_0000115 dc:description "An account of a resource.")
AnnotationAssertion(rdfs:label dc:description "description")
AnnotationPropertyRange(dc:description xsd:string)

# Annotation Property: terms:description (description)

AnnotationAssertion(obo:IAO_0000115 terms:description "An account of the resource.")
AnnotationAssertion(rdfs:comment terms:description "Description may include but is not limited to: an abstract, a table of contents, a graphical representation, or a free-text account of the resource.\""@en)
AnnotationAssertion(rdfs:label terms:description "description"@en)

# Annotation Property: terms:source (source)

AnnotationAssertion(obo:IAO_0000115 terms:source "A related resource from which the described resource is derived.")
AnnotationAssertion(rdfs:comment terms:source "The described resource may be derived from the related resource in whole or in part. Recommended best practice is to identify the related resource by means of a string conforming to a formal identification system.")
AnnotationAssertion(rdfs:label terms:source "source"@en)
AnnotationPropertyRange(terms:source obo:IAO_0000030)

# Annotation Property: terms:title (title)

AnnotationAssertion(rdfs:label terms:title "title")

# Annotation Property: oboInOwl:hasDbXref (database_cross_reference)

AnnotationAssertion(rdfs:label oboInOwl:hasDbXref "database_cross_reference")
AnnotationAssertion(rdfs:label oboInOwl:hasDbXref "database_cross_reference"@en)

# Annotation Property: oboInOwl:inSubset (in_subset)

AnnotationAssertion(rdfs:label oboInOwl:inSubset "in_subset")


############################
#   Object Properties
############################

# Object Property: obo:BFO_0000050 (part of)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000050 "is part of"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "my brain is part of my body (continuant parthood, two material entities)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "my stomach cavity is part of my stomach (continuant parthood, immaterial entity is part of material entity)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "this day is part of this year (occurrent parthood)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000050 "a core relation that holds between a part and its whole"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Everything is part of itself. Any part of any part of a thing is itself part of that thing. Two distinct things cannot be part of each other."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See http://purl.obolibrary.org/obo/ro/docs/temporal-semantics/"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Parthood requires the part and the whole to have compatible classes: only an occurrent can be part of an occurrent; only a process can be part of a process; only a continuant can be part of a continuant; only an independent continuant can be part of an independent continuant; only an immaterial entity can be part of an immaterial entity; only a specifically dependent continuant can be part of a specifically dependent continuant; only a generically dependent continuant can be part of a generically dependent continuant. (This list is not exhaustive.)

A continuant cannot be part of an occurrent: use 'participates in'. An occurrent cannot be part of a continuant: use 'has participant'. A material entity cannot be part of an immaterial entity: use 'has location'. A specifically dependent continuant cannot be part of an independent continuant: use 'inheres in'. An independent continuant cannot be part of a specifically dependent continuant: use 'bearer of'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000050 "part_of"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000050 obo:ro.owl)
AnnotationAssertion(obo:RO_0001900 obo:BFO_0000050 obo:RO_0001901)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000002)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000003)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000004)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000017)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000019)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000020)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000031)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000050 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000050 obo:valid_for_go_gp2term)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000050 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000050 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:BFO_0000050 "part of")
AnnotationAssertion(rdfs:label obo:BFO_0000050 "part of"@en)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000050 <http://ontologydesignpatterns.org/wiki/Community:Parts_and_Collections>)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000050 <http://ontologydesignpatterns.org/wiki/Submissions:PartOf>)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000050 "http://www.obofoundry.org/ro/#OBO_REL:part_of")
SubObjectPropertyOf(obo:BFO_0000050 obo:RO_0002131)
InverseObjectProperties(obo:BFO_0000050 obo:BFO_0000051)
TransitiveObjectProperty(obo:BFO_0000050)

# Object Property: obo:BFO_0000051 (has part)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000051 "has part"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "my body has part my brain (continuant parthood, two material entities)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "my stomach has part my stomach cavity (continuant parthood, material entity has part immaterial entity)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "this year has part this day (occurrent parthood)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000051 "a core relation that holds between a whole and its part"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Everything has itself as a part. Any part of any part of a thing is itself part of that thing. Two distinct things cannot have each other as a part."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See http://purl.obolibrary.org/obo/ro/docs/temporal-semantics/"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Parthood requires the part and the whole to have compatible classes: only an occurrent have an occurrent as part; only a process can have a process as part; only a continuant can have a continuant as part; only an independent continuant can have an independent continuant as part; only a specifically dependent continuant can have a specifically dependent continuant as part; only a generically dependent continuant can have a generically dependent continuant as part. (This list is not exhaustive.)

A continuant cannot have an occurrent as part: use 'participates in'. An occurrent cannot have a continuant as part: use 'has participant'. An immaterial entity cannot have a material entity as part: use 'location of'. An independent continuant cannot have a specifically dependent continuant as part: use 'bearer of'. A specifically dependent continuant cannot have an independent continuant as part: use 'inheres in'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000051 "has_part"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000051 obo:ro.owl)
AnnotationAssertion(obo:RO_0001900 obo:BFO_0000051 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000051 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000051 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000051 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:BFO_0000051 "has part")
AnnotationAssertion(rdfs:label obo:BFO_0000051 "has part"@en)
SubObjectPropertyOf(obo:BFO_0000051 obo:RO_0002131)
TransitiveObjectProperty(obo:BFO_0000051)

# Object Property: obo:BFO_0000054 (realized in)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000054 "realized in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this disease is realized in this disease course"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this fragility is realized in this shattering"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this investigator role is realized in this investigation"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000054 "is realized by"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000054 "realized_in"@en)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000054 "[copied from inverse property 'realizes'] to say that b realizes c at t is to assert that there is some material entity d & b is a process which has participant d at t & c is a disposition or role of which d is bearer_of at t& the type instantiated by b is correlated with the type instantiated by c. (axiom label in BFO2 Reference: [059-003])"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000054 "Paraphrase of elucidation: a relation between a realizable entity and a process, where there is some material entity that is bearer of the realizable entity and participates in the process, and the realizable entity comes to be realized in the course of the process")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000054 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000054 "realized in"@en)
InverseObjectProperties(obo:BFO_0000054 obo:BFO_0000055)
InverseObjectProperties(obo:BFO_0000054 obo:COB_0000087)
ObjectPropertyDomain(obo:BFO_0000054 obo:BFO_0000017)
ObjectPropertyRange(obo:BFO_0000054 obo:BFO_0000015)

# Object Property: obo:BFO_0000055 (realizes)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000055 "realizes"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this disease course realizes this disease"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this investigation realizes this investigator role"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this shattering realizes this fragility"@en)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000055 "to say that b realizes c at t is to assert that there is some material entity d & b is a process which has participant d at t & c is a disposition or role of which d is bearer_of at t& the type instantiated by b is correlated with the type instantiated by c. (axiom label in BFO2 Reference: [059-003])"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000055 "Paraphrase of elucidation: a relation between a process and a realizable entity, where there is some material entity that is bearer of the realizable entity and participates in the process, and the realizable entity comes to be realized in the course of the process")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000055 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000055 "realizes")
AnnotationAssertion(rdfs:label obo:BFO_0000055 "realizes"@en)
SubObjectPropertyOf(obo:BFO_0000055 owl:topObjectProperty)
ObjectPropertyDomain(obo:BFO_0000055 obo:BFO_0000015)
ObjectPropertyRange(obo:BFO_0000055 obo:BFO_0000017)
ObjectPropertyRange(obo:BFO_0000055 obo:BFO_0000020)

# Object Property: obo:BFO_0000062 (preceded by)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000062 "preceded by"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000062 "x is preceded by y if and only if the time point at which y ends is before or equivalent to the time point at which x starts. Formally: x preceded by y iff ω(y) <= α(x), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000062 "An example is: translation preceded_by transcription; aging preceded_by development (not however death preceded_by aging). Where derives_from links classes of continuants, preceded_by links classes of processes. Clearly, however, these two relations are not independent of each other. Thus if cells of type C1 derive_from cells of type C, then any cell division involving an instance of C1 in a given lineage is preceded_by cellular processes involving an instance of C.    The assertion P preceded_by P1 tells us something about Ps in general: that is, it tells us something about what happened earlier, given what we know about what happened later. Thus it does not provide information pointing in the opposite direction, concerning instances of P1 in general; that is, that each is such as to be succeeded by some instance of P. Note that an assertion to the effect that P preceded_by P1 is rather weak; it tells us little about the relations between the underlying instances in virtue of which the preceded_by relation obtains. Typically we will be interested in stronger relations, for example in the relation immediately_preceded_by, or in relations which combine preceded_by with a condition to the effect that the corresponding instances of P and P1 share participants, or that their participants are connected by relations of derivation, or (as a first step along the road to a treatment of causality) that the one process in some way affects (for example, initiates or regulates) the other."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000062 "is preceded by"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000062 "preceded_by"@en)
AnnotationAssertion(dc:source obo:BFO_0000062 "http://www.obofoundry.org/ro/#OBO_REL:preceded_by")
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000062 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:BFO_0000062 "preceded by"@en)
SubObjectPropertyOf(obo:BFO_0000062 obo:RO_0002086)
InverseObjectProperties(obo:BFO_0000062 obo:BFO_0000063)
TransitiveObjectProperty(obo:BFO_0000062)
ObjectPropertyDomain(obo:BFO_0000062 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000062 obo:BFO_0000003)

# Object Property: obo:BFO_0000063 (precedes)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000063 "precedes"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000063 "x precedes y if and only if the time point at which x ends is before or equivalent to the time point at which y starts. Formally: x precedes y iff ω(x) <= α(y), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point."@en)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000063 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:BFO_0000063 "precedes"@en)
SubObjectPropertyOf(obo:BFO_0000063 obo:RO_0002222)
TransitiveObjectProperty(obo:BFO_0000063)
ObjectPropertyDomain(obo:BFO_0000063 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000063 obo:BFO_0000003)

# Object Property: obo:COB_0000016 (executed by)

AnnotationAssertion(rdfs:label obo:COB_0000016 "executed by"@en)
InverseObjectProperties(obo:COB_0000016 obo:STATO_0000102)

# Object Property: obo:COB_0000078 (concretizes)

AnnotationAssertion(rdfs:label obo:COB_0000078 "concretizes")
InverseObjectProperties(obo:COB_0000078 obo:RO_0000058)

# Object Property: obo:COB_0000081 (intended to realize)

AnnotationAssertion(rdfs:label obo:COB_0000081 "intended to realize")

# Object Property: obo:COB_0000087 (realizes)

AnnotationAssertion(rdfs:label obo:COB_0000087 "realizes")
ObjectPropertyDomain(obo:COB_0000087 obo:BFO_0000015)
ObjectPropertyRange(obo:COB_0000087 obo:BFO_0000017)

# Object Property: obo:IAO_0000136 (is about)

AnnotationAssertion(obo:COB_based_on obo:IAO_0000136 "http://purl.obolibrary.org/obo/IAO_0000136")
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000136 "Is_about is a (currently) primitive relation that relates an information artifact to an entity.")
AnnotationAssertion(rdfs:label obo:IAO_0000136 "is about")
AnnotationAssertion(rdfs:label obo:IAO_0000136 "is_about"@en)
ObjectPropertyDomain(obo:IAO_0000136 obo:IAO_0000030)

# Object Property: obo:OBI_0000293 (has specified input)

AnnotationAssertion(rdfs:label obo:OBI_0000293 "has specified input"@en)
SubObjectPropertyOf(obo:OBI_0000293 obo:RO_0000057)
InverseObjectProperties(obo:OBI_0000293 obo:OBI_0000295)
ObjectPropertyDomain(obo:OBI_0000293 obo:OBI_0000011)

# Object Property: obo:OBI_0000295 (is specified input of)

AnnotationAssertion(rdfs:label obo:OBI_0000295 "is specified input of"@en)
SubObjectPropertyOf(obo:OBI_0000295 obo:RO_0000056)

# Object Property: obo:OBI_0000299 (has specified output)

AnnotationAssertion(rdfs:label obo:OBI_0000299 "has specified output"@en)
SubObjectPropertyOf(obo:OBI_0000299 obo:RO_0000057)
InverseObjectProperties(obo:OBI_0000299 obo:OBI_0000312)
ObjectPropertyDomain(obo:OBI_0000299 obo:OBI_0000011)

# Object Property: obo:OBI_0000312 (is specified output of)

AnnotationAssertion(rdfs:label obo:OBI_0000312 "is specified output of"@en)
SubObjectPropertyOf(obo:OBI_0000312 obo:RO_0000056)

# Object Property: obo:RO_0000052 (characteristic of)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000052 "inheres in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000052 "this fragility is a characteristic of this vase"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000052 "this red color is a characteristic of this apple"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000052 "a relation between a specifically dependent continuant (the characteristic) and any other entity (the bearer), in which the characteristic depends on the bearer for its existence."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000052 "inheres_in"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000052 obo:RO_0001901)
AnnotationAssertion(rdfs:comment obo:RO_0000052 "Note that this relation was previously called \"inheres in\", but was changed to be called \"characteristic of\" because BFO2 uses \"inheres in\" in a more restricted fashion. This relation differs from BFO2:inheres_in in two respects: (1) it does not impose a range constraint, and thus it allows qualities of processes, as well as of information entities, whereas BFO2 restricts inheres_in to only apply to independent continuants (2) it is declared functional, i.e. something can only be a characteristic of one thing.")
AnnotationAssertion(rdfs:label obo:RO_0000052 "characteristic of"@en)
SubObjectPropertyOf(obo:RO_0000052 obo:RO_0002314)
InverseObjectProperties(obo:RO_0000052 obo:RO_0000053)
FunctionalObjectProperty(obo:RO_0000052)

# Object Property: obo:RO_0000053 (has characteristic)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000053 "bearer of"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000053 "this apple is bearer of this red color"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000053 "this vase is bearer of this fragility"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000053 "Inverse of characteristic_of"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000053 "A bearer can have many dependents, and its dependents can exist for different periods of time, but none of its dependents can exist when the bearer does not exist."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "bearer_of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "is bearer of"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000053 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0000053 "has characteristic")
AnnotationAssertion(rdfs:label obo:RO_0000053 "has characteristic"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0000053 "https://github.com/oborel/obo-relations/pull/284")
InverseFunctionalObjectProperty(obo:RO_0000053)
ObjectPropertyRange(obo:RO_0000053 obo:BFO_0000020)

# Object Property: obo:RO_0000056 (participates in)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000056 "participates in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this blood clot participates in this blood coagulation"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this input material (or this output material) participates in this process"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this investigator participates in this investigation"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000056 "a relation between a continuant and a process, in which the continuant is somehow involved in the process"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000056 "participates_in"@en)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000056 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0000056 "participates in"@en)
InverseObjectProperties(obo:RO_0000056 obo:RO_0000057)
ObjectPropertyDomain(obo:RO_0000056 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0000056 obo:BFO_0000003)

# Object Property: obo:RO_0000057 (has participant)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000057 "has participant"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this blood coagulation has participant this blood clot"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this investigation has participant this investigator"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this process has participant this input material (or this output material)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000057 "a relation between a process and a continuant, in which the continuant is somehow involved in the process"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000057 "Has_participant is a primitive instance-level relation between a process, a continuant, and a time at which the continuant participates in some way in the process. The relation obtains, for example, when this particular process of oxygen exchange across this particular alveolar membrane has_participant this particular sample of hemoglobin at this particular time."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000057 "has_participant"@en)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000057 obo:ro.owl)
AnnotationAssertion(dc:source obo:RO_0000057 "http://www.obofoundry.org/ro/#OBO_REL:has_participant")
AnnotationAssertion(rdfs:label obo:RO_0000057 "has participant")
AnnotationAssertion(rdfs:label obo:RO_0000057 "has participant"@en)
ObjectPropertyDomain(obo:RO_0000057 obo:BFO_0000003)
ObjectPropertyDomain(obo:RO_0000057 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0000057 obo:BFO_0000002)

# Object Property: obo:RO_0000058 (is concretized as)

AnnotationAssertion(rdfs:label obo:RO_0000058 "is concretized as"@en)

# Object Property: obo:RO_0000079 (function of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000079 "this catalysis function is a function of this enzyme"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000079 "a relation between a function and an independent continuant (the bearer), in which the function specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000079 "A function inheres in its bearer at all times for which the function exists, however the function need not be realized at all the times that the function exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000079 "function_of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000079 "is function of"@en)
AnnotationAssertion(rdfs:comment obo:RO_0000079 "This relation is modeled after the BFO relation of the same name which was in BFO2, but is used in a more restricted sense - specifically, we model this relation as functional (inherited from characteristic-of). Note that this relation is now removed from BFO2020.")
AnnotationAssertion(rdfs:label obo:RO_0000079 "function of"@en)
SubObjectPropertyOf(obo:RO_0000079 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000079 obo:RO_0000085)
ObjectPropertyDomain(obo:RO_0000079 obo:BFO_0000034)

# Object Property: obo:RO_0000080 (quality of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000080 "this red color is a quality of this apple"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000080 "a relation between a quality and an independent continuant (the bearer), in which the quality specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000080 "A quality inheres in its bearer at all times for which the quality exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000080 "is quality of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000080 "quality_of"@en)
AnnotationAssertion(rdfs:comment obo:RO_0000080 "This relation is modeled after the BFO relation of the same name which was in BFO2, but is used in a more restricted sense - specifically, we model this relation as functional (inherited from characteristic-of). Note that this relation is now removed from BFO2020.")
AnnotationAssertion(rdfs:label obo:RO_0000080 "quality of"@en)
SubObjectPropertyOf(obo:RO_0000080 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000080 obo:RO_0000086)

# Object Property: obo:RO_0000081 (role of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000081 "this investigator role is a role of this person"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000081 "a relation between a role and an independent continuant (the bearer), in which the role specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000081 "A role inheres in its bearer at all times for which the role exists, however the role need not be realized at all the times that the role exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000081 "is role of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000081 "role_of"@en)
AnnotationAssertion(rdfs:comment obo:RO_0000081 "This relation is modeled after the BFO relation of the same name which was in BFO2, but is used in a more restricted sense - specifically, we model this relation as functional (inherited from characteristic-of). Note that this relation is now removed from BFO2020.")
AnnotationAssertion(rdfs:label obo:RO_0000081 "role of"@en)
SubObjectPropertyOf(obo:RO_0000081 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000081 obo:RO_0000087)

# Object Property: obo:RO_0000085 (has function)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000085 "this enzyme has function this catalysis function (more colloquially: this enzyme has this catalysis function)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000085 "a relation between an independent continuant (the bearer) and a function, in which the function specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000085 "A bearer can have many functions, and its functions can exist for different periods of time, but none of its functions can exist when the bearer does not exist. A function need not be realized at all the times that the function exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000085 "has_function"@en)
AnnotationAssertion(rdfs:label obo:RO_0000085 "has function"@en)
SubObjectPropertyOf(obo:RO_0000085 obo:RO_0000053)
ObjectPropertyDomain(obo:RO_0000085 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000085 obo:BFO_0000034)

# Object Property: obo:RO_0000086 (has quality)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000086 "this apple has quality this red color"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000086 "a relation between an independent continuant (the bearer) and a quality, in which the quality specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000086 "A bearer can have many qualities, and its qualities can exist for different periods of time, but none of its qualities can exist when the bearer does not exist."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000086 "has_quality"@en)
AnnotationAssertion(rdfs:label obo:RO_0000086 "has quality"@en)
SubObjectPropertyOf(obo:RO_0000086 obo:RO_0000053)
ObjectPropertyRange(obo:RO_0000086 obo:BFO_0000019)

# Object Property: obo:RO_0000087 (has role)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000087 "this person has role this investigator role (more colloquially: this person has this role of investigator)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000087 "a relation between an independent continuant (the bearer) and a role, in which the role specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000087 "A bearer can have many roles, and its roles can exist for different periods of time, but none of its roles can exist when the bearer does not exist. A role need not be realized at all the times that the role exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000087 "has_role"@en)
AnnotationAssertion(rdfs:label obo:RO_0000087 "has role"@en)
SubObjectPropertyOf(obo:RO_0000087 obo:RO_0000053)
ObjectPropertyDomain(obo:RO_0000087 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000087 obo:BFO_0000023)

# Object Property: obo:RO_0000091 (has disposition)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0000091 "a relation between an independent continuant (the bearer) and a disposition, in which the disposition specifically depends on the bearer for its existence"@en)
AnnotationAssertion(rdfs:label obo:RO_0000091 "has disposition"@en)
SubObjectPropertyOf(obo:RO_0000091 obo:RO_0000053)
InverseObjectProperties(obo:RO_0000091 obo:RO_0000092)
ObjectPropertyDomain(obo:RO_0000091 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000091 obo:BFO_0000016)

# Object Property: obo:RO_0000092 (disposition of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0000092 "inverse of has disposition")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0000092 obo:RO_0002259)
AnnotationAssertion(rdfs:comment obo:RO_0000092 "This relation is modeled after the BFO relation of the same name which was in BFO2, but is used in a more restricted sense - specifically, we model this relation as functional (inherited from characteristic-of). Note that this relation is now removed from BFO2020.")
AnnotationAssertion(rdfs:label obo:RO_0000092 "disposition of"@en)
SubObjectPropertyOf(obo:RO_0000092 obo:RO_0000052)

# Object Property: obo:RO_0002013 (has regulatory component activity)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002013 "A 'has regulatory component activity' B if A and B are GO molecular functions (GO_0003674), A has_component B and A is regulated by B.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002013 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002013 "2017-05-24T09:30:46Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002013 "has regulatory component activity")
SubObjectPropertyOf(obo:RO_0002013 obo:RO_0002017)
SubObjectPropertyOf(obo:RO_0002013 obo:RO_0002334)

# Object Property: obo:RO_0002014 (has negative regulatory component activity)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002014 "A relationship that holds between a GO molecular function and a component of that molecular function that negatively regulates the activity of the whole.  More formally, A 'has regulatory component activity' B iff :A and B are GO molecular functions (GO_0003674), A has_component B and A is negatively regulated by B.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002014 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002014 "2017-05-24T09:31:01Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment obo:RO_0002014 "By convention GO molecular functions are classified by their effector function.  Internal regulatory functions are treated as components.  For example, NMDA glutmate receptor activity is a cation channel activity with positive regulatory component 'glutamate binding' and negative regulatory components including 'zinc binding' and 'magnesium binding'.")
AnnotationAssertion(rdfs:label obo:RO_0002014 "has negative regulatory component activity")
SubObjectPropertyOf(obo:RO_0002014 obo:RO_0002013)
SubObjectPropertyOf(obo:RO_0002014 obo:RO_0002335)

# Object Property: obo:RO_0002015 (has positive regulatory component activity)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002015 "A relationship that holds between a GO molecular function and a component of that molecular function that positively regulates the activity of the whole.  More formally, A 'has regulatory component activity' B iff :A and B are GO molecular functions (GO_0003674), A has_component B and A is positively regulated by B.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002015 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002015 "2017-05-24T09:31:17Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment obo:RO_0002015 "By convention GO molecular functions are classified by their effector function and internal regulatory functions are treated as components.  So, for example calmodulin has a protein binding activity that has positive regulatory component activity calcium binding activity. Receptor tyrosine kinase activity is a tyrosine kinase activity that has positive regulatory component 'ligand binding'.")
AnnotationAssertion(rdfs:label obo:RO_0002015 "has positive regulatory component activity")
SubObjectPropertyOf(obo:RO_0002015 obo:RO_0002013)
SubObjectPropertyOf(obo:RO_0002015 obo:RO_0002336)

# Object Property: obo:RO_0002017 (has component activity)

AnnotationAssertion(oboInOwl:created_by obo:RO_0002017 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002017 "2017-05-24T09:44:33Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment obo:RO_0002017 "A 'has component activity' B if A is A and B are molecular functions (GO_0003674) and A has_component B.")
AnnotationAssertion(rdfs:label obo:RO_0002017 "has component activity")
SubObjectPropertyOf(obo:RO_0002017 obo:RO_0002018)

# Object Property: obo:RO_0002018 (has component process)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002018 "w 'has process component' p if p and w are processes,  w 'has part' p and w is such that it can be directly disassembled into into n parts p, p2, p3, ..., pn, where these parts are of similar type.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002018 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002018 "2017-05-24T09:49:21Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002018 "has component process")
SubObjectPropertyOf(obo:RO_0002018 obo:RO_0002180)
ObjectPropertyDomain(obo:RO_0002018 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002018 obo:BFO_0000015)

# Object Property: obo:RO_0002022 (directly regulated by)

AnnotationAssertion(oboInOwl:created_by obo:RO_0002022 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002022 "2017-09-17T13:52:24Z"^^xsd:dateTime)
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") rdfs:comment obo:RO_0002022 "Process(P2) is directly regulated by process(P1) iff: P1 regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding  regulates the kinase activity (P2) of protein B then P1 directly regulates P2.")
AnnotationAssertion(rdfs:label obo:RO_0002022 "directly regulated by")
SubObjectPropertyOf(obo:RO_0002022 obo:RO_0002334)
InverseObjectProperties(obo:RO_0002022 obo:RO_0002578)

# Object Property: obo:RO_0002023 (directly negatively regulated by)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") obo:IAO_0000115 obo:RO_0002023 "Process(P2) is directly negatively regulated by process(P1) iff: P1 negatively regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding  negatively regulates the kinase activity (P2) of protein B then P2 directly negatively regulated by P1.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002023 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002023 "2017-09-17T13:52:38Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002023 "directly negatively regulated by")
SubObjectPropertyOf(obo:RO_0002023 obo:RO_0002022)
InverseObjectProperties(obo:RO_0002023 obo:RO_0002630)

# Object Property: obo:RO_0002024 (directly positively regulated by)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") obo:IAO_0000115 obo:RO_0002024 "Process(P2) is directly postively regulated by process(P1) iff: P1 positively regulates P2 via direct physical interaction between an agent executing P1 (or some part of P1) and an agent executing P2 (or some part of P2).  For example, if protein A has protein binding activity(P1) that targets protein B and this binding positively regulates the kinase activity (P2) of protein B then P2 is directly postively regulated by P1.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002024 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002024 "2017-09-17T13:52:47Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002024 "directly positively regulated by")
SubObjectPropertyOf(obo:RO_0002024 obo:RO_0002022)
InverseObjectProperties(obo:RO_0002024 obo:RO_0002629)

# Object Property: obo:RO_0002025 (has effector activity)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:dos") obo:IAO_0000115 obo:RO_0002025 "A 'has effector activity' B if A and B are GO molecular functions (GO_0003674),  A 'has component activity' B and B is the effector (output function) of B.  Each compound function has only one effector activity.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002025 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002025 "2017-09-22T14:14:36Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment obo:RO_0002025 "This relation is designed for constructing compound molecular functions, typically in combination with one or more regulatory component activity relations.")
AnnotationAssertion(rdfs:label obo:RO_0002025 "has effector activity")
SubObjectPropertyOf(obo:RO_0002025 obo:RO_0002017)
FunctionalObjectProperty(obo:RO_0002025)

# Object Property: obo:RO_0002086 (ends after)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002086 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002086 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002086 "X ends_after Y iff: end(Y) before_or_simultaneous_with end(X)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002086 "ends after"@en)
SubObjectPropertyOf(obo:RO_0002086 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002086)

# Object Property: obo:RO_0002087 (immediately preceded by)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002087 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002087 "starts_at_end_of")
AnnotationAssertion(rdfs:comment obo:RO_0002087 "X immediately_preceded_by Y iff: end(X) simultaneous_with start(Y)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002087 "immediately preceded by"@en)
SubObjectPropertyOf(obo:RO_0002087 obo:BFO_0000062)
InverseObjectProperties(obo:RO_0002087 obo:RO_0002090)

# Object Property: obo:RO_0002090 (immediately precedes)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002090 <https://orcid.org/0000-0002-7073-9172>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002090 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002090 "ends_at_start_of")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002090 "meets")
AnnotationAssertion(obo:RO_0002575 obo:RO_0002090 obo:BFO_0000063)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002090 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002090 "X immediately_precedes_Y iff: end(X) simultaneous_with start(Y)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002090 "immediately precedes"@en)
SubObjectPropertyOf(obo:RO_0002090 obo:BFO_0000063)

# Object Property: obo:RO_0002131 (overlaps)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002131 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002131 "x overlaps y if and only if there exists some z such that x has part z and z part of y")
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002131 "http://purl.obolibrary.org/obo/BFO_0000051 some (http://purl.obolibrary.org/obo/BFO_0000050 some ?Y)")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002131 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002131 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002131 obo:valid_for_gocam)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002131 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002131 "overlaps"@en)
SubObjectPropertyOf(obo:RO_0002131 obo:RO_0002323)
SymmetricObjectProperty(obo:RO_0002131)

# Object Property: obo:RO_0002180 (has component)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002180 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002180 "w 'has component' p if w 'has part' p and w is such that it can be directly disassembled into into n parts p, p2, p3, ..., pn, where these parts are of similar type.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002180 "The definition of 'has component' is still under discussion. The challenge is in providing a definition that does not imply transitivity.")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002180 "For use in recording has_part with a cardinality constraint, because OWL does not permit cardinality constraints to be used in combination with transitive object properties. In situations where you would want to say something like 'has part exactly 5 digit, you would instead use has_component exactly 5 digit."@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002180 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002180 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002180 "has component"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002180 <http://ontologydesignpatterns.org/wiki/Submissions:Componency>)
SubObjectPropertyOf(obo:RO_0002180 obo:BFO_0000051)

# Object Property: obo:RO_0002202 (develops from)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002202 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002202 "x develops from y if and only if either (a) x directly develops from y or (b) there exists some z such that x directly develops from z and z develops from y")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002202 <https://orcid.org/0000-0001-9114-8737>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002202 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002202 <https://orcid.org/0000-0002-7073-9172>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002202 <https://orcid.org/0000-0003-1980-3228>)
AnnotationAssertion(rdfs:comment obo:RO_0002202 "This is the transitive form of the develops from relation")
AnnotationAssertion(rdfs:label obo:RO_0002202 "develops from"@en)
SubObjectPropertyOf(obo:RO_0002202 obo:RO_0002258)
InverseObjectProperties(obo:RO_0002202 obo:RO_0002203)
TransitiveObjectProperty(obo:RO_0002202)
ObjectPropertyDomain(obo:RO_0002202 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0002202 obo:BFO_0000004)

# Object Property: obo:RO_0002203 (develops into)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002203 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002203 "inverse of develops from")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002203 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002203 <https://orcid.org/0000-0002-7073-9172>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002203 <https://orcid.org/0000-0003-1980-3228>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002203 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002203 "develops into"@en)
SubObjectPropertyOf(obo:RO_0002203 obo:RO_0002286)
SubObjectPropertyOf(obo:RO_0002203 obo:RO_0002387)
SubObjectPropertyOf(obo:RO_0002203 obo:RO_0002388)
TransitiveObjectProperty(obo:RO_0002203)

# Object Property: obo:RO_0002211 (regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002211 "p regulates q iff p is causally upstream of q, the execution of p is not constant and varies according to specific conditions, and p influences the rate or magnitude of execution of q due to an effect either on some enabler of q or some enabler of a part of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002211 <https://orcid.org/0000-0001-7476-6306>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002211 <https://orcid.org/0000-0002-3837-8864>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002211 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002211 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002211 "GO")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002211 "Regulation precludes parthood; the regulatory process may not be within the regulated process.")
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002211 "regulates (processual)")
AnnotationAssertion(obo:IAO_0000600 obo:RO_0002211 "false"^^xsd:boolean)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002211 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002211 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002211 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002211 "regulates"@en)
SubObjectPropertyOf(obo:RO_0002211 obo:RO_0002411)
InverseObjectProperties(obo:RO_0002211 obo:RO_0002334)
TransitiveObjectProperty(obo:RO_0002211)
ObjectPropertyDomain(obo:RO_0002211 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002211 obo:BFO_0000015)

# Object Property: obo:RO_0002212 (negatively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002212 "p negatively regulates q iff p regulates q, and p decreases the rate or magnitude of execution of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002212 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002212 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002212 "negatively regulates (process to process)")
AnnotationAssertion(obo:RO_0004050 obo:RO_0002212 obo:RO_0002211)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002212 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002212 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002212 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002212 "negatively regulates"@en)
SubObjectPropertyOf(obo:RO_0002212 obo:RO_0002211)
SubObjectPropertyOf(obo:RO_0002212 obo:RO_0002305)
InverseObjectProperties(obo:RO_0002212 obo:RO_0002335)

# Object Property: obo:RO_0002213 (positively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002213 "p positively regulates q iff p regulates q, and p increases the rate or magnitude of execution of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002213 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002213 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002213 "positively regulates (process to process)")
AnnotationAssertion(obo:RO_0004049 obo:RO_0002213 obo:RO_0002211)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002213 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002213 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002213 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002213 "positively regulates"@en)
SubObjectPropertyOf(obo:RO_0002213 obo:RO_0002211)
SubObjectPropertyOf(obo:RO_0002213 obo:RO_0002304)
InverseObjectProperties(obo:RO_0002213 obo:RO_0002336)
TransitiveObjectProperty(obo:RO_0002213)

# Object Property: obo:RO_0002215 (capable of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002215 "mechanosensory neuron capable of detection of mechanical stimulus involved in sensory perception (GO:0050974)")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002215 "osteoclast SubClassOf 'capable of' some 'bone resorption'")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002215 "A relation between a material entity (such as a cell) and a process, in which the material entity has the ability to carry out the process")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002215 "A relation between a material entity (such as a cell) and a process, in which the material entity has the ability to carry out the process. ")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002215 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002215 "has function realized in")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002215 <http://www.ncbi.nlm.nih.gov/pubmed/20123131>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002215 <http://www.ncbi.nlm.nih.gov/pubmed/21208450>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002215 "For compatibility with BFO, this relation has a shortcut definition in which the expression \"capable of some P\" expands to \"bearer_of (some realized_by only P)\".")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002215 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002215 "capable of")
AnnotationAssertion(rdfs:label obo:RO_0002215 "capable of"@en)
SubObjectPropertyOf(obo:RO_0002215 obo:RO_0002216)
ObjectPropertyDomain(obo:RO_0002215 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0002215 obo:BFO_0000015)

# Object Property: obo:RO_0002216 (capable of part of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002216 "c stands in this relationship to p if and only if there exists some p' such that c is capable_of p', and p' is part_of p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002216 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002216 "has function in")
AnnotationAssertion(rdfs:label obo:RO_0002216 "capable of part of"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002216 <http://purl.obolibrary.org/obo/ro/docs/reflexivity/>)
SubObjectPropertyOf(obo:RO_0002216 obo:RO_0002328)
SubObjectPropertyOf(obo:RO_0002216 obo:RO_0002500)

# Object Property: obo:RO_0002222 (temporally related to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002222 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002222 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002222 <https://en.wikipedia.org/wiki/Allen%27s_interval_algebra>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002222 "Do not use this relation directly. It is ended as a grouping for relations between occurrents involving the relative timing of their starts and ends.")
AnnotationAssertion(terms:source obo:RO_0002222 "https://docs.google.com/document/d/1kBv1ep_9g3sTR-SD3jqzFqhuwo9TPNF-l-9fUDbO6rM/edit?pli=1"^^xsd:anyURI)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002222 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002222 "A relation that holds between two occurrents. This is a grouping relation that collects together all the Allen relations.")
AnnotationAssertion(rdfs:label obo:RO_0002222 "temporally related to"@en)
ObjectPropertyDomain(obo:RO_0002222 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002222 obo:BFO_0000003)

# Object Property: obo:RO_0002233 (has input)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002233 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002233 "p has direct input c iff c is a participant in p, c is present at the start of p, and the state of c is modified during p.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002233 "p has input c iff: p is a process, c is a material entity, c is a participant in p, c is present at the start of p, and the state of c is modified during p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002233 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002233 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002233 "consumes")
AnnotationAssertion(obo:IAO_0000412 obo:RO_0002233 obo:ro.owl)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 obo:valid_for_gocam)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002233 "has input"@en)
SubObjectPropertyOf(obo:RO_0002233 obo:RO_0000057)
InverseObjectProperties(obo:RO_0002233 obo:RO_0002352)
ObjectPropertyDomain(obo:RO_0002233 obo:BFO_0000015)

# Object Property: obo:RO_0002234 (has output)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002234 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002234 "p has output c iff c is a participant in p, c is present at the end of p, and c is not present at the beginning of p.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002234 "p has output c iff c is a participant in p, c is present at the end of p, and c is not present in the same state at the beginning of p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002234 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002234 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002234 "produces")
AnnotationAssertion(obo:IAO_0000412 obo:RO_0002234 obo:ro.owl)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002234 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002234 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002234 obo:valid_for_gocam)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002234 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002234 "has output"@en)
SubObjectPropertyOf(obo:RO_0002234 obo:RO_0000057)
InverseObjectProperties(obo:RO_0002234 obo:RO_0002353)

# Object Property: obo:RO_0002254 (has developmental contribution from)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002254 "Mammalian thymus has developmental contribution from some pharyngeal pouch 3; Mammalian thymus has developmental contribution from some pharyngeal pouch 4 [Kardong]")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002254 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002254 "x has developmental contribution from y iff x has some part z such that z develops from y"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002254 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002254 "has developmental contribution from"@en)
SubObjectPropertyOf(obo:RO_0002254 obo:RO_0002258)
InverseObjectProperties(obo:RO_0002254 obo:RO_0002255)
ObjectPropertyDomain(obo:RO_0002254 obo:CARO_0000000)
ObjectPropertyRange(obo:RO_0002254 obo:CARO_0000000)

# Object Property: obo:RO_0002255 (developmentally contributes to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002255 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002255 "inverse of has developmental contribution from")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002255 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002255 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002255 "developmentally contributes to"@en)
SubObjectPropertyOf(obo:RO_0002255 obo:RO_0002286)
SubObjectPropertyOf(obo:RO_0002255 obo:RO_0002385)

# Object Property: obo:RO_0002258 (developmentally preceded by)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002258 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002258 "Candidate definition: x developmentally related to y if and only if there exists some developmental process (GO:0032502) p such that x and y both participates in p, and x is the output of p and y is the input of p")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002258 "false"^^xsd:boolean)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002258 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002258 "In general you should not use this relation to make assertions - use one of the more specific relations below this one")
AnnotationAssertion(rdfs:comment obo:RO_0002258 "This relation groups together various other developmental relations. It is fairly generic, encompassing induction, developmental contribution and direct and transitive develops from")
AnnotationAssertion(rdfs:label obo:RO_0002258 "developmentally preceded by"@en)
SubObjectPropertyOf(obo:RO_0002258 obo:RO_0002324)
InverseObjectProperties(obo:RO_0002258 obo:RO_0002286)
ObjectPropertyDomain(obo:RO_0002258 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0002258 obo:BFO_0000002)

# Object Property: obo:RO_0002263 (acts upstream of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002263 "A faulty traffic light (material entity) whose malfunctioning (a process) is causally upstream of a traffic collision (a process): the traffic light acts upstream of the collision.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002263 "c acts upstream of p if and only if c enables some f that is involved in p' and p' occurs chronologically before p, is not part of p, and affects the execution of p. c is a material entity and f, p, p' are processes.")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002263 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:label obo:RO_0002263 "acts upstream of")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002263 <http://wiki.geneontology.org/index.php/Acts_upstream_of>)
SubObjectPropertyOf(obo:RO_0002263 obo:RO_0002264)

# Object Property: obo:RO_0002264 (acts upstream of or within)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002264 "A gene product that has some activity, where that activity may be a part of a pathway or upstream of the pathway.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002264 "c acts upstream of or within p if c is enables f, and f is causally upstream of or within p. c is a material entity and p is an process.")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002264 "affects")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002264 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:label obo:RO_0002264 "acts upstream of or within")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002264 <http://wiki.geneontology.org/index.php/Acts_upstream_of_or_within>)
SubObjectPropertyOf(obo:RO_0002264 obo:RO_0002500)

# Object Property: obo:RO_0002286 (developmentally succeeded by)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002286 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002286 "Inverse of developmentally preceded by")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002286 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002286 "developmentally succeeded by"@en)
SubObjectPropertyOf(obo:RO_0002286 obo:RO_0002384)

# Object Property: obo:RO_0002304 (causally upstream of, positive effect)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002304 "p is causally upstream of, positive effect q iff p is casually upstream of q, and the execution of p is required for the execution of q.")
AnnotationAssertion(obo:RO_0004049 obo:RO_0002304 obo:RO_0002411)
AnnotationAssertion(terms:creator obo:RO_0002304 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002304 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002304 obo:valid_for_gocam)
AnnotationAssertion(rdfs:comment obo:RO_0002304 "holds between x and y if and only if x is causally upstream of y and the progression of x increases the frequency, rate or extent of y")
AnnotationAssertion(rdfs:label obo:RO_0002304 "causally upstream of, positive effect")
SubObjectPropertyOf(obo:RO_0002304 obo:RO_0002411)
SubObjectPropertyOf(obo:RO_0002304 obo:RO_0004047)

# Object Property: obo:RO_0002305 (causally upstream of, negative effect)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002305 "p is causally upstream of, negative effect q iff p is casually upstream of q, and the execution of p decreases the execution of q.")
AnnotationAssertion(obo:RO_0004050 obo:RO_0002305 obo:RO_0002411)
AnnotationAssertion(terms:creator obo:RO_0002305 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002305 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002305 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002305 "causally upstream of, negative effect")
SubObjectPropertyOf(obo:RO_0002305 obo:RO_0002411)
SubObjectPropertyOf(obo:RO_0002305 obo:RO_0004046)

# Object Property: obo:RO_0002314 (characteristic of part of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002314 "q characteristic of part of w if and only if there exists some p such that q inheres in p and p part of w.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002314 "Because part_of is transitive, inheres in is a sub-relation of characteristic of part of")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002314 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002314 "inheres in part of")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002314 <http://www.ncbi.nlm.nih.gov/pubmed/20064205>)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002314 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002314 "characteristic of part of"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002314 <http://purl.obolibrary.org/obo/ro/docs/reflexivity/>)
SubObjectPropertyOf(obo:RO_0002314 obo:RO_0002502)

# Object Property: obo:RO_0002323 (mereotopologically related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002323 "A mereological relationship or a topological relationship")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002323 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002323 "Do not use this relation directly. It is ended as a grouping for a diverse set of relations, all involving parthood or connectivity relationships")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002323 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002323 "mereotopologically related to"@en)

# Object Property: obo:RO_0002324 (developmentally related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002324 "A relationship that holds between entities participating in some developmental process (GO:0032502)")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002324 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002324 "Do not use this relation directly. It is ended as a grouping for a diverse set of relations, all involving organismal development")
AnnotationAssertion(rdfs:label obo:RO_0002324 "developmentally related to"@en)

# Object Property: obo:RO_0002327 (enables)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002327 "a particular instances of akt-2 enables some instance of protein kinase activity")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002327 "c enables p iff c is capable of p and c acts to execute p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002327 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "catalyzes")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "executes")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "has")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "is catalyzing")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002327 "is executing")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002327 "This relation differs from the parent relation 'capable of' in that the parent is weaker and only expresses a capability that may not be actually realized, whereas this relation is always realized.")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002327 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:label obo:RO_0002327 "enables"@en)
SubObjectPropertyOf(obo:RO_0002327 obo:RO_0002215)
InverseObjectProperties(obo:RO_0002327 obo:RO_0002333)

# Object Property: obo:RO_0002328 (functionally related to)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002328 "A grouping relationship for any relationship directly involving a function, or that holds because of a function of one of the related entities.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002328 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002328 "This is a grouping relation that collects relations used for the purpose of connecting structure and function")
AnnotationAssertion(rdfs:label obo:RO_0002328 "functionally related to"@en)

# Object Property: obo:RO_0002329 (part of structure that is capable of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002329 "this relation holds between c and p when c is part of some c', and c' is capable of p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002329 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002329 "false"^^xsd:boolean)
AnnotationAssertion(rdfs:label obo:RO_0002329 "part of structure that is capable of"@en)
SubObjectPropertyOf(obo:RO_0002329 obo:RO_0002328)

# Object Property: obo:RO_0002331 (involved in)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002331 "c involved_in p if and only if c enables some process p', and p' is part of p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002331 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002331 "actively involved in")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002331 "enables part of")
AnnotationAssertion(rdfs:label obo:RO_0002331 "involved in"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002331 <http://wiki.geneontology.org/index.php/Involved_in>)
SubObjectPropertyOf(obo:RO_0002331 obo:RO_0000056)
SubObjectPropertyOf(obo:RO_0002331 obo:RO_0002431)

# Object Property: obo:RO_0002333 (enabled by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002333 "inverse of enables")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002333 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002333 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002333 "enabled by"@en)
SubObjectPropertyOf(obo:RO_0002333 obo:RO_0000057)
SubObjectPropertyOf(obo:RO_0002333 obo:RO_0002328)

# Object Property: obo:RO_0002334 (regulated by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002334 "inverse of regulates")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002334 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002334 "regulated by (processual)")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002334 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002334 "regulated by"@en)
SubObjectPropertyOf(obo:RO_0002334 obo:RO_0002427)
TransitiveObjectProperty(obo:RO_0002334)
ObjectPropertyDomain(obo:RO_0002334 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002334 obo:BFO_0000015)

# Object Property: obo:RO_0002335 (negatively regulated by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002335 "inverse of negatively regulates")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002335 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002335 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002335 "negatively regulated by"@en)
SubObjectPropertyOf(obo:RO_0002335 obo:RO_0002334)

# Object Property: obo:RO_0002336 (positively regulated by)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002336 "inverse of positively regulates")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002336 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002336 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002336 "positively regulated by"@en)
SubObjectPropertyOf(obo:RO_0002336 obo:RO_0002334)

# Object Property: obo:RO_0002350 (member of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002350 "An organism that is a member of a population of organisms")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002350 "Is member of is a mereological relation between a item and a collection.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002350 "is member of is a mereological relation between a item and a collection.")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002350 "is member of")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002350 "member part of")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002350 "SIO")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002350 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002350 "member of")
AnnotationAssertion(rdfs:label obo:RO_0002350 "member of"@en)
SubObjectPropertyOf(obo:RO_0002350 obo:BFO_0000050)
InverseObjectProperties(obo:RO_0002350 obo:RO_0002351)

# Object Property: obo:RO_0002351 (has member)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002351 "Has member is a mereological relation between a collection and an item.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002351 "has member is a mereological relation between a collection and an item.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002351 "SIO")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002351 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002351 "has member")
AnnotationAssertion(rdfs:label obo:RO_0002351 "has member"@en)
SubObjectPropertyOf(obo:RO_0002351 obo:BFO_0000051)
IrreflexiveObjectProperty(obo:RO_0002351)

# Object Property: obo:RO_0002352 (input of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002352 "inverse of has input")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002352 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002352 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000412 obo:RO_0002352 obo:ro.owl)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002352 obo:RO_0002259)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002352 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002352 "input of"@en)
SubObjectPropertyOf(obo:RO_0002352 obo:RO_0000056)
SubObjectPropertyOf(obo:RO_0002352 obo:RO_0002328)

# Object Property: obo:RO_0002353 (output of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002353 "inverse of has output")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002353 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002353 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000412 obo:RO_0002353 obo:ro.owl)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002353 obo:RO_0002259)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002353 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002353 "output of"@en)
SubObjectPropertyOf(obo:RO_0002353 obo:RO_0000056)
SubObjectPropertyOf(obo:RO_0002353 obo:RO_0002328)

# Object Property: obo:RO_0002384 (has developmental potential involving)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002384 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002384 "x has developmental potential involving y iff x is capable of a developmental process with output y. y may be the successor of x, or may be a different structure in the vicinity (as for example in the case of developmental induction)."@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002384 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002384 "has developmental potential involving"@en)
SubObjectPropertyOf(obo:RO_0002384 obo:RO_0002324)
ObjectPropertyDomain(obo:RO_0002384 obo:CARO_0000000)
ObjectPropertyRange(obo:RO_0002384 obo:CARO_0000000)

# Object Property: obo:RO_0002385 (has potential to developmentally contribute to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002385 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002385 "x has potential to developmentrally contribute to y iff x developmentally contributes to y or x is capable of developmentally contributing to y"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002385 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002385 "has potential to developmentally contribute to"@en)
SubObjectPropertyOf(obo:RO_0002385 obo:RO_0002384)

# Object Property: obo:RO_0002387 (has potential to develop into)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002387 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002387 "x has the potential to develop into y iff x develops into y or if x is capable of developing into y"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002387 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002387 "has potential to develop into"@en)
SubObjectPropertyOf(obo:RO_0002387 obo:RO_0002384)

# Object Property: obo:RO_0002388 (has potential to directly develop into)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002388 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002388 "x has potential to directly develop into y iff x directly develops into y or x is capable of directly developing into y"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002388 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002388 "has potential to directly develop into"@en)
SubObjectPropertyOf(obo:RO_0002388 obo:RO_0002387)

# Object Property: obo:RO_0002404 (causally downstream of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002404 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002404 "inverse of upstream of")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002404 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002404 "causally downstream of"@en)
SubObjectPropertyOf(obo:RO_0002404 obo:BFO_0000062)
SubObjectPropertyOf(obo:RO_0002404 obo:RO_0002427)
InverseObjectProperties(obo:RO_0002404 obo:RO_0002411)

# Object Property: obo:RO_0002405 (immediately causally downstream of)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002405 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002405 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002405 "immediately causally downstream of"@en)
SubObjectPropertyOf(obo:RO_0002405 obo:RO_0002087)
SubObjectPropertyOf(obo:RO_0002405 obo:RO_0002404)
InverseObjectProperties(obo:RO_0002405 obo:RO_0002412)

# Object Property: obo:RO_0002407 (indirectly positively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002407 "p indirectly positively regulates q iff p is indirectly causally upstream of q and p positively regulates q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002407 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002407 "indirectly activates")
AnnotationAssertion(obo:RO_0002579 obo:RO_0002407 obo:RO_0002213)
AnnotationAssertion(rdfs:label obo:RO_0002407 "indirectly positively regulates"@en)
SubObjectPropertyOf(obo:RO_0002407 obo:RO_0002213)
SubObjectPropertyOf(obo:RO_0002407 obo:RO_0012012)
TransitiveObjectProperty(obo:RO_0002407)

# Object Property: obo:RO_0002409 (indirectly negatively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002409 "p indirectly negatively regulates q iff p is indirectly causally upstream of q and p negatively regulates q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002409 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002409 "indirectly inhibits")
AnnotationAssertion(obo:RO_0002579 obo:RO_0002409 obo:RO_0002212)
AnnotationAssertion(rdfs:label obo:RO_0002409 "indirectly negatively regulates"@en)
SubObjectPropertyOf(obo:RO_0002409 obo:RO_0002212)
SubObjectPropertyOf(obo:RO_0002409 obo:RO_0012012)
TransitiveObjectProperty(obo:RO_0002409)

# Object Property: obo:RO_0002410 (causally related to)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "https://en.wikipedia.org/wiki/Causality") obo:IAO_0000115 obo:RO_0002410 "relation that links two events, processes, states, or objects such that one event, process, state, or object (a cause) contributes to the production of another event, process, state, or object (an effect) where the cause is partly or wholly responsible for the effect, and the effect is partly or wholly dependent on the cause.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002410 "This branch of the ontology deals with causal relations between entities. It is divided into two branches: causal relations between occurrents/processes, and causal relations between material entities. We take an 'activity flow-centric approach', with the former as primary, and define causal relations between material entities in terms of causal relations between occurrents.

To define causal relations in an activity-flow type network, we make use of 3 primitives:

 * Temporal: how do the intervals of the two occurrents relate? 
 * Is the causal relation regulatory?
 * Is the influence positive or negative?

The first of these can be formalized in terms of the Allen Interval Algebra. Informally, the 3 bins we care about are 'direct', 'indirect' or overlapping. Note that all causal relations should be classified under a RO temporal relation (see the branch under 'temporally related to'). Note that all causal relations are temporal, but not all temporal relations are causal. Two occurrents can be related in time without being causally connected. We take causal influence to be primitive, elucidated as being such that has the upstream changed, some qualities of the donwstream would necessarily be modified.

For the second, we consider a relationship to be regulatory if the system in which the activities occur is capable of altering the relationship to achieve some objective. This could include changing the rate of production of a molecule.

For the third, we consider the effect of the upstream process on the output(s) of the downstream process. If the level of output is increased, or the rate of production of the output is increased, then the direction is increased. Direction can be positive, negative or neutral or capable of either direction. Two positives in succession yield a positive, two negatives in succession yield a positive, otherwise the default assumption is that the net effect is canceled and the influence is neutral.

Each of these 3 primitives can be composed to yield a cross-product of different relation types.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002410 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002410 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(rdfs:label obo:RO_0002410 "causally related to"@en)

# Object Property: obo:RO_0002411 (causally upstream of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002411 "p is causally upstream of q iff p is causally related to q, the end of p precedes the end of q, and p is not an occurrent part of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002411 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002411 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002411 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002411 "causally upstream of"@en)
SubObjectPropertyOf(obo:RO_0002411 obo:BFO_0000063)
SubObjectPropertyOf(obo:RO_0002411 obo:RO_0002418)
TransitiveObjectProperty(obo:RO_0002411)

# Object Property: obo:RO_0002412 (immediately causally upstream of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002412 "p is immediately causally upstream of q iff p is causally upstream of q, and the end of p is coincident with the beginning of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002412 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:RO_0002575 obo:RO_0002412 obo:RO_0002411)
AnnotationAssertion(rdfs:label obo:RO_0002412 "immediately causally upstream of"@en)
SubObjectPropertyOf(obo:RO_0002412 obo:RO_0002090)
SubObjectPropertyOf(obo:RO_0002412 obo:RO_0002411)

# Object Property: obo:RO_0002418 (causally upstream of or within)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002418 "p is 'causally upstream or within' q iff p is causally related to q, and the end of p precedes, or is coincident with, the end of q.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002418 "We would like to make this disjoint with 'preceded by', but this is prohibited in OWL2")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002418 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002418 "influences (processual)")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:RO_0002418 "affects")
AnnotationAssertion(rdfs:label obo:RO_0002418 "causally upstream of or within")
SubObjectPropertyOf(obo:RO_0002418 obo:RO_0002501)
InverseObjectProperties(obo:RO_0002418 obo:RO_0002427)
TransitiveObjectProperty(obo:RO_0002418)

# Object Property: obo:RO_0002427 (causally downstream of or within)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002427 "inverse of causally upstream of or within")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002427 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002427 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002427 obo:RO_0002259)
AnnotationAssertion(rdfs:label obo:RO_0002427 "causally downstream of or within")
SubObjectPropertyOf(obo:RO_0002427 obo:RO_0002501)
TransitiveObjectProperty(obo:RO_0002427)

# Object Property: obo:RO_0002428 (involved in regulation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002428 "c involved in regulation of p if c is involved in some p' and p' regulates some p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002428 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002428 "involved in regulation of")
SubObjectPropertyOf(obo:RO_0002428 obo:RO_0002263)
SubObjectPropertyOf(obo:RO_0002428 obo:RO_0002431)

# Object Property: obo:RO_0002429 (involved in positive regulation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002429 "c involved in regulation of p if c is involved in some p' and p' positively regulates some p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002429 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:RO_0004049 obo:RO_0002429 obo:RO_0002428)
AnnotationAssertion(rdfs:label obo:RO_0002429 "involved in positive regulation of")
SubObjectPropertyOf(obo:RO_0002429 obo:RO_0002428)

# Object Property: obo:RO_0002430 (involved in negative regulation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002430 "c involved in regulation of p if c is involved in some p' and p' negatively regulates some p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002430 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:RO_0004050 obo:RO_0002430 obo:RO_0002428)
AnnotationAssertion(rdfs:label obo:RO_0002430 "involved in negative regulation of")
SubObjectPropertyOf(obo:RO_0002430 obo:RO_0002428)

# Object Property: obo:RO_0002431 (involved in or involved in regulation of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002431 "c involved in or regulates p if and only if either (i) c is involved in p or (ii) c is involved in regulation of p")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002431 "OWL does not allow defining object properties via a Union")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002431 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002431 "involved in or reguates")
AnnotationAssertion(rdfs:label obo:RO_0002431 "involved in or involved in regulation of")
SubObjectPropertyOf(obo:RO_0002431 obo:RO_0002264)
SubObjectPropertyOf(obo:RO_0002431 obo:RO_0002328)
SubObjectPropertyOf(obo:RO_0002431 obo:RO_0002500)

# Object Property: obo:RO_0002434 (interacts with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002434 "A relationship that holds between two entities in which the processes executed by the two entities are causally connected.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002434 "This relation and all sub-relations can be applied to either (1) pairs of entities that are interacting at any moment of time (2) populations or species of entity whose members have the disposition to interact (3) classes whose members have the disposition to interact.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002434 "Considering relabeling as 'pairwise interacts with'"^^xsd:anyURI)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002434 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002434 "Note that this relationship type, and sub-relationship types may be redundant with process terms from other ontologies. For example, the symbiotic relationship hierarchy parallels GO. The relations are provided as a convenient shortcut. Consider using the more expressive processual form to capture your data. In the future, these relations will be linked to their cognate processes through rules.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002434 "in pairwise interaction with")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002434 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002434 "interacts with")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002434 "http://purl.obolibrary.org/obo/ro/docs/interaction-relations/"^^xsd:anyURI)
AnnotationAssertion(skos:closeMatch obo:RO_0002434 "http://purl.obolibrary.org/obo/MI_0914"^^xsd:anyURI)
SymmetricObjectProperty(obo:RO_0002434)
ObjectPropertyDomain(obo:RO_0002434 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002434 obo:BFO_0000040)

# Object Property: obo:RO_0002436 (molecularly interacts with)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002436 "An interaction relationship in which the two partners are molecular entities that directly physically interact with each other for example via a stable binding interaction or a brief interaction during which one modifies the other.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002436 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002436 "binds")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002436 "molecularly binds with")
AnnotationAssertion(rdfs:label obo:RO_0002436 "molecularly interacts with")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002436 obo:ECO_0000353)
AnnotationAssertion(skos:closeMatch obo:RO_0002436 "http://purl.obolibrary.org/obo/MI_0915"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002436 obo:RO_0002434)
SymmetricObjectProperty(obo:RO_0002436)

# Object Property: obo:RO_0002447 (phosphorylates)

AnnotationAssertion(obo:IAO_0000116 obo:RO_0002447 "Axiomatization to GO to be added later")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002447 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002447 "An interaction relation between x and y in which x catalyzes a reaction in which a phosphate group is added to y.")
AnnotationAssertion(rdfs:label obo:RO_0002447 "phosphorylates")
SubObjectPropertyOf(obo:RO_0002447 obo:RO_0002436)

# Object Property: obo:RO_0002448 (directly regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002448 "The entity A, immediately upstream of the entity B, has an activity that regulates an activity performed by B. For example, A and B may be gene products and binding of B by A regulates the kinase activity of B.

A and B can be physically interacting but not necessarily. Immediately upstream means there are no intermediate entity between A and B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002448 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002448 <https://orcid.org/0000-0003-4639-4431>)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002448 "molecularly controls")
AnnotationAssertion(rdfs:label obo:RO_0002448 "directly regulates activity of")
SubObjectPropertyOf(obo:RO_0002448 obo:RO_0002436)
SubObjectPropertyOf(obo:RO_0002448 obo:RO_0011002)
ObjectPropertyDomain(obo:RO_0002448 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002448 obo:BFO_0000040)

# Object Property: obo:RO_0002449 (directly negatively regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002449 "The entity A, immediately upstream of the entity B, has an activity that negatively regulates an activity performed by B. 
For example, A and B may be gene products and binding of B by A negatively regulates the kinase activity of B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002449 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002449 <https://orcid.org/0000-0003-4639-4431>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002449 "directly inhibits")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002449 "molecularly decreases activity of")
AnnotationAssertion(rdfs:label obo:RO_0002449 "directly negatively regulates activity of")
SubObjectPropertyOf(obo:RO_0002449 obo:RO_0002448)
ObjectPropertyDomain(obo:RO_0002449 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002449 obo:BFO_0000040)

# Object Property: obo:RO_0002450 (directly positively regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002450 "The entity A, immediately upstream of the entity B, has an activity that positively regulates an activity performed by B. 
For example, A and B may be gene products and binding of B by A positively regulates the kinase activity of B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002450 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002450 <https://orcid.org/0000-0003-4639-4431>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002450 "directly activates")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:RO_0002450 "molecularly increases activity of")
AnnotationAssertion(rdfs:label obo:RO_0002450 "directly positively regulates activity of")
SubObjectPropertyOf(obo:RO_0002450 obo:RO_0002448)
ObjectPropertyDomain(obo:RO_0002450 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002450 obo:BFO_0000040)

# Object Property: obo:RO_0002464 (helper property (not for use in curation))

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002464 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002464 "This property or its subproperties is not to be used directly. These properties exist as helper properties that are used to support OWL reasoning.")
AnnotationAssertion(rdfs:label obo:RO_0002464 "helper property (not for use in curation)")

# Object Property: obo:RO_0002481 (is kinase activity)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002481 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002481 "is kinase activity")
SubObjectPropertyOf(obo:RO_0002481 obo:RO_0002564)

# Object Property: obo:RO_0002500 (causal agent in process)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002500 "A relationship between a material entity and a process where the material entity has some causal role that influences the process")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002500 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002500 "causal agent in process")
SubObjectPropertyOf(obo:RO_0002500 obo:RO_0002595)
InverseObjectProperties(obo:RO_0002500 obo:RO_0002608)

# Object Property: obo:RO_0002501 (causal relation between processes)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002501 "p is causally related to q if and only if p or any part of p and q or any part of q are linked by a chain of events where each event pair is one where the execution of p influences the execution of q. p may be upstream, downstream, part of, or a container of q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002501 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002501 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002501 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(rdfs:label obo:RO_0002501 "causal relation between processes")
SubObjectPropertyOf(obo:RO_0002501 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0002501 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002501 obo:BFO_0000003)

# Object Property: obo:RO_0002502 (depends on)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002502 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002502 "depends on")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002502 obo:BFO_0000169)

# Object Property: obo:RO_0002506 (causal relation between entities)

AnnotationAssertion(obo:IAO_0000116 obo:RO_0002506 "The intent is that the process branch of the causal property hierarchy is primary (causal relations hold between occurrents/processes), and that the material branch is defined in terms of the process branch")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002506 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002506 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002506 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(rdfs:label obo:RO_0002506 "causal relation between entities")
SubObjectPropertyOf(obo:RO_0002506 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0002506 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0002506 obo:BFO_0000002)

# Object Property: obo:RO_0002559 (causally influenced by)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002559 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002559 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002559 "causally influenced by (entity-centric)")
AnnotationAssertion(rdfs:label obo:RO_0002559 "causally influenced by")
SubObjectPropertyOf(obo:RO_0002559 obo:RO_0002506)
InverseObjectProperties(obo:RO_0002559 obo:RO_0002566)

# Object Property: obo:RO_0002563 (interaction relation helper property)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002563 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002563 "interaction relation helper property")
AnnotationAssertion(rdfs:seeAlso obo:RO_0002563 <http://ontologydesignpatterns.org/wiki/Submissions:N-Ary_Relation_Pattern_%28OWL_2%29>)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002563 "http://purl.obolibrary.org/obo/ro/docs/interaction-relations/"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0002563 obo:RO_0002464)

# Object Property: obo:RO_0002564 (molecular interaction relation helper property)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002564 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002564 "molecular interaction relation helper property")
SubObjectPropertyOf(obo:RO_0002564 obo:RO_0002563)

# Object Property: obo:RO_0002566 (causally influences)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002566 "The entity or characteristic A is causally upstream of the entity or characteristic B, A having an effect on B. An entity corresponds to any biological type of entity as long as a mass is measurable. A characteristic corresponds to a particular specificity of an entity (e.g., phenotype, shape, size).")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002566 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002566 <https://orcid.org/0000-0003-4639-4431>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002566 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002566 "causally influences (entity-centric)")
AnnotationAssertion(rdfs:label obo:RO_0002566 "causally influences")
SubObjectPropertyOf(obo:RO_0002566 obo:RO_0002506)
ObjectPropertyDomain(obo:RO_0002566 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0002566 obo:BFO_0000002)

# Object Property: obo:RO_0002578 (directly regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002578 "p directly regulates q iff p is immediately causally upstream of q and p regulates q.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002578 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002578 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002578 "directly regulates (processual)")
AnnotationAssertion(obo:RO_0002575 obo:RO_0002578 obo:RO_0002211)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002578 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002578 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002578 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002578 "directly regulates")
SubObjectPropertyOf(obo:RO_0002578 obo:RO_0002211)
SubObjectPropertyOf(obo:RO_0002578 obo:RO_0002412)

# Object Property: obo:RO_0002584 (has part structure that is capable of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002584 "gland SubClassOf 'has part structure that is capable of' some 'secretion by cell'")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002584 "s 'has part structure that is capable of' p if and only if there exists some part x such that s 'has part' x and x 'capable of' p")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002584 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(rdfs:label obo:RO_0002584 "has part structure that is capable of")
SubObjectPropertyOf(obo:RO_0002584 obo:RO_0002328)
SubObjectPropertyOf(obo:RO_0002584 obo:RO_0002595)

# Object Property: obo:RO_0002595 (causal relation between material entity and a process)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002595 "A relationship that holds between a material entity and a process in which causality is involved, with either the material entity or some part of the material entity exerting some influence over the process, or the process influencing some aspect of the material entity.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002595 "Do not use this relation directly. It is intended as a grouping for a diverse set of relations, all involving cause and effect.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002595 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002595 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002595 "causal relation between material entity and a process")
SubObjectPropertyOf(obo:RO_0002595 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0002595 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0002595 obo:BFO_0000015)

# Object Property: obo:RO_0002596 (capable of regulating)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002596 "pyrethroid -> growth")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002596 "Holds between c and p if and only if c is capable of some activity a, and a regulates p.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002596 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002596 "capable of regulating")
SubObjectPropertyOf(obo:RO_0002596 obo:RO_0002500)

# Object Property: obo:RO_0002597 (capable of negatively regulating)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002597 "Holds between c and p if and only if c is capable of some activity a, and a negatively regulates p.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002597 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002597 "capable of negatively regulating")
SubObjectPropertyOf(obo:RO_0002597 obo:RO_0002596)

# Object Property: obo:RO_0002598 (capable of positively regulating)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002598 "renin -> arteriolar smooth muscle contraction")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002598 "Holds between c and p if and only if c is capable of some activity a, and a positively regulates p.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002598 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002598 "capable of positively regulating")
SubObjectPropertyOf(obo:RO_0002598 obo:RO_0002596)

# Object Property: obo:RO_0002608 (process has causal agent)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002608 "Inverse of 'causal agent in process'")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002608 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(rdfs:label obo:RO_0002608 "process has causal agent")
SubObjectPropertyOf(obo:RO_0002608 obo:RO_0002410)

# Object Property: obo:RO_0002614 (is evidence with support from)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002614 "An instance of a sequence similarity evidence (ECO:0000044) that uses a homologous sequence UniProtKB:P12345 as support.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002614 "A relationship between a piece of evidence and an entity that plays a role in supporting that evidence.")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002614 "is_evidence_supported_by"@en)
AnnotationAssertion(rdfs:comment obo:RO_0002614 "In the Gene Ontology association model, this corresponds to the With/From field")
AnnotationAssertion(rdfs:label obo:RO_0002614 "is evidence with support from")
AnnotationAssertion(rdfs:label obo:RO_0002614 "is_evidence_with_support_from")
SubObjectPropertyOf(obo:RO_0002614 obo:RO_0002616)
ObjectPropertyDomain(obo:RO_0002614 obo:SEPIO_0000002)

# Object Property: obo:RO_0002616 (related via evidence or inference to)

AnnotationAssertion(obo:IAO_0000232 obo:RO_0002616 "Do not use this relation directly. It is a grouping relation.")
AnnotationAssertion(rdfs:label obo:RO_0002616 "related via evidence or inference to")

# Object Property: obo:RO_0002629 (directly positively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002629 "p directly positively regulates q iff p is immediately causally upstream of q, and p positively regulates q.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002629 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002629 "directly positively regulates (process to process)")
AnnotationAssertion(obo:RO_0004049 obo:RO_0002629 obo:RO_0002578)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002629 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002629 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002629 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002629 "directly positively regulates")
SubObjectPropertyOf(obo:RO_0002629 obo:RO_0002213)
SubObjectPropertyOf(obo:RO_0002629 obo:RO_0002578)

# Object Property: obo:RO_0002630 (directly negatively regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002630 "p directly negatively regulates q iff p is immediately causally upstream of q, and p negatively regulates q.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002630 <http://purl.obolibrary.org/obo/ro/docs/causal-relations>)
AnnotationAssertion(obo:IAO_0000589 obo:RO_0002630 "directly negatively regulates (process to process)")
AnnotationAssertion(obo:RO_0004050 obo:RO_0002630 obo:RO_0002578)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002630 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002630 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002630 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:RO_0002630 "directly negatively regulates")
SubObjectPropertyOf(obo:RO_0002630 obo:RO_0002212)
SubObjectPropertyOf(obo:RO_0002630 obo:RO_0002578)

# Object Property: obo:RO_0004028 (realized in response to stimulus)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0004028 "A relationship between a realizable entity R (e.g. function or disposition) and a material entity M where R is realized in response to a process that has an input stimulus of M.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0004028 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004028 "2017-12-26T19:45:49Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0004028 "realized in response to stimulus")
SubObjectPropertyOf(obo:RO_0004028 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0004028 obo:BFO_0000017)
ObjectPropertyRange(obo:RO_0004028 obo:BFO_0000040)

# Object Property: obo:RO_0004031 (enables subfunction)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0004031 "Holds between an entity and an process P where the entity enables some larger compound process, and that larger process has-part P.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0004031 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004031 "2018-01-25T23:20:13Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0004031 "enables subfunction")
SubObjectPropertyOf(obo:RO_0004031 obo:RO_0002328)

# Object Property: obo:RO_0004032 (acts upstream of or within, positive effect)

AnnotationAssertion(obo:RO_0004049 obo:RO_0004032 obo:RO_0002264)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004032 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004032 "2018-01-26T23:49:30Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0004032 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:label obo:RO_0004032 "acts upstream of or within, positive effect")
AnnotationAssertion(rdfs:seeAlso obo:RO_0004032 <http://wiki.geneontology.org/index.php/Acts_upstream_of_or_within,_positive_effect>)
SubObjectPropertyOf(obo:RO_0004032 obo:RO_0002264)

# Object Property: obo:RO_0004033 (acts upstream of or within, negative effect)

AnnotationAssertion(obo:RO_0004050 obo:RO_0004033 obo:RO_0002264)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004033 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004033 "2018-01-26T23:49:51Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0004033 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:label obo:RO_0004033 "acts upstream of or within, negative effect")
SubObjectPropertyOf(obo:RO_0004033 obo:RO_0002264)

# Object Property: obo:RO_0004034 (acts upstream of, positive effect)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0004034 "c 'acts upstream of, positive effect' p if c is enables f, and f is causally upstream of p, and the direction of f is positive")
AnnotationAssertion(obo:RO_0004049 obo:RO_0004034 obo:RO_0002263)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004034 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004034 "2018-01-26T23:53:14Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0004034 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:label obo:RO_0004034 "acts upstream of, positive effect")
AnnotationAssertion(rdfs:seeAlso obo:RO_0004034 <http://wiki.geneontology.org/index.php/Acts_upstream_of,_positive_effect>)
SubObjectPropertyOf(obo:RO_0004034 obo:RO_0002263)
SubObjectPropertyOf(obo:RO_0004034 obo:RO_0004032)

# Object Property: obo:RO_0004035 (acts upstream of, negative effect)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0004035 "c 'acts upstream of, negative effect' p if c is enables f, and f is causally upstream of p, and the direction of f is negative")
AnnotationAssertion(obo:RO_0004050 obo:RO_0004035 obo:RO_0002263)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004035 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004035 "2018-01-26T23:53:22Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0004035 obo:valid_for_go_gp2term)
AnnotationAssertion(rdfs:label obo:RO_0004035 "acts upstream of, negative effect")
AnnotationAssertion(rdfs:seeAlso obo:RO_0004035 <http://wiki.geneontology.org/index.php/Acts_upstream_of,_negative_effect>)
SubObjectPropertyOf(obo:RO_0004035 obo:RO_0002263)
SubObjectPropertyOf(obo:RO_0004035 obo:RO_0004033)

# Object Property: obo:RO_0004046 (causally upstream of or within, negative effect)

AnnotationAssertion(obo:RO_0004050 obo:RO_0004046 obo:RO_0002418)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004046 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004046 "2018-03-13T23:55:05Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0004046 "causally upstream of or within, negative effect")
SubObjectPropertyOf(obo:RO_0004046 obo:RO_0002418)

# Object Property: obo:RO_0004047 (causally upstream of or within, positive effect)

AnnotationAssertion(obo:RO_0004049 obo:RO_0004047 obo:RO_0002418)
AnnotationAssertion(oboInOwl:created_by obo:RO_0004047 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:creation_date obo:RO_0004047 "2018-03-13T23:55:19Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0004047 "causally upstream of or within, positive effect")
SubObjectPropertyOf(obo:RO_0004047 obo:RO_0002418)

# Object Property: obo:RO_0009501 (realized in response to)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0009501 "A drought sensitivity trait that inheres in a whole plant is realized in a systemic response process in response to exposure to drought conditions.")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0009501 "An inflammatory disease that is realized in response to an inflammatory process occurring in the gut (which is itself the realization of a process realized in response to harmful stimuli in the mucosal lining of th gut)")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0009501 "Environmental polymorphism in butterflies: These butterflies have a 'responsivity to day length trait' that is realized in response to the duration of the day, and is realized in developmental processes that lead to increased or decreased pigmentation in the adult morph.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0009501 "r 'realized in response to' s iff, r is a realizable (e.g. a plant trait such as responsivity to drought), s is an environmental stimulus (a process), and s directly causes the realization of r.")
AnnotationAssertion(terms:contributor obo:RO_0009501 <https://orcid.org/0000-0001-6996-0040>)
AnnotationAssertion(terms:contributor obo:RO_0009501 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(terms:contributor obo:RO_0009501 <https://orcid.org/0000-0002-7073-9172>)
AnnotationAssertion(terms:contributor obo:RO_0009501 <https://orcid.org/0000-0002-8461-9745>)
AnnotationAssertion(Annotation(oboInOwl:hasDbXref "RO:cjm") oboInOwl:hasExactSynonym obo:RO_0009501 "triggered by process")
AnnotationAssertion(rdfs:label obo:RO_0009501 "realized in response to"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0009501 "https://docs.google.com/document/d/1KWhZxVBhIPkV6_daHta0h6UyHbjY2eIrnON1WIRGgdY/edit"^^xsd:anyURI)
SubObjectPropertyOf(obo:RO_0009501 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0009501 obo:BFO_0000017)
ObjectPropertyRange(obo:RO_0009501 obo:BFO_0000015)

# Object Property: obo:RO_0011002 (regulates activity of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0011002 "The entity A has an activity that regulates an activity of the entity B. For example, A and B are gene products where the catalytic activity of A regulates the kinase activity of B.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0011002 <https://orcid.org/0000-0003-4639-4431>)
AnnotationAssertion(rdfs:label obo:RO_0011002 "regulates activity of")
SubObjectPropertyOf(obo:RO_0011002 obo:RO_0002566)
ObjectPropertyDomain(obo:RO_0011002 obo:BFO_0000040)
ObjectPropertyRange(obo:RO_0011002 obo:BFO_0000040)

# Object Property: obo:RO_0012011 (indirectly causally upstream of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0012011 "p is indirectly causally upstream of q iff p is causally upstream of q and there exists some process r such that p is causally upstream of r and r is causally upstream of q.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0012011 "pg")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0012011 "2022-09-26T06:07:17Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0012011 "indirectly causally upstream of"@en)
SubObjectPropertyOf(obo:RO_0012011 obo:RO_0002411)

# Object Property: obo:RO_0012012 (indirectly regulates)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0012012 "p indirectly regulates q iff p is indirectly causally upstream of q and p regulates q.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0012012 "pg")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0012012 "2022-09-26T06:08:01Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0012012 "indirectly regulates"@en)
SubObjectPropertyOf(obo:RO_0012012 obo:RO_0002211)
SubObjectPropertyOf(obo:RO_0012012 obo:RO_0012011)

# Object Property: obo:RO_0017001 (device utilizes material)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0017001 "A diagnostic testing device utilizes a specimen.")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0017001 "X device utilizes material Y means X and Y are material entities, and X is capable of some process P that has input Y.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0017001 <https://orcid.org/0000-0001-9625-1899>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0017001 <https://orcid.org/0000-0003-2620-0345>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0017001 "A diagnostic testing device utilizes a specimen means that the diagnostic testing device is capable of an assay, and this assay a specimen as its input.")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0017001 "See github ticket https://github.com/oborel/obo-relations/issues/497")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0017001 "2021-11-08T12:00:00Z")
AnnotationAssertion(oboInOwl:hasBroadSynonym obo:RO_0017001 "utilizes")
AnnotationAssertion(rdfs:label obo:RO_0017001 "device utilizes material"@en)

# Object Property: obo:RO_0019000 (regulates characteristic)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0019000 "A relationship that holds between a process and a characteristic in which process (P) regulates characteristic (C) iff: P results in the existence of C OR affects the intensity or magnitude of C.")
AnnotationAssertion(terms:contributor obo:RO_0019000 <https://orcid.org/0000-0002-8688-6599>)
AnnotationAssertion(rdfs:label obo:RO_0019000 "regulates characteristic")
SubObjectPropertyOf(obo:RO_0019000 obo:RO_0002410)
ObjectPropertyDomain(obo:RO_0019000 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0019000 obo:PATO_0000001)

# Object Property: obo:RO_0019001 (positively regulates characteristic)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0019001 "A relationship that holds between a process and a characteristic in which process (P) positively regulates characteristic (C) iff: P results in an increase in the intensity or magnitude of C.")
AnnotationAssertion(terms:contributor obo:RO_0019001 <https://orcid.org/0000-0002-8688-6599>)
AnnotationAssertion(rdfs:label obo:RO_0019001 "positively regulates characteristic")
SubObjectPropertyOf(obo:RO_0019001 obo:RO_0019000)

# Object Property: obo:RO_0019002 (negatively regulates characteristic)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0019002 "A relationship that holds between a process and a characteristic in which process (P) negatively regulates characteristic (C) iff: P results in a decrease in the intensity or magnitude of C.")
AnnotationAssertion(terms:contributor obo:RO_0019002 <https://orcid.org/0000-0002-8688-6599>)
AnnotationAssertion(rdfs:label obo:RO_0019002 "negatively regulates characteristic")
SubObjectPropertyOf(obo:RO_0019002 obo:RO_0019000)

# Object Property: obo:SEPIO_0000006 (has_evidence_line)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000006 "A relationship between an assertion or proposition and an evidence line used in evaluating its validity.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000006 "Consider re-use of http://purl.obolibrary.org/obo/RO_0002558 ! 'has evidence'.
Definition = \"x has evidence y iff , x is  an information content entity, material entity or process, and y supports either the existence of x, or the truth value of x.\"

See  also http://semanticscience.org/resource/SIO_000772 ! 'has evidence'.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000006 "has_evidence")
AnnotationAssertion(rdfs:label obo:SEPIO_0000006 "has_evidence_line"@en)
InverseObjectProperties(obo:SEPIO_0000006 obo:SEPIO_0000427)
ObjectPropertyDomain(obo:SEPIO_0000006 ObjectUnionOf(obo:SEPIO_0000000 obo:SEPIO_0000001))
ObjectPropertyRange(obo:SEPIO_0000006 obo:SEPIO_0000002)

# Object Property: obo:SEPIO_0000007 (has_supporting_evidence_line)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000007 "A relation between a proposition and information that supports its validity, based on the evaluation of some agent.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000007 "Mapping to related terms: 

Consider: http://semanticscience.org/resource/SIO_000206 ! 'is supported by'")
AnnotationAssertion(rdfs:label obo:SEPIO_0000007 "has_supporting_evidence_line"@en)
SubObjectPropertyOf(obo:SEPIO_0000007 obo:SEPIO_0000006)

# Object Property: obo:SEPIO_0000008 (has_disputing_evidence_line)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000008 "A relation between a proposition and information that contradicts its validity, based on the evaluation and conclusion of some agent.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000008 "Mapping to related terms: 

Consider: http://semanticscience.org/resource/SIO_000774 ! 'is refuted by'")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000008 "has_conflicting_evidence")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000008 "has_refuting_evidence_line")
AnnotationAssertion(rdfs:label obo:SEPIO_0000008 "has_disputing_evidence_line"@en)
SubObjectPropertyOf(obo:SEPIO_0000008 obo:SEPIO_0000006)

# Object Property: obo:SEPIO_0000009 (has_inconclusive_evidence_line)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000009 "A relation between a proposition and information that was used to evaluate a particular proposition, but failed to provide conclusive support for or against its validity.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000009 "Mapping to related terms: 

Consider: http://semanticscience.org/resource/SIO_000207 ! 'is disputed by'")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000009 "has_insignificant_evidence_line")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000009 "A relation between a proposition and information that does not conclusively support or contradict its validity, based on evaluation of some agent.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000009 "has_inconclusive_evidence_line"@en)
SubObjectPropertyOf(obo:SEPIO_0000009 obo:SEPIO_0000006)

# Object Property: obo:SEPIO_0000015 (proposition_asserted_in)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000015 "A relation holding between a proposition and an assertion in which it is expressed.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000015 "is_asserted_in")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000015 "A particular proposition can be asserted in more than one assertion - in cases where assertions made by different agents, or on different occasions, put forth the same proposition as true.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000015 "proposition_asserted_in")
InverseObjectProperties(obo:SEPIO_0000015 obo:SEPIO_0000030)
ObjectPropertyDomain(obo:SEPIO_0000015 obo:SEPIO_0000000)
ObjectPropertyRange(obo:SEPIO_0000015 obo:SEPIO_0000001)

# Object Property: obo:SEPIO_0000017 (has_agent)

AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000017 "Consider use of http://purl.obolibrary.org/obo/RO_0002217 ! actively participates in.  
Definition = \"actively participates in y if and only if x participates in y and x realizes some active role\"")
AnnotationAssertion(rdfs:label obo:SEPIO_0000017 "has_agent"@en)
SubObjectPropertyOf(obo:SEPIO_0000017 obo:RO_0000057)
ObjectPropertyRange(obo:SEPIO_0000017 <http://www.w3.org/ns/prov#Agent>)

# Object Property: obo:SEPIO_0000026 (assertion_has_subject)

AnnotationAssertion(obo:IAO_0000231 obo:SEPIO_0000026 "Decided that a more generic has_subject property should suffice to cover links from either an assertion or a proposition to an entity representing the subject of the statement made.

But wanted to maintain the text in the comment here for future reference/use.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000026 "Propositional statements can be represented in RDF  as directional subject-predicate-object (S-P-O) triples. RDF reification vocabularies such as OBAN create named individuals in a graph that represent such S-P-O propositional statements. In OBAN, these are called 'associations', and the semantics of these associations can be represented using properties that link it to the subject, predicate, and object of the triple it represents.

As a proposition-level entity, a particular association can be expressed in more than one assertion made by different agents, or at different times. The meaning of an assertion can be captured through its link to an association whose meaning is formally specified as described above (e.g. :assertion1 is_asserted_in :association1, :association1 has_subject :thing1). 

The assertion_has_subject property allows more direct specification of assertion meaning, bypassing an association and pointing directly to the subject of the reified triple.  In this sense, it is a shortcut relation over two more fundamental properties (is_asserted_in  o  association_has_subject).

This property is useful when a particular dataset wants to describe statements at the level of assertions rather than propositions, and formally describe assertion semantics without needed to represent an proposition-level association.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000026 "assertion_has_subject"@en)
SubObjectPropertyOf(obo:SEPIO_0000026 oboInOwl:ObsoleteProperty)
ObjectPropertyDomain(obo:SEPIO_0000026 obo:SEPIO_0000001)

# Object Property: obo:SEPIO_0000027 (assertion_has_object)

AnnotationAssertion(rdfs:comment obo:SEPIO_0000027 "Propositional statements can be represented in RDF  as directional subject-predicate-object (S-P-O) triples. RDF reification vocabularies such as OBAN create named individuals in a graph that represent such S-P-O propositional statements. In OBAN, these are called 'associations', and the semantics of these associations can be represented using properties that link it to the subject, predicate, and object of the triple it represents.

As a proposition-level entity, a particular association can be expressed in more than one assertion made by different agents, or at different times. The meaning of an assertion can be captured through its link to an association whose meaning is formally specified as described above (e.g. :assertion1 is_asserted_in :association1, :association1 has_object :thing1). 

The assertion_has_object property allows more direct specification of assertion meaning, bypassing an association and pointing directly to the object of the reified triple.  In this sense, it is a shortcut relation over two more fundamental properties (is_asserted_in  o  association_has_object).

This property is useful when a particular dataset wants to describe statements at the level of assertions rather than propositions, and formally describe assertion semantics without needed to represent an proposition-level association.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000027 "assertion_has_object"@en)
SubObjectPropertyOf(obo:SEPIO_0000027 oboInOwl:ObsoleteProperty)
ObjectPropertyDomain(obo:SEPIO_0000027 obo:SEPIO_0000001)

# Object Property: obo:SEPIO_0000028 (assertion_has_predicate)

AnnotationAssertion(rdfs:comment obo:SEPIO_0000028 "Propositional statements can be represented in RDF  as directional subject-predicate-object (S-P-O) triples. RDF reification vocabularies such as OBAN create named individuals in a graph that represent such S-P-O propositional statements. In OBAN, these are called 'associations', and the semantics of these associations can be represented using properties that link it to the subject, predicate, and object of the triple it represents.

As a proposition-level entity, a particular association can be expressed in more than one assertion made by different agents, or at different times. The meaning of an assertion can be captured through its link to an association whose meaning is formally specified as described above (e.g. :assertion1 is_asserted_in :association1, :association1 has_predicate :thing1). 

The assertion_has_predicate property allows more direct specification of assertion meaning, bypassing an association and pointing directly to the predicate of the reified triple.  In this sense, it is a shortcut relation over two more fundamental properties (is_asserted_in  o  association_has_predicate).

This property is useful when a particular dataset wants to describe statements at the level of assertions rather than propositions, and formally describe assertion semantics without needed to represent an proposition-level association.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000028 "assertion_has_predicate"@en)
SubObjectPropertyOf(obo:SEPIO_0000028 oboInOwl:ObsoleteProperty)
ObjectPropertyDomain(obo:SEPIO_0000028 obo:SEPIO_0000001)

# Object Property: obo:SEPIO_0000030 (asserts_proposition)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000030 "A relation holding between an assertion and the proposition that it puts forth as true.")
AnnotationAssertion(obo:SEPIO_0000052 obo:SEPIO_0000030 "Mapping to related terms: 

Consider: http://purl.org/see/rdo#is_assertion_asserting")
AnnotationAssertion(obo:SEPIO_0000386 obo:SEPIO_0000030 "assertsProposition")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000030 "In practice, SEPIO recommends that data is captured at the assertion level, and post-processed as needed to aggregate assertions making the same claim under a single proposition using this property.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000030 "asserts_proposition")
ObjectPropertyDomain(obo:SEPIO_0000030 obo:SEPIO_0000001)
ObjectPropertyRange(obo:SEPIO_0000030 obo:SEPIO_0000000)

# Object Property: obo:SEPIO_0000041 (was_specified_by)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000041 "A relation holding between a planned process, or the artifact it generates, and a plan specification that specifies all or part of the process (e.g. a protocol, guideline, rule set)")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000041 "Consider SIO:00339 (a relation between a product and the information content entity that specifies it.)")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000041 "In SEPIO, this property is most often used to link an assertion (the generated artifact) to an 'assertion method' that may specified how it was created.  This assertion method may describe what types of data may be used as evidence, what weight to give a particular type of evidence, and how to combine different lines of evidence in generating the final assertion.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000041 "was_specified_by"@en)
InverseObjectProperties(obo:SEPIO_0000041 obo:SEPIO_0000407)
ObjectPropertyRange(obo:SEPIO_0000041 obo:IAO_0000104)

# Object Property: obo:SEPIO_0000046 (has_role)

AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000046 "Consider RO:0000087 ! has_role (def = a relation between an independent continuant (the bearer) and a role, in which the role specifically depends on the bearer for its existence).  However, this property is defined as a relation between an independent continuant and a role.  In BFO, dependent continuants (such as information) cannot bear roles.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000046 "has_role"@en)

# Object Property: obo:SEPIO_0000084 (has_evidence_item)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000084 "A relation holding between an evidence line and an individual information entity that contributes to the argument it represents.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000084 "has_supporting_information")
AnnotationAssertion(rdfs:label obo:SEPIO_0000084 "has_evidence_item"@en)
SubObjectPropertyOf(obo:SEPIO_0000084 obo:RO_0002614)
InverseObjectProperties(obo:SEPIO_0000084 obo:SEPIO_0000376)
ObjectPropertyDomain(obo:SEPIO_0000084 obo:SEPIO_0000002)
ObjectPropertyRange(obo:SEPIO_0000084 obo:SEPIO_0000149)

# Object Property: obo:SEPIO_0000085 (evidence_has_supporting_activity)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000085 "A relation that links an evidence line to any activities (studies, assays, computational tasks, curation) that generated evidence items contributing to it.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000085 "has_evidence_item_output_from")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000085 "has_supporting_activity")
AnnotationAssertion(obo:SEPIO_0000399 obo:SEPIO_0000085 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:label obo:SEPIO_0000085 "evidence_has_supporting_activity"@en)
SubObjectPropertyOf(obo:SEPIO_0000085 obo:RO_0002614)
ObjectPropertyDomain(obo:SEPIO_0000085 obo:SEPIO_0000002)
ObjectPropertyRange(obo:SEPIO_0000085 <http://www.w3.org/ns/prov#Activity>)

# Object Property: obo:SEPIO_0000098 (is_equilavent_to)

AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000098 "has_equivalent_proposition")
AnnotationAssertion(rdfs:label obo:SEPIO_0000098 "is_equilavent_to"@en)
SubObjectPropertyOf(obo:SEPIO_0000098 obo:SEPIO_0000116)
SymmetricObjectProperty(obo:SEPIO_0000098)

# Object Property: obo:SEPIO_0000099 (is_consistent_with)

AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000099 "has_consistent_proposition"@en)
AnnotationAssertion(rdfs:label obo:SEPIO_0000099 "is_consistent_with")
SubObjectPropertyOf(obo:SEPIO_0000099 obo:SEPIO_0000116)
SymmetricObjectProperty(obo:SEPIO_0000099)

# Object Property: obo:SEPIO_0000100 (strongly_contradicts)

AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000100 "Previosly implemented  property chains: 

is_asserted_in o strongly_contradicts o asserts -> strongly_contradicts
asserts o strongly_contradicts o is_asserted_in -> strongly_contradicts

But these broke reasoner - \"the given hierarchy is not regular\" error message\".  Apparently breaks rule that \"in property chains of 3 or larger, the inner property must not also appear as the composite property\". (https://arxiv.org/pdf/1212.2902.pdf)")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000100 "has_contradicting_proposition"@en)
AnnotationAssertion(rdfs:comment obo:SEPIO_0000100 "Relation between two propositions that make opposing claims (e.g. proposition1 holds that variant1 is pathogenic for disease1, and proposition2 holds that variant1 is benign for disease1).")
AnnotationAssertion(rdfs:label obo:SEPIO_0000100 "strongly_contradicts"@en)
SubObjectPropertyOf(obo:SEPIO_0000100 obo:SEPIO_0000115)
SymmetricObjectProperty(obo:SEPIO_0000100)
ObjectPropertyDomain(obo:SEPIO_0000100 obo:SEPIO_0000000)
ObjectPropertyRange(obo:SEPIO_0000100 obo:SEPIO_0000000)

# Object Property: obo:SEPIO_0000101 (contradicts)

AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000101 "has_inconsistent_proposition"@en)
AnnotationAssertion(rdfs:label obo:SEPIO_0000101 "contradicts")
SubObjectPropertyOf(obo:SEPIO_0000101 obo:SEPIO_0000115)

# Object Property: obo:SEPIO_0000108 (is_expressed_in)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000108 "Relationship between a statement or proposition and a document in which it is expressed (e.g. a publication, report, or database record).")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000108 "is_reported_in")
AnnotationAssertion(rdfs:label obo:SEPIO_0000108 "is_expressed_in"@en)
InverseObjectProperties(obo:SEPIO_0000108 obo:SEPIO_0000109)
ObjectPropertyDomain(obo:SEPIO_0000108 ObjectUnionOf(obo:SEPIO_0000000 obo:SEPIO_0000174))
ObjectPropertyRange(obo:SEPIO_0000108 obo:IAO_0000310)

# Object Property: obo:SEPIO_0000109 (expresses)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000109 "Relationship between a document (e.g. a publication, report, database record) and an assertion or proposition that is stated in its content.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000109 "expresses"@en)
ObjectPropertyDomain(obo:SEPIO_0000109 obo:IAO_0000310)
ObjectPropertyRange(obo:SEPIO_0000109 ObjectUnionOf(obo:SEPIO_0000000 obo:SEPIO_0000001))

# Object Property: obo:SEPIO_0000113 (has_compatability)

AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000113 "Grouping class to hold exploratory relationships linking assertions or propositions based on the compatability or degree of agreement in their meaning.  Has utility toward inferring links between evidence lines and propositions.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000113 "has_concordance")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000113 "propositional relationships")
AnnotationAssertion(rdfs:label obo:SEPIO_0000113 "has_compatability"@en)
SubObjectPropertyOf(obo:SEPIO_0000113 obo:SEPIO_0000406)

# Object Property: obo:SEPIO_0000114 (measures_parameter)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000114 "A relation between a planned process and a parameter that it measures as part of an assay or observation.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000114 "measures_parameter")
SubObjectPropertyOf(obo:SEPIO_0000114 obo:SEPIO_0000406)

# Object Property: obo:SEPIO_0000115 (conflicts_with)

AnnotationAssertion(rdfs:label obo:SEPIO_0000115 "conflicts_with"@en)
SubObjectPropertyOf(obo:SEPIO_0000115 obo:SEPIO_0000113)

# Object Property: obo:SEPIO_0000116 (aligns_with)

AnnotationAssertion(rdfs:label obo:SEPIO_0000116 "aligns_with"@en)
SubObjectPropertyOf(obo:SEPIO_0000116 obo:SEPIO_0000113)

# Object Property: obo:SEPIO_0000124 (evidence_has_supporting_reference)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000124 "A relation that holds between an evidence line and a citable document from which information supporting the evidence line was obtained (i.e. a \"supporting reference\").")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000124 "Note that this relation only links an evidence line to publications actually consulted by the asserting agent to find and interpret evidence items. There may be other publications that describe the same evidence item that the asserting agent did not consult, which would not qualify as supporting references.  

For example, consider a GO curator's use of sequence data for the rat Vegfa gene in a line of evidence supporting their assertion that the human VEGFA ortholog exhibited the same angiogeneic activity. There may be multiple publications that report this same rat gene sequence, but only the publication that the curator consulted in making this assertion would qualify as a supporting reference for this evidence line.

For this resaon, we are not able to create a property chain declaring \"has_evidence_item o is_described_by -> has_evidence_item_described_by\". . . because this would entail that any publication describing this rat Vegfa gene sequence was a supporting reference for the assertion.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000124 "has_support_from_source")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000124 "has_supporting_reference")
AnnotationAssertion(obo:SEPIO_0000061 obo:SEPIO_0000124 "Keeping the label has_supporting_reference instead of has_evidence_item_described_by because the later follows the pattern we use for true shortcut relations (i.e. that can be defined using property chains). For reasons outlined in the editor note, this is not such a shortcut relation.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000124 "evidence_has_supporting_reference"@en)
SubObjectPropertyOf(obo:SEPIO_0000124 obo:RO_0002614)
ObjectPropertyDomain(obo:SEPIO_0000124 obo:SEPIO_0000002)
ObjectPropertyRange(obo:SEPIO_0000124 obo:IAO_0000310)

# Object Property: obo:SEPIO_0000126 (is_inconsistent_with)

AnnotationAssertion(rdfs:label obo:SEPIO_0000126 "is_inconsistent_with"@en)
SubObjectPropertyOf(obo:SEPIO_0000126 obo:SEPIO_0000113)

# Object Property: obo:SEPIO_0000130 (authored_by)

AnnotationAssertion(obo:IAO_0000112 obo:SEPIO_0000130 "As an example, consider the assertion that \"Variant X causes Disease Y\".  At an abstract level this represents a bfo: information content entity (or frbr:Work). This abstract assertion can be concretized / encoded  various formats - e.g. a free-text sentence, an rdf graph, a blob of json, or stanza of XML. Each such manifestation might use a different model or structure to represent this knowledge. Each such concrete form is considered a separate resource/digital artifact at the 'manifestation' level, but each expresses the same knowledge.

The authored_by and date_authored properties allow us connect an abstract or concrete representation of this assertion to who and when the knowledge was originally generated. This will be the same agent and date for all formats/manifestations listed above.

The created_by and date_created properties allow us to connect a representation of the abstract or concrete assertion to who and when the specific manifestation was created in a particular format. The agent/dates here will be different for each of the formats/manifestations listed above.")
AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000130 "A relation between an information content entity (or concrete manifestation of it as a particular resource/digital artifact), and the agent that originally generated the information content.")
AnnotationAssertion(obo:SEPIO_0000061 obo:SEPIO_0000130 "Older note - remove before releasing: 
We intentionally avoid use of a more generic \"creator\" property here, as this term is used in established standards such as PAV and DC to specifically describe agents who generated a specific representation of an information content entity. For example, the pav:createdBy property is used specifically to describe agents contributing to a specific representation. 

SEPIO, by contrast, aims to describe the agent(s) responsible for generating the abstract information content these concretized artifacts express. For this reason, SEPIO creates the more specific \"stated_by\" relation to explicitly distinguish the act of making a statement (generating its information content) from the act of creating a specific digital representation of the statement (generating a particular concretized artifact). 
			
A explicit commitment to this more abstracted level of representation is a core feature of the SEPIO model, and has implications for how instances in the data are described, identified, and distinguished in practice.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000130 "In the case that the information artifact  is an assertion, the responsible agent is the one who originally generated an assertion based on their evaluation of relevant evidence.  If more than one agent is involved in this process, we may consider them collectively as a  group or organization representing a single agent.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000130 "authored_by"@en)
SubObjectPropertyOf(obo:SEPIO_0000130 obo:SEPIO_0000150)

# Object Property: obo:SEPIO_0000132 (evidence_line_strength)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000132 "A relation describing the degree of support provided by an evidence line for a target assertion or proposition.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000132 "The value of this property is typically a term from some defined set of values that enumerates categorical degrees of evidence strength  (e.g. the CIViC five-teired 'evidence level' scale). Different systems or applications can create terms representing the levels of strength they wish to define for their use case.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000132 "evidence_line_strength"@en)
ObjectPropertyDomain(obo:SEPIO_0000132 obo:SEPIO_0000002)
ObjectPropertyRange(obo:SEPIO_0000132 obo:SEPIO_0000133)

# Object Property: obo:SEPIO_0000140 (evaluated_by)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000140 "A relation holding between a generated artifact and an agent who evaluated its quality, completeness, or utility.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000140 "In SEPIO, the agent responsible for a particular evidence line is linked via the \"evaluated_by\" property. This reflects that perspective that evaluation of the relevance, strength, and direction of an evidence line w.r.t. a particular assertion are the key acts inherent in the evidence line's \"creation\".  

We avoid using a \"creator\" relation here because this label is used in established standards such as PAV and DC to specifically describe agents contributing to a specific digital representation, as opposed to agents responsible for generating the underlying information content these concrete representations express. 
			
A explicit commitment to this more abstracted level of representation is a core feature of the SEPIO model, and has implications for how instances in the data are described, identified, and distinguished in practice.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000140 "assessed_by"@en)
AnnotationAssertion(rdfs:label obo:SEPIO_0000140 "evaluated_by")
SubObjectPropertyOf(obo:SEPIO_0000140 obo:SEPIO_0000150)

# Object Property: obo:SEPIO_0000144 (has_qualifier)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000144 "A relation used to indicate context in which a particular assertion or proposition applies.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000144 "has_qualifier"@en)
SubObjectPropertyOf(obo:SEPIO_0000144 obo:IAO_0000136)
ObjectPropertyDomain(obo:SEPIO_0000144 ObjectUnionOf(obo:SEPIO_0000000 obo:SEPIO_0000174))

# Object Property: obo:SEPIO_0000145 (has_evidence_from_source)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000145 "A relation used to link an assertion or proposition to a source where evidence for it was found (i.e. a document, document part, database, etc)")
AnnotationAssertion(obo:SEPIO_0000052 obo:SEPIO_0000145 "cito:cites_as_evidence")
AnnotationAssertion(obo:SEPIO_0000061 obo:SEPIO_0000145 "Note that this may not qualify as a proper shortcut (i.e. it may not be valid to define using a property chain) for the same reason has_supporting reference is not defined as a property chain called has_evidence_item_described_by.")
AnnotationAssertion(obo:SEPIO_0000399 obo:SEPIO_0000145 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:comment obo:SEPIO_0000145 "This is a shortcut relation to be used when  publications are referenced as providing support for an assertion, but it is not clear how many evidence lines  are described across these publications.  In such cases, discrete evidence lines cannot be created, and the has_evidence_from_source relation is used to directly link the assertion to publications providing some form of evidence information.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000145 "has_evidence_from_source"@en)
ObjectPropertyDomain(obo:SEPIO_0000145 ObjectUnionOf(obo:SEPIO_0000000 obo:SEPIO_0000001))
ObjectPropertyRange(obo:SEPIO_0000145 obo:IAO_0000030)

# Object Property: obo:SEPIO_0000146 (has_evidence_level)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000146 "A relation used to link an assertion or proposition directly to some indicator of the strength of the total evidence that asserting agent beleives to support it.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000146 "has_total_evidence_strength")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000146 "This relation links an assertion or proposition directly to some indicator of the strength of the total evidence supporting it. It is used when there is not enough information to create evidence line(s) for the assertion, but the source provides some indication of the strength of the evidence supporting it.

Note that this is different than the notion of statement confidence, which describes how confident an agent is that a statement is true.  Confidence may depend on factors in addition to the strength of the evidence (e.g. who made the prior probability that the asserted proposition could be true, who made the assertion and when, etc.)")
AnnotationAssertion(rdfs:label obo:SEPIO_0000146 "has_evidence_level"@en)
ObjectPropertyDomain(obo:SEPIO_0000146 ObjectUnionOf(obo:SEPIO_0000000 obo:SEPIO_0000001))
ObjectPropertyRange(obo:SEPIO_0000146 obo:SEPIO_0000133)

# Object Property: obo:SEPIO_0000150 (has_contributor)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000150 "A relation between an information content entity and an agent who made a contribution to its information content, or to its subsequent modification or assessment.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000150 "SEPIO intentionally creates its own hierarchy of contributor properties, instead of re-using terms from existing standards like PAV or Dublin Core - whose domain is structured digital resources. This is because properties such as pav:createdBy specifically describe agents who generated a specific digital representation of information, while SEPIO aims to describe agents responsible for generating the abstract information content that such a concrete representation may express.  

The subject of 'contributor' relations in the SEPIO are explicitly abstract in nature - considered at the level of their information content as opposed to concretizations in particular digital resources or representations.  For example, the SEPIO \"stated_by\" relation explicitly refers toan  agent originally putting forth a statement as true (generating its information content), as opposed to an agent creating a specific digital representation of the statement (generating a particular concretized artifact such as a json object returned by an API). 

Should further clarification become available with respect to whether PAV or DC contributor properties accommodate the nuanced definitions we require, we will re-consider their inclusion in SEPIO. For example, the pav:authoredBy property seems to refer specifically to the agent who generated information content expressed in a resource - and thus may be appropriate in the context of SEPIO.  But even here, the range of the property is a particular authored digital resource, and not the information content it expresses.  DC properties such as dc:contributor and dc:creator are ambiguous as to which level of contribution they describe.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000150 "has_contributor"@en)
InverseObjectProperties(obo:SEPIO_0000150 obo:SEPIO_0000188)
ObjectPropertyRange(obo:SEPIO_0000150 <http://www.w3.org/ns/prov#Agent>)

# Object Property: obo:SEPIO_0000151 (validated_by)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000151 "A relation holding between a statement and an agent that validates its truth or accuracy - typically by reviewing the provenance and data on which it is based.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000151 "validity_assessed_by"@en)
AnnotationAssertion(rdfs:label obo:SEPIO_0000151 "validated_by")
SubObjectPropertyOf(obo:SEPIO_0000151 obo:SEPIO_0000150)

# Object Property: obo:SEPIO_0000152 (obsolete_evidence_assessed_by)

AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000152 "evidence_strength_assessed_by")
AnnotationAssertion(obo:IAO_0000231 obo:SEPIO_0000152 "ClinGen not using this, as they create contrigution objects and assign roles to capture such information.  Can bring it back if there is need in some other use case/application.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000152 "obsolete_evidence_assessed_by"@en)
AnnotationAssertion(owl:deprecated obo:SEPIO_0000152 "true"^^xsd:boolean)
SubObjectPropertyOf(obo:SEPIO_0000152 oboInOwl:ObsoleteProperty)

# Object Property: obo:SEPIO_0000159 (qualified_contribution)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000159 "A relation holding between an artifact and a contribution made by a particular agent to its creation, modification, assessment, or destruction.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000159 "Consider sup-properties specific to the type of contribuion make, to support property chains for inferring a direct realtiomnship between the artifact/entitiy contributed to, and a related agent or date. At present, we could only support:
   -  qualified_contribution  o  date_of_contribution  -> dc:date

Want to be able to support inferences such as:
  - qualified_creation  o  date_of_contribution -> date_created
  - qualified_evaluation  o  date_of_contribution -> date_evaluated
  - qualified_modification  o  date_of_contribution -> date_modified")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000159 "has_contribution")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000159 "Analogous to PROV qualified Attribution - use to capture additional information about the contribution made by an agent, such as a role they played, or organization on behalf of which the contribution was made.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000159 "qualified_contribution"@en)
ObjectPropertyRange(obo:SEPIO_0000159 obo:SEPIO_0000158)

# Object Property: obo:SEPIO_0000167 (has_confidence_level)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000167 "A relation between an information entity and an indicator of degree of confidence that the information it represents is true.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000167 "trust_rating")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000167 "Confidence in an information entity can mean different things for different types of information.  For example, for assertions this reflects the confidence an agent has that the proposition it puts forth is true.  For things like data items, it reflects the confidence an agent has that the data accurately reflects the aspect of reality its was intended to measure.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000167 "has_confidence_level"@en)
ObjectPropertyDomain(obo:SEPIO_0000167 obo:IAO_0000030)
ObjectPropertyRange(obo:SEPIO_0000167 obo:SEPIO_0000187)

# Object Property: obo:SEPIO_0000169 (performed_for)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000169 "A relation between an agent and an other agent, typically an organization, on whose behalf a Contribution is made.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000169 "performed_on_behalf_of")
AnnotationAssertion(rdfs:label obo:SEPIO_0000169 "performed_for"@en)
ObjectPropertyDomain(obo:SEPIO_0000169 obo:SEPIO_0000158)
ObjectPropertyRange(obo:SEPIO_0000169 <http://www.w3.org/ns/prov#Agent>)

# Object Property: obo:SEPIO_0000178 (is_described_by)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000178 "A relation between one entity and an informtion content entity that provides a description of it.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000178 "Consider: http://semanticscience.org/resource/SIO_000557 ! 'is described by'")
AnnotationAssertion(rdfs:label obo:SEPIO_0000178 "is_described_by"@en)

# Object Property: obo:SEPIO_0000183 (evidence_direction)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000183 "A relation indicating whether an evidence line supports or disputes a target proposition (or represents inconclusive evidence that is not sufficient for either).")
AnnotationAssertion(obo:SEPIO_0000386 obo:SEPIO_0000183 "evidenceDirection")
AnnotationAssertion(rdfs:label obo:SEPIO_0000183 "evidence_direction"@en)
ObjectPropertyDomain(obo:SEPIO_0000183 obo:SEPIO_0000002)
ObjectPropertyRange(obo:SEPIO_0000183 obo:SEPIO_0000402)

# Object Property: obo:SEPIO_0000188 (contributes_to)

AnnotationAssertion(obo:SEPIO_0000386 obo:SEPIO_0000188 "contributesTo")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000188 "A relation between an agent and an entity toward which the agent made a contribution.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000188 "contributes_to"@en)

# Object Property: obo:SEPIO_0000189 (has_evidence)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000189 "A  relation that directly connects an assertion and an evidence item that contributes to one or more of its evidence  lines. This evidence provided by this item may support or dispute the target assertion.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000189 "assertion_has_evidence_item")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000189 "has_evidence_information")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000189 "has_evidence_line_with_item")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000189 "This relation can be used to link an assertion directly to evidence items that support it. Evidence items are typically organized into 'evidence lines' that group them according to the argument(s) to which they contribute.  This shortcut  relation supports use cases where it is desirable to elide over this level of organization and create direct links from an assertion to the fundamental pieces of information that represent evidence supporting it.

A property chain (has_evidence_line o has_evidence_item -> has_evidence_with_item) is defined that can be used to infer this direct edge, facilitating interoperability between data sets that do and don't implement evidence lines to organize evidence items.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000189 "has_evidence"@en)
ObjectPropertyDomain(obo:SEPIO_0000189 ObjectUnionOf(obo:SEPIO_0000000 obo:SEPIO_0000001))
ObjectPropertyRange(obo:SEPIO_0000189 obo:SEPIO_0000149)

# Object Property: obo:SEPIO_0000197 (asserted_conclusion)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000197 "A relationship that holds between an assertion and a term that summarizes its asserted conclusion.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000197 "asserted_outcome")
AnnotationAssertion(obo:SEPIO_0000386 obo:SEPIO_0000197 "assertedConclusion")
AnnotationAssertion(rdfs:label obo:SEPIO_0000197 "asserted_conclusion"@en)
ObjectPropertyDomain(obo:SEPIO_0000197 obo:SEPIO_0000001)

# Object Property: obo:SEPIO_0000232 (obsolete_has_quantifier)

AnnotationAssertion(obo:IAO_0000231 obo:SEPIO_0000232 "Deprecate until there is a specific use case requiring this relation.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000232 "obsolete_has_quantifier"@en)
AnnotationAssertion(owl:deprecated obo:SEPIO_0000232 "true"^^xsd:boolean)
SubObjectPropertyOf(obo:SEPIO_0000232 oboInOwl:ObsoleteProperty)

# Object Property: obo:SEPIO_0000257 (describes_study_data)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000257 "A relation that holds between a study finding and a data item it describes (i.e. a data item generated by the study whose results are described by the finding).")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000257 "describes_supporting_data"@en)
AnnotationAssertion(rdfs:label obo:SEPIO_0000257 "describes_study_data")
SubObjectPropertyOf(obo:SEPIO_0000257 obo:IAO_0000136)
ObjectPropertyDomain(obo:SEPIO_0000257 obo:SEPIO_0000173)
ObjectPropertyRange(obo:SEPIO_0000257 obo:IAO_0000030)

# Object Property: obo:SEPIO_0000376 (evidence_item_for)

AnnotationAssertion(obo:SEPIO_0000386 obo:SEPIO_0000376 "evidenceItemFor")
AnnotationAssertion(rdfs:label obo:SEPIO_0000376 "evidence_item_for")
ObjectPropertyDomain(obo:SEPIO_0000376 obo:SEPIO_0000149)
ObjectPropertyRange(obo:SEPIO_0000376 obo:SEPIO_0000002)

# Object Property: obo:SEPIO_0000387 (created_by)

AnnotationAssertion(obo:IAO_0000112 obo:SEPIO_0000387 "As an example, consider the assertion that \"Variant X causes Disease Y\".  At an abstract level this represents a bfo: information content entity (or frbr:Work). This abstract assertion can be concretized / encoded  various formats - e.g. a free-text sentence, an rdf graph, a blob of json, or stanza of XML. Each such manifestation might use a different model or structure to represent this knowledge. Each such concrete form is considered a separate resource/digital artifact at the 'manifestation' level, but each expresses the same knowledge.

The authored_by and date_authored properties allow us connect an abstract or concrete representation of this assertion to who and when the knowledge was originally generated. This will be the same agent and date for all formats/manifestations listed above.

The created_by and date_created properties allow us to connect a representation of the abstract or concrete assertion to who and when the specific manifestation was created in a particular format. The agent/dates here will be different for each of the formats/manifestations listed above.")
AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000387 "A relation between a particular information resource / digital artifact and an agent who made a primary contribution to its original creation.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000387 "With respect to information resources, this property is used to capture a creator of a particular representation/manifestation of the information content  - e.g. as a web resource or digital artifact.  To describe the creator of the information content carried by such a digital artifact or resource, us the 'authored_by' property.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000387 "created_by"@en)
SubObjectPropertyOf(obo:SEPIO_0000387 obo:SEPIO_0000150)

# Object Property: obo:SEPIO_0000388 (has_subject)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000388 "A relation that holds between a statement or proposition which can be captured in part or in whole as a directional relationship between two entities, and the entity that representing the subject of this relationship.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000388 "has_subject"@en)
SubObjectPropertyOf(obo:SEPIO_0000388 obo:IAO_0000136)

# Object Property: obo:SEPIO_0000389 (has_predicate)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000389 "A relation that holds between a statement or proposition which can be captured in part or in whole as a directional relationship between two entities, and the property serving as the predicate in this relationship.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000389 "has_predicate"@en)
SubObjectPropertyOf(obo:SEPIO_0000389 obo:IAO_0000136)

# Object Property: obo:SEPIO_0000390 (has_object)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000390 "A relation that holds between a statement or proposition which can be captured in part or in whole as a directional relationship between two entities, and the entity that representing the object or value of this relationship.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000390 "has_object"@en)
SubObjectPropertyOf(obo:SEPIO_0000390 obo:IAO_0000136)

# Object Property: obo:SEPIO_0000398 (has_evidence_of_type)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000398 "A shortcut relation that links an assertion directly to a term representing the type of evidence that supports it.")
AnnotationAssertion(obo:SEPIO_0000399 obo:SEPIO_0000398 "true"^^xsd:boolean)
AnnotationAssertion(rdfs:comment obo:SEPIO_0000398 "Relation expands to has_evidence_line o rdf:type -> has_evidence_type")
AnnotationAssertion(rdfs:label obo:SEPIO_0000398 "has_evidence_of_type"@en)

# Object Property: obo:SEPIO_0000406 (ExploratoryObjectProperty)

AnnotationAssertion(rdfs:label obo:SEPIO_0000406 "ExploratoryObjectProperty"@en)

# Object Property: obo:SEPIO_0000407 (specified_creation_of)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000407 "A relation holding between a plan specification and a planned process it specifies, or the artifact the process generates.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000407 "specified_creation_of"@en)
ObjectPropertyDomain(obo:SEPIO_0000407 obo:IAO_0000104)

# Object Property: obo:SEPIO_0000415 (information_quality)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000415 "A relation describing the quality of a piece of information, wich may or may not be used as evidence by an agent making an assertion.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000415 "This property is used to indicate the inherent quality of a piece of data, based on the rigor of the experiment that produced it.  It is not a direct indicator of the strength of evidence the data may provide for an assertion.

The value of this property is typically a term from some defined set of values that enumerates categorical degrees of quality (e.g. the CIViC five star 'trust rating' scale) Different systems or applications can create terms representing the levels of quality they wish to define for their use case.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000415 "information_quality")
ObjectPropertyDomain(obo:SEPIO_0000415 obo:IAO_0000030)

# Object Property: obo:SEPIO_0000427 (is_evidence_line_for)

AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000427 "evidence_for")
AnnotationAssertion(rdfs:label obo:SEPIO_0000427 "is_evidence_line_for"@en)

# Object Property: obo:SEPIO_0000437 (provided_by)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000437 "A relationship between an information resource found in some information system, and the agent (person, organization, computational agent) who is responsible for sharing/providing it to that information system.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000437 "Consider: pav:providedBy")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000437 "Note that this property connects a resource to an agent, not to some other information resource from which it came (e.g. another database or an API from which the resource in question was obtained).  Use the 'source' property to capture this type of relationship.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000437 "provided_by")

# Object Property: obo:SEPIO_0000438 (has_supporting_evidence_from_source)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000438 "A relation used to link an assertion or proposition to a source where supporting evidence for it was found (i.e. a document, document part, database, etc)")
AnnotationAssertion(rdfs:label obo:SEPIO_0000438 "has_supporting_evidence_from_source"@en)
SubObjectPropertyOf(obo:SEPIO_0000438 obo:SEPIO_0000145)

# Object Property: obo:SEPIO_0000439 (has_disputing_evidence_from_source)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000439 "A relation used to link an assertion or proposition to a source where disputing evidence for it was found (i.e. a document, document part, database, etc)")
AnnotationAssertion(rdfs:label obo:SEPIO_0000439 "has_disputing_evidence_from_source"@en)
SubObjectPropertyOf(obo:SEPIO_0000439 obo:SEPIO_0000145)

# Object Property: obo:SEPIO_0000440 (has_supporting_evidence)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000440 "A relation that directly connects an assertion and a piece of information that contributes to an evidence line interpreted to support the truth of the assertion.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000440 "has_supporting_evidence"@en)
SubObjectPropertyOf(obo:SEPIO_0000440 obo:SEPIO_0000189)

# Object Property: obo:SEPIO_0000441 (has_disputing_evidence)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000441 "A relation that directly connects an assertion and a piece of information that contributes to an evidence line interpreted to dispute the truth of the assertion.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000441 "has_disputing_evidence"@en)
SubObjectPropertyOf(obo:SEPIO_0000441 obo:SEPIO_0000189)

# Object Property: obo:SEPIO_0000442 (reference)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000442 "Links an entity to a document that describes it.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000442 "reference"@en)

# Object Property: obo:STATO_0000102 (executes)

AnnotationAssertion(rdfs:label obo:STATO_0000102 "executes")

# Object Property: <http://purl.org/oban/association_has_object> (association has object)

AnnotationAssertion(obo:IAO_0000116 <http://purl.org/oban/association_has_object> "Propositional statements can be represented in RDF as directional subject-predicate-object (S-P-O) triples. RDF reification vocabularies such as OBAN create named individuals in a graph that represent such S-P-O propositional statements. In OBAN, these are called 'associations', and the semantics of these associations can be represented using properties that link it to the subject, predicate, and object of the triple it represents.

This property is defined by OBAN to specifically link 'associations', which are proposition-level entities, to their object (sensu RDF).  It is therefore a more specific relation than its has_object parent, which can be used to link a statement or proposition to its object.")
AnnotationAssertion(rdfs:label <http://purl.org/oban/association_has_object> "association has object")
SubObjectPropertyOf(<http://purl.org/oban/association_has_object> obo:SEPIO_0000390)
ObjectPropertyDomain(<http://purl.org/oban/association_has_object> <http://purl.org/oban/association>)

# Object Property: <http://purl.org/oban/association_has_predicate> (association has predicate)

AnnotationAssertion(obo:IAO_0000116 <http://purl.org/oban/association_has_predicate> "Propositional statements can be represented in RDF as directional subject-predicate-object (S-P-O) triples. RDF reification vocabularies such as OBAN create named individuals in a graph that represent such S-P-O propositional statements. In OBAN, these are called 'associations', and the semantics of these associations can be represented using properties that link it to the subject, predicate, and object of the triple it represents.

This property is defined by OBAN to specifically link 'associations', which are proposition-level entities, to the property representing the predicate of the reified triple.  It is therefore a more specific relation than its has_predicate parent, which can be used to link a statement or proposition to its predicate.")
AnnotationAssertion(rdfs:label <http://purl.org/oban/association_has_predicate> "association has predicate"@en)
SubObjectPropertyOf(<http://purl.org/oban/association_has_predicate> obo:SEPIO_0000389)
ObjectPropertyDomain(<http://purl.org/oban/association_has_predicate> <http://purl.org/oban/association>)

# Object Property: <http://purl.org/oban/association_has_subject> (association has subject)

AnnotationAssertion(obo:IAO_0000116 <http://purl.org/oban/association_has_subject> "Propositional statements can be represented in RDF as directional subject-predicate-object (S-P-O) triples. RDF reification vocabularies such as OBAN create named individuals in a graph that represent such S-P-O propositional statements. In OBAN, these are called 'associations', and the semantics of these associations can be represented using properties that link it to the subject, predicate, and object of the triple it represents.

This property is defined by OBAN to specifically link 'associations', which are proposition-level entities, to their subject (sensu RDF).  It is therefore a more specific relation than its has_subject parent, which can be used to link a statement or proposition to its subject.")
AnnotationAssertion(rdfs:label <http://purl.org/oban/association_has_subject> "association has subject")
SubObjectPropertyOf(<http://purl.org/oban/association_has_subject> obo:SEPIO_0000388)
ObjectPropertyDomain(<http://purl.org/oban/association_has_subject> <http://purl.org/oban/association>)

# Object Property: <http://purl.org/pav/authoredBy> (Authored by)

AnnotationAssertion(rdfs:comment <http://purl.org/pav/authoredBy> "An agent that originated or gave existence to the work that is expressed by the digital resource.

The author of the content of a resource may be different from the creator of the resource representation (although they are often the same). See pav:createdBy for a discussion.

pav:authoredBy is more specific than its superproperty dct:creator - which might or might not be interpreted to also cover the creation of the representation of the artifact.

The author is usually not a software agent (which would be indicated with pav:createdWith, pav:createdBy or pav:importedBy), unless the software actually authored the content itself; for instance an artificial intelligence algorithm which authored a piece of music or a machine learning algorithm that authored a classification of a tumor sample.

The date of authoring can be expressed using pav:authoredOn - note however in the case of multiple authors that there is no relationship in PAV identifying which agent contributed when or what. If capturing such lineage is desired, it should be additionally expressed using PROV relationships like prov:qualifiedAttribution or prov:wasGeneratedBy.")
AnnotationAssertion(rdfs:label <http://purl.org/pav/authoredBy> "Authored by")
SubObjectPropertyOf(<http://purl.org/pav/authoredBy> oboInOwl:ObsoleteProperty)

# Object Property: <http://purl.org/pav/createdBy> (Created by)

AnnotationAssertion(obo:IAO_0000116 <http://purl.org/pav/createdBy> "SEPIO creates this relation distinct from existing PAV and PROV relations (e.g. pcav:createdBy), which are too specific about whether a relation refers to the agent who created the abstract information content, vs who serialized and documented in concrete form.")
AnnotationAssertion(oboInOwl:hasDbXref <http://purl.org/pav/createdBy> "http://purl.org/dc/terms/creator")
AnnotationAssertion(rdfs:comment <http://purl.org/pav/createdBy> "An agent primary responsible for making the digital artifact or resource representation. 
This property is distinct from forming the content, which is indicated with pav:contributedBy or its subproperties; pav:authoredBy, which identifies who authored the knowledge expressed by this resource; and pav:curatedBy, which identifies who curated the knowledge into its current form. 
pav:createdBy is more specific than its superproperty dct:creator - which might or might not be interpreted to cover this creator. 
For instance, the author wrote 'this species has bigger wings than normal' in his log book. The curator, going through the log book and identifying important knowledge, formalizes this as 'locus perculus has wingspan > 0.5m'. The creator enters this knowledge as a digital resource in the knowledge system, thus creating the digital artifact (say as JSON, RDF, XML or HTML). 
A different example is a news article. pav:authoredBy indicates the journalist who wrote the article. pav:contributedBy can indicate the artist who added an illustration. pav:curatedBy can indicate the editor who made the article conform to the news paper's style. pav:createdBy can indicate who put the article on the web site.
The software tool used by the creator to make the digital resource (say Protege, Wordpress or OpenOffice) can be indicated with pav:createdWith.

The date the digital resource was created can be indicated with pav:createdOn.

The location the agent was at when creating the digital resource can be made using pav:createdAt.")
AnnotationAssertion(rdfs:label <http://purl.org/pav/createdBy> "Created by"@en)
SubObjectPropertyOf(<http://purl.org/pav/createdBy> oboInOwl:ObsoleteProperty)

# Object Property: <http://purl.org/pav/curatedBy> (Curated by)

AnnotationAssertion(obo:IAO_0000115 <http://purl.org/pav/curatedBy> "Specifies an agent specialist responsible for shaping the expression in an appropriate format. Often the primary agent responsible for ensuring the quality of the representation.

The curator may be different from the author (pav:authoredBy) and creator of the digital resource (pav:createdBy).

The curator may in some cases be a software agent, for instance text mining software which adds hyperlinks for recognized genome names.

The date of curating can be expressed using pav:curatedOn - note however in the case of multiple curators that there is no relationship in PAV identifying which agent contributed when or what. If capturing such lineage is desired, it should be additionally expressed using PROV relationships like prov:qualifiedAttribution or prov:wasGeneratedBy")
AnnotationAssertion(rdfs:label <http://purl.org/pav/curatedBy> "Curated by"@en)
SubObjectPropertyOf(<http://purl.org/pav/curatedBy> oboInOwl:ObsoleteProperty)

# Object Property: <http://purl.org/pav/derivedFrom> (Derived from)

AnnotationAssertion(rdfs:comment <http://purl.org/pav/derivedFrom> "Derived from a different resource.

Derivation conserns itself with derived knowledge. If this resource has the same content as the other resource, but has simply been transcribed to fit a different model (like XML -> RDF or SQL -> CVS), use pav:importedFrom. If a resource was simply retrieved, use pav:retrievedFrom. If the content has however been further refined or modified, pav:derivedFrom should be used.

Details about who performed the derivation (e.g. who did the refining or modifications) may be indicated with pav:contributedBy and its subproperties.")
AnnotationAssertion(rdfs:label <http://purl.org/pav/derivedFrom> "Derived from")
SubObjectPropertyOf(<http://purl.org/pav/derivedFrom> terms:source)

# Object Property: <http://purl.org/pav/importedFrom> (Imported from)

AnnotationAssertion(obo:IAO_0000115 <http://purl.org/pav/importedFrom> "The original source of imported information.

Import means that the content has been preserved, but transcribed somehow, for instance to fit a different representation model by converting formats. Examples of import are when the original was JSON and the current resource is RDF, or where the original was an document scan, and this resource is the plain text found through OCR.

The imported resource does not have to be complete, but should be consistent with the knowledge conveyed by the original resource.

If additional knowledge has been contributed, pav:derivedFrom would be more appropriate.

If the resource has been copied verbatim from the original representation (e.g. downloaded), use pav:retrievedFrom.

To indicate which agent(s) performed the import, use pav:importedBy. Use pav:importedOn to indicate when it happened.")
AnnotationAssertion(rdfs:label <http://purl.org/pav/importedFrom> "Imported from"@en)
SubObjectPropertyOf(<http://purl.org/pav/importedFrom> terms:source)

# Object Property: <http://purl.org/pav/retrievedFrom> (Retrieved from)

AnnotationAssertion(rdfs:comment <http://purl.org/pav/retrievedFrom> "The URI where a resource has been retrieved from.

The retrieving agent is usually a software entity, which has done the retrieval from the original source without performing any transcription.

Retrieval indicates that this resource has the same representation as the original resource. If the resource has been somewhat transformed, use pav:importedFrom instead.

The time of the retrieval should be indicated using pav:retrievedOn. The agent may be indicated with pav:retrievedBy.")
AnnotationAssertion(rdfs:label <http://purl.org/pav/retrievedFrom> "Retrieved from")
SubObjectPropertyOf(<http://purl.org/pav/retrievedFrom> terms:source)

# Object Property: <http://purl.org/pav/sourceAccessedAt> (Source accessed at)

AnnotationAssertion(rdfs:comment <http://purl.org/pav/sourceAccessedAt> "The resource is related to a given source which was accessed or consulted (but not retrieved, imported or derived from). This access can be detailed with pav:sourceAccessedBy and pav:sourceAccessedOn.

For instance, a curator (pav:curatedBy) might have consulted figures in a published paper to confirm that a dataset was correctly pav:importedFrom the paper's supplementary CSV file.

Another example: I can access the page for tomorrow weather in Boston (http://www.weather.com/weather/tomorrow/Boston+MA+02143)  and I can blog ‘tomorrow is going to be nice’. The source does not make any claims about the nice weather, that is my interpretation; therefore the blog post has pav:sourceAccessedAt the weather page.")
AnnotationAssertion(rdfs:label <http://purl.org/pav/sourceAccessedAt> "Source accessed at")
SubObjectPropertyOf(<http://purl.org/pav/sourceAccessedAt> oboInOwl:ObsoleteProperty)


############################
#   Data Properties
############################

# Data Property: obo:ERO_0000480 (has_url)

AnnotationAssertion(obo:IAO_0000115 obo:ERO_0000480 "Web address of the resource")
AnnotationAssertion(rdfs:label obo:ERO_0000480 "has_url"@en)

# Data Property: obo:SEPIO_0000021 (obsolete_date_created)

AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000021 "SEPIO creates a relation separate from existing PAV and PROV relations (e.g. pav:createdOn) which are too specific about whether a relation refers to the date on which the abstract information content was created, or when it was serialized and documented as a concrete digital artifact or resource with a particular format.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000021 "created_on")
AnnotationAssertion(obo:SEPIO_0000052 obo:SEPIO_0000021 "Consider: 

1. http://purl.org/dc/terms/created

2. http://purl.org/pav/createdOn ! Created on
Def: The date of creation of the resource representation.  The agents responsible can be indicated with pav:createdBy. This property is normally used in a functional way, indicating the time of creation, although PAV does not formally restrict this. pav:lastUpdateOn can be used to indicate minor updates that did not affect the creating date. 

3. prov:generatedAtTime: The time at which an entity was completely created and is available for use.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000021 "obsolete_date_created"@en)
AnnotationAssertion(owl:deprecated obo:SEPIO_0000021 "true"^^xsd:boolean)

# Data Property: obo:SEPIO_0000036 (date_modified)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000036 "The date that a particular resource or artifact was last modified or updated.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000036 "date_last_updated")
AnnotationAssertion(obo:SEPIO_0000052 obo:SEPIO_0000036 "http://purl.org/dc/terms/modified ! Date Modified
Definition: Date on which the resource was changed.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000036 "Examples of modification include adding or removing content to/from a document, updating information in a data record, fixing errors in a manuscript, etc. The important thing is that the modification retains the identity of the artifact.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000036 "date_modified"@en)
SubDataPropertyOf(obo:SEPIO_0000036 terms:date)
DataPropertyDomain(obo:SEPIO_0000036 obo:BFO_0000002)

# Data Property: obo:SEPIO_0000040 (date_evaluated)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000040 "The date that a particular resource or artifact was last evaluated -  typically to assess its quality, completeness, accuracy, conformance, etc.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000040 "Evaluating an artifact does not involve its modification - however the suggestion of alterations can be a separate outcome of an evaluation. If the artifact is modified by the agent during or subsequent to the evaluation, this date can be captured using the date_modified property.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000040 "date_evaluated"@en)
SubDataPropertyOf(obo:SEPIO_0000040 terms:date)
DataPropertyDomain(obo:SEPIO_0000040 obo:BFO_0000002)

# Data Property: obo:SEPIO_0000051 (date_submitted)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000051 "The date that a particular resource or artifact was formally submitted to be reviewed and/or included in some larger resource (e.g. database, registry, collection, etc.).")
AnnotationAssertion(obo:SEPIO_0000052 obo:SEPIO_0000051 "http://purl.org/dc/terms/dateSubmitted")
AnnotationAssertion(rdfs:label obo:SEPIO_0000051 "date_submitted"@en)
SubDataPropertyOf(obo:SEPIO_0000051 terms:date)
DataPropertyDomain(obo:SEPIO_0000051 obo:BFO_0000002)

# Data Property: obo:SEPIO_0000063 (start_date)

AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000063 "Consider: http://www.w3.org/ns/prov#startedAtTime")
AnnotationAssertion(rdfs:label obo:SEPIO_0000063 "start_date"@en)
SubDataPropertyOf(obo:SEPIO_0000063 obo:SEPIO_0000160)
DataPropertyDomain(obo:SEPIO_0000063 obo:BFO_0000015)

# Data Property: obo:SEPIO_0000105 (date_created_before)

AnnotationAssertion(rdfs:label obo:SEPIO_0000105 "date_created_before"@en)
SubDataPropertyOf(obo:SEPIO_0000105 obo:SEPIO_0000434)

# Data Property: obo:SEPIO_0000123 (has_textual_part)

AnnotationAssertion(rdfs:comment obo:SEPIO_0000123 "Relation between a report and a string of text that it contains")
AnnotationAssertion(rdfs:label obo:SEPIO_0000123 "has_textual_part"@en)

# Data Property: obo:SEPIO_0000135 (date_authored)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000135 "A relation holding between an information content entity and the date on which the information it expresses was initially generated.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000135 "Consider http://purl.org/pav/authoredOn")
AnnotationAssertion(rdfs:label obo:SEPIO_0000135 "date_authored"@en)
SubDataPropertyOf(obo:SEPIO_0000135 terms:date)

# Data Property: obo:SEPIO_0000160 (activity_date)

AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000160 "occurredAtTime")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000160 "process_date")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000160 "time_of_activity")
AnnotationAssertion(rdfs:label obo:SEPIO_0000160 "activity_date"@en)
DataPropertyDomain(obo:SEPIO_0000160 obo:BFO_0000015)
DataPropertyRange(obo:SEPIO_0000160 xsd:dateTime)

# Data Property: obo:SEPIO_0000161 (end_date)

AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000161 "Consider: http://www.w3.org/ns/prov#endedAtTime")
AnnotationAssertion(rdfs:label obo:SEPIO_0000161 "end_date"@en)
SubDataPropertyOf(obo:SEPIO_0000161 obo:SEPIO_0000160)

# Data Property: obo:SEPIO_0000162 (obsolete_date_curated)

AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000162 "Consider: http://purl.org/pav/curatedOn

Definition: The date this resource was curated.

pav:curatedBy gives the agent(s) that performed the curation.

This property is normally used in a functional way, indicating the last curation date, although PAV does not formally restrict this.

The value is of type xsd:dateTime, for instance \"2013-03-26T14:49:00+01:00\"^^xsd:dateTime. The timezone information (Z for UTC, +01:00 for UTC+1, etc) SHOULD be included unless unknown. If the time (or parts of time) is unknown, use 00:00:00Z. If the day/month is unknown, use 01-01, for instance, if we only know September 1983, then use \"1983-09-01T00:00:00Z\"^^xsd:dateTime.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000162 "obsolete_date_curated"@en)
AnnotationAssertion(owl:deprecated obo:SEPIO_0000162 "true"^^xsd:boolean)

# Data Property: obo:SEPIO_0000164 (date_updated)

AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000164 "Consider: http://purl.org/pav/lastUpdateOn")
AnnotationAssertion(rdfs:label obo:SEPIO_0000164 "date_updated"@en)
SubDataPropertyOf(obo:SEPIO_0000164 terms:date)

# Data Property: obo:SEPIO_0000165 (date_validated)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000165 "The date that a particular resource or digital artifact was formally validated as meeting some standard for  quality, completeness, relevance, etc..")
AnnotationAssertion(rdfs:label obo:SEPIO_0000165 "date_validated"@en)
SubDataPropertyOf(obo:SEPIO_0000165 terms:date)
DataPropertyDomain(obo:SEPIO_0000165 obo:SEPIO_0000001)

# Data Property: obo:SEPIO_0000168 (has_confidence_score)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000168 "A quantitative value that can be interpreted as an indicator of the degree of confidence that a piece of information is true, and accurately reflects the aspect of reality it is about.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000168 "This property has a similar intent as assertion_confidence_level, but used for quantitative numerical values.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000168 "The 'confidence score' property does not only include statistical measures such as p-values that explicitly indicate a level of confidence. It also includes any quantitative score against which a threshold for making an assertion is defined - where the distance of this score from this threshold can be interpreted as an indicator of how much confidence we might have that the asserted conclusion is true.  

For example, many silico prediction tools such as SIFT interrogate biological sequence data to calculate a score that reflects the likelihood that a particular sequence variant negatively impacts gene product function.  A variant is interpreted to be 'Tolerated', 'Damaging', or 'Deleterious' based on how its score compares against pre-defined thresholds. Here, we may have less confidence that a variant with a score just above the 'Damaging' threshold is truly damaging, versus a variant whose score is well above the threshold.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000168 "has_confidence_score"@en)
DataPropertyDomain(obo:SEPIO_0000168 obo:IAO_0000030)

# Data Property: obo:SEPIO_0000231 (statement quantifier)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000231 "A relation used to link a statement to some quantitative measure about the statement itself (e.g. a confidence score)")
AnnotationAssertion(rdfs:label obo:SEPIO_0000231 "statement quantifier"@en)

# Data Property: obo:SEPIO_0000346 (statement qualifier)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000346 "A relation used to qualify the meaning of a statement.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000346 "Most commonly used with a \"NOT\" value to negate a statement - i.e. indicate that the claim implied by its strucuted representation is not true.  For example, the negation qualifier on the following OBAN-style association would make the claim that BRCA2 is NOT linked to the phenotype 'abnormal lymphocyte count':

<:assertion1> a OBAN:association;
      OBAN:association_has_object   HP_0040088 (abnormal lymphocyte count);
      OBAN:association_has_predicate   RO:0002200 (has_phenotype);
      OBAN:association_has_subject   HGNC:1101 (BRCA2);
      SEPIO:0000346(quallifier)   \"NOT\".")
AnnotationAssertion(rdfs:label obo:SEPIO_0000346 "statement qualifier"@en)

# Data Property: obo:SEPIO_0000384 (date_created_after)

AnnotationAssertion(rdfs:label obo:SEPIO_0000384 "date_created_after"@en)
SubDataPropertyOf(obo:SEPIO_0000384 obo:SEPIO_0000434)

# Data Property: obo:SEPIO_0000419 (probabilistic quantifier)

AnnotationAssertion(rdfs:label obo:SEPIO_0000419 "probabilistic quantifier"@en)
SubDataPropertyOf(obo:SEPIO_0000419 obo:SEPIO_0000168)

# Data Property: obo:SEPIO_0000429 (evidence_line_strength_score)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000429 "A numerical value that quantifies the strength of evidence provided by a line of evidence. This is a counterpart to the evidence_line_strength object property - for use when the strength of evidence is captured using a quantitiative score/measure.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000429 "evidence_line_strength_score"@en)
DataPropertyDomain(obo:SEPIO_0000429 obo:SEPIO_0000002)

# Data Property: obo:SEPIO_0000433 (activity_location)

AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000433 "occurred_in")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000433 "process_location")
AnnotationAssertion(rdfs:label obo:SEPIO_0000433 "activity_location")

# Data Property: obo:SEPIO_0000434 (ExploratoryDataProperty)

AnnotationAssertion(rdfs:label obo:SEPIO_0000434 "ExploratoryDataProperty")

# Data Property: obo:SEPIO_0000435 (ObsoleteDataProperty)

AnnotationAssertion(rdfs:label obo:SEPIO_0000435 "ObsoleteDataProperty")
AnnotationAssertion(owl:deprecated obo:SEPIO_0000435 "true"^^xsd:boolean)

# Data Property: obo:SEPIO_0000436 (date_created)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000436 "Date that a particular representation/manifestation of an information content entity was created - e.g. as a web resource or digital artifact.  

To describe the date that the information content carried by a digital artifact or resource as generated, use the 'date_authored' property.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000436 "date_created")
SubDataPropertyOf(obo:SEPIO_0000436 terms:date)

# Data Property: obo:STATO_0000129 (has_value)

AnnotationAssertion(obo:SEPIO_0000052 obo:STATO_0000129 "http://www.w3.org/ns/prov#value
'This property serves the same purpose as rdf:value, but has been reintroduced to avoid some of the definitional ambiguity in the RDF specification (specifically, 'may be used in describing structured values'). The editor's definition comes from http://www.w3.org/TR/rdf-primer/#rdfvalue'")
AnnotationAssertion(rdfs:label obo:STATO_0000129 "has_value"@en)

# Data Property: terms:date (date)

AnnotationAssertion(obo:IAO_0000115 terms:date "A point or period of time associated with an event in the lifecycle of an information entity or  resource.")
AnnotationAssertion(obo:IAO_0000116 terms:date "Consider: http://purl.org/pav/contributedOn")
AnnotationAssertion(rdfs:label terms:date "date"@en)
DataPropertyDomain(terms:date obo:BFO_0000002)
DataPropertyRange(terms:date xsd:dateTime)

# Data Property: terms:identifier (identifier)

AnnotationAssertion(rdfs:label terms:identifier "identifier"@en)

# Data Property: <http://purl.org/ontology/bibo/doi> (digital object identifier (doi))

AnnotationAssertion(obo:IAO_0000118 <http://purl.org/ontology/bibo/doi> "doi")
AnnotationAssertion(rdfs:label <http://purl.org/ontology/bibo/doi> "digital object identifier (doi)")
SubDataPropertyOf(<http://purl.org/ontology/bibo/doi> terms:identifier)

# Data Property: <http://purl.org/pav/version> (version)

AnnotationAssertion(rdfs:comment <http://purl.org/pav/version> "The version number of a resource. This is a freetext string, typical values are \"1.5\" or \"21\". The URI identifying the previous version can be provided using prov:previousVersion.

This property is normally used in a functional way, although PAV does not formally restrict this.")
AnnotationAssertion(rdfs:label <http://purl.org/pav/version> "version")

# Data Property: foaf:name (name)

AnnotationAssertion(obo:IAO_0000115 foaf:name "A name for some thing.")
AnnotationAssertion(rdfs:label foaf:name "name")



############################
#   Classes
############################

# Class: obo:BFO_0000001 (entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000001 "entity")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000001 "Entity")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "Julius Caesar"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "Verdi’s Requiem"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "the Second World War"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "your body mass index"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000001 "BFO 2 Reference: In all areas of empirical inquiry we encounter general terms of two sorts. First are general terms which refer to universals or types:animaltuberculosissurgical procedurediseaseSecond, are general terms used to refer to groups of entities which instantiate a given universal but do not correspond to the extension of any subuniversal of that universal because there is nothing intrinsic to the entities in question by virtue of which they – and only they – are counted as belonging to the given group. Examples are: animal purchased by the Emperortuberculosis diagnosed on a Wednesdaysurgical procedure performed on a patient from Stockholmperson identified as candidate for clinical trial #2056-555person who is signatory of Form 656-PPVpainting by Leonardo da VinciSuch terms, which represent what are called ‘specializations’ in [81"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000004>) Annotation(rdfs:comment "per discussion with Barry Smith") Annotation(rdfs:seeAlso <http://www.referent-tracking.com/_RTU/papers/CeustersICbookRevised.pdf>) obo:IAO_0000116 obo:BFO_0000001 "Entity doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. For example Werner Ceusters 'portions of reality' include 4 sorts, entities (as BFO construes them), universals, configurations, and relations. It is an open question as to whether entities as construed in BFO will at some point also include these other portions of reality. See, for example, 'How to track absolutely everything' at http://www.referent-tracking.com/_RTU/papers/CeustersICbookRevised.pdf"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/001-001>) obo:IAO_0000600 obo:BFO_0000001 "An entity is anything that exists or has existed or will exist. (axiom label in BFO2 Reference: [001-001])"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000001 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000001 "entity"@en)

# Class: obo:BFO_0000002 (continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000002 "continuant")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000002 "Continuant")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000002 "An entity that exists in full at any time in which it exists at all, persists through time while maintaining its identity and has no temporal parts."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000002 "BFO 2 Reference: Continuant entities are entities which can be sliced to yield parts only along the spatial dimension, yielding for example the parts of your table which we call its legs, its top, its nails. ‘My desk stretches from the window to the door. It has spatial parts, and can be sliced (in space) in two. With respect to time, however, a thing is a continuant.’ [60, p. 240"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000007>) obo:IAO_0000116 obo:BFO_0000002 "Continuant doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. For example, in an expansion involving bringing in some of Ceuster's other portions of reality, questions are raised as to whether universals are continuants"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/008-002>) obo:IAO_0000600 obo:BFO_0000002 "A continuant is an entity that persists, endures, or continues to exist through time while maintaining its identity. (axiom label in BFO2 Reference: [008-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/126-001>) obo:IAO_0000601 obo:BFO_0000002 "if b is a continuant and if, for some t, c has_continuant_part b at t, then c is a continuant. (axiom label in BFO2 Reference: [126-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/009-002>) obo:IAO_0000601 obo:BFO_0000002 "if b is a continuant and if, for some t, cis continuant_part of b at t, then c is a continuant. (axiom label in BFO2 Reference: [009-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/011-002>) obo:IAO_0000601 obo:BFO_0000002 "if b is a material entity, then there is some temporal interval (referred to below as a one-dimensional temporal region) during which b exists. (axiom label in BFO2 Reference: [011-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/009-002>) obo:IAO_0000602 obo:BFO_0000002 "(forall (x y) (if (and (Continuant x) (exists (t) (continuantPartOfAt y x t))) (Continuant y))) // axiom label in BFO2 CLIF: [009-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/126-001>) obo:IAO_0000602 obo:BFO_0000002 "(forall (x y) (if (and (Continuant x) (exists (t) (hasContinuantPartOfAt y x t))) (Continuant y))) // axiom label in BFO2 CLIF: [126-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/008-002>) obo:IAO_0000602 obo:BFO_0000002 "(forall (x) (if (Continuant x) (Entity x))) // axiom label in BFO2 CLIF: [008-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/011-002>) obo:IAO_0000602 obo:BFO_0000002 "(forall (x) (if (Material Entity x) (exists (t) (and (TemporalRegion t) (existsAt x t))))) // axiom label in BFO2 CLIF: [011-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000002 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000002 "continuant"@en)
SubClassOf(obo:BFO_0000002 obo:BFO_0000001)
SubClassOf(obo:BFO_0000002 ObjectAllValuesFrom(obo:BFO_0000050 obo:BFO_0000002))
DisjointClasses(obo:BFO_0000002 obo:BFO_0000003)
DisjointClasses(obo:BFO_0000002 ObjectSomeValuesFrom(obo:BFO_0000050 obo:BFO_0000003))

# Class: obo:BFO_0000003 (occurrent)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000003 "occurrent")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000003 "Occurrent")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000003 "An entity that has temporal parts and that happens, unfolds or develops through time."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000003 "BFO 2 Reference: every occurrent that is not a temporal or spatiotemporal region is s-dependent on some independent continuant that is not a spatial region"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000003 "BFO 2 Reference: s-dependence obtains between every process and its participants in the sense that, as a matter of necessity, this process could not have existed unless these or those participants existed also. A process may have a succession of participants at different phases of its unfolding. Thus there may be different players on the field at different times during the course of a football game; but the process which is the entire game s-depends_on all of these players nonetheless. Some temporal parts of this process will s-depend_on on only some of the players."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000006>) Annotation(rdfs:comment "per discussion with Barry Smith") obo:IAO_0000116 obo:BFO_0000003 "Occurrent doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. An example would be the sum of a process and the process boundary of another process."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000012>) obo:IAO_0000116 obo:BFO_0000003 "Simons uses different terminology for relations of occurrents to regions: Denote the spatio-temporal location of a given occurrent e by 'spn[e]' and call this region its span. We may say an occurrent is at its span, in any larger region, and covers any smaller region. Now suppose we have fixed a frame of reference so that we can speak not merely of spatio-temporal but also of spatial regions (places) and temporal regions (times). The spread of an occurrent, (relative to a frame of reference) is the space it exactly occupies, and its spell is likewise the time it exactly occupies. We write 'spr[e]' and `spl[e]' respectively for the spread and spell of e, omitting mention of the frame.")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/077-002>) obo:IAO_0000600 obo:BFO_0000003 "An occurrent is an entity that unfolds itself in time or it is the instantaneous boundary of such an entity (for example a beginning or an ending) or it is a temporal or spatiotemporal region which such an entity occupies_temporal_region or occupies_spatiotemporal_region. (axiom label in BFO2 Reference: [077-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/108-001>) obo:IAO_0000601 obo:BFO_0000003 "Every occurrent occupies_spatiotemporal_region some spatiotemporal region. (axiom label in BFO2 Reference: [108-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/079-001>) obo:IAO_0000601 obo:BFO_0000003 "b is an occurrent entity iff b is an entity that has temporal parts. (axiom label in BFO2 Reference: [079-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/108-001>) obo:IAO_0000602 obo:BFO_0000003 "(forall (x) (if (Occurrent x) (exists (r) (and (SpatioTemporalRegion r) (occupiesSpatioTemporalRegion x r))))) // axiom label in BFO2 CLIF: [108-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/079-001>) obo:IAO_0000602 obo:BFO_0000003 "(forall (x) (iff (Occurrent x) (and (Entity x) (exists (y) (temporalPartOf y x))))) // axiom label in BFO2 CLIF: [079-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000003 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000003 "occurrent"@en)
SubClassOf(obo:BFO_0000003 obo:BFO_0000001)
SubClassOf(obo:BFO_0000003 ObjectAllValuesFrom(obo:BFO_0000050 obo:BFO_0000003))
DisjointClasses(obo:BFO_0000003 ObjectSomeValuesFrom(obo:BFO_0000050 obo:BFO_0000002))

# Class: obo:BFO_0000004 (independent continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000004 "ic")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000004 "IndependentContinuant")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a chair"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a heart"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a leg"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a molecule"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a spatial region"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "an atom"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "an orchestra."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "an organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "the bottom right portion of a human torso"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "the interior of your mouth"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000004 "A continuant that is a bearer of quality and realizable entity entities, in which other entities inhere and which itself cannot inhere in anything."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/017-002>) obo:IAO_0000115 obo:BFO_0000004 "b is an independent continuant = Def. b is a continuant which is such that there is no c and no t such that b s-depends_on c at t. (axiom label in BFO2 Reference: [017-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/134-001>) obo:IAO_0000601 obo:BFO_0000004 "For any independent continuant b and any time t there is some spatial region r such that b is located_in r at t. (axiom label in BFO2 Reference: [134-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/018-002>) obo:IAO_0000601 obo:BFO_0000004 "For every independent continuant b and time t during the region of time spanned by its life, there are entities which s-depends_on b during t. (axiom label in BFO2 Reference: [018-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/134-001>) obo:IAO_0000602 obo:BFO_0000004 "(forall (x t) (if (IndependentContinuant x) (exists (r) (and (SpatialRegion r) (locatedInAt x r t))))) // axiom label in BFO2 CLIF: [134-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/018-002>) obo:IAO_0000602 obo:BFO_0000004 "(forall (x t) (if (and (IndependentContinuant x) (existsAt x t)) (exists (y) (and (Entity y) (specificallyDependsOnAt y x t))))) // axiom label in BFO2 CLIF: [018-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/017-002>) obo:IAO_0000602 obo:BFO_0000004 "(iff (IndependentContinuant a) (and (Continuant a) (not (exists (b t) (specificallyDependsOnAt a b t))))) // axiom label in BFO2 CLIF: [017-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000004 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000004 "independent continuant"@en)
SubClassOf(obo:BFO_0000004 obo:BFO_0000002)
SubClassOf(obo:BFO_0000004 ObjectAllValuesFrom(obo:BFO_0000050 obo:BFO_0000004))
DisjointClasses(obo:BFO_0000004 obo:BFO_0000020)
DisjointClasses(obo:BFO_0000004 obo:BFO_0000031)

# Class: obo:BFO_0000015 (process)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000015 "process")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000015 "Process")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "a process of cell-division, \\ a beating of the heart"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "a process of meiosis"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "a process of sleeping"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "the course of a disease"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "the flight of a bird"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "the life of an organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "your process of aging."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000015 "An occurrent that has temporal proper parts and for some time t, p s-depends_on some material entity at t."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/083-003>) obo:IAO_0000115 obo:BFO_0000015 "p is a process = Def. p is an occurrent that has temporal proper parts and for some time t, p s-depends_on some material entity at t. (axiom label in BFO2 Reference: [083-003])"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000015 "BFO 2 Reference: The realm of occurrents is less pervasively marked by the presence of natural units than is the case in the realm of independent continuants. Thus there is here no counterpart of ‘object’. In BFO 1.0 ‘process’ served as such a counterpart. In BFO 2.0 ‘process’ is, rather, the occurrent counterpart of ‘material entity’. Those natural – as contrasted with engineered, which here means: deliberately executed – units which do exist in the realm of occurrents are typically either parasitic on the existence of natural units on the continuant side, or they are fiat in nature. Thus we can count lives; we can count football games; we can count chemical reactions performed in experiments or in chemical manufacturing. We cannot count the processes taking place, for instance, in an episode of insect mating behavior.Even where natural units are identifiable, for example cycles in a cyclical process such as the beating of a heart or an organism’s sleep/wake cycle, the processes in question form a sequence with no discontinuities (temporal gaps) of the sort that we find for instance where billiard balls or zebrafish or planets are separated by clear spatial gaps. Lives of organisms are process units, but they too unfold in a continuous series from other, prior processes such as fertilization, and they unfold in turn in continuous series of post-life processes such as post-mortem decay. Clear examples of boundaries of processes are almost always of the fiat sort (midnight, a time of death as declared in an operating theater or on a death certificate, the initiation of a state of war)"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/083-003>) obo:IAO_0000602 obo:BFO_0000015 "(iff (Process a) (and (Occurrent a) (exists (b) (properTemporalPartOf b a)) (exists (c t) (and (MaterialEntity c) (specificallyDependsOnAt a c t))))) // axiom label in BFO2 CLIF: [083-003] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000015 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000015 "process"@en)
SubClassOf(obo:BFO_0000015 obo:BFO_0000003)
SubClassOf(obo:BFO_0000015 ObjectAllValuesFrom(obo:BFO_0000050 obo:BFO_0000015))

# Class: obo:BFO_0000016 (disposition)

AnnotationAssertion(rdfs:label obo:BFO_0000016 "disposition"@en)
SubClassOf(obo:BFO_0000016 obo:BFO_0000017)
DisjointClasses(obo:BFO_0000016 obo:BFO_0000023)

# Class: obo:BFO_0000017 (realizable entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000017 "realizable")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000017 "RealizableEntity")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the disposition of this piece of metal to conduct electricity."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the disposition of your blood to coagulate"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the function of your reproductive organs"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the role of being a doctor"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the role of this boundary to delineate where Utah and Colorado meet"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000017 "A specifically dependent continuant  that inheres in continuant  entities and are not exhibited in full at every time in which it inheres in an entity or group of entities. The exhibition or actualization of a realizable entity is a particular manifestation, functioning or process that occurs under certain circumstances."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/058-002>) obo:IAO_0000600 obo:BFO_0000017 "To say that b is a realizable entity is to say that b is a specifically dependent continuant that inheres in some independent continuant which is not a spatial region and is of a type instances of which are realized in processes of a correlated type. (axiom label in BFO2 Reference: [058-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/060-002>) obo:IAO_0000601 obo:BFO_0000017 "All realizable dependent continuants have independent continuants that are not spatial regions as their bearers. (axiom label in BFO2 Reference: [060-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/060-002>) obo:IAO_0000602 obo:BFO_0000017 "(forall (x t) (if (RealizableEntity x) (exists (y) (and (IndependentContinuant y) (not (SpatialRegion y)) (bearerOfAt y x t))))) // axiom label in BFO2 CLIF: [060-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/058-002>) obo:IAO_0000602 obo:BFO_0000017 "(forall (x) (if (RealizableEntity x) (and (SpecificallyDependentContinuant x) (exists (y) (and (IndependentContinuant y) (not (SpatialRegion y)) (inheresIn x y)))))) // axiom label in BFO2 CLIF: [058-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000017 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000017 "realizable"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000017 "realizable entity"@en)
SubClassOf(obo:BFO_0000017 obo:BFO_0000020)
SubClassOf(obo:BFO_0000017 ObjectAllValuesFrom(obo:BFO_0000050 obo:BFO_0000017))
DisjointClasses(obo:BFO_0000017 obo:BFO_0000019)

# Class: obo:BFO_0000019 (quality)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000019 "quality")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000019 "Quality")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the ambient temperature of this portion of air"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the color of a tomato"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the length of the circumference of your waist"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the mass of this piece of gold."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the shape of your nose"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the shape of your nostril"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/055-001>) obo:IAO_0000600 obo:BFO_0000019 "a quality is a specifically dependent continuant that, in contrast to roles and dispositions, does not require any further process in order to be realized. (axiom label in BFO2 Reference: [055-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/105-001>) obo:IAO_0000601 obo:BFO_0000019 "If an entity is a quality at any time that it exists, then it is a quality at every time that it exists. (axiom label in BFO2 Reference: [105-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/055-001>) obo:IAO_0000602 obo:BFO_0000019 "(forall (x) (if (Quality x) (SpecificallyDependentContinuant x))) // axiom label in BFO2 CLIF: [055-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/105-001>) obo:IAO_0000602 obo:BFO_0000019 "(forall (x) (if (exists (t) (and (existsAt x t) (Quality x))) (forall (t_1) (if (existsAt x t_1) (Quality x))))) // axiom label in BFO2 CLIF: [105-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000019 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000019 "quality"@en)
SubClassOf(obo:BFO_0000019 obo:BFO_0000020)
SubClassOf(obo:BFO_0000019 ObjectAllValuesFrom(obo:BFO_0000050 obo:BFO_0000019))

# Class: obo:BFO_0000020 (characteristic)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000020 "sdc")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000020 "SpecificallyDependentContinuant")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "Reciprocal specifically dependent continuants: the function of this key to open this lock and the mutually dependent disposition of this lock: to be opened by this key"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "of one-sided specifically dependent continuants: the mass of this tomato"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "of relational dependent continuants (multiple bearers): John’s love for Mary, the ownership relation between John and this statue, the relation of authority between John and his subordinates."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the disposition of this fish to decay"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the function of this heart: to pump blood"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the mutual dependence of proton donors and acceptors in chemical reactions [79"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the mutual dependence of the role predator and the role prey as played by two organisms in a given interaction"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the pink color of a medium rare piece of grilled filet mignon at its center"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the role of being a doctor"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the shape of this hole."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the smell of this portion of mozzarella"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000020 "A continuant that inheres in or is borne by other entities. Every instance of A requires some specific instance of B which must always be the same."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/050-003>) obo:IAO_0000115 obo:BFO_0000020 "b is a specifically dependent continuant = Def. b is a continuant & there is some independent continuant c which is not a spatial region and which is such that b s-depends_on c at every time t during the course of b’s existence. (axiom label in BFO2 Reference: [050-003])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000005>) Annotation(rdfs:comment "per discussion with Barry Smith") obo:IAO_0000116 obo:BFO_0000020 "Specifically dependent continuant doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. We're not sure what else will develop here, but for example there are questions such as what are promises, obligation, etc."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/050-003>) obo:IAO_0000602 obo:BFO_0000020 "(iff (SpecificallyDependentContinuant a) (and (Continuant a) (forall (t) (if (existsAt a t) (exists (b) (and (IndependentContinuant b) (not (SpatialRegion b)) (specificallyDependsOnAt a b t))))))) // axiom label in BFO2 CLIF: [050-003] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000020 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000020 "characteristic"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000020 "specifically dependent continuant"@en)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000020 "https://github.com/OBOFoundry/COB/issues/65")
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000020 "https://github.com/oborel/obo-relations/pull/284")
SubClassOf(obo:BFO_0000020 obo:BFO_0000002)
SubClassOf(Annotation(rdfs:comment "We should name the inverse in COB and avoid the confusing inverse(..) construct") obo:BFO_0000020 ObjectSomeValuesFrom(ObjectInverseOf(obo:RO_0000053) owl:Thing))
SubClassOf(obo:BFO_0000020 ObjectAllValuesFrom(obo:BFO_0000050 obo:BFO_0000020))
SubClassOf(obo:BFO_0000020 ObjectAllValuesFrom(obo:BFO_0000051 obo:BFO_0000020))
DisjointClasses(obo:BFO_0000020 obo:BFO_0000031)

# Class: obo:BFO_0000023 (role)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000023 "role")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000023 "Role")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "John’s role of husband to Mary is dependent on Mary’s role of wife to John, and both are dependent on the object aggregate comprising John and Mary as member parts joined together through the relational quality of being married."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the priest role"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of a boundary to demarcate two neighboring administrative territories"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of a building in serving as a military target"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of a stone in marking a property boundary"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of subject in a clinical trial"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the student role"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000023 "A realizable entity  the manifestation of which brings about some result or end that is not essential to a continuant  in virtue of the kind of thing that it is but that can be served or participated in by that kind of continuant  in some kinds of natural, social or institutional contexts."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000023 "BFO 2 Reference: One major family of examples of non-rigid universals involves roles, and ontologies developed for corresponding administrative purposes may consist entirely of representatives of entities of this sort. Thus ‘professor’, defined as follows,b instance_of professor at t =Def. there is some c, c instance_of professor role & c inheres_in b at t.denotes a non-rigid universal and so also do ‘nurse’, ‘student’, ‘colonel’, ‘taxpayer’, and so forth. (These terms are all, in the jargon of philosophy, phase sortals.) By using role terms in definitions, we can create a BFO conformant treatment of such entities drawing on the fact that, while an instance of professor may be simultaneously an instance of trade union member, no instance of the type professor role is also (at any time) an instance of the type trade union member role (any more than any instance of the type color is at any time an instance of the type length).If an ontology of employment positions should be defined in terms of roles following the above pattern, this enables the ontology to do justice to the fact that individuals instantiate the corresponding universals –  professor, sergeant, nurse – only during certain phases in their lives."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/061-001>) obo:IAO_0000600 obo:BFO_0000023 "b is a role means: b is a realizable entity & b exists because there is some single bearer that is in some special physical, social, or institutional set of circumstances in which this bearer does not have to be& b is not such that, if it ceases to exist, then the physical make-up of the bearer is thereby changed. (axiom label in BFO2 Reference: [061-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/061-001>) obo:IAO_0000602 obo:BFO_0000023 "(forall (x) (if (Role x) (RealizableEntity x))) // axiom label in BFO2 CLIF: [061-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000023 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000023 "role"@en)
SubClassOf(obo:BFO_0000023 obo:BFO_0000017)

# Class: obo:BFO_0000031 (generically dependent continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000031 "gdc")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000031 "GenericallyDependentContinuant")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000031 "The entries in your database are patterns instantiated as quality instances in your hard drive. The database itself is an aggregate of such patterns. When you create the database you create a particular instance of the generically dependent continuant type database. Each entry in the database is an instance of the generically dependent continuant type IAO: information content entity."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000031 "the pdf file on your laptop, the pdf file that is a copy thereof on my laptop"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000031 "the sequence of this protein molecule; the sequence that is a copy thereof in that protein molecule."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000031 "A continuant that is dependent on one or other independent continuant bearers. For every instance of A requires some instance of (an independent continuant type) B but which instance of B serves can change from time to time."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/074-001>) obo:IAO_0000115 obo:BFO_0000031 "b is a generically dependent continuant = Def. b is a continuant that g-depends_on one or more other entities. (axiom label in BFO2 Reference: [074-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/074-001>) obo:IAO_0000602 obo:BFO_0000031 "(iff (GenericallyDependentContinuant a) (and (Continuant a) (exists (b t) (genericallyDependsOnAt a b t)))) // axiom label in BFO2 CLIF: [074-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000031 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000031 "generically dependent continuant"@en)
SubClassOf(obo:BFO_0000031 obo:BFO_0000002)
SubClassOf(obo:BFO_0000031 ObjectAllValuesFrom(obo:BFO_0000050 obo:BFO_0000031))

# Class: obo:BFO_0000034 (function)

AnnotationAssertion(rdfs:label obo:BFO_0000034 "function"@en)
SubClassOf(obo:BFO_0000034 obo:BFO_0000016)

# Class: obo:BFO_0000040 (material entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000040 "material")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000040 "MaterialEntity")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a flame"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a forest fire"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a human being"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a hurricane"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a photon"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a puff of smoke"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a sea wave"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a tornado"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "an aggregate of human beings."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "an energy wave"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "an epidemic"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "the undetached arm of a human being"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000040 "An independent continuant that is spatially extended whose identity is independent of that of other entities and can be maintained through time."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000040 "BFO 2 Reference: Material entities (continuants) can preserve their identity even while gaining and losing material parts. Continuants are contrasted with occurrents, which unfold themselves in successive temporal parts or phases [60"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000040 "BFO 2 Reference: Object, Fiat Object Part and Object Aggregate are not intended to be exhaustive of Material Entity. Users are invited to propose new subcategories of Material Entity."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000040 "BFO 2 Reference: ‘Matter’ is intended to encompass both mass and energy (we will address the ontological treatment of portions of energy in a later version of BFO). A portion of matter is anything that includes elementary particles among its proper or improper parts: quarks and leptons, including electrons, as the smallest particles thus far discovered; baryons (including protons and neutrons) at a higher level of granularity; atoms and molecules at still higher levels, forming the cells, organs, organisms and other material entities studied by biologists, the portions of rock studied by geologists, the fossils studied by paleontologists, and so on.Material entities are three-dimensional entities (entities extended in three spatial dimensions), as contrasted with the processes in which they participate, which are four-dimensional entities (entities extended also along the dimension of time).According to the FMA, material entities may have immaterial entities as parts – including the entities identified below as sites; for example the interior (or ‘lumen’) of your small intestine is a part of your body. BFO 2.0 embodies a decision to follow the FMA here."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/019-002>) obo:IAO_0000600 obo:BFO_0000040 "A material entity is an independent continuant that has some portion of matter as proper or improper continuant part. (axiom label in BFO2 Reference: [019-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/020-002>) obo:IAO_0000601 obo:BFO_0000040 "Every entity which has a material entity as continuant part is a material entity. (axiom label in BFO2 Reference: [020-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/021-002>) obo:IAO_0000601 obo:BFO_0000040 "every entity of which a material entity is continuant part is also a material entity. (axiom label in BFO2 Reference: [021-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/019-002>) obo:IAO_0000602 obo:BFO_0000040 "(forall (x) (if (MaterialEntity x) (IndependentContinuant x))) // axiom label in BFO2 CLIF: [019-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/021-002>) obo:IAO_0000602 obo:BFO_0000040 "(forall (x) (if (and (Entity x) (exists (y t) (and (MaterialEntity y) (continuantPartOfAt x y t)))) (MaterialEntity x))) // axiom label in BFO2 CLIF: [021-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/020-002>) obo:IAO_0000602 obo:BFO_0000040 "(forall (x) (if (and (Entity x) (exists (y t) (and (MaterialEntity y) (continuantPartOfAt y x t)))) (MaterialEntity x))) // axiom label in BFO2 CLIF: [020-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000040 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000040 "material entity"@en)
SubClassOf(obo:BFO_0000040 obo:BFO_0000004)

# Class: obo:BFO_0000182 (history)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000182 "history")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000182 "History")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/138-001>) obo:IAO_0000600 obo:BFO_0000182 "A history is a process that is the sum of the totality of processes taking place in the spatiotemporal region occupied by a material entity or site, including processes on the surface of the entity or within the cavities to which it serves as host. (axiom label in BFO2 Reference: [138-001])"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000182 "A history is a process that is the sum of the totality of processes taking place in the spatiotemporal region occupied by a material entity or site, including processes on the surface of the entity or within the cavities to which it serves as host. (axiom label in BFO2 Reference: [138-001])")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000182 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000182 "history")
AnnotationAssertion(rdfs:label obo:BFO_0000182 "history"@en)
SubClassOf(obo:BFO_0000182 obo:BFO_0000015)

# Class: obo:CARO_0000000 (anatomical entity)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "CAROC:Brownsville2014") obo:IAO_0000115 obo:CARO_0000000 "A part of a cellular organism that is either an immaterial entity or a material entity with granularity above the level of a protein complex.  Or, a substance produced by a cellular organism with granularity above the level of a protein complex.")
AnnotationAssertion(oboInOwl:id obo:CARO_0000000 "CARO:0000000")
AnnotationAssertion(rdfs:comment obo:CARO_0000000 "Following BFO, material anatomical entities may have immaterial parts (the lumen of your stomach is part of your stomach).  The granularity limit follows the limits set by the Gene Ontology on the granularity limit for GO:cellular_component. Note that substances produced by an organism (sweat, feaces, urine) do not need to be part of an organism to qualify as an anatomical structure.")
AnnotationAssertion(rdfs:label obo:CARO_0000000 "anatomical entity")
SubClassOf(obo:CARO_0000000 obo:BFO_0000004)

# Class: obo:COB_0000077 (action specification)

AnnotationAssertion(rdfs:label obo:COB_0000077 "action specification")
SubClassOf(obo:COB_0000077 obo:IAO_0000033)
SubClassOf(obo:COB_0000077 ObjectSomeValuesFrom(obo:BFO_0000051 obo:COB_0000077))

# Class: obo:COB_0000082 (planned process)

AnnotationAssertion(obo:IAO_0000115 obo:COB_0000082 "A process that is initiated by an agent who intends to carry out a plan to achieve an objective through one or more actions as described in a plan specification.")
AnnotationAssertion(rdfs:label obo:COB_0000082 "planned process")
SubClassOf(obo:COB_0000082 obo:BFO_0000015)
SubClassOf(obo:COB_0000082 ObjectSomeValuesFrom(obo:COB_0000081 obo:OBI_0000260))
SubClassOf(obo:COB_0000082 ObjectSomeValuesFrom(obo:COB_0000087 obo:SEPIO_0000048))

# Class: obo:COB_0000119 (evaluant role)

AnnotationAssertion(obo:COB_based_on obo:COB_0000119 "OBI:0000067")
AnnotationAssertion(rdfs:label obo:COB_0000119 "evaluant role")
SubClassOf(obo:COB_0000119 obo:BFO_0000023)

# Class: obo:COB_0000120 (information representation)

AnnotationAssertion(obo:COB_based_on obo:COB_0000120 "http://purl.obolibrary.org/obo/IAO_0000015")
AnnotationAssertion(rdfs:comment obo:COB_0000120 "Pier 'representational entity'")
AnnotationAssertion(rdfs:comment obo:COB_0000120 "This captures: pattern of writing in a book; neural state in the brain, electronic charges in computer memory etc")
AnnotationAssertion(rdfs:label obo:COB_0000120 "information representation")
EquivalentClasses(obo:COB_0000120 ObjectSomeValuesFrom(obo:COB_0000078 obo:IAO_0000030))
SubClassOf(obo:COB_0000120 obo:BFO_0000020)
SubClassOf(obo:COB_0000120 ObjectSomeValuesFrom(obo:COB_0000078 obo:IAO_0000030))

# Class: obo:COB_0000121 (measurement datum)

AnnotationAssertion(obo:COB_based_on obo:COB_0000121 "http://purl.obolibrary.org/obo/IAO_0000109")
AnnotationAssertion(rdfs:label obo:COB_0000121 "measurement datum")
SubClassOf(obo:COB_0000121 obo:IAO_0000027)

# Class: obo:COB_0000122 (physical information carrier)

AnnotationAssertion(rdfs:label obo:COB_0000122 "physical information carrier")
EquivalentClasses(obo:COB_0000122 ObjectSomeValuesFrom(obo:RO_0000053 ObjectSomeValuesFrom(obo:COB_0000078 obo:IAO_0000030)))
SubClassOf(obo:COB_0000122 obo:BFO_0000040)
SubClassOf(obo:COB_0000122 ObjectSomeValuesFrom(obo:RO_0000053 ObjectSomeValuesFrom(obo:COB_0000078 obo:IAO_0000030)))

# Class: obo:ERO_0001716 (database)

AnnotationAssertion(obo:IAO_0000115 obo:ERO_0001716 "A database is an organized collection of data, today typically in digital form.")
AnnotationAssertion(oboInOwl:hasDbXref obo:ERO_0001716 "http://bioontology.org/ontologies/BiomedicalResourceOntology.owl#Database")
AnnotationAssertion(rdfs:label obo:ERO_0001716 "database"@en)
SubClassOf(obo:ERO_0001716 obo:IAO_0000030)

# Class: obo:GO_0003674 (molecular_function)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:pdt") obo:IAO_0000115 obo:GO_0003674 "A molecular process that can be carried out by the action of a single macromolecular machine, usually via direct physical interactions with other molecular entities. Function in this sense denotes an action, or activity, that a gene product (or a complex) performs. These actions are described from two distinct but related perspectives: (1) biochemical activity, and (2) role as a component in a larger system/process.")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0003674 "molecular function")
AnnotationAssertion(oboInOwl:id obo:GO_0003674 "GO:0003674")
AnnotationAssertion(rdfs:comment obo:GO_0003674 "Note that, in addition to forming the root of the molecular function ontology, this term is recommended for use for the annotation of gene products whose molecular function is unknown. When this term is used for annotation, it indicates that no information was available about the molecular function of the gene product annotated as of the date the annotation was made; the evidence code 'no data' (ND), is used to indicate this. Despite its name, this is not a type of 'function' in the sense typically defined by upper ontologies such as Basic Formal Ontology (BFO). It is instead a BFO:process carried out by a single gene product or complex.")
AnnotationAssertion(rdfs:label obo:GO_0003674 "molecular_function")

# Class: obo:GO_0008150 (biological_process)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "GOC:pdt") obo:IAO_0000115 obo:GO_0008150 "A biological process represents a specific objective that the organism is genetically programmed to achieve. Biological processes are often described by their outcome or ending state, e.g., the biological process of cell division results in the creation of two daughter cells (a divided cell) from a single parent cell. A biological process is accomplished by a particular set of molecular functions carried out by specific gene products (or macromolecular complexes), often in a highly regulated manner and in a particular temporal sequence.")
AnnotationAssertion(oboInOwl:created_by obo:GO_0008150 "jl")
AnnotationAssertion(oboInOwl:creation_date obo:GO_0008150 "2012-09-19T15:05:24Z")
AnnotationAssertion(oboInOwl:hasDbXref obo:GO_0008150 "Wikipedia:Biological_process")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0008150 "biological process")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0008150 "physiological process")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:GO_0008150 "single organism process")
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:GO_0008150 "single-organism process")
AnnotationAssertion(oboInOwl:id obo:GO_0008150 "GO:0008150")
AnnotationAssertion(rdfs:comment obo:GO_0008150 "Note that, in addition to forming the root of the biological process ontology, this term is recommended for use for the annotation of gene products whose biological process is unknown. When this term is used for annotation, it indicates that no information was available about the biological process of the gene product annotated as of the date the annotation was made; the evidence code 'no data' (ND), is used to indicate this.")
AnnotationAssertion(rdfs:label obo:GO_0008150 "biological_process")

# Class: obo:GO_0016301 (kinase activity)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "ISBN:0198506732") obo:IAO_0000115 obo:GO_0016301 "Catalysis of the transfer of a phosphate group, usually from ATP, to a substrate molecule.")
AnnotationAssertion(Annotation(rdfs:label "FN3KRP phosphorylates PsiAm, RibAm") oboInOwl:hasDbXref obo:GO_0016301 "Reactome:R-HSA-6788855")
AnnotationAssertion(Annotation(rdfs:label "FN3K phosphorylates ketosamines") oboInOwl:hasDbXref obo:GO_0016301 "Reactome:R-HSA-6788867")
AnnotationAssertion(oboInOwl:hasExactSynonym obo:GO_0016301 "phosphokinase activity")
AnnotationAssertion(oboInOwl:id obo:GO_0016301 "GO:0016301")
AnnotationAssertion(rdfs:comment obo:GO_0016301 "Note that this term encompasses all activities that transfer a single phosphate group; although ATP is by far the most common phosphate donor, reactions using other phosphate donors are included in this term.")
AnnotationAssertion(rdfs:label obo:GO_0016301 "kinase activity")
SubClassOf(obo:GO_0016301 obo:GO_0003674)
SubClassOf(obo:GO_0016301 ObjectHasSelf(obo:RO_0002481))

# Class: obo:IAO_0000005 (objective specification)

AnnotationAssertion(rdfs:label obo:IAO_0000005 "objective specification")
SubClassOf(obo:IAO_0000005 obo:IAO_0000033)

# Class: obo:IAO_0000013 (journal article)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000013 "journal article"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000013 "Examples are articles published in the journals, Nature and Science. The content can often be cited by reference to a paper based encoding, e.g.  Authors, Title of article, Journal name, date or year of publication, volume and page number."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000013 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000013 "a report that is published in a journal"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000013 "person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000013 "person:Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000013 "OBI_0000159"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000013 "group:OBI"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000013 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000013 "journal article"@en)
SubClassOf(obo:IAO_0000013 obo:IAO_0000311)

# Class: obo:IAO_0000027 (data item)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000027 "data item"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000027 "Data items include counts of things, analyte concentrations, and statistical summaries."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000027 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000027 "a data item is an information content entity that is intended to be a truthful statement about something (modulo, e.g., measurement precision or other systematic errors) and is constructed/acquired by a method which reliably tends to produce (approximately) truthful statements."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2/2/2009 Alan and Bjoern discussing FACS run output data. This is a data item because it is about the cell population. Each element records an event and is typically further composed a set of measurment data items that record the fluorescent intensity stimulated by one of the lasers."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2009-03-16: data item deliberatly ambiguous: we merged data set and datum to be one entity, not knowing how to define singular versus plural. So data item is more general than datum."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2009-03-16: removed datum as alternative term as datum specifically refers to singular form, and is thus not an exact synonym."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2014-03-31: See discussion at http://odontomachus.wordpress.com/2014/03/30/aboutness-objects-propositions/")
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000027 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000027 "PERSON: Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000027 "PERSON: Jonathan Rees"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000027 "data"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000027 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000027 "data item"@en)
SubClassOf(obo:IAO_0000027 obo:IAO_0000030)

# Class: obo:IAO_0000030 (information)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000030 "information content entity"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000030 "- Data Items: A '548.5 mg/dl' measurement of blood glucose in mutant mice.
- Protocols: A blood glucose assay protocol that describes how the measurement was taken.
- Calculations: A 1.3951e-24 p-value statistic indicating a significant increase relative to wild-type mice.
- Assertions: An assertion stating that \"Lpr1 leptin receptor mutations can lead to diabetes\".
- Publications: A journal article that publishes this assertion.
- Figure/Tables: A figure or table from this article that present data supporting it.
- Software/Algorithms: A text-mining algorithm that mines the literature to identify and extract the assertion.
- Databases: The MGI (Mouse Genome Informatics) database that stores the assertion as a structured gene-disease annotation.")
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000030 "A generically dependent continuant that is about some thing.")
AnnotationAssertion(rdfs:comment obo:IAO_0000030 "ICEs are abstract entities that convey information about things in the world. ICEs represent the information encoded in physical artifacts such as photographs, books, or digital storage medium (as opposed to the physical medium itself).  A particular ICE can be encoded simultaneously in many physical or digital mediums and formats. For example, only one instance of the first edition of \"War and Peace\" exists as an ICE, representing information conveyed in this work. But many instances of \"War and Peace\" exist at the level of their physical concretizations in printed books or digital devices.")
AnnotationAssertion(rdfs:comment obo:IAO_0000030 "Pier: 'data, information or knowledge'. OR 'representation")
AnnotationAssertion(rdfs:label obo:IAO_0000030 "information")
AnnotationAssertion(rdfs:label obo:IAO_0000030 "information content entity"@en)
SubClassOf(obo:IAO_0000030 obo:BFO_0000031)
SubClassOf(obo:IAO_0000030 ObjectSomeValuesFrom(obo:IAO_0000136 obo:BFO_0000001))
SubClassOf(obo:IAO_0000030 ObjectSomeValuesFrom(obo:SEPIO_0000387 <http://www.w3.org/ns/prov#Agent>))
SubClassOf(obo:IAO_0000030 ObjectSomeValuesFrom(ObjectInverseOf(obo:COB_0000078) obo:COB_0000120))
SubClassOf(obo:IAO_0000030 DataExactCardinality(1 terms:date xsd:dateTime))

# Class: obo:IAO_0000033 (directive information entity)

AnnotationAssertion(rdfs:label obo:IAO_0000033 "directive information entity")
SubClassOf(obo:IAO_0000033 obo:IAO_0000030)

# Class: obo:IAO_0000064 (algorithm)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000064 "A plan specification which describes the inputs and output of mathematical functions as well as workflow of execution for achieving an predefined objective. Algorithms are realized usually by means of implementation as computer programs for execution by automata.")
AnnotationAssertion(rdfs:label obo:IAO_0000064 "algorithm")
SubClassOf(obo:IAO_0000064 obo:IAO_0000104)

# Class: obo:IAO_0000078 (curation status specification)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000078 "curation status specification"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000078 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000078 "The curation status of the term. The allowed values come from an enumerated list of predefined terms. See the specification of these instances for more detailed definitions of each enumerated value."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000078 "Better to represent curation as a process with parts and then relate labels to that process (in IAO meeting)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000078 "PERSON:Bill Bug"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000078 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000078 "OBI_0000266"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000078 "curation status specification"@en)
EquivalentClasses(obo:IAO_0000078 ObjectOneOf(obo:IAO_0000002 obo:IAO_0000120 obo:IAO_0000121 obo:IAO_0000122 obo:IAO_0000123 obo:IAO_0000124 obo:IAO_0000125 obo:IAO_0000423 obo:IAO_0000428))
SubClassOf(obo:IAO_0000078 obo:IAO_0000102)

# Class: obo:IAO_0000088 (report)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000088 "report"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000088 "Examples of reports are gene lists and investigation reports. These are not published (journal) articles but may be included in a journal article."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000088 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000088 "a document assembled by an author for the purpose of providing information for the audience. A report is the output of a documenting process and has the objective to be consumed by a specific audience. Topic of the report is on something that has completed. A report is not a single figure. Examples of reports are journal article, patent application, grant progress report, case report (not patient record)"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000088 "2009-03-16: this was report of results with definition: A report is a narrative object that is a formal statement of the results of an investigation, or of any matter on which definite information is required, made by some person or body instructed or required to do so."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000088 "2009-03-16: work has been done on this term during during the OBI workshop winter 2009 and the current definition was considered acceptable for use in OBI. If there is a need to modify this definition please notify OBI."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000088 "2009-08-10 Alan Ruttenberg: Larry Hunter suggests that this be obsoleted and replaced by 'document'. Alan restored as there are OBI dependencies and this merits further discussion"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000088 "disagreement about where reports go. alan: only some gene lists are reports. Is a report all the content of some document? The example of usage suggests that a report may be part of  some article. Term needs clarification"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000088 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000088 "PERSON: Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000088 "PERSON:Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000088 "GROUP: OBI"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000088 "OBI_0000099"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000088 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000088 "report"@en)
SubClassOf(obo:IAO_0000088 obo:IAO_0000310)

# Class: obo:IAO_0000100 (data set)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000100 "data set"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000100 "Intensity values in a CEL file or from multiple CEL files comprise a data set (as opposed to the CEL files themselves)."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000100 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000100 "A data item that is an aggregate of other data items of the same type that have something in common. Averages and distributions can be determined for data sets."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000100 "2009/10/23 Alan Ruttenberg. The intention is that this term represent collections of like data. So this isn't for, e.g. the whole contents of a cel file, which includes parameters, metadata etc. This is more like java arrays of a certain rather specific type"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000100 "2014-05-05: Data sets are aggregates and thus must include two or more data items. We have chosen not to add logical axioms to make this restriction.")
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000100 "person:Allyson Lister"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000100 "person:Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000100 "OBI_0000042"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000100 "group:OBI"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000100 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000100 "data set"@en)
SubClassOf(obo:IAO_0000100 obo:IAO_0000030)

# Class: obo:IAO_0000102 (data about an ontology part)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000102 "data about an ontology part"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000102 "Data about an ontology part is a data item about a part of an ontology, for example a term"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000102 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000102 "data about an ontology part"@en)
SubClassOf(obo:IAO_0000102 obo:IAO_0000027)

# Class: obo:IAO_0000104 (plan specification)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000104 "A directive information entity with action specifications and objective specifications as parts that, when concretized, is realized in a process in which the bearer tries to achieve the objectives by taking the actions specified."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000104 "Alternative previous definition: a plan is a set of instructions that specify how an objective should be achieved"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000104 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:SEPIO_0000386 obo:IAO_0000104 "method")
AnnotationAssertion(rdfs:label obo:IAO_0000104 "plan specification")
AnnotationAssertion(rdfs:label obo:IAO_0000104 "plan specification"@en)
SubClassOf(obo:IAO_0000104 obo:IAO_0000033)
SubClassOf(obo:IAO_0000104 ObjectSomeValuesFrom(obo:BFO_0000051 obo:COB_0000077))

# Class: obo:IAO_0000109 (measurement datum)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000109 "measurement datum"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000109 "Examples of measurement data are the recoding of the weight of a mouse as {40,mass,\"grams\"}, the recording of an observation of the behavior of the mouse {,process,\"agitated\"}, the recording of the expression level of a gene as measured through the process of microarray experiment {3.4,luminosity,}."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000109 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000109 "A measurement datum is an information content entity that is a recording of the output of a measurement such as produced by a device."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000109 "2/2/2009 is_specified_output of some assay?"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000109 "person:Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000109 "OBI_0000305"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000109 "group:OBI"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000109 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000109 "measurement datum"@en)
SubClassOf(obo:IAO_0000109 obo:IAO_0000027)

# Class: obo:IAO_0000225 (obsolescence reason specification)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000225 "obsolescence reason specification"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000225 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000225 "The reason for which a term has been deprecated. The allowed values come from an enumerated list of predefined terms. See the specification of these instances for more detailed definitions of each enumerated value."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000225 "The creation of this class has been inspired in part by Werner Ceusters' paper, Applying evolutionary terminology auditing to the Gene Ontology."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000225 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000225 "PERSON: Melanie Courtot"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000225 "obsolescence reason specification"@en)
EquivalentClasses(obo:IAO_0000225 ObjectOneOf(obo:IAO_0000103 obo:IAO_0000226 obo:IAO_0000227 obo:IAO_0000228 obo:IAO_0000229 obo:OMO_0001000))
SubClassOf(obo:IAO_0000225 obo:IAO_0000102)

# Class: obo:IAO_0000306 (table)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000306 "A textual entity that contains a two-dimensional arrangement of texts repeated at regular intervals across a spatial range, such that the spatial relationships among the constituent texts expresses propositions")
AnnotationAssertion(rdfs:comment obo:IAO_0000306 "MHB: A figure depicting a tabular representation of data, typically created to highlight a particular aspect or view of a larger data set. They may include derived statistical measures summarizing the primary data.

The concept described here represents a tables generated for purposes of documentation or publication of results, as opposed to database tables defined as structures for primary storage of source data in some information system.")
AnnotationAssertion(rdfs:label obo:IAO_0000306 "table")
SubClassOf(obo:IAO_0000306 obo:IAO_0000030)

# Class: obo:IAO_0000308 (figure)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000308 "figure"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000308 "Any picture, diagram or table"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000308 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000308 "An information content entity consisting of a two dimensional arrangement of information content entities such that the arrangement itself is about something."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000308 "PERSON: Lawrence Hunter"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000308 obo:obi.owl)
AnnotationAssertion(rdfs:comment obo:IAO_0000308 "MHB: A figure is a graphical presentation of information created as a vehicle to share with an audience, e.g. in a publication or report. Figures may include raw and/or summarized/derived data,  or diagrammatic abstractions of results, conclusions, or hypotheses.

Figures often present data in a form that is summarized or abstracted for human consumption, using graphical conventions that may sacrifice detail of underlying data for ease or understanding.")
AnnotationAssertion(rdfs:label obo:IAO_0000308 "figure"@en)
SubClassOf(obo:IAO_0000308 obo:IAO_0000030)

# Class: obo:IAO_0000310 (document)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000310 "document"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000310 "A journal article, patent application, laboratory notebook, or a book"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000310 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000310 "A collection of information content entities intended to be understood together as a whole"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000310 "PERSON: Lawrence Hunter"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000310 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000310 "document"@en)
SubClassOf(obo:IAO_0000310 obo:IAO_0000030)

# Class: obo:IAO_0000311 (publication)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000311 "publication"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000311 "A journal article or book"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000311 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000311 "A document that has been accepted by a publisher"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000311 "PERSON: Lawrence Hunter"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000311 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000311 "publication"@en)
SubClassOf(obo:IAO_0000311 obo:IAO_0000310)

# Class: obo:IAO_0000313 (patent)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000313 "patent"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000313 "US Patent 6,449,603"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000313 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000313 "A document that has been accepted by a patent authority"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000313 "PERSON: Lawrence Hunter"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000313 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000313 "patent"@en)
SubClassOf(obo:IAO_0000313 obo:IAO_0000310)

# Class: obo:IAO_0000409 (denotator type)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000409 "denotator type"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000409 "The Basic Formal Ontology ontology makes a distinction between Universals and defined classes, where the formal are \"natural kinds\" and the latter arbitrary collections of entities."@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000409 "A denotator type indicates how a term should be interpreted from an ontological perspective."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000409 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000409 "Barry Smith, Werner Ceusters"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000409 "denotator type"@en)
EquivalentClasses(obo:IAO_0000409 ObjectOneOf(obo:IAO_0000410 obo:IAO_0000420 obo:IAO_0000421))
SubClassOf(obo:IAO_0000409 obo:IAO_0000102)

# Class: obo:OBI_0000011 (planned process)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000011 "planned process"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000011 "Injecting mice with a vaccine in order to test its efficacy")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000011 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000011 "A processual entity that realizes a plan which is the concretization of a plan specification."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000011 "'Plan' includes a future direction sense. That can be problematic if plans are changed during their execution. There are however implicit contingencies for protocols that an agent has in his mind that can be considered part of the plan, even if the agent didn't have them in mind before. Therefore, a planned process can diverge from what the agent would have said the plan was before executing it, by adjusting to problems encountered during execution (e.g. choosing another reagent with equivalent properties, if the originally planned one has run out.)")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000011 "Bjoern Peters")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000011 "branch derived")
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000011 "6/11/9: Edited at workshop. Used to include: is initiated by an agent")
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000011 "This class merges the previously separated objective driven process and planned process, as they the separation proved hard to maintain. (1/22/09, branch call)"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000011 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000011 "completely executed planned process"@en)
AnnotationAssertion(rdfs:label obo:OBI_0000011 "planned process"@en)
SubClassOf(obo:OBI_0000011 obo:COB_0000082)
SubClassOf(obo:OBI_0000011 <http://www.w3.org/ns/prov#Activity>)
SubClassOf(obo:OBI_0000011 ObjectSomeValuesFrom(obo:COB_0000087 obo:OBI_0000260))
SubClassOf(obo:OBI_0000011 ObjectSomeValuesFrom(obo:SEPIO_0000017 <http://www.w3.org/ns/prov#Agent>))

# Class: obo:OBI_0000066 (investigation)

AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000066 "a planned process that consists of parts: planning, study design execution, documentation and which produce conclusion(s).")
AnnotationAssertion(rdfs:label obo:OBI_0000066 "investigation"@en)
SubClassOf(obo:OBI_0000066 obo:SEPIO_0000004)

# Class: obo:OBI_0000070 (assay)

AnnotationAssertion(rdfs:label obo:OBI_0000070 "assay"@en)
SubClassOf(obo:OBI_0000070 obo:SEPIO_0000004)
SubClassOf(obo:OBI_0000070 ObjectSomeValuesFrom(obo:OBI_0000293 ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(obo:RO_0000053 obo:COB_0000119))))
SubClassOf(obo:OBI_0000070 ObjectSomeValuesFrom(obo:OBI_0000299 ObjectIntersectionOf(obo:COB_0000121 ObjectSomeValuesFrom(obo:IAO_0000136 ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(obo:RO_0000053 obo:COB_0000119))))))

# Class: obo:OBI_0000175 (p-value)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000175 "p-value"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000175 obo:IAO_0000121)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000175 "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000175 "May be outside the scope of OBI long term, is needed so is retained")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000175 "PERSON:Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000175 "WEB: http://en.wikipedia.org/wiki/P-value")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000175 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000175 "p-value"@en)
SubClassOf(obo:OBI_0000175 obo:STATO_0000039)

# Class: obo:OBI_0000235 (standard error)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000235 "standard error"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000235 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000235 "A quantitative confidence value which is the standard deviations of the sample in a frequency distribution, obtained by dividing the standard deviation by the total number of cases in the frequency distribution."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000235 "person:Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000235 "group:OBI")
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000235 "see P-Value"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000235 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000235 "standard error"@en)
SubClassOf(obo:OBI_0000235 obo:STATO_0000039)

# Class: obo:OBI_0000260 (plan)

AnnotationAssertion(rdfs:label obo:OBI_0000260 "plan"@en)
SubClassOf(obo:OBI_0000260 obo:BFO_0000017)
SubClassOf(obo:OBI_0000260 obo:COB_0000120)
SubClassOf(obo:OBI_0000260 ObjectSomeValuesFrom(obo:COB_0000078 obo:IAO_0000104))
SubClassOf(obo:OBI_0000260 ObjectAllValuesFrom(ObjectInverseOf(obo:COB_0000087) obo:COB_0000082))

# Class: obo:OBI_0000272 (protocol)

AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000272 "PCR protocol, has objective specification, amplify DNA fragment of interest, and has action specification describes the amounts of experimental reagents used (e..g. buffers, dNTPS, enzyme), and the temperature and cycle time settings for running the PCR.")
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000272 "A plan specification which has sufficient level of detail and quantitative information to communicate it between investigation agents, so that different investigation agents will reliably be able to independently reproduce the process.")
AnnotationAssertion(obo:SEPIO_0000386 obo:OBI_0000272 "experimental protocol")
AnnotationAssertion(rdfs:label obo:OBI_0000272 "protocol")
SubClassOf(obo:OBI_0000272 obo:IAO_0000104)

# Class: obo:OBI_0000338 (drawing a conclusion based on data)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000338 "drawing a conclusion based on data"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000338 "Concluding that a gene is upregulated in a tissue sample based on the band intensity in a western blot.  Concluding that a patient has a infection based on measurement of an elevated body temperature and reported headache. Concluding that there were problems in an investigation because data from PCR and microarray are conflicting. Concluding that 'defects in gene XYZ cause cancer due to improper DNA repair' based on data from experiments in that study that gene XYZ is involved in DNA repair, and the conclusion of a previous study that cancer patients have an increased number of mutations in this gene.")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000338 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000338 "A planned process in which data gathered in an investigation is evaluated in the context of existing knowledge with the objective to generate more general conclusions or to conclude that the data does not allow one to draw general conclusion"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000338 "PERSON: Bjoern Peters")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000338 "PERSON: Jennifer Fostel")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000338 "Bjoern Peters")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000338 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000338 "drawing a conclusion based on data"@en)
SubClassOf(obo:OBI_0000338 obo:SEPIO_0000003)

# Class: obo:OBI_0001146 (binding assay)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001146 "binding assay")
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0001146 "Determination of KD value for an antibody binding a protein using a BIACORE assay. Using plate bound antigen in an ELISA to determine if a mixture of serum antibodies bind the antigen.nnThe following are NOT binding assays, as the desired output is not binding data: RNA microarray experiments to determine levels of gene expression. ChIP experiments to determine where in DNA a transcription factor binds. Using an IL-2 antibody on an ELISA plate to determine presence of IL-2 after stimulating a T cell culture.")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001146 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001146 "An assay with the objective to characterize the disposition of two or more material entities to form a complex.")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001146 "PERSON:Bjoern Peters, Randi Vita, Jason Greenbaum")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001146 "PERSON:Bjoern Peters, Randi Vita, Jason Greenbaum")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001146 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0001146 "binding assay")
SubClassOf(obo:OBI_0001146 obo:OBI_0000070)

# Class: obo:OBI_0002165 (protein localization assay)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0002165 "protein localization assay")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0002165 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0002165 "An assay that determines the specific location of a protein. Subcellular localization is distinguished from tissue-based localization based on the type of microscopy applied.")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0002165 "Rebecca Tauber")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0002165 "OBI development call")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0002165 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0002165 "protein localization assay")
SubClassOf(obo:OBI_0002165 obo:OBI_0000070)

# Class: obo:PATO_0000001 (quality)

AnnotationAssertion(Annotation(oboInOwl:hasDbXref "PATOC:GVG") obo:IAO_0000115 obo:PATO_0000001 "A dependent entity that inheres in a bearer by virtue of how the bearer is related to other entities")
AnnotationAssertion(oboInOwl:id obo:PATO_0000001 "PATO:0000001")
AnnotationAssertion(rdfs:label obo:PATO_0000001 "quality")
SubClassOf(obo:PATO_0000001 obo:BFO_0000020)

# Class: obo:SEPIO_0000000 (proposition)

AnnotationAssertion(obo:IAO_0000112 obo:SEPIO_0000000 "The proposition that BRCA1:2685T>A causes familial breast cancer.")
AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000000 "An abstract entity representing the sharable meaning of what is expressed in a particular assertion.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000000 "In the SEPIO model, an assertion is akin to an act in speech or text that expresses beleif in the truth of a proposition.  It is the proposition that represents the semantic content of a claim, and bears truth value. 

Mappings to terms from related models: 
1.  http://purl.org/see/rdo#proposition
A SEPIO proposition is equivalent to a 'proposition' from the Semantic EvidencE framework. \"The class rdo:proposition represents propositions i.e. the sharable objects of propositional attitudes like belief or desire and the bearers of truth values. As truth bearers they are either true or false. They are taken to represent the semantic content of sentences or larger lexical entities formulated in some natural or artificial language.\")

2. http://purl.org/mp/Holotype
The notion of a holotype from the Micropublications model is related to a SPEIO proposition - in that it represents a statement that is selcted to all other statements expressing the same meaning.

3. http://purl.org/oban/association
An OBAN proposition is a more type of proposition, that is structured/expressed according to the specifications laid out in the OBAN ontology.")
AnnotationAssertion(obo:IAO_0000119 obo:SEPIO_0000000 "http://plato.stanford.edu/entries/propositions")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000000 "The notion of a proposition, and its relationship to an assertion, derives from the domain of logic and philosophy [12]. Propositions are abstract entities that, like numbers, are independent of space and time. They represent only the meaning that is expressed in a particular agent’s assertion, and are ‘sharable’ in that the same proposition can be expressed in many different assertions. Propositions are primary bearers of truth value, in that they are true or false.  

From http://plato.stanford.edu/entries/propositions/: \"Propositions are the sharable objects of the attitudes and the primary bearers of truth and falsity. This stipulation rules out certain candidates for propositions, including thought- and utterance-tokens, which presumably are not sharable, and concrete events or facts, which presumably cannot be false.\"")
AnnotationAssertion(rdfs:label obo:SEPIO_0000000 "proposition"@en)
SubClassOf(obo:SEPIO_0000000 obo:BFO_0000001)

# Class: obo:SEPIO_0000001 (assertion)

AnnotationAssertion(obo:IAO_0000112 obo:SEPIO_0000001 "The following are three seperate assertion instances, that assert the same proposition (that BRCA1:2685T>A causes familial breast cancer)

1. Counsyl's assertion on October 5, 2009 that BRCA1:2685T>A causes familial breast cancer. 

2. The ENIGMA  consortium’s assertion on September 18, 2010 that BRCA1:2685T>A causes familial breast cancer.

3. A later assertion by the ENIGMA consortium on May 9, 2013, based on new evidence, that BRCA1:2685T>A causes familial breast cancer.")
AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000001 "A statement made by a particular agent on a particular occasion that a particular proposition is true, based on the evaluation of one or more lines of evidence.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000001 "SEPIO distinguishes two high-level subtypes of statements:
1. Findings are statements that report the immediate, objective results of an experiment, observation, or study -  without bias or interpretation.  A finding statement results simply from the act of reporting or summarizing these direct observations, calculations, or measurements.
2. Assertions, by contrast, result from acts of interpretation and/or inference, based on information used as evidence. The statement here is a conclusion drawn from critical evaluation of this more foundational information, and its validity depends on the quality of this information and the act of interpretating as evidence.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000001 "claim")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000001 "evidence-based assertion")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000001 "propostional assertion")
AnnotationAssertion(obo:IAO_0000119 obo:SEPIO_0000001 "Derived from http://purl.org/see/rdo#assertion")
AnnotationAssertion(obo:SEPIO_0000184 obo:SEPIO_0000001 "The identity of a particular assertion is dependent upon (1) what it claims to be true (its semantic content, aka its ‘proposition’), (2) the agent asserting it, and (3) the occasion on which the assertion is made. Many agents can make assertions expressing belief in the same proposition (e.g. ENIGMA’s assertion that that BRCA1:2685T>A causes familial breast cancer is a separate instance than Counsyl’s assertion of the same underlying proposition).  Likewise, a single agent can make more than one assertion of belief in the same proposition on different occasions  (e.g. ENIGMA may make a separate assertion of the same proposition that BRCA1:2685T>A causes familial breast cancer at a later date, based on additional evidence).")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000001 "Assertions as defined in SEPIO are the result of some logical inference made based on the interpretation of evidence.  They put forth a proposition that may or may not be true - the validity of which ultimately rests on the quantity, quality, diversity, and concordance of evidence supporting it.

Statements directly reporting study results or observations are not considered assertions in this sense, as they merely report what was observed or recorded, but do not rely on a leap of logical inference (see 'study finding').")
AnnotationAssertion(rdfs:label obo:SEPIO_0000001 "assertion"@en)
SubClassOf(obo:SEPIO_0000001 obo:SEPIO_0000174)
SubClassOf(obo:SEPIO_0000001 ObjectSomeValuesFrom(obo:RO_0002353 obo:SEPIO_0000003))
SubClassOf(obo:SEPIO_0000001 ObjectSomeValuesFrom(obo:SEPIO_0000006 obo:SEPIO_0000002))
SubClassOf(obo:SEPIO_0000001 ObjectSomeValuesFrom(obo:SEPIO_0000030 obo:SEPIO_0000000))

# Class: obo:SEPIO_0000002 (evidence line)

AnnotationAssertion(obo:IAO_0000112 obo:SEPIO_0000002 "An example of an evidence line would be the argument that a finding such as \"Lepr1 KO mice exhibit lower blood glucose levels than matched WT controls\" makes in support of the proposition that \"Lepr1 gene is involved in diabetes\". The Evidence Items supporting this line of evidence could include experimental data from a study exploring blood glucose levels in Lepr1 KO mice, such as a 548.5 mg/dl measurement of blood glucose in a Lepr<tm1b/tm1b> mutant mouse, or a 1.3951e-24 p-value indicating this measure to be significantly different from wild-type mice.

Here, the finding and its supporting data exist independently of their use as evidence. An evidence line based on this finding comes into existence only when an agent interprets this finding as providing a meaningful argument for a particular proposition, in the act of making an assertion.

(This example is based on data from the IMPC record here: http://bit.ly/2t4J1TI)")
AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000002 "An evidence line represents an independent and meaningful argument for or against a particular proposition, that is based on the interpretation of one or more pieces of information as evidence.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000002 "evidence-based argument")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000002 "An evidence line is created through the interpretation of one or more pieces of information that collectively support a meaningful argument for or against a proposition. To qualify as an Evidence Line, this argument must be independently significant as evidence - i.e. it must be capable of affecting the probability of accepting the target proposition as true. This does not mean, however, that it is independently sufficient to establish belief in the proposition, as additional evidence lines may be required to ultimately accept the proposition as true. 
For example, in the ACMG framework  for variant interpretations establishes \"absence in population databases\" as a type of evidence line that can argue for the pathogenicty of a particular variant. But this argument alone is not considered sufficient to establish a variant's pathogencity, as the other types of evidence are additionally required to establish the truth of this Proposition (e.g. a line of evidence demonstrating the variant to have a deleterious effect on protein function, or showing it to segregate with disease features in a family tree).")
AnnotationAssertion(rdfs:label obo:SEPIO_0000002 "evidence line"@en)
SubClassOf(obo:SEPIO_0000002 obo:IAO_0000030)
SubClassOf(obo:SEPIO_0000002 ObjectSomeValuesFrom(obo:SEPIO_0000084 obo:SEPIO_0000149))
SubClassOf(obo:SEPIO_0000002 ObjectSomeValuesFrom(obo:SEPIO_0000132 obo:SEPIO_0000133))
SubClassOf(obo:SEPIO_0000002 ObjectSomeValuesFrom(obo:SEPIO_0000183 obo:SEPIO_0000402))

# Class: obo:SEPIO_0000003 (assertion process)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000003 "An act of interpreting evidence to make an assertion of belief that a particular proposition is true")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000003 "Mappings to terms from related models:  

Likely equivalent to http://purl.org/see/rdo#act_of_inference.

May be equivalent to http://purl.obolibrary.org/obo/ECO_0000217 ! assertion method.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000003 "act of assertion")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000003 "An assertion process includes the processes of interpreting data and evaluating it as evidence for the validity of a proposition. They are affected by a particular agents on a particular occasions, and can be specified by assertion methods or guidelines.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000003 "assertion process"@en)
SubClassOf(obo:SEPIO_0000003 obo:OBI_0000011)
SubClassOf(obo:SEPIO_0000003 ObjectSomeValuesFrom(obo:RO_0002233 obo:SEPIO_0000002))
SubClassOf(obo:SEPIO_0000003 ObjectSomeValuesFrom(obo:RO_0002234 obo:SEPIO_0000001))

# Class: obo:SEPIO_0000004 (research activity)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000004 "A planned process executed in the performance of scientific research wherein systematic investigations are performed to establish facts and reach new conclusions about phenomena in the world.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000004 "Data generation process are typically experimental studies or observations, but can include any process generating information used to evaluate a claim.  This is an organizational class that groups more specific types of such processes that are most commonly used in generating data used as evidence to support claims. These processes produce informational artifacts such as measured  data values, derived statistical calculations and confidence measures, or statements representing summaries or conclusions drawn from such data.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000004 "research activity"@en)
SubClassOf(obo:SEPIO_0000004 obo:OBI_0000011)
SubClassOf(obo:SEPIO_0000004 ObjectSomeValuesFrom(obo:RO_0002234 obo:IAO_0000030))

# Class: obo:SEPIO_0000037 (assertion method)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000037 "A directive information entity that specifies an algorithm or heuristics for evaluating evidence in the process of making an assertion.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000037 "SEPIO implements several OWL individuals representing instances of commonly applied assertion methods, primarily those used in pathogenic variant classification such as the ACMG variant classification criteria.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000037 "Assertion methods can be informal guidlines or heuristics that support manual evaluation of evidence, e.g. the ACMG Variant Classification Guidelines. Assertion methods can also be formally encoded as algorithms that allow computational or statistical analysis of data as evidence in support of making an assertion - e.g. multifactorial analysis algorithms that operate on specified data to generate a quantitative score indicating the validity of a particular proposition.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000037 "assertion method"@en)
SubClassOf(obo:SEPIO_0000037 obo:IAO_0000104)
SubClassOf(obo:SEPIO_0000037 ObjectSomeValuesFrom(obo:SEPIO_0000407 obo:SEPIO_0000001))

# Class: obo:SEPIO_0000048 (contributor role)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000048 "A role borne by a  person, group, organization, or information processing entity (e.g. software, algorithms) in virtue of its active participation in a process leading to some outcome (e.g the generation, modification, or provision of some entity).")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000048 "A role realized by a participant in a process such that the participant causes the process.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000048 "agent role")
AnnotationAssertion(obo:SEPIO_0000052 obo:SEPIO_0000048 "http://purl.org/see/rdo#agent_role")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000048 "In the context of evidence and proveannce, agents are persons, groups, organizations, or software that are responsible for making assertions or generating the evidence and data that support them.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000048 "agent role")
AnnotationAssertion(rdfs:label obo:SEPIO_0000048 "contributor role"@en)
SubClassOf(obo:SEPIO_0000048 obo:BFO_0000023)

# Class: obo:SEPIO_0000049 (resource role)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000049 "A role inhering in any material or information artifact that is used by an agent as specified input into a planned process.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000049 "In the context of evidence and provenance for scientific claims, resources are entities that are used by agents to facilitate processes aimed at the generation of assertions or the evidence and data that support them.  Examples include instruments, reagents, model systems, software, and protocols.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000049 "resource role"@en)
SubClassOf(obo:SEPIO_0000049 obo:BFO_0000023)

# Class: obo:SEPIO_0000055 (obsolete_manual assertion process)

AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000055 "Mappings to related terms:

1. http://purl.obolibrary.org/obo/ECO_0000218 ! manual assertion
ECO Definition/Comment: A manual assertion could be based on evidence that is generated by and interpreted by a human or it could involve human review of computationally generated information.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000055 "obsolete_manual assertion process"@en)
AnnotationAssertion(owl:deprecated obo:SEPIO_0000055 "true"^^xsd:boolean)
SubClassOf(obo:SEPIO_0000055 oboInOwl:ObsoleteClass)

# Class: obo:SEPIO_0000056 (obsolete_automated assertion process)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000056 "An assertion process performed through algorithmic analysis by a computational agent, independent of human review.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000056 "Mappings to related terms: 

1. http://purl.obolibrary.org/obo/ECO_0000203 ! automatic assertion
ECO Definition/Comment: An automatic assertion is based on computationally generated information that is not reviewed by a person prior to making the assertion. For example, one common type of automatic assertion involves creating an association of evidence with an entity based on commonness of attributes of that entity and another entity for which an assertion already exists. The commonness is determined algorithmically.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000056 "Ultimately even automated assertions require a human agent to set a confidence threshhold that determines when a computational output (e.g. a sequence similarity p-value) justifies an assesrtion being made.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000056 "obsolete_automated assertion process"@en)
AnnotationAssertion(owl:deprecated obo:SEPIO_0000056 "true"^^xsd:boolean)
SubClassOf(obo:SEPIO_0000056 oboInOwl:ObsoleteClass)

# Class: obo:SEPIO_0000058 (provenance)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000058 "The process history leading to the creation and current condition of an artifact.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000058 "Consider whether it is appropriate to place this under the BFO:history class, which may apply only to histories of \"material entities or sites\". And consider if we want/need to define this class at all - as it is not used to model data - only as a means to record what SEPIO considers provenance to be, and how it is  different from evidence.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000058 "For scientific assertions/claims, this is the process history leading to the asseertion being made, including processes through which evidence is evaluated, and processes through which information used as evidence is created. The transitive nature of provenance means that the provenance history of informtion used as supporting data becomes provenance for an assertion that uses this information as evidence. Provenance metadata describes these processes, including accounts of who conducted these processes, what entities participated in them, and when/where they occurred.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000058 "provenance"@en)
SubClassOf(obo:SEPIO_0000058 obo:BFO_0000182)

# Class: obo:SEPIO_0000066 (primary research study)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000066 "A study that involves primary research of subjects or specimens in a natural, cliniclal, or laboratory setting.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000066 "primary research study"@en)
SubClassOf(obo:SEPIO_0000066 obo:SEPIO_0000125)

# Class: obo:SEPIO_0000067 (clinical study)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000067 "Formal clinical study performed using cohorts of multiple patients")
AnnotationAssertion(rdfs:label obo:SEPIO_0000067 "clinical study"@en)
SubClassOf(obo:SEPIO_0000067 obo:SEPIO_0000066)

# Class: obo:SEPIO_0000069 (interventional clinical study)

AnnotationAssertion(obo:SEPIO_0000052 obo:SEPIO_0000069 "http://purl.org/net/OCRe/research.owl#Interventional_study")
AnnotationAssertion(rdfs:label obo:SEPIO_0000069 "interventional clinical study"@en)
SubClassOf(obo:SEPIO_0000069 obo:SEPIO_0000067)

# Class: obo:SEPIO_0000070 (observational clinical study)

AnnotationAssertion(obo:SEPIO_0000052 obo:SEPIO_0000070 "http://purl.org/net/OCRe/research.owl#Observational_study")
AnnotationAssertion(rdfs:label obo:SEPIO_0000070 "observational clinical study"@en)
SubClassOf(obo:SEPIO_0000070 obo:SEPIO_0000067)

# Class: obo:SEPIO_0000071 (case-control clinical study)

AnnotationAssertion(obo:SEPIO_0000052 obo:SEPIO_0000071 "http://purl.org/net/OCRe/research.owl#Case_control_study")
AnnotationAssertion(rdfs:label obo:SEPIO_0000071 "case-control clinical study"@en)
SubClassOf(obo:SEPIO_0000071 obo:SEPIO_0000070)

# Class: obo:SEPIO_0000072 (experimental model study)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000072 "A research dtudy perfomred using an experimental model system such as a cell line, or model organism.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000072 "experimental model study"@en)
SubClassOf(obo:SEPIO_0000072 obo:SEPIO_0000066)

# Class: obo:SEPIO_0000073 (in vitro study)

AnnotationAssertion(rdfs:label obo:SEPIO_0000073 "in vitro study"@en)
SubClassOf(obo:SEPIO_0000073 obo:SEPIO_0000072)

# Class: obo:SEPIO_0000074 (in vivo study)

AnnotationAssertion(rdfs:label obo:SEPIO_0000074 "in vivo study"@en)
SubClassOf(obo:SEPIO_0000074 obo:SEPIO_0000072)

# Class: obo:SEPIO_0000076 (cell-based in vivo study)

AnnotationAssertion(rdfs:label obo:SEPIO_0000076 "cell-based in vivo study"@en)
SubClassOf(obo:SEPIO_0000076 obo:SEPIO_0000074)

# Class: obo:SEPIO_0000077 (tissue-based in vivo study)

AnnotationAssertion(rdfs:label obo:SEPIO_0000077 "tissue-based in vivo study"@en)
SubClassOf(obo:SEPIO_0000077 obo:SEPIO_0000074)

# Class: obo:SEPIO_0000078 (organism-based in vivo study)

AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000078 "whole organism in vivo study")
AnnotationAssertion(rdfs:label obo:SEPIO_0000078 "organism-based in vivo study"@en)
SubClassOf(obo:SEPIO_0000078 obo:SEPIO_0000074)

# Class: obo:SEPIO_0000079 (secondary research study)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000079 "A study based only on analysis of existing data, as found in artifacts such as community/curated databases, raw datasets, or publications.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000079 "data-driven study")
AnnotationAssertion(rdfs:label obo:SEPIO_0000079 "secondary research study"@en)
SubClassOf(obo:SEPIO_0000079 obo:SEPIO_0000125)

# Class: obo:SEPIO_0000080 (literature-based study)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000080 "A curation-based study that uses only one or more literature publication as input data source.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000080 "Based on ClinVar 'literature only' collection method: \"for submissions that provide the interpretation of a variant from one or more publications. No additional curation has been performed by the submitter; the interpretation is from the publication(s) only.\"")
AnnotationAssertion(rdfs:label obo:SEPIO_0000080 "literature-based study"@en)
SubClassOf(obo:SEPIO_0000080 obo:SEPIO_0000079)

# Class: obo:SEPIO_0000081 (curation-based study)

AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000081 "Based on Clinvar 'curation' collection method: \"for variants that were not directly observed by the submitter, but were interpreted by curation of multiple sources, including clinical testing laboratory reports, publications, private case data, and public databases.\"")
AnnotationAssertion(rdfs:label obo:SEPIO_0000081 "curation-based study"@en)
SubClassOf(obo:SEPIO_0000081 obo:SEPIO_0000079)

# Class: obo:SEPIO_0000102 (reference population data study)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000102 "A study based on analysis of data gathered from baseline studies of a 	population group of apparently unaffected individuals to assess allele frequencies")
AnnotationAssertion(obo:IAO_0000119 obo:SEPIO_0000102 "ClinVar")
AnnotationAssertion(rdfs:label obo:SEPIO_0000102 "reference population data study"@en)
SubClassOf(obo:SEPIO_0000102 obo:SEPIO_0000079)

# Class: obo:SEPIO_0000125 (research study)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000125 "A planned process that executes some study design or protocol to generate scientific data that is interpreted to test or generate a hypothesis.")
AnnotationAssertion(obo:SEPIO_0000061 obo:SEPIO_0000125 "Explore the classification of study types here as a possibility to implement in SEPIO. 
https://mcw.libguides.com/evidencebased/studies
Useful because these map to the strength of the evidence each might provide.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000125 "A research study is considered broadly to be any scientific activity aimed at answering a research question. Studies can be simple or complex, depending on the scope of the question being explored and the extent of resources deployed in doing so.  They may include a full research investigation, a set of experiments, or a single experiment or assay. Regardless, that act of summarizing any results as a finding statement is considered part of the study.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000125 "A research study is considered broadly to be any scientific activity aimed at answering a research question. Studies can be simple or complex, depending on the scope of the question being explored and the extent of resources deployed in doing so.  They may include a full research investigation, a set of related experiments, or a single experiment or assay. Regardless, that act of summarizing any results as a finding statement is considered part of the study.


'Study' here is broadly considered to include any defined activity performed to address a scientific question or generate a scientific hypothesis.  It covers scientific inquiry at different scales of complexity, from a single assay, experiment or observation, to a complex research investigation addressing a broader scientific question.   Studies can be based on a broad range of methods, including in silico algorithms, in vitro or in vivo experimentation on model systems, clinical studies on human subjects, or curation and analysis of existing knowledge, e.g. from publications, datasets, or knowledegbases, to derive novel insight.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000125 "research study"@en)
SubClassOf(obo:SEPIO_0000125 obo:SEPIO_0000004)

# Class: obo:SEPIO_0000127 (obsolete_study group)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000127 "A group of individuals (organisms, specimens, samples) that are subjects in an observational or intervention study, and whose members represent experimental replicates as defined in a study design by the same independent variable specifications (i.e. subjected to the same selction criteria or set of experimental interventions).")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000127 "Consider: STATO_0000193, OBI_0000174")
AnnotationAssertion(rdfs:label obo:SEPIO_0000127 "obsolete_study group"@en)
AnnotationAssertion(owl:deprecated obo:SEPIO_0000127 "true"^^xsd:boolean)
SubClassOf(obo:SEPIO_0000127 oboInOwl:ObsoleteClass)

# Class: obo:SEPIO_0000131 (curation)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000131 "A planned process in which existing data is collected, organized, and improved in preparation for subsequent use.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000131 "curation"@en)
SubClassOf(obo:SEPIO_0000131 obo:SEPIO_0000004)

# Class: obo:SEPIO_0000133 (evidence strength)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000133 "A data item that quantifies the degree of support an agent believes an evidence line to provide for a particular proposition.")
AnnotationAssertion(obo:SEPIO_0000061 obo:SEPIO_0000133 "Consider also framing as categorical measurement values?: 
A categorical measurement reflecting an agent's cognitive quantification of the degree of support (s)he believes an evidence line to provide for a particular proposition.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000133 "The strength of a line of evidence typically depends on the *type* and *quality* of the study(ies) that generate its supporting evidence items.  

1. Type of Study: In a particular domain of research, certain types of studies are commonly held to produce data that is more meaningful and reliable than others, as evidence for a particular type of assertion.  These more reliable studies tend to draw on experimental systems that more accurately replicate the natural phenomenon being studied, and experimental designs that reduce confounding variables and biases. For example, in vivo studies of gene function provide stronger evidence than in vitro systems that may not replicate all aspects of the biology of a living system, and randomized controlled clinical trials are held to be more reliable than retrospective or case control studies that are more susceptible to confounding factors.  

2. Quality of Study: A given study can be performed to varying degrees of rigor and comprehensiveness,  irrespective of the type of study it represents. This is another important factor in assessing the overall strength of evidence it may produce.  Higher quality studies will have carefully defined controls, and be replicated numerous times to ensure reproducibility.  Other factors that are often used as secondary indicators of the quality of research data include the quality of the journal in which it is published, and the reputation of the lab or institution performing the study. 

In SEPIO, the notion of evidence quality is captured in an attribute separate from the notion of evidence strength. And the notion of study type can be represented in the type assigned to a study instance, or the evidence code used to type an evidence line (which are often based on the type of study that produced the evidence data).  Evidence strength typically relies on assessment of one or both of these more fundamental attributes of evidence.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000133 "evidence strength"@en)
SubClassOf(obo:SEPIO_0000133 obo:IAO_0000109)
SubClassOf(obo:SEPIO_0000133 ObjectSomeValuesFrom(obo:IAO_0000136 obo:SEPIO_0000002))

# Class: obo:SEPIO_0000143 (patient case study)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000143 "A study that documents observations or findings from a single patent.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000143 "case reporting")
AnnotationAssertion(rdfs:label obo:SEPIO_0000143 "patient case study")
SubClassOf(obo:SEPIO_0000143 obo:SEPIO_0000066)

# Class: obo:SEPIO_0000148 (evidence role)

AnnotationAssertion(rdfs:label obo:SEPIO_0000148 "evidence role"@en)
SubClassOf(obo:SEPIO_0000148 obo:BFO_0000023)

# Class: obo:SEPIO_0000149 (evidence item)

AnnotationAssertion(obo:IAO_0000112 obo:SEPIO_0000149 "- the raw count data from a case-control study comparing the frequency of an allele in two cohorts or populations
- the calculated p-value as a measure of statistical significance of the difference identified in the study
- a published figure documenting these data
- an author statement summarizing the outcomes of the study (i.e. a 'study finding')
- a broader conclusion inferred from interpretation of the data reported in a study (i.e. an evidence-based 'assertion')")
AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000149 "An information content entity that is used as evidence to evaluate the validity of a target assertion or proposition.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000149 "evidence")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000149 "evidence information")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000149 "'Evidence Item' is a broad term covering any information interpreted as evidence in the act of making an assertion.  

Classes representing different types of evidence items are imported here from ontologies such as OBI, IAO, and STATO, and include:
 - measured data values
 - derived data values such as statistical calculations and confidence measures
 - figures presenting or describing such data
 - author statements representing summaries of or conclusions drawn from such data
 - established facts in a field of research

Note that publications and reports are considered separately from 'evidence items', as a they *contain* information (data values, figures author statements) that can be used as evidence. But on its own a publication or report is merely a proxy for this information.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000149 "evidence item"@en)
EquivalentClasses(obo:SEPIO_0000149 ObjectIntersectionOf(obo:IAO_0000030 ObjectSomeValuesFrom(obo:SEPIO_0000376 obo:SEPIO_0000002)))
SubClassOf(obo:SEPIO_0000149 obo:IAO_0000030)
SubClassOf(obo:SEPIO_0000149 ObjectSomeValuesFrom(obo:SEPIO_0000046 obo:SEPIO_0000148))
SubClassOf(obo:SEPIO_0000149 ObjectSomeValuesFrom(obo:SEPIO_0000376 obo:SEPIO_0000002))

# Class: obo:SEPIO_0000153 (creator role)

AnnotationAssertion(rdfs:label obo:SEPIO_0000153 "creator role"@en)
SubClassOf(obo:SEPIO_0000153 obo:SEPIO_0000048)

# Class: obo:SEPIO_0000154 (assessor role)

AnnotationAssertion(rdfs:label obo:SEPIO_0000154 "assessor role"@en)
SubClassOf(obo:SEPIO_0000154 obo:SEPIO_0000048)

# Class: obo:SEPIO_0000155 (approver role)

AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000155 "validator role")
AnnotationAssertion(rdfs:label obo:SEPIO_0000155 "approver role"@en)
SubClassOf(obo:SEPIO_0000155 obo:SEPIO_0000154)

# Class: obo:SEPIO_0000156 (curator role)

AnnotationAssertion(rdfs:label obo:SEPIO_0000156 "curator role"@en)
SubClassOf(obo:SEPIO_0000156 obo:SEPIO_0000048)

# Class: obo:SEPIO_0000157 (obsolete software agent)

AnnotationAssertion(obo:IAO_0100001 obo:SEPIO_0000157 <http://www.w3.org/ns/prov#SoftwareAgent>)
AnnotationAssertion(rdfs:label obo:SEPIO_0000157 "obsolete software agent")
AnnotationAssertion(owl:deprecated obo:SEPIO_0000157 "true"^^xsd:boolean)
SubClassOf(obo:SEPIO_0000157 oboInOwl:ObsoleteClass)

# Class: obo:SEPIO_0000158 (contribution)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000158 "The actions taken by a particular agent in the creation, modification, assessment, or deprecation of an artifact.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000158 "This concept is similar in meaning and usage to PROV:Attribution.  Consider aligning or adopting.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000158 "Contribution instances organize information about who, when, where, how (e.g. what roles were played), and on whose behalf these actions were performed. The scope of a Contribution instance includes only the actions of a single agent in contributing to a particular artifact - which may be performed in one continuous effort, or multiple discrete sessions of work.  The contributing agent can be a single individual, or an organization of multiple individuals acting together.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000158 "contribution"@en)
SubClassOf(obo:SEPIO_0000158 obo:OBI_0000011)
SubClassOf(obo:SEPIO_0000158 ObjectSomeValuesFrom(obo:BFO_0000055 obo:SEPIO_0000048))
SubClassOf(obo:SEPIO_0000158 ObjectExactCardinality(1 obo:SEPIO_0000017 <http://www.w3.org/ns/prov#Agent>))

# Class: obo:SEPIO_0000173 (study finding)

AnnotationAssertion(obo:IAO_0000112 obo:SEPIO_0000173 "Findings statements tend to take the form of \"We observed that . . . \", or \"Assay X revelaned that . . . \", or \"X was determined to be Y in a study of . . . \".  
For example:

\"Smith et. al observed that a positive response to imatinib treatment was two-fold higher in a cohort of leukemia patients bearing Bcr-Abl fusions compared to those lacking this driver mutaiton.\" 

A statement summarizing the outcome of a sequencing analysis: \"DNA sequencing data from patient X revealed an A->T mutation at position 2143 in gene Y\".

A statement summarizing the outcome of a variant population frequency study: \"The frequency of variant X was determined to be 0.00015 in a cohort of non-finnish european subjects described in the ExAC dataset.\"")
AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000173 "A statement describing the immediate results of a research study, describing what was directly observed, measured, or derived through mathematical calculation.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000173 "In SEPIO, a high-level distinction is made between statements that are 'findings' vs 'assertions'.  Findings are statements that report/summarize what was directly observed or calculated in a study, and are about only the immediate  participants in the experiment or study. As such, findings involve no interpretation or inference from the data to draw broader conclusions. Assertions, by contrast, are statements that derive from some degree of interpretation or inference based on the evaluation of 'evidence', and often make broader claims about the types or categories to which study participants belong. This distinction is important because the provenance and validity of a 'finding' statement does not depend on subjective interpretation of 'evidence' in the same way that of an assertion does. This has modeling implications for how findings and assertions are linked to information that supports them.

In practices, instances of 'study findings' are used to group one or more data items from a particular research study that are relevant as evidence for an assertion.  The utility of this class is in allowing the shared provenance of these data items to be more efficiently represented - as things like agent, date, and methods can be described once for the data set and inferred to apply to all individual data items that comprise it.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000173 "study outcome")
AnnotationAssertion(obo:SEPIO_0000061 obo:SEPIO_0000173 "- While the act of generating a finding is simpler, it does involve some cognitive effort that could be guided by some method (i.e., one defining what experimental context should be included in the finding statement, and how this and the observed outcomes are reported). Which means that findings are not the direct output of an assay, which merely generates data. So perhaps in SEPIO we commit to only considering research processes at the level of studies - such that even assays would potentially involve some act of summarizing the results as a finding.

- Note that at present 'study data sets' can serve the same 'organizational' purpose as 'study findings' - we should converge on one recommended way to perform this level of organization of evidence data.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000173 "A study finding is a statement that summarizes the immediate results of a particular experiment or study. It describes only what was directly observed, measured, or calculated, and optionally the experimental context of these observations.  It does not describe more general conclusions that may have been inferred from such results. As such, the scope of what a finding describes is limited to the direct participants in the study - i.e. it is about only the instances observed or measured in the study.  It makes no broader inference or conclusion about types or classes to which these instances belong. 

This is not to say that the onserved findings are necessarily accurate or correct - only that they were indeed made in a particular study. For example, the finding that \"Sequencing of DNA from patient X revealed an A->T mutation at position 2143 in gene Y\" is a matter of fact - this was the outcome of the assay, even if the finding is an artifact of low sequencing coverage. Metadata about the finding (e.g. sequencing methods/reagents used, coverage or read depth) are recoded so users can judge for themselves whether the objectively reported finding accurtely reflects the biology it describes.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000173 "SEPIO distinguishes two high-level subtypes of statements:
1. Findings are statements that report the immediate, objective results of an experiment, observation, or study -  without bias or interpretation.  A finding statement results simply from an act of reporting or summarizing these direct observations, calculations, or measurements.
2. Assertions, by contrast, result from acts of interpretation and/or inference, based on information used as evidence. The statement here is a conclusion drawn from critical evaluation of this more foundational information, and its validity depends on the quality of this information and its interpretation as evidence.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000173 "study finding"@en)
SubClassOf(obo:SEPIO_0000173 obo:SEPIO_0000174)
SubClassOf(obo:SEPIO_0000173 ObjectSomeValuesFrom(obo:RO_0002353 obo:SEPIO_0000125))

# Class: obo:SEPIO_0000174 (statement)

AnnotationAssertion(obo:IAO_0000112 obo:SEPIO_0000174 "The following is derived from https://en.wikipedia.org/wiki/Statement_(logic):

Examples of sentences that are (or make) statements:
\"Socrates is a man.\"
\"A triangle has three sides.\"
\"Madrid is the capital of Spain.\"
\"There are five ducks on the lake\"
\"The BRAF V600E mutation causes breast cancer\"

Examples of sentences that are not (or do not make) statements:
\"Who are you?\"
\"Run!\"
\"Greenness perambulates.\"
\"I had one grunch but the eggplant over there.\"
\"The King of France is wise.\"
\"Broccoli tastes good.\"

The first two examples are not declarative sentences and therefore are not (or do not make) statements. The third and fourth are declarative sentences but, lacking meaning, are neither true nor false and therefore are not (or do not make) statements. The fifth and sixth examples are meaningful declarative sentences, but are not statements but rather matters of opinion or taste.")
AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000174 "An information content entity expressing a declarative sentence that is either true or false.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000174 "From https://en.wikipedia.org/wiki/Statement_(logic) (2017-06-21):
\"A statement is a declarative sentence that bears truth value, in that it can be either true or false. This definition derives from the domain of logic, where a statement is either (a) a meaningful declarative sentence that is either true or false, or (b) that which a true or false declarative sentence asserts. In the latter case, a statement is distinct from a sentence in that a sentence is only one formulation of a statement, whereas there may be many other formulations expressing the same statement . . . In (this treatment), \"statement\" is introduced in order to distinguish a sentence from its informational content. A statement is regarded as the information content of an information-bearing sentence. Thus, a sentence is related to the statement it bears like a numeral to the number it refers to. Statements are abstract logical entities, while sentences are grammatical entities.\"
----
Note that the definition in (b) describes something closer to the notion of a 'Proposition' as defined in SEPIO?")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000174 "Statements are sentences (or, more precisely, the information content of sentences) that declare a definitive or proposed fact - expressing something about the world or one's experience of it that may or may not be true. The identity of a particular Statement is dependent upon (1) what it reports as true (its semantic content), (2) the Agent stating it, and (3) the occasion on which the statement is made. 

The phrase \"the pink elephant\" describes an entity, but is not a 'statement' as it has no truth value. By contrast, the phrase \"the pink elephant is in the room\" is a statement as this can be evaluated for its truth.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000174 "statement"@en)
SubClassOf(obo:SEPIO_0000174 obo:IAO_0000030)
SubClassOf(obo:SEPIO_0000174 ObjectSomeValuesFrom(obo:SEPIO_0000130 <http://www.w3.org/ns/prov#Agent>))

# Class: obo:SEPIO_0000175 (obsolete_observation)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000175 "A statement describing something that was observed or recorded.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000175 "In SEPIO, a high-level distinction is made between Statements that are  'Observations' vs 'Assertions'. Observations are statements that report what is observed, and are inherently true in the sense that they reflect an agents particular experience. Assertions are statements that derive from some degree of interpretation or inference based on the evaluation of 'evidence'. 

This distinction is important because the ultimate truth of observations or findings do not depend on evidence in the same way that the truth of assertions does.  Accordingly, any data related to an observation is not treated as evidence, and captured as observations.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000175 "An observation reflects only what an agent observed or device recorded. It is therefore considered a matter of fact, rather than a propositional assertion that may or may not be true.  This does not mean that the observations or recordings were necessarily accurate or correct - only that they were indeed made by an agent.  For example, the observation that \"I counted six ducks in the pond\" is a matter of fact, even if there are actually seven because I missed one that was hiding in the reeds.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000175 "obsolete_observation"@en)
AnnotationAssertion(owl:deprecated obo:SEPIO_0000175 "true"^^xsd:boolean)
SubClassOf(obo:SEPIO_0000175 oboInOwl:ObsoleteClass)

# Class: obo:SEPIO_0000180 (obsolete_evidence statement)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000180 "A statement (ie an assertion or finding) that is used as evidence to evaluate the validity of a target assertion or proposition.")
AnnotationAssertion(obo:IAO_0000231 obo:SEPIO_0000180 "Term is confusing and not required for current use cases. Main reason it was creaated is that his term is used in efforts like CIViC, and we wanted to be clear about how it fits into the SEPIO model. But this can be accomplished in documentation outside of the ontology.

Axioms:
Eq: 
statement
 and (contributes_to_evidence_line some 'evidence line')

Sc:
'information content entity'
has_role some 'evidence  role'")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000180 "Evidence Statements can be 'findings' that summarize data and outcomes from a particular study, or evidence-based 'assertions' that make a broader claim, as inferred from the interpretation and evaluation of previously generated information.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000180 "obsolete_evidence statement"@en)
AnnotationAssertion(owl:deprecated obo:SEPIO_0000180 "true"^^xsd:boolean)
SubClassOf(obo:SEPIO_0000180 oboInOwl:ObsoleteClass)

# Class: obo:SEPIO_0000181 (obsolete_evidence data)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000181 "Research data, or a product derived from research data such as data sets or figures, that are used as evidence to evaluate the validity of a target assertion or proposition.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000181 "Evidence data is not classified as a 'data item' because it is intended to cover products derived from data such as figures, tables, and data sets.")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000181 "evidence datum")
AnnotationAssertion(obo:IAO_0000231 obo:SEPIO_0000181 "Term is confusing and not required for current use cases.
Axioms:
Eq: ('data item' or table or figure)
 and (contributes_to_evidence_line some 'evidence line')

Sc:
'information content entity'
has_role some 'evidence  role'")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000181 "Instances of this class can include elemental 'data items' such as experimental measurements or derived statistical calculations or scores (e.g. a 548.5 mg/dl blood glucose level, or a 1.3951e-24 p-value), data sets containing several such values and possibly metadata about them, or tables/figures that render such data for human consumption.

The notion of 'evidence data' is meant to be contrasted with the notion of an 'evidence statement', which is a statement used as evidence. (Statements here are logical sentences with truth value that are typically supported by interpretation of more fundamental data).")
AnnotationAssertion(rdfs:label obo:SEPIO_0000181 "obsolete_evidence data"@en)
AnnotationAssertion(owl:deprecated obo:SEPIO_0000181 "true"^^xsd:boolean)
SubClassOf(obo:SEPIO_0000181 oboInOwl:ObsoleteClass)

# Class: obo:SEPIO_0000185 (obsolete_data table)

AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000185 "A set of data arranged in rows and columns.")
AnnotationAssertion(obo:IAO_0000119 obo:SEPIO_0000185 "http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#C48693 ! Data Table")
AnnotationAssertion(obo:IAO_0000231 obo:SEPIO_0000185 "Not required for data models.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000185 "obsolete_data table"@en)
AnnotationAssertion(owl:deprecated obo:SEPIO_0000185 "true"^^xsd:boolean)
SubClassOf(obo:SEPIO_0000185 oboInOwl:ObsoleteClass)

# Class: obo:SEPIO_0000186 (patient phenotyping study)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000186 "A study with the goal of assessing and documenting phenotypes exhibited by one or more patients.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000186 "Source: ClinVar (\" 'Phenotyping only' is intended for variants that are submitted to ClinVar to provide individual observations with detailed phenotype data, such as submissions from clinicians or patient registries, without an interpretation from the submitter. The interpretation from the testing laboratory may be provided in a separate field.\")
ftp://ftp.ncbi.nlm.nih.gov/pub/clinvar/release_notes/20170803_data_release_notes.pdf")
AnnotationAssertion(rdfs:label obo:SEPIO_0000186 "patient phenotyping study"@en)
SubClassOf(obo:SEPIO_0000186 obo:SEPIO_0000070)

# Class: obo:SEPIO_0000187 (confidence level)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000187 "A measurement datum that quantifies the level of confidence an agent has that a particular piece of information is true.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000187 "confidence level"@en)
SubClassOf(obo:SEPIO_0000187 obo:IAO_0000109)
SubClassOf(obo:SEPIO_0000187 ObjectSomeValuesFrom(obo:IAO_0000136 obo:IAO_0000030))

# Class: obo:SEPIO_0000258 (provider interpretation)

AnnotationAssertion(rdfs:comment obo:SEPIO_0000258 "Source: ClinVar (\" 'Provider interpretation' is intended for variants that were interpreted by a clinical provider. For example, the clinician may reclassify the variant using detailed patient phenotype information that was unavailable to the testing laborator\")
ftp://ftp.ncbi.nlm.nih.gov/pub/clinvar/release_notes/20170803_data_release_notes.pdf")
AnnotationAssertion(rdfs:label obo:SEPIO_0000258 "provider interpretation"@en)
SubClassOf(obo:SEPIO_0000258 obo:SEPIO_0000070)

# Class: obo:SEPIO_0000340 (skos terms)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000340 "Organizational class that groups classes imported from the skos model to support creation and definition of value sets for particular SEPIO data model implementations.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000340 "skos terms")

# Class: obo:SEPIO_0000385 (obsolete_method)

AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000385 "Consider IAO:0000104 (plan specification).")
AnnotationAssertion(obo:IAO_0000118 obo:SEPIO_0000385 "plan specification")
AnnotationAssertion(obo:IAO_0000231 obo:SEPIO_0000385 "Decided to use IAO:plan specification here.  Will give this term 'method' as a SEPIO-preferred label.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000385 "An information content entity that specifies instructions for how a particular objective can be achieved.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000385 "obsolete_method"@en)
AnnotationAssertion(owl:deprecated obo:SEPIO_0000385 "true"^^xsd:boolean)
SubClassOf(obo:SEPIO_0000385 oboInOwl:ObsoleteClass)

# Class: obo:SEPIO_0000400 (study data set)

AnnotationAssertion(obo:IAO_0000112 obo:SEPIO_0000400 "The set of data output from a study of the frequency of a particular allele in a particular population, which includes the following data (and metadata) items:
{     
 \"ascertainment\": \"ExAc ascertainment method\"
 \"population\": \"Non-Finnish European\"
 \"allele\": \"CAR:CA011797\",
 \"alleleCount\": 66706,
 \"alleleNumber\": 1,
 \"alleleFrequency\": 0.00001499,
 \"homozygousAlleleIndividualCount\": 0
}

This collection of data may be described by, but remains distinct from, a 'study finding' statement that summarizes the results in narrative form.")
AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000400 "A data set comprised of data items produced by a single research study.")
AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000400 "Instances of this class are used in SEPIO to group one or more data items from a particular research study that are relevant as evidence for an assertion.  The utility of this class is in allowing the shared provenance of these data items to be more efficiently represented - as things like agent, date, and methods can be described once for the data set and inferred to apply to all individual data items that comprise it.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000400 "The data items comprising a study data set may include primary measurements, derived calculations, metadata about study participants and methods, or parameters of execution.  

A research study is considered broadly to be any scientific activity aimed at answering a research question. Studies can be simple or complex, depending on the scope of the question being explored and the extent of resources deployed in doing so.  They may include a full research investigation, a set of experiments, or a single experiment or assay.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000400 "study data set"@en)
SubClassOf(obo:SEPIO_0000400 obo:IAO_0000100)

# Class: obo:SEPIO_0000401 (obsolete_opinion)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000401 "A declarative sentence that expresses a belief or judgement that is not necessarily based on fact or knowledge.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000401 "Opinions are matters of subjective judgement or taste, and typically not able to be scientifically validated as objectively true based on empirical evidence. In this way, they are distinct from statements that have inherent truth value.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000401 "obsolete_opinion"@en)
AnnotationAssertion(owl:deprecated obo:SEPIO_0000401 "true"^^xsd:boolean)
SubClassOf(obo:SEPIO_0000401 oboInOwl:ObsoleteClass)

# Class: obo:SEPIO_0000402 (evidence direction)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000402 "A data item that indicates an agent's assessment of whether an evidence line  supports or disputes a target proposition (or represents inconclusive evidence that is not sufficient for either).")
AnnotationAssertion(obo:SEPIO_0000061 obo:SEPIO_0000402 "Consider also treating this as an attribute/quality of an evidence line:
An attribute of an evidence line describing whether it supports or disputes a target proposition (or represents inconclusive evidence that is not sufficient for either).")
AnnotationAssertion(rdfs:label obo:SEPIO_0000402 "evidence direction"@en)
EquivalentClasses(obo:SEPIO_0000402 ObjectOneOf(obo:SEPIO_0000403 obo:SEPIO_0000404 obo:SEPIO_0000405))
SubClassOf(obo:SEPIO_0000402 obo:IAO_0000109)

# Class: obo:SEPIO_0000414 (evidence quality)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000414 "A data item that indicates the quality of the data used as evidence by an agent making an assertion.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000414 "The quality of an evidence item is a measure of the rigor applied in performing the study and anlysis tasks used to produce it. Higher quality studies will have carefully defined controls, and be replicated numerous times to ensure reproducibility.  Other factors that are often used as secondary indicators of the quality of research data include the quality of the journal in which it is published, and the reputation of the lab or institution performing the study.  Evidence qualitty is an important factor in assessing the overall strength of evidence it may produce.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000414 "evidence quality")
SubClassOf(obo:SEPIO_0000414 obo:IAO_0000109)

# Class: obo:SEPIO_0000431 (recommendation)

AnnotationAssertion(rdfs:comment obo:SEPIO_0000431 "Recommendations are another type of statement besides assertions that can be supported by evidence. They don't put forth a proposed facts as true, but instead describe a recommended action on the foundation of evidence that it will be beneficial.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000431 "recommendation"@en)
SubClassOf(obo:SEPIO_0000431 obo:SEPIO_0000174)

# Class: obo:SEPIO_0000432 (hypothesis)

AnnotationAssertion(rdfs:comment obo:SEPIO_0000432 "A hypothesis is another type of statement that, like an assertion, can be supported by evidence. It puts forward a possible fact as true, but does not express an agents belief in this fact.  Rather, it is a possible fact whose truth will be explored via reasoning or experimentation.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000432 "hypothesis"@en)
SubClassOf(obo:SEPIO_0000432 obo:SEPIO_0000174)

# Class: obo:SEPIO_000383 (record)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_000383 "A document containing a collection of data or statements about some entity.")
AnnotationAssertion(oboInOwl:hasDbXref obo:SEPIO_000383 "SIO:000088")
AnnotationAssertion(rdfs:comment obo:SEPIO_000383 "'Record' here is broadly defined to include any document holding (typically) structured information about a particular entity. This can include individual records from a database or knowledgebase that hold information about the subject of the record. 

Specific examples include:
- A single row of a table in a relational database.
- A JSON or XML document holding information describing some entity.
- A VCF File describing varaints in a patient, or a single row in this VCF file describinng a particular variant.
- A Uniprot knowldgebase record describing the BRCA2 protein (http://www.uniprot.org/uniprot/P51587)
- A ClinVar knwoledgebase record describing an assertion about the pathogenicity of the NM_000059.3(BRCA2):c.10G>T variant (https://www.ncbi.nlm.nih.gov/clinvar/variation/51063/)
- An EHR record for a hospital patient.")
AnnotationAssertion(rdfs:label obo:SEPIO_000383 "record")
SubClassOf(obo:SEPIO_000383 obo:IAO_0000310)

# Class: obo:STATO_0000039 (statistic)

AnnotationAssertion(obo:IAO_0000112 obo:STATO_0000039 _:genid2147484216)
AnnotationAssertion(obo:IAO_0000114 obo:STATO_0000039 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:STATO_0000039 "a statistic is a measurement datum to describe a dataset or a variable. It is generated by a calculation on set of observed data."@en)
AnnotationAssertion(obo:IAO_0000117 obo:STATO_0000039 "Alejandra Gonzalez-Beltran"@en)
AnnotationAssertion(obo:IAO_0000117 obo:STATO_0000039 "Orlaith Burke")
AnnotationAssertion(obo:IAO_0000117 obo:STATO_0000039 "Philippe Rocca-Serra"@en)
AnnotationAssertion(obo:IAO_0000119 obo:STATO_0000039 "STATO, adapted from wikipedia (http://en.wikipedia.org/wiki/Statistic)."@en)
AnnotationAssertion(obo:IAO_0000412 obo:STATO_0000039 <http://purl.obofoundry.org/obo/stato.owl>)
AnnotationAssertion(rdfs:label obo:STATO_0000039 "statistic"@en)
SubClassOf(obo:STATO_0000039 obo:IAO_0000027)

# Class: obo:STATO_0000104 (z-score)

AnnotationAssertion(obo:IAO_0000114 obo:STATO_0000104 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:STATO_0000104 "A z-score (also known as z-value, standard score, or normal score) is a measure of the divergence of an individual experimental result from the most probable result, the mean. Z is expressed in terms of the number of standard deviations from the mean value."@en)
AnnotationAssertion(obo:IAO_0000117 obo:STATO_0000104 "Alejandra Gonzalez-Beltran"@en)
AnnotationAssertion(obo:IAO_0000117 obo:STATO_0000104 "Orlaith Burke"@en)
AnnotationAssertion(obo:IAO_0000117 obo:STATO_0000104 "Philippe Rocca-Serra"@en)
AnnotationAssertion(obo:IAO_0000119 obo:STATO_0000104 "https://controls.engin.umich.edu/wiki/index.php/Basic_statistics:_mean,_median,_average,_standard_deviation,_z-scores,_and_p-value#Z-Scores"@en)
AnnotationAssertion(obo:IAO_0000412 obo:STATO_0000104 <http://purl.obofoundry.org/obo/stato.owl>)
AnnotationAssertion(rdfs:label obo:STATO_0000104 "z-score"@en)
SubClassOf(obo:STATO_0000104 obo:STATO_0000039)

# Class: obo:STATO_0000184 (obsolete_ratio)

AnnotationAssertion(obo:IAO_0000115 obo:STATO_0000184 "A ratio is a data item which is formed with two numbers r and s is written r/s, where r is the numerator and s is the denominator. The ratio of r to s is equivalent to the quotient r/s.")
AnnotationAssertion(rdfs:label obo:STATO_0000184 "obsolete_ratio")
AnnotationAssertion(owl:deprecated obo:STATO_0000184 "true"^^xsd:boolean)
SubClassOf(obo:STATO_0000184 oboInOwl:ObsoleteClass)

# Class: <http://purl.org/oban/association> (association)

AnnotationAssertion(obo:IAO_0000115 <http://purl.org/oban/association> "Associations are a form of proposition, framed as a tuple linking two (or more) entities through defined relationships.")
AnnotationAssertion(rdfs:label <http://purl.org/oban/association> "association"@en)
SubClassOf(<http://purl.org/oban/association> obo:SEPIO_0000000)

# Class: skos:Concept (Concept)

AnnotationAssertion(obo:IAO_0000115 skos:Concept "An idea or notion; a unit of thought.")
AnnotationAssertion(rdfs:label skos:Concept "Concept")
SubClassOf(skos:Concept obo:SEPIO_0000340)

# Class: <http://www.w3.org/ns/prov#Activity> (Activity)

AnnotationAssertion(obo:IAO_0000115 <http://www.w3.org/ns/prov#Activity> "An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities.")
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/prov#Activity> "Activity")
SubClassOf(<http://www.w3.org/ns/prov#Activity> obo:BFO_0000015)
SubClassOf(<http://www.w3.org/ns/prov#Activity> ObjectSomeValuesFrom(obo:RO_0000057 obo:BFO_0000002))
SubClassOf(<http://www.w3.org/ns/prov#Activity> DataSomeValuesFrom(obo:SEPIO_0000160 xsd:dateTime))

# Class: <http://www.w3.org/ns/prov#Agent> (Agent)

AnnotationAssertion(obo:IAO_0000115 <http://www.w3.org/ns/prov#Agent> "An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity.")
AnnotationAssertion(obo:IAO_0000116 <http://www.w3.org/ns/prov#Agent> "prov:Agent is considered equivalent to foaf:Agent (http://xmlns.com/foaf/0.1/Agent ) Def = \"The Agent class is the class of agents; things that do stuff. A well known sub-class is Person, representing people. Other kinds of agents include Organization and Group.\"")
AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/prov#Agent> "Agents typically persons, organizations, or software that perform tasks, including making assertions, or generating information used as evidence.  In the execution of such tasks,  an 'agent role' is realized that inheres in the agent.")
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/prov#Agent> "Agent")
EquivalentClasses(<http://www.w3.org/ns/prov#Agent> ObjectSomeValuesFrom(obo:RO_0002215 obo:SEPIO_0000158))
SubClassOf(<http://www.w3.org/ns/prov#Agent> obo:BFO_0000040)
SubClassOf(<http://www.w3.org/ns/prov#Agent> ObjectSomeValuesFrom(obo:RO_0002215 obo:SEPIO_0000158))

# Class: <http://www.w3.org/ns/prov#Organization> (Organization)

AnnotationAssertion(obo:IAO_0000115 <http://www.w3.org/ns/prov#Organization> "An organization is a social or legal institution such as a company, society, etc.")
AnnotationAssertion(obo:IAO_0000116 <http://www.w3.org/ns/prov#Organization> "Consider: http://xmlns.com/foaf/0.1/Organization")
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/prov#Organization> "Organization"@en)
SubClassOf(<http://www.w3.org/ns/prov#Organization> foaf:Group)

# Class: <http://www.w3.org/ns/prov#Person> (Person)

AnnotationAssertion(obo:IAO_0000115 <http://www.w3.org/ns/prov#Person> "Person agents are people.")
AnnotationAssertion(obo:IAO_0000116 <http://www.w3.org/ns/prov#Person> "Consider: http://xmlns.com/foaf/0.1/Person")
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/prov#Person> "Person"@en)
SubClassOf(<http://www.w3.org/ns/prov#Person> <http://www.w3.org/ns/prov#Agent>)

# Class: <http://www.w3.org/ns/prov#SoftwareAgent> (SoftwareAgent)

AnnotationAssertion(obo:IAO_0000115 <http://www.w3.org/ns/prov#SoftwareAgent> "A software agent is running software.")
AnnotationAssertion(rdfs:comment <http://www.w3.org/ns/prov#SoftwareAgent> "Software agents are autonomous computer programs that carries out tasks.  They designed to execute algorithm(s) that receive some input information and direct its processing to achieve a specified goal. Artificial  intelligence is not required to be considered a software agent - only that it can autonomously execute programmed tasks.")
AnnotationAssertion(rdfs:label <http://www.w3.org/ns/prov#SoftwareAgent> "SoftwareAgent"@en)
SubClassOf(<http://www.w3.org/ns/prov#SoftwareAgent> <http://www.w3.org/ns/prov#Agent>)
SubClassOf(<http://www.w3.org/ns/prov#SoftwareAgent> ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000064))

# Class: foaf:Group (Group)

AnnotationAssertion(rdfs:comment foaf:Group "The Group class represents a collection of individual agents (and may itself play the role of a Agent, ie. something that can perform actions).

This concept is intentionally quite broad, covering informal and ad-hoc groups, long-lived communities, organizational groups within a workplace, etc. Some such groups may have associated characteristics which could be captured in RDF (perhaps a homepage, name, mailing list etc.).")
AnnotationAssertion(rdfs:label foaf:Group "Group")
SubClassOf(foaf:Group <http://www.w3.org/ns/prov#Agent>)


############################
#   Named Individuals
############################

# Individual: obo:IAO_0000002 (example to be eventually removed)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000002 "example to be eventually removed"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000002 "example to be eventually removed"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000002)

# Individual: obo:IAO_0000103 (failed exploratory term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000103 "failed exploratory term"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000103 "The term was used in an attempt to structure part of the ontology but in retrospect failed to do a good job"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000103 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000103 "failed exploratory term"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000103)

# Individual: obo:IAO_0000120 (metadata complete)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000120 "metadata complete"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000120 "Class has all its metadata, but is either not guaranteed to be in its final location in the asserted IS_A hierarchy or refers to another class that is not complete."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000120 "metadata complete"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000120)

# Individual: obo:IAO_0000121 (organizational term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000121 "organizational term"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000121 "Term created to ease viewing/sort terms for development purpose, and will not be included in a release"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000121 "organizational term"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000121)

# Individual: obo:IAO_0000122 (ready for release)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000122 "ready for release"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000122 "Class has undergone final review, is ready for use, and will be included in the next release. Any class lacking \"ready_for_release\" should be considered likely to change place in hierarchy, have its definition refined, or be obsoleted in the next release.  Those classes deemed \"ready_for_release\" will also derived from a chain of ancestor classes that are also \"ready_for_release.\""@en)
AnnotationAssertion(rdfs:label obo:IAO_0000122 "ready for release"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000122)

# Individual: obo:IAO_0000123 (metadata incomplete)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000123 "metadata incomplete"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000123 "Class is being worked on; however, the metadata (including definition) are not complete or sufficiently clear to the branch editors."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000123 "metadata incomplete"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000123)

# Individual: obo:IAO_0000124 (uncurated)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000124 "uncurated"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000124 "Nothing done yet beyond assigning a unique class ID and proposing a preferred term."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000124 "uncurated"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000124)

# Individual: obo:IAO_0000125 (pending final vetting)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000125 "pending final vetting"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000125 "All definitions, placement in the asserted IS_A hierarchy and required minimal metadata are complete. The class is awaiting a final review by someone other than the term editor."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000125 "pending final vetting"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000125)

# Individual: obo:IAO_0000226 (placeholder removed)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000226 "placeholder removed"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000226 "placeholder removed"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000226)

# Individual: obo:IAO_0000227 (terms merged)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000227 "terms merged"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000227 "An editor note should explain what were the merged terms and the reason for the merge."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000227 "terms merged"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000227)

# Individual: obo:IAO_0000228 (term imported)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000228 "term imported"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000228 "This is to be used when the original term has been replaced by a term imported from an other ontology. An editor note should indicate what is the URI of the new term to use."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000228 "term imported"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000228)

# Individual: obo:IAO_0000229 (term split)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000229 "term split"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000229 "This is to be used when a term has been split in two or more new terms. An editor note should indicate the reason for the split and indicate the URIs of the new terms created."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000229 "term split"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000229)

# Individual: obo:IAO_0000410 (universal)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000410 "universal"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000410 "Hard to give a definition for. Intuitively a \"natural kind\" rather than a collection of any old things, which a class is able to be, formally. At the meta level, universals are defined as positives, are disjoint with their siblings, have single asserted parents."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000410 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000410 "A Formal Theory of Substances, Qualities, and Universals, http://ontology.buffalo.edu/bfo/SQU.pdf"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000410 "universal"@en)
ClassAssertion(obo:IAO_0000409 obo:IAO_0000410)

# Individual: obo:IAO_0000420 (defined class)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000420 "defined class"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000420 "A defined class is a class that is defined by a set of logically necessary and sufficient conditions but is not a universal"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000420 "\"definitions\", in some readings, always are given by necessary and sufficient conditions. So one must be careful (and this is difficult sometimes) to distinguish between defined classes and universal."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000420 "Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000420 "defined class"@en)
ClassAssertion(obo:IAO_0000409 obo:IAO_0000420)

# Individual: obo:IAO_0000421 (named class expression)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000421 "named class expression"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000421 "A named class expression is a logical expression that is given a name. The name can be used in place of the expression."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000421 "named class expressions are used in order to have more concise logical definition but their extensions may not be interesting classes on their own. In languages such as OWL, with no provisions for macros, these show up as actuall classes. Tools may with to not show them as such, and to replace uses of the macros with their expansions"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000421 "Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000421 "named class expression"@en)
ClassAssertion(obo:IAO_0000409 obo:IAO_0000421)

# Individual: obo:IAO_0000423 (to be replaced with external ontology term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000423 "to be replaced with external ontology term"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000423 "Terms with this status should eventually replaced with a term from another ontology."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000423 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000423 "group:OBI"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000423 "to be replaced with external ontology term"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000423)

# Individual: obo:IAO_0000428 (requires discussion)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000428 "requires discussion"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000428 "A term that is metadata complete, has been reviewed, and problems have been identified that require discussion before release. Such a term requires editor note(s) to identify the outstanding issues."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000428 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000428 "group:OBI"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000428 "requires discussion"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000428)

# Individual: obo:OMO_0001000 (out of scope)

AnnotationAssertion(obo:IAO_0000115 obo:OMO_0001000 "The term was added to the ontology on the assumption it was in scope, but it turned out later that it was not."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OMO_0001000 "This obsolesence reason should be used conservatively. Typical valid examples are: un-necessary grouping classes in disease ontologies, a phenotype term added on the assumption it was a disease."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMO_0001000 <http://orcid.org/0000-0001-5208-3432>)
AnnotationAssertion(obo:IAO_0000233 obo:OMO_0001000 "https://github.com/information-artifact-ontology/ontology-metadata/issues/77")
AnnotationAssertion(obo:IAO_0000234 obo:OMO_0001000 "https://orcid.org/0000-0001-5208-3432")
AnnotationAssertion(rdfs:label obo:OMO_0001000 "out of scope")
ClassAssertion(obo:IAO_0000225 obo:OMO_0001000)

# Individual: obo:SEPIO_0000403 (supporting)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000403 "An evidence direction indicating that an evidence line provides an argument that supports the validity of a target assertion.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000403 "supporting"@en)
ClassAssertion(obo:SEPIO_0000402 obo:SEPIO_0000403)

# Individual: obo:SEPIO_0000404 (disputing)

AnnotationAssertion(rdfs:label obo:SEPIO_0000404 "disputing"@en)
ClassAssertion(obo:SEPIO_0000402 obo:SEPIO_0000404)

# Individual: obo:SEPIO_0000405 (inconclusive)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000405 "An evidence direction indicating that an evidence line lacks sufficient credibility, relevance, or completeness to argue for or against the validity of a target assertion.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000405 "inconclusive"@en)
ClassAssertion(obo:SEPIO_0000402 obo:SEPIO_0000405)


SubClassOf(ObjectSomeValuesFrom(obo:RO_0002566 obo:BFO_0000040) ObjectUnionOf(ObjectSomeValuesFrom(obo:RO_0000056 ObjectSomeValuesFrom(obo:RO_0002418 obo:BFO_0000015)) ObjectSomeValuesFrom(obo:RO_0002215 ObjectSomeValuesFrom(obo:RO_0000056 ObjectSomeValuesFrom(obo:RO_0002418 obo:BFO_0000015)))))
DifferentIndividuals(obo:IAO_0000120 obo:IAO_0000121 obo:IAO_0000122 obo:IAO_0000123 obo:IAO_0000124 obo:IAO_0000125 obo:IAO_0000423 obo:IAO_0000428)
DifferentIndividuals(obo:IAO_0000226 obo:IAO_0000227 obo:IAO_0000228 obo:IAO_0000229)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000050) obo:RO_0002131)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000062) obo:BFO_0000062)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000063) obo:BFO_0000063)
SubObjectPropertyOf(Annotation(obo:RO_0002581 "true"^^xsd:boolean) ObjectPropertyChain(obo:BFO_0000050 obo:RO_0002215) obo:RO_0002329)
SubObjectPropertyOf(Annotation(obo:RO_0002582 "true"^^xsd:boolean) ObjectPropertyChain(obo:BFO_0000051 obo:BFO_0000050) obo:RO_0002131)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:BFO_0000055 obo:RO_0000052) obo:RO_0000057)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:RO_0000057) obo:RO_0000057)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:RO_0002131) obo:RO_0002131)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:RO_0002202) obo:RO_0002254)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:RO_0002215) obo:RO_0002584)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000054 obo:RO_0002404) obo:RO_0009501)
SubObjectPropertyOf(ObjectPropertyChain(obo:COB_0000087 obo:COB_0000078) obo:STATO_0000102)
SubObjectPropertyOf(Annotation(obo:RO_0002582 "true"^^xsd:boolean) ObjectPropertyChain(obo:RO_0000052 obo:BFO_0000050) obo:RO_0002314)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002131 obo:BFO_0000050) obo:RO_0002131)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002203 obo:BFO_0000050) obo:RO_0002255)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002211 obo:RO_0002025) obo:RO_0002211)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002211 obo:RO_0019000) obo:RO_0019000)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002212 obo:RO_0002212) obo:RO_0002213)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002212 obo:RO_0019001) obo:RO_0019002)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002213 obo:RO_0019001) obo:RO_0019001)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002213 obo:RO_0019002) obo:RO_0019002)
SubObjectPropertyOf(Annotation(obo:RO_0002582 "true"^^xsd:boolean) ObjectPropertyChain(obo:RO_0002215 obo:BFO_0000050) obo:RO_0002216)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002211) obo:RO_0002596)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002212) obo:RO_0002597)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002213) obo:RO_0002598)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002215 obo:RO_0002233) obo:RO_0017001)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002314 obo:BFO_0000050) obo:RO_0002314)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:BFO_0000050) obo:RO_0002331)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:BFO_0000051) obo:RO_0002327)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:BFO_0000051) obo:RO_0004031)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002017) obo:RO_0002327)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002211) obo:RO_0002428)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002211 obo:RO_0002333) obo:RO_0002448)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002212) obo:RO_0002430)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002213) obo:RO_0002429)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002304) obo:RO_0004034)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002305) obo:RO_0004035)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002411) obo:RO_0002263)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002411 obo:RO_0002233) obo:RO_0002566)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002411 obo:RO_0002333) obo:RO_0002566)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002418) obo:RO_0002264)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002629 obo:RO_0002333) obo:RO_0002450)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0002630 obo:RO_0002333) obo:RO_0002449)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0004046) obo:RO_0004033)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002327 obo:RO_0004047) obo:RO_0004032)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:BFO_0000050) obo:RO_0002331)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:RO_0002211) obo:RO_0002428)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:RO_0002212) obo:RO_0002430)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002331 obo:RO_0002213) obo:RO_0002429)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002353 obo:SEPIO_0000017) <http://purl.org/pav/createdBy>)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002407 obo:RO_0002629) obo:RO_0002407)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002409 obo:RO_0002409) obo:RO_0002407)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002409 obo:RO_0002630) obo:RO_0002409)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002578 obo:RO_0002578) obo:RO_0002211)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002629 obo:RO_0002407) obo:RO_0002407)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002629 obo:RO_0002629) obo:RO_0002407)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002630 obo:RO_0002409) obo:RO_0002409)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002630 obo:RO_0002630) obo:RO_0002409)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0009501 obo:RO_0002233) obo:RO_0004028)
SubObjectPropertyOf(ObjectPropertyChain(obo:SEPIO_0000006 obo:SEPIO_0000084) obo:SEPIO_0000189)
SubObjectPropertyOf(ObjectPropertyChain(obo:SEPIO_0000006 obo:SEPIO_0000084 obo:SEPIO_0000178) obo:SEPIO_0000145)
SubObjectPropertyOf(ObjectPropertyChain(obo:SEPIO_0000006 obo:SEPIO_0000084 terms:source) obo:SEPIO_0000145)
SubObjectPropertyOf(ObjectPropertyChain(obo:SEPIO_0000030 obo:SEPIO_0000027) obo:SEPIO_0000027)
SubObjectPropertyOf(ObjectPropertyChain(obo:SEPIO_0000030 <http://purl.org/oban/association_has_predicate>) obo:SEPIO_0000028)
SubObjectPropertyOf(ObjectPropertyChain(obo:SEPIO_0000030 <http://purl.org/oban/association_has_subject>) obo:SEPIO_0000026)
SubObjectPropertyOf(ObjectPropertyChain(obo:SEPIO_0000084 obo:RO_0002353) obo:SEPIO_0000085)
SubObjectPropertyOf(Annotation(obo:SEPIO_0000061 "If we start using the 'study data set' class in a similar way to organize data items from a partiular study, we should create a similar property chain that traverses the property we use to link study data sets to their data item parts.  
Can this just be \"has part\" . . .or is a specific/unique relation needed here to avoid unwanted entailments?") Annotation(rdfs:comment "This property chain ensures that any evidence items that are organized into groups using a 'study finding' object will still be classified as evidence items for the relevant evidence line, and returned by queries for evidence items for a particular evidence line.") ObjectPropertyChain(obo:SEPIO_0000084 obo:SEPIO_0000257) obo:SEPIO_0000084)
SubObjectPropertyOf(ObjectPropertyChain(obo:SEPIO_0000098 obo:SEPIO_0000007) obo:SEPIO_0000007)
SubObjectPropertyOf(ObjectPropertyChain(obo:SEPIO_0000098 obo:SEPIO_0000009) obo:SEPIO_0000009)
SubObjectPropertyOf(ObjectPropertyChain(obo:SEPIO_0000100 obo:SEPIO_0000007) obo:SEPIO_0000008)
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002180 Variable(<urn:swrl#w>) Variable(<urn:swrl#p>)) ClassAtom(obo:BFO_0000015 Variable(<urn:swrl#w>)) ClassAtom(obo:BFO_0000015 Variable(<urn:swrl#p>)))Head(ObjectPropertyAtom(obo:RO_0002018 Variable(<urn:swrl#w>) Variable(<urn:swrl#p>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0000053 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>)) ClassAtom(obo:BFO_0000016 Variable(<urn:swrl#d>)))Head(ObjectPropertyAtom(obo:RO_0000091 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0000053 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>)) ClassAtom(obo:BFO_0000019 Variable(<urn:swrl#d>)))Head(ObjectPropertyAtom(obo:RO_0000086 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0000053 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>)) ClassAtom(obo:BFO_0000023 Variable(<urn:swrl#d>)))Head(ObjectPropertyAtom(obo:RO_0000087 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0000053 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>)) ClassAtom(obo:BFO_0000034 Variable(<urn:swrl#d>)))Head(ObjectPropertyAtom(obo:RO_0000085 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>))))
DLSafeRule(Annotation(swrla:isRuleEnabled "true"^^xsd:boolean) Annotation(rdfs:comment "MF(X)-directly_regulates->MF(Y)-enabled_by->GP(Z) => MF(Y)-has_input->GP(Y) e.g. if 'protein kinase activity'(X) directly_regulates 'protein binding activity (Y)and this is enabled by GP(Z) then X has_input Z") Annotation(rdfs:label "infer input from direct reg") Body(ObjectPropertyAtom(obo:RO_0002327 Variable(<http://purl.obolibrary.org/obo/ro.owl#z>) Variable(<http://purl.obolibrary.org/obo/ro.owl#y>)) ObjectPropertyAtom(obo:RO_0002578 Variable(<http://purl.obolibrary.org/obo/ro.owl#x>) Variable(<http://purl.obolibrary.org/obo/ro.owl#y>)) ClassAtom(obo:GO_0003674 Variable(<http://purl.obolibrary.org/obo/ro.owl#x>)) ClassAtom(obo:GO_0003674 Variable(<http://purl.obolibrary.org/obo/ro.owl#y>)))Head(ObjectPropertyAtom(obo:RO_0002233 Variable(<http://purl.obolibrary.org/obo/ro.owl#x>) Variable(<http://purl.obolibrary.org/obo/ro.owl#z>))))
DLSafeRule(Annotation(rdfs:comment "GP(X)-enables->MF(Y)-has_part->MF(Z) => GP(X) enables MF(Z),
e.g.  if GP X enables ATPase coupled transporter activity' and 'ATPase coupled transporter activity' has_part 'ATPase activity' then GP(X) enables 'ATPase activity'") Annotation(rdfs:label "enabling an MF enables its parts") Body(ClassAtom(obo:GO_0003674 Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:RO_0002327 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:BFO_0000051 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)))Head(ObjectPropertyAtom(obo:RO_0002327 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
DLSafeRule(Annotation(swrla:isRuleEnabled "true"^^xsd:boolean) Annotation(rdfs:comment "GP(X)-enables->MF(Y)-part_of->BP(Z) => GP(X) involved_in BP(Z) e.g. if X enables 'protein kinase activity' and Y 'part of' 'signal tranduction' then X involved in 'signal transduction'") Annotation(rdfs:label "involved in BP") Body(ClassAtom(obo:GO_0008150 Variable(<urn:swrl#z>)) ObjectPropertyAtom(obo:BFO_0000050 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)) ObjectPropertyAtom(obo:RO_0002327 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ObjectPropertyAtom(obo:RO_0002331 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002578 Variable(<urn:swrl#a1>) Variable(<urn:swrl#a2>)) ClassAtom(obo:GO_0016301 Variable(<urn:swrl#a1>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#a1>) Variable(<urn:swrl#g1>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#a2>) Variable(<urn:swrl#g2>)))Head(ObjectPropertyAtom(obo:RO_0002447 Variable(<urn:swrl#g1>) Variable(<urn:swrl#g2>))))
DLSafeRule(Annotation(rdfs:comment "If a molecular function (X) has a regulatory subfunction, then any gene product which is an input to that subfunction has an activity that directly_regulates X.  Note:  this is intended for cases where the regaultory subfunction is protein binding, so it could be tightened with an additional clause to specify this.") Annotation(rdfs:label "inferring direct reg edge from input to regulatory subfunction") Body(ObjectPropertyAtom(obo:RO_0002352 Variable(<urn:swrl#B>) Variable(<urn:swrl#C>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#A>) Variable(<urn:swrl#B>)) ObjectPropertyAtom(obo:RO_0002013 Variable(<urn:swrl#D>) Variable(<urn:swrl#C>)))Head(ObjectPropertyAtom(obo:RO_0002578 Variable(<urn:swrl#A>) Variable(<urn:swrl#D>))))
DLSafeRule(Annotation(rdfs:label "inferring direct neg reg edge from input to regulatory subfunction") Body(ObjectPropertyAtom(obo:RO_0002352 Variable(<urn:swrl#B>) Variable(<urn:swrl#C>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#A>) Variable(<urn:swrl#B>)) ObjectPropertyAtom(obo:RO_0002014 Variable(<urn:swrl#D>) Variable(<urn:swrl#C>)))Head(ObjectPropertyAtom(obo:RO_0002630 Variable(<urn:swrl#A>) Variable(<urn:swrl#D>))))
DLSafeRule(Annotation(rdfs:label "inferring direct positive reg edge from input to regulatory subfunction") Body(ObjectPropertyAtom(obo:RO_0002352 Variable(<urn:swrl#B>) Variable(<urn:swrl#C>)) ObjectPropertyAtom(obo:RO_0002333 Variable(<urn:swrl#A>) Variable(<urn:swrl#B>)) ObjectPropertyAtom(obo:RO_0002015 Variable(<urn:swrl#D>) Variable(<urn:swrl#C>)))Head(ObjectPropertyAtom(obo:RO_0002629 Variable(<urn:swrl#A>) Variable(<urn:swrl#D>))))
DLSafeRule(Annotation(rdfs:label "effector input is compound function input") Body(ObjectPropertyAtom(obo:RO_0002233 Variable(<urn:swrl#eff>) Variable(<urn:swrl#in>)) ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)))Head(ObjectPropertyAtom(obo:RO_0002233 Variable(<urn:swrl#mf>) Variable(<urn:swrl#in>))))
DLSafeRule(Annotation(rdfs:label "Input of effector is input of its parent MF") Body(ObjectPropertyAtom(obo:RO_0002233 Variable(<urn:swrl#mf>) Variable(<urn:swrl#in>)) ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)))Head(ObjectPropertyAtom(obo:RO_0002233 Variable(<urn:swrl#eff>) Variable(<urn:swrl#in>))))
DLSafeRule(Annotation(rdfs:comment "if effector directly regulates X,  its parent MF directly regulates X") Body(ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)) ObjectPropertyAtom(obo:RO_0002578 Variable(<urn:swrl#mf>) Variable(<urn:swrl#mf2>)))Head(ObjectPropertyAtom(obo:RO_0002578 Variable(<urn:swrl#eff>) Variable(<urn:swrl#mf2>))))
DLSafeRule(Annotation(rdfs:comment "if effector directly positively regulates X,  its parent MF directly positively regulates X") Body(ObjectPropertyAtom(obo:RO_0002629 Variable(<urn:swrl#mf>) Variable(<urn:swrl#mf2>)) ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)))Head(ObjectPropertyAtom(obo:RO_0002629 Variable(<urn:swrl#eff>) Variable(<urn:swrl#mf2>))))
DLSafeRule(Annotation(rdfs:label "if effector directly negatively regulates X,  its parent MF directly negatively regulates X") Body(ObjectPropertyAtom(obo:RO_0002025 Variable(<urn:swrl#mf>) Variable(<urn:swrl#eff>)) ObjectPropertyAtom(obo:RO_0002630 Variable(<urn:swrl#mf>) Variable(<urn:swrl#mf2>)))Head(ObjectPropertyAtom(obo:RO_0002630 Variable(<urn:swrl#eff>) Variable(<urn:swrl#mf2>))))
DLSafeRule(Annotation(rdfs:label "'causally downstream of' and 'overlaps' should be disjoint properties (a SWRL rule is required because these are non-simple properties).") Body(ObjectPropertyAtom(obo:RO_0002404 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:RO_0002131 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ClassAtom(owl:Nothing Variable(<urn:swrl#x>)) ClassAtom(owl:Nothing Variable(<urn:swrl#y>))))
DLSafeRule(Annotation(rdfs:label "'causally upstream of' and 'overlaps' should be disjoint properties (a SWRL rule is required because these are non-simple properties).") Body(ObjectPropertyAtom(obo:RO_0002411 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:RO_0002131 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ClassAtom(owl:Nothing Variable(<urn:swrl#x>)) ClassAtom(owl:Nothing Variable(<urn:swrl#y>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0012011 Variable(<urn:swrl:var#p>) Variable(<urn:swrl:var#q>)) ObjectPropertyAtom(obo:RO_0002211 Variable(<urn:swrl:var#p>) Variable(<urn:swrl:var#q>)))Head(ObjectPropertyAtom(obo:RO_0012012 Variable(<urn:swrl:var#p>) Variable(<urn:swrl:var#q>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002213 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)) ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)))Head(ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002213 Variable(<urn:swrl#x>) Variable(<urn:swrl#y>)) ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#y>) Variable(<urn:swrl#z>)))Head(ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl#x>) Variable(<urn:swrl#z>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0019002 Variable(<urn:swrl:var#y>) Variable(<urn:swrl:var#z>)) ObjectPropertyAtom(obo:RO_0002212 Variable(<urn:swrl:var#x>) Variable(<urn:swrl:var#y>)))Head(ObjectPropertyAtom(obo:RO_0019001 Variable(<urn:swrl:var#x>) Variable(<urn:swrl:var#z>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002264 Variable(<urn:swrl:var#x>) Variable(<urn:swrl:var#y>)) ObjectPropertyAtom(obo:RO_0002411 Variable(<urn:swrl:var#y>) Variable(<urn:swrl:var#z>)))Head(ObjectPropertyAtom(obo:RO_0002263 Variable(<urn:swrl:var#x>) Variable(<urn:swrl:var#z>))))
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002411 Variable(<urn:swrl:var#q>) Variable(<urn:swrl:var#u>)) ObjectPropertyAtom(obo:RO_0002411 Variable(<urn:swrl:var#p>) Variable(<urn:swrl:var#q>)))Head(ObjectPropertyAtom(obo:RO_0012011 Variable(<urn:swrl:var#p>) Variable(<urn:swrl:var#u>))))
)